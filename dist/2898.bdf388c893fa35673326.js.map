{"version":3,"file":"2898.bdf388c893fa35673326.js","mappings":"sNAwBA,IAAIA,EAA6B,EAEjC,MAAMC,GAAwBC,EAAAA,EAAAA,KAAoB,KAChDF,EAA6B,CAAC,IAyChC,GAAeG,EAAAA,EAAAA,KAtCuBC,EACpCC,OACAC,YACAC,aACAC,UAEA,MAAM,MAAEC,IAAUC,EAAAA,EAAAA,KAEZC,GAAWC,EAAAA,EAAAA,GAAsBP,GACjCQ,GAAcC,EAAAA,EAAAA,KAEdC,OACHR,IAAcS,EAAAA,EAAAA,MAA0BC,EAAAA,EAAAA,aAA6BC,IAAbP,GAA0BA,IAAaN,IA6BhFL,GAjDgB,KAmDC,IAA/BA,GACFC,IAGFD,IAEO,IAlCDmB,GAAaC,EAAAA,EAAAA,KAAQ,IAClBL,EAoCX,SAAkCV,EAAcM,GAC9C,MAAMU,EAA8B,GAC9BC,EAAajB,EAAKkB,OAClBC,EAAiBb,GAAUY,QAAU,EAE3C,IAAK,IAAIE,EAAI,EAAGA,GAAKH,EAAYG,IAAK,CACpC,MAAMC,EAAYJ,EAAaG,EACzBE,EAAoBH,EAAiBC,EAEvCd,GAAYgB,GAAqB,GAAKtB,EAAKqB,KAAef,EAASgB,GACrEN,EAASO,QACPC,EAAAA,GAAAC,cAAA,OAAKxB,UC5F2E,YD6F9EuB,EAAAA,GAAAC,cAAA,OAAKxB,UC7FgG,YD6FlED,EAAKqB,IAAc,IACtDG,EAAAA,GAAAC,cAAA,OAAKxB,UC9FqJ,YD8FpHK,EAASgB,IAC/CE,EAAAA,GAAAC,cAAA,OAAKxB,UC/F2Q,YD+F1OD,EAAKqB,IAAc,MAI7DL,EAASO,QAAQC,EAAAA,GAAAC,cAAA,YAAOzB,EAAKqB,IAAc,IAE/C,CAEA,OAAOL,CACT,CA3D2BU,CAAyB1B,EAAMM,GAAYN,GACjE,CAACU,EAAeJ,EAAUN,IAc7B,OAZA2B,EAAAA,EAAAA,KAAU,KACR,IAAKjB,EAAe,OAEpB,MAAMkB,EAAYC,OAAOC,YAAW,KAClCtB,GAAa,GAhCI,KAmCnB,MAAO,KACLqB,OAAOE,aAAaH,EAAU,CAC/B,GACA,CAAClB,EAAeV,IAGjBwB,EAAAA,GAAAC,cAAA,QAAMtB,IAAKA,EAAKF,WAAW+B,EAAAA,EAAAA,GAAe/B,GAAYC,GC7DnC,YD6D+D+B,IAAK7B,EAAQ,WAAQS,GACpGC,EACI,G,kUEvBX,SAAehB,EAAAA,EAAAA,KAzBf,SAAiCoC,GAC/B,MAAM,QACJC,EAAO,OAAEC,EAAM,aAAEC,KAAiBC,GAChCJ,EAEEK,EAAeJ,GAASK,WAAWC,QACnCC,EAAiBP,IAAWQ,EAAAA,EAAAA,KAAoBR,EAAS,QACzDS,GAAiBC,EAAAA,EAAAA,GACrBV,GAAUQ,EAAAA,EAAAA,KAAoBR,EAAS,gBAAatB,EACpDuB,IAAWC,EACXS,EAAAA,GAAeC,SAEXC,GAASH,EAAAA,EAAAA,GAASH,EAAgBN,GAExC,OACEZ,EAAAA,GAAAC,cAACwB,EAAAA,EAAuBC,EAAA,CACtBF,OAAQA,EACRG,WAAYP,EACZL,aAAcA,GAEVD,GAGV,G,mHCtCA,QAA4C,W,oOCkB5C,MAEMc,EAAoB,IAAIC,IAoD9B,GAAevD,EAAAA,EAAAA,KAlDf,SAAiCoC,GAC/B,MAAM,WACJiB,EAAU,aAAEZ,EAAY,UAAEtC,KAAcqC,GACtCJ,GAEGoB,EAAY,CAAGC,IAAmBC,EAAAA,EAAAA,GAAQC,QAAQlB,IACnDmB,GAAkBC,EAAAA,EAAAA,GAA6BL,IAE9CM,EAAeC,EAAiBC,IAAqBN,EAAAA,EAAAA,GAAQJ,EAAkBW,IAAIZ,IACpFa,GAAoBL,EAAAA,EAAAA,GAA6BC,IAEhDK,EAAkBC,IAAsBV,EAAAA,EAAAA,IAAQ,GAEjDW,GAAoBC,EAAAA,EAAAA,IAAgB,KACxCP,IACAT,EAAkBiB,IAAIlB,EAAW,IAG7BmB,GAAuBF,EAAAA,EAAAA,IAAgB,KAC3Cb,IACAO,IACAhC,WAAWoC,EAzBY,IAyB2B,KAG9C,KAAEK,GAASrC,EAEjB,OACEV,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GAAe/B,EDlDT,YCmDjBuE,OAAOC,EAAAA,EAAAA,QAAoB5D,IAAT0D,GAAuB,UAASA,gBAAmBA,SAEpEhC,IAAiB0B,GAEhBzC,EAAAA,GAAAC,cAAA,OAAKiD,IAAKnC,EAActC,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAgBjB,GAAkBkB,WAAW,IAEhGzB,IAAec,GAEdzC,EAAAA,GAAAC,cAAA,OACEiD,IAAKvB,EACLlD,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAgBX,GAC1CY,WAAW,EACXC,OAAQV,IAIZ3C,EAAAA,GAAAC,cAACqD,EAAAA,EAAY5B,EAAA,GAAKZ,EAAU,CAAEuC,OAAQP,KAG5C,G,mFCtEA,MCwDA,GAAexE,EAAAA,EAAAA,KAjCkBiF,EAC/BC,QACAT,OACAtE,YACAgF,QAdoB,EAepBC,gBAEA,MAAMC,GAAOC,EAAAA,EAAAA,KAEPC,EAAyB,iBAATd,EAAoBA,EAAOe,EAAAA,EAAaf,GAExDgB,GAAqBxE,EAAAA,EAAAA,KAAQ,IAC7BmE,KACCF,GAAO9D,QAAU8D,EAAM9D,QAAU+D,OAAtC,EACQ,KAAGD,EAAM9D,OAAS+D,KACzB,CAACC,EAAWF,EAAOC,IAEtB,OACEzD,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GAAe/B,ED1CT,YC2CjBuE,MAAQ,YAAWa,OACnBpD,IAAKkD,EAAK/E,MAAQ,MAAQ,OAEzB4E,GAAOQ,MAAM,EAAGP,GAAOQ,KAAKC,GAASlE,EAAAA,GAAAC,cAACkE,EAAAA,EAAM,CAACpB,KAAMA,EAAMmB,KAAMA,EAAMzF,UD9CjC,eC+CpCsF,GACC/D,EAAAA,GAAAC,cAAA,OAAKxB,UDhDiD,YCiDnDsF,GAGD,G,wICNV,MAiMA,GAAezF,EAAAA,EAAAA,KAAK8F,EAAAA,EAAAA,KAClB,CAACC,GAAUC,OAAMC,oBACf,MAAMC,GAAgBC,EAAAA,EAAAA,KAASH,EAAKI,IAC9BC,GAAiBC,EAAAA,EAAAA,KAAqBP,EAAQC,EAAKI,IACnDG,EAAOL,IAAiBM,EAAAA,EAAAA,KAAWT,GAAQU,EAAAA,EAAAA,KAAqBT,IAChEU,EAAQH,IAAQI,EAAAA,EAAAA,KAAUJ,KAAUP,EAAKY,UACzCC,EAAmBX,IAAkBG,IAAmBK,IAAUT,EAClEa,EAAcZ,GAChBa,EAAAA,EAAAA,MAAuBP,EAAAA,EAAAA,KAAWT,GAAQU,EAAAA,EAAAA,KAAqBT,UAC/DjF,EAEJ,MAAO,CACLmF,gBACAG,iBACAK,QACAM,WAAWC,EAAAA,EAAAA,KAAcjB,GACzBkB,cAAcC,EAAAA,EAAAA,KAAiBnB,GAC/BoB,cAAcC,EAAAA,EAAAA,KAAiBrB,GAC/BsB,cAAevB,EAAOuB,cACtBT,kBACAC,cACD,GArBehB,EAjM+ByB,EACjDC,SACAxB,OACAC,gBACAe,YACAd,gBACAG,iBACAK,QACAQ,eACAE,eACAE,gBACAT,kBACAC,cACAW,UACAC,0BAEA,MAAM,aACJC,EAAY,cACZC,EAAa,mBACbC,EAAkB,cAClBC,EAAa,eACbC,EAAc,UACdC,IACEC,EAAAA,EAAAA,MAEE5C,GAAOC,EAAAA,EAAAA,KACP4C,GAAYC,EAAAA,EAAAA,KAAa9C,EAAMW,GAE/BoC,GAAqBC,EAAAA,EAAAA,KAAY,KACrCT,EAAc,CAAEU,OAAQtC,EAAKI,GAAImC,oBAAoB,IAErDd,GAAS,GACR,CAACzB,EAAKI,GAAIqB,IAEPe,GAAsBH,EAAAA,EAAAA,KAAY,KACtCT,EAAc,CAAEU,OAAQtC,EAAKI,GAAImC,oBAAoB,IACrDP,EAAU,CAAES,OAAQzC,EAAKI,KAEzBqB,GAAS,GACR,CAACzB,EAAKI,GAAIqB,IAEPiB,GAAmBL,EAAAA,EAAAA,KAAY,KAC/BpC,EACF4B,EAAmB,CAAES,OAAQtC,EAAKI,KACzBF,EACT0B,EAAc,CAAEU,OAAQtC,EAAKI,GAAImC,oBAAoB,IAC5CrB,GACTa,EAAe,CAAEO,OAAQtC,EAAKI,GAAIqC,OAAQnB,IAC1CM,EAAc,CAAEU,OAAQtC,EAAKI,GAAImC,oBAAoB,MAC3CvB,IAAaI,GAAkBpB,EAAK2C,WAEpC3B,GAAaI,IAAiBpB,EAAK2C,WAC7Cb,EAAc,CAAEQ,OAAQtC,EAAKI,KAF7BuB,EAAa,CAAEW,OAAQtC,EAAKI,KAI9BqB,GAAS,GACR,CACDvB,EACAgB,EACAF,EACAI,EACAE,EACAtB,EAAK2C,UACL3C,EAAKI,GACLH,EACAwB,IAGImB,GAAkBP,EAAAA,EAAAA,KAAY,KAC9BrB,GAAaI,GACfO,EAAa,CAAEW,OAAQtC,EAAKI,KAC5BqB,KAEAiB,GACF,GACC,CAAC1C,EAAKI,GAAIsC,EAAkB1B,EAAWI,EAAcO,EAAcF,IAgFtE,OACE/F,EAAAA,GAAAC,cAACkH,EAAAA,EAAK,CACJrB,OAAQA,EACRrH,UAAU,kBACV2I,OAhFApH,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,eAAegC,IAAKkD,EAAK/E,MAAQ,WAAQS,GACtDW,EAAAA,GAAAC,cAACkE,EAAAA,EAAM,CACLpB,KAAK,OACLmB,KAAMI,EACN+C,gBAAiB1C,IAEnB3E,EAAAA,GAAAC,cAAA,MAAIxB,UAAU,eAAekF,EAM7BY,EACKI,EAAiB,2BAA6B,2BAGnDW,IAAchB,EAAK2C,UACd,eAGL3B,GAAahB,EAAK2C,UACb,gBAGLzB,GAAgBE,EACX,mBAGF,oBAqDLK,QAASA,EACTC,oBAAqBA,GAlDnBzB,EAEAvE,EAAAA,GAAAC,cAAA,UACGqH,EAAAA,EAAAA,GACC3C,EAAiBhB,EAAK,8BAAgCA,EAAK,4BAA6B6C,GACxF,CAAC,kBAAmB,WAKxBlB,GAAahB,EAAK2C,UAElBjH,EAAAA,GAAAC,cAAA,UACGqH,EAAAA,EAAAA,GAAW3D,EAAK,2CAA4C6C,GAAY,CAAC,kBAAmB,WAK9FlB,IAAchB,EAAK2C,WAAczB,GAAgBE,EAC7C1F,EAAAA,GAAAC,cAAA,UAAIqH,EAAAA,EAAAA,GAAW3D,EAAK,4BAA6B6C,GAAY,CAAC,kBAAmB,WAGnFxG,EAAAA,GAAAC,cAAA,UAAIqH,EAAAA,EAAAA,GAAW3D,EAAK,kCAAmCyB,GAAc,CAAC,kBAAmB,WA+B9FpF,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,yBACZuG,IAAUT,GACTvE,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CAACC,MAAM,SAAS/I,UAAU,wBAAwBgJ,QAAM,EAACC,QAASZ,GACtEnD,EAAK,kBAGTwB,GACCnF,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CAACC,MAAM,SAAS/I,UAAU,wBAAwBgJ,QAAM,EAACC,QAAShB,GACtEtB,GAAckC,EAAAA,EAAAA,GAAW3D,EAAK,6BAA8ByB,IAAgBzB,EAAK,kBAGpFa,GAAiBF,EAAK2C,YAAc1C,GACpCvE,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CAACC,MAAM,SAAS/I,UAAU,wBAAwBgJ,QAAM,EAACC,QAASV,GACtErD,EAAK,iBAGV3D,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CACLC,MAAM,SACN/I,UAAU,wBACVgJ,QAAM,EACNC,QAAUlD,GAAiBD,EAAiByC,EAAmBE,GAE9DvD,EAjDHY,EACK,SAGLe,IAAchB,EAAK2C,UACd,eAEL3B,GAAahB,EAAK2C,UACb,oBAGLzB,GAAgBE,EACX,mBAGFP,EAAkB,gCAAkC,WAoCvDnF,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CAAC9I,UAAU,wBAAwBgJ,QAAM,EAACC,QAAS3B,GAAUpC,EAAK,YAErE,I,kFC7NZ,MAUA,EAVmCgE,EAAGC,UAASnJ,gBAC7C,MAAMkF,GAAOC,EAAAA,EAAAA,KACb,OACE5D,EAAAA,GAAAC,cAAA,QAAMxB,WAAW+B,EAAAA,EAAAA,GAAe,eAAgB/B,GAAYgC,IAAKkD,EAAK/E,MAAQ,MAAQ,SACnF0I,EAAAA,EAAAA,GAAWM,GACZ5H,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,aACX,C,2FCDX,MAkBA,GAAeH,EAAAA,EAAAA,KAlBSuJ,EACtBpJ,YAAWqJ,UAASC,iBAAgBC,gBAEpC,MAAMrE,GAAOC,EAAAA,EAAAA,KAEPqE,EAAiBD,GAAaA,EAAYF,EAAQI,KACxD,OACElI,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe,kBAAmB/B,IAC/CsJ,IAAmBE,GAClBjI,EAAAA,GAAAC,cAACkI,EAAAA,EAAqB,CAACC,OAAQL,IAEjC/H,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,SACb4J,EAAAA,EAAAA,IAAoB1E,EAAoD,KAA7CsE,EAAiBD,EAAYF,EAAQI,QAE/D,G,yGCjCV,MCyEA,GAAe5J,EAAAA,EAAAA,KAlDoBgK,EACjCC,YACAC,gBACAzH,eACAtC,YACAgK,QACAC,aAGA,MAAM/J,GAAMgK,EAAAA,EAAAA,IAAuB,OAE7B,aAAEC,EAAY,qBAAEC,IAAyBC,EAAAA,EAAAA,GAC7CP,OAAWlJ,GAAW,GAAMmJ,QAAwBnJ,OAAWA,EAdxC,KAgBnB0J,GAAYC,EAAAA,EAAAA,GAAcjI,GAAe6H,OAAcvJ,EAjB3C,GAiBmEoJ,EAAOC,GAEtFO,GAAcrG,EAAAA,EAAAA,IAAiBsG,IACnC,IAAKvK,EAAIwK,QAAS,OAClB,MAAMC,EAAKzK,EAAIwK,QACTE,EAAOH,EAAEI,cAAcC,wBACvBC,EAAIN,EAAEO,QAAUJ,EAAKK,KACrBC,EAAIT,EAAEU,QAAUP,EAAKQ,IACrBC,EAASN,EAAKH,EAAKZ,MAAQ,EAC3BsB,EAASJ,EAAKN,EAAKX,OAAS,GAClCsB,EAAAA,EAAAA,KAAgB,KACdZ,EAAGa,aAAa,QAAU,oBAAmBH,yBAA8BC,MAAW,GACtF,IAGJ,GAAKnB,EAIL,OACE5I,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GD1DM,WC0DsBqI,EAAsBpK,EAAW+J,GD1DA,YC2DxE7J,IAAKA,EACL+I,QAASc,EAAgBS,OAAc5J,GAEvCW,EAAAA,GAAAC,cAAA,UACEtB,IAAKoK,EACLtK,UDhE2J,WCiE3JgK,MAAOA,EACPC,OAAQA,IAEV1I,EAAAA,GAAAC,cAAA,OAAKxB,UDpEoI,aCqErI,G,qECxDLyL,EAAI,SAAJA,GAAI,OAAJA,EAAAA,EAAI,mBAAJA,EAAAA,EAAI,qBAAJA,EAAAA,EAAI,yBAAJA,EAAAA,EAAI,eAAJA,CAAI,EAAJA,GAAI,IAIT,MAcA,GAAe5L,EAAAA,EAAAA,KAd6B6J,EAAGC,YAE3CpI,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,yBACbuB,EAAAA,GAAAC,cAACkK,EAAAA,GAAU,CAACC,KAAK,SAASC,UAAWH,EAAK9B,IAC5B,WAAXA,EACCpI,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,iCACbuB,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,oBAEXpK,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAO,WAAUhC,S,gKCWnC,MAgIA,GAAe9J,EAAAA,EAAAA,KAhIoBiM,EACjCC,aAAY,EACZC,oBACAC,QACAC,OACAC,cAAc,WACdC,cAAc,OACdC,cACAC,mBACAC,mBACAC,gCAA+B,EAC/BC,YAAW,EACXC,aACAC,6BACAC,gBACAC,eAGA,MAAMC,GAAW5C,EAAAA,EAAAA,IAAyB,MACpChF,GAAOC,EAAAA,EAAAA,MAEP,SAAE4H,IAAaC,EAAAA,EAAAA,OACdC,EAAUC,IAAeC,EAAAA,EAAAA,IAAS,KAClCC,EAAWC,IAAgBF,EAAAA,EAAAA,KAAS,GACrCG,EAAsBP,EAAW,IAAM,IAgE7C,OA9DArL,EAAAA,EAAAA,KAAU,KACJ6K,GACFW,EAAY,GACd,GACC,CAACX,KAEJgB,EAAAA,EAAAA,IAAW,KACJC,EAAAA,IACHV,EAASpC,QAAS+C,OACpB,GACCH,IAEH5L,EAAAA,EAAAA,KAAU,KACJuK,IACFV,EAAAA,EAAAA,KAAgB,KACduB,EAASpC,QAAS+C,QAClBX,EAASpC,QAASgD,QAAQ,GAE9B,GACC,CAACzB,IA4CF1K,EAAAA,GAAAC,cAAA,QAAMmM,OAAO,GAAGd,SAAUA,EAzB5B,SAAsBe,GACpBA,EAAMC,iBAEF9B,GAIAqB,GACFP,EAAUI,EAEd,EAesDa,EAAAA,EAAWC,aAAa,OAC1ExM,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GAAe,6BAA8BkL,GAAY,UAAWhB,GAAS,SACxFjK,IAAKkD,EAAK/E,MAAQ,WAAQS,GAEzB4L,GAhBHjL,EAAAA,GAAAC,cAAA,SACEwM,KAAK,WACL/H,GAAG,mBACH8H,aAAa,MACb/N,UAAU,kBACViO,UAAW,IAYX1M,EAAAA,GAAAC,cAAA,SACEtB,IAAK4M,EACL9M,UAAU,eACVgO,KAAMhC,EAAoB,OAAS,WACnC/F,GAAG,mBACHiI,MAAOjB,GAAY,GACnBc,aAAcvB,EAA+B,gBAAkB,mBAC/D2B,SAvDR,SAA0B1D,GACpBwB,GACFS,IAGF,MAAM,OAAE0B,GAAW3D,EACnByC,EAAYkB,EAAOF,OACnBb,EAAae,EAAOF,MAAMjN,QAAUoN,EAAAA,KAChCzB,GACFA,EAAcwB,EAAOF,MAEzB,EA6CQI,UAAW,IACXtM,IAAI,SAENT,EAAAA,GAAAC,cAAA,aAAQyK,GAASC,GAAQC,GACzB5K,EAAAA,GAAAC,cAAA,OACExB,UAAU,6BACViJ,QAjDR,WACE0D,GAA4BX,EAC9B,EAgDQuC,KAAK,SACLN,SAAU,EACVO,MAAM,6BACN,aAAW,8BAEXjN,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAMK,EAAoB,MAAQ,iBAG3CK,GAAe9K,EAAAA,GAAAC,cAAA,KAAGxB,UAAU,eAAeqM,GAC3CQ,IAAaO,GAAad,IACzB/K,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CAACxE,KAAK,UAAU0J,KAAK,SAASS,QAAShC,EAAUV,UAAWA,EAAW2C,UAAWtB,GACtFhB,GAGA,G,gKChKX,MCoIA,GAAevM,EAAAA,EAAAA,KAAK8F,EAAAA,EAAAA,KAClB,CAACC,GAAU+I,SAAQC,oBACjB,IAAKD,EACH,MAAO,CAAC,EAGV,MAAMlJ,GAAOoJ,EAAAA,EAAAA,KAAWjJ,EAAQ+I,GAC1BvI,GAAOC,EAAAA,EAAAA,KAAWT,EAAQ+I,GAGhC,MAAO,CACLlJ,OACAmD,iBAJuBgG,GAAiBxI,GAAQA,EAAK0I,OAKtD,GAbenJ,EArFHoJ,EACfC,OACAR,QACAS,cACAC,WACAC,wBACAC,WACA3J,OACA4J,WACAC,aACAtP,YACA4I,kBACA2G,iBACAC,kBACAvG,UACAwG,oBAEA,MAAMvK,GAAOC,EAAAA,EAAAA,KAEPuK,EAAUL,GAAY5J,EACtBkK,EAAUL,GAAcI,EAExB7J,EAAO6J,IAAWE,EAAAA,EAAAA,IAAcF,GAAWA,OAAU9O,EAE3D,IAAIiP,EACAC,EACAC,EAEAf,GAAQR,GACVqB,EACEtO,EAAAA,GAAAC,cAAA,OAAKxB,UD7EiL,YC8EpLuB,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAMqD,EAAMzK,MD9EoL,cCkF1MuL,EAAetB,GACNmB,IACTE,EACEtO,EAAAA,GAAAC,cAACkE,EAAAA,EAAM,CACL1F,UDtF2J,WCuF3JyF,KAAMkK,EACNrL,KAAK,QACLsE,gBAAiBA,IAIrBmH,GAAYC,EAAAA,EAAAA,KAAa9K,EAAMyK,IAAYnB,EAC3CsB,EAAetB,GACbjN,EAAAA,GAAAC,cAACyO,EAAAA,EAAa,CAACxK,KAAMkK,EAAS/G,gBAAiBA,EAAiB4G,gBAAiBA,KAIrF,MAAMU,GAAgBnO,EAAAA,EAAAA,GDnGD,YCqGlB8D,GAAMsK,SAAWb,GAAYc,iBDrGwN,WCsGtPnB,GDtG0C,WCuG1CC,GDvGiE,WCwGjEC,GDxGiH,YCyGhHlG,GDzG0I,WC0G3IsG,IAAkBc,EAAAA,EAAAA,GAAkBf,GAAc7J,GAClDzF,GAGF,OACEuB,EAAAA,GAAAC,cAAA,OACExB,UAAWkQ,EACXjH,QAASA,IAAMA,IAAUmG,GACzBZ,MAAOS,EAAcc,OAAYnP,EACjCoB,IAAKkD,EAAK/E,MAAQ,WAAQS,GAEzBiP,GACCZ,GACA1N,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GDvHwM,WCuH5K0N,GAAgBzN,IAAI,QAC7D8N,GAGJZ,GACC3N,EAAAA,GAAAC,cAAA,OAAKxB,UD5H4E,YC6H/EuB,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,WAGX,I,yGChIV,QAA2f,WAA3f,EAA8gB,WC+H9gB,GAAe9L,EAAAA,EAAAA,KArGuByQ,EACpCC,WACAC,YACAC,oBACAC,oBACAC,WACAC,YACA5Q,gBAEA,MAAMkF,GAAOC,EAAAA,EAAAA,KAEP0L,GAAmB3G,EAAAA,EAAAA,IAAuB,MAE1C4G,GAAqB5G,EAAAA,EAAAA,IAAuB,OAE3CmB,EAAQ0F,IAAa5D,EAAAA,EAAAA,IAAS,IAC9B6D,EAAcC,IAAmB9D,EAAAA,EAAAA,IAAS,GAE3C+D,EAAsBA,KAC1B,GAAIL,EAAiBnG,SAAWoG,EAAmBpG,cAAwB9J,IAAb+P,EAAwB,CACpF,MAAMQ,EAAaN,EAAiBnG,QAAQ0G,YACtCC,EAAcP,EAAmBpG,QAAQ0G,YACzCE,EAAWH,EAAa,EACxBI,EAAWF,EAAcF,EAAa,EACtCK,EAAeb,EAAWU,EAC1BI,EAAYC,KAAKC,IAAIL,EAAUI,KAAKE,IAAIJ,EAAcD,IAI5D,IAAIM,EAFJd,EAAUU,EAAYJ,GAIpBQ,EADEL,EAAeF,EACEX,EAAWU,GAA2B,EAAXC,GACrCE,EAAeD,EAEN,IADMZ,EAAYY,EAAWF,IAAiB,EAAIE,EAAWF,GACrC,GAExB,GAEpBJ,EAAgBY,EAClB,IAGFnQ,EAAAA,EAAAA,IAAUwP,EAAqB,CAACP,KAEhCmB,EAAAA,EAAAA,GAAkBhB,EAAoBI,GAEtC,MAAMa,EAAmBvO,QAAQkN,GAAqBD,GAChDuB,EAAiBxO,QAAQmN,IAAaA,EAAW,IAEvD,OACEpP,EAAAA,GAAAC,cAAA,OACEtB,IAAK4Q,EACL9Q,WAAW+B,EAAAA,EAAAA,GD9EM,WCgFfgQ,GDhFsC,WCiFtCnB,GDjF2kB,WCkF3kB5Q,GAEFuE,OAAOC,EAAAA,EAAAA,QACQ5D,IAAb+P,GAA2B,eAAcA,SACxB/P,IAAjBoQ,GAA+B,oBAAmBA,IACjD,cAAa3F,MAGf0G,GACCxQ,EAAAA,GAAAC,cAAA,OAAKxB,UD3F6D,YC4FhEuB,EAAAA,GAAAC,cAAA,OAAKxB,UD5F4K,YC6F/KuB,EAAAA,GAAAC,cAAA,OAAKxB,UD7F8Q,WC6F7OE,IAAK2Q,GACxCH,GAAqBnP,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAM+E,EAAmB1Q,UD9FoW,aC+FxZyQ,GACClP,EAAAA,GAAAC,cAAA,OAAKxB,UDhGod,WCgG9agC,IAAKkD,EAAK/E,MAAQ,WAAQS,GAClE6P,IAIPlP,EAAAA,GAAAC,cAAA,OAAKxB,UDrGsV,YCsGzVuB,EAAAA,GAAAC,cAAA,OAAKwI,MAAM,KAAKC,OAAO,KAAKgI,QAAQ,YAAYC,KAAK,QACnD3Q,EAAAA,GAAAC,cAAA,QAAM2Q,EAAE,uTAAuTD,KAAK,gBAM9U3Q,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,GACdnD,EAAAA,GAAAC,cAAA,YAAO+O,IAEThP,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,GACdnD,EAAAA,GAAAC,cAAA,YAAOgP,IAETjP,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GDnH8gB,WCmH9eiQ,GDnHwgB,aCoHtjBzQ,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,GACdnD,EAAAA,GAAAC,cAAA,YAAO+O,IAEThP,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,GACdnD,EAAAA,GAAAC,cAAA,YAAOgP,KAGP,G,wECzGV,MAqCA,GAAe3Q,EAAAA,EAAAA,KAlCiBuS,EAC9BC,QACArS,YACAsS,kBACAhO,OACAiO,cACAC,sBACAvJ,aAEIoJ,EAAMI,aAXY,MAWGJ,EAAMI,YAE3BlR,EAAAA,GAAAC,cAACkR,EAAAA,EAAW,CACVC,WAAYN,EAAMI,YAClBzS,UAAWA,EACXsE,KAAMA,EACNsO,8BAA+BJ,EAC/BK,UAAYN,OAA2B3R,EAnB5B,EAoBXqI,QAASA,IAMb1H,EAAAA,GAAAC,cAACsR,EAAAA,EAAgB,CACfC,UAAWV,EAAMU,UACjBvE,MAAO6D,EAAM7D,MACbwE,QAASX,EAAMpM,GACfjG,UAAWA,EACXsS,gBAAiBA,EACjBrJ,QAASA,K,mHC3Bf,MAkBA,GAAepJ,EAAAA,EAAAA,KAAK8F,EAAAA,EAAAA,KAClB,CAACC,GAAUqN,kBACJA,EAAa3K,OAMX,CAAE4K,YAFU7M,EAAAA,EAAAA,KAAWT,EAAQqN,EAAa3K,SAH1C,CAAC,GAHM3C,EAlB4BwN,EAAGF,eAAcC,iBAC/D,MAAMhO,GAAOC,EAAAA,EAAAA,KACPiO,EAAiBF,IAAeA,EAAWpE,SAAUlI,EAAAA,EAAAA,KAAuBsM,GAC5E/J,EAAUjE,EAAK+N,EAAatF,QAE/B0F,QAAQ,SAAU,IAClBA,QAAQ,UAAWJ,EAAaK,OAAS,IAAIC,OAEhD,OACEhS,EAAAA,GAAAC,cAAA,KAAGxB,UAAU,gBAAgBgC,IAAKkD,EAAK/E,MAAQ,MAAQ,QACpDiT,GACC7R,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,cAAcgC,IAAI,SAAQ6G,EAAAA,EAAAA,GAAWuK,IAEvD7R,EAAAA,GAAAC,cAAC0H,EAAAA,EAAY,CAACC,QAASA,IACrB,I,8FCrCR,SAAgB,KAAO,WAAW,KAAO,YCWnCqK,EAAS,CACbC,IAAK,CAAC,CAAC,UAAW,WAAY,CAAC,UAAW,YAC1CC,KAAM,CAAC,CAAC,UAAW,WAAY,CAAC,UAAW,aAIvCC,EAAa,IAAIvQ,IAAIwQ,OAAOC,KAAKL,IA0CvC,GAAe3T,EAAAA,EAAAA,KAAK8F,EAAAA,EAAAA,KACjBC,IACQ,CACLkO,OAAOC,EAAAA,EAAAA,KAAYnO,MAHLD,EA9BDqO,EACjBjU,OAAMgJ,QAAO/I,YAAW8T,YAExB,MACMG,EAAoB,QADTC,EAAAA,EAAAA,OAGXC,EAAWR,EAAW7P,IAAIiF,GAAqBA,OAAoBnI,EAInEwT,EAAgBD,EAAWX,EAAOW,GAFV,SAAVL,EAE4C,EAAI,QAAKlT,EACnEyT,EAAaD,EAAgBA,EAAc,GAAKrL,EAChDuL,EAAWF,EAAgBA,EAAc,GAAKrL,EAEpD,OACExH,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAO6P,KAAMvU,IAC1CuB,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,EAAO8P,OAAQxK,MAAM,KAAKC,OAAO,KAAKgI,QAAQ,YAAYC,KAAK,QAC7E3Q,EAAAA,GAAAC,cAAA,QAAM2Q,EAAE,kPAAkPD,KAAO,QAAO+B,OACxQ1S,EAAAA,GAAAC,cAAA,YACED,EAAAA,GAAAC,cAAA,kBAAgByE,GAAIgO,EAAkBQ,GAAG,UAAUC,GAAG,IAAIC,GAAG,UAAUC,GAAG,KAAKC,cAAc,kBAC3FtT,EAAAA,GAAAC,cAAA,QAAM,aAAY6S,IAClB9S,EAAAA,GAAAC,cAAA,QAAMsT,OAAO,IAAI,aAAYR,OAInC/S,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,EAAO3E,MAAOA,GAC1B,I,kBCtCH,SAASgV,EAAmBC,GACjC,MAAkB,aAAdA,EAAKhH,KACAgH,EAAK9S,QAGP8S,EAAKC,WAAWC,MAAMC,GAA0D,UAAdA,EAAKnH,QAAmB9L,OACnG,CAEO,SAASkT,EAAyBJ,GACvC,MAAkB,aAAdA,EAAKhH,KACAgH,EAAKK,kBAGPL,EAAKM,UACd,CAQO,SAASC,EAAkBP,GAChC,GAAkB,mBAAdA,EAAKhH,KAET,OAGK,SAAmCiH,GACxC,MAAMO,EAAQP,EAAWC,MAAMC,GAA0D,UAAdA,EAAKnH,OAC1EyH,EAAWR,EAAWC,MAAMC,GAA6D,aAAdA,EAAKnH,OAChF0H,EAAUT,EAAWC,MAAMC,GAA4D,YAAdA,EAAKnH,OAKpF,MAAO,CACLwH,QACAG,gBANsBV,EAAWC,MAAMC,GACzB,oBAAdA,EAAKnH,OAML0H,UACAD,WAEJ,CAjBSG,CAA0BZ,EAAKC,WACxC,C,2GCvCA,MAAMY,EAAyB,IACzBC,EAAuB,IAEd,SAASC,EACtBC,EACAC,GAA2B,EAC3BC,EACA/O,GAGA,MAAMvB,GAASjF,EAAAA,EAAAA,MAEf,OAAOwV,EAAAA,EAAAA,IAAQH,GAAU/P,IACvB,GAAIA,IAAOkB,EACT,OAAOiP,IAGT,MAAMvQ,GAAOwQ,EAAAA,EAAAA,KAAWzQ,EAAQK,GAChC,IAAKJ,EACH,OAAO,EAGT,IAAIyQ,EAAW,EAEf,MAAMC,GAAcC,EAAAA,EAAAA,KAAsB5Q,EAAQK,GAalD,OAZIsQ,IACFD,GAAYC,EAAY9M,MAGtBwM,GAA4BpQ,EAAK4Q,aACnCH,GAAYT,GAGVK,GAAeA,EAAYQ,SAASzQ,KACtCqQ,EAAWK,KAAKC,MAAQd,GAAwBI,EAAYjV,OAASiV,EAAYW,QAAQ5Q,KAGpFqQ,CAAQ,GACd,OACL,C,+SCsCA,MAKMQ,EAAkB,iBAsTxB,GAAejX,EAAAA,EAAAA,KApTIkX,EACjB/W,YACAgX,aACAC,UACAC,yBACAC,cACAC,oBACAC,eACAC,gBACA7H,gBACA1D,YACAwL,kBACAC,eACAC,2BACA7I,gBACA8I,aACAC,gBACAC,aACAC,gBACAC,qBACAC,iBACAC,kBACAC,gBACGC,MAEH,MAAMhT,GAAOC,EAAAA,EAAAA,KAEPgT,EAAgBD,EAAcC,cAC9BC,EAAoBD,EAAgBD,EAAcE,uBAAoBxX,EACtEyX,EAAsBF,EAAgBD,EAAcG,yBAAsBzX,EAC1E0X,GAAqBxX,EAAAA,EAAAA,KAAQ,IAC7BqX,EACKD,EAAcI,mBAGhBJ,EAAcK,iBAAmB,CAACL,EAAcK,kBAAoBC,EAAAA,GAC1E,CAACL,EAAeD,EAAcK,iBAAkBL,EAAcI,qBAE3DG,GAAc3X,EAAAA,EAAAA,KAAQ,IACtBqX,EACKD,EAAcO,YAGhBP,EAAcQ,WAAa,CAACR,EAAcQ,YAAcF,EAAAA,GAC9D,CAACL,EAAeD,EAAcQ,WAAYR,EAAcO,cAGrD3L,IAAW5C,EAAAA,EAAAA,IAAyB,MACpCyO,GAAiBF,EAAYxX,OArDd,IAuDrBS,EAAAA,EAAAA,KAAU,KACR,IAAK8V,EAAc,OACnB,MAAM7V,EAAYC,OAAOC,YAAW,MAClC+W,EAAAA,EAAAA,KAAe,KACb9L,GAASpC,SAAS+C,OAAO,GACzB,GA9De,KAiEnB,MAAO,KACL7L,OAAOE,aAAaH,EAAU,CAC/B,GACA,CAAC6V,IAEJ,MAAMqB,IAAuB/X,EAAAA,EAAAA,KAAQ,IAAM,IAAIsC,IAAIgV,IAAoB,CAACA,IAClEU,IAAyBhY,EAAAA,EAAAA,KAAQ,IAAM,IAAIsC,IAAIiV,IAAsB,CAACA,IAEtEU,IAAsBjY,EAAAA,EAAAA,KAAQ,IAC3B2X,EAAYO,QAAQ/S,IAAQ4S,GAAqB/U,IAAImC,MAC3D,CAAC4S,GAAsBJ,IAEpBQ,IAAmBnY,EAAAA,EAAAA,KAAQ,IAC1BkW,GACEkC,EAAAA,EAAAA,IAAqBlC,EAAY,QADhB,CAAC,GAExB,CAACA,IAEEmC,IAAgBrY,EAAAA,EAAAA,KAAQ,KAC5B,GAAIqW,EACF,OAAOF,EAGT,MAAMmC,EAAiC,GACjCC,EAA2B,GAC3BC,EAAqC,GAY3C,OAVArC,EAAQsC,SAAStT,IACX4S,GAAqB/U,IAAImC,GAC3BmT,EAAqBI,KAAKvT,GACjB6S,GAAuBhV,IAAImC,GACpCqT,EAAyBE,KAAKvT,GAE9BoT,EAAeG,KAAKvT,EACtB,IAGKmT,EAAqBK,OAAOJ,EAAgBC,EAAyB,GAC3E,CAACnC,EAAaF,EAAS4B,GAAsBC,KAE1CY,IAAkBvV,EAAAA,EAAAA,IAAiB8B,IACvC,GAAI4S,GAAqB/U,IAAImC,GAC3B+R,IAAkB/R,GAAI,QAIxB,GAAI6S,GAAuBhV,IAAImC,GAC7B+R,IAAkB/R,GAAI,OADxB,CAKA,GAAIkS,GAAiBc,GAAiBhT,GAAK,CACzC,MAAM0T,EAAeV,GAAiBhT,GAAI+H,KACpC4L,EAAwBtB,GAAoB/S,SAAW,GAQ7D,OAPIqU,EAAsBlD,SAASiD,GACjCC,EAAsBC,OAAOD,EAAsB/C,QAAQ8C,GAAe,GAE1EC,EAAsBJ,KAAKG,QAE7BzB,EAAc4B,6BAA6BF,EAG7C,CAEA,GAAIzB,EAAe,CACjB,MAAM4B,EAAiBtB,EAAYlT,QAQnC,OAPIwU,EAAerD,SAASzQ,GAC1B8T,EAAeF,OAAOE,EAAelD,QAAQ5Q,GAAK,GAElD8T,EAAeP,KAAKvT,QAEtBiS,EAAc8B,sBAAsBD,EAGtC,CAEId,GAAiBhT,GACnBiS,EAAc+B,2BAA2BhB,GAAiBhT,GAAI+H,MAIhEkK,EAAcgC,qBAAqBjU,EAhCnC,CAgCsC,IAGlCkU,IAAqBhW,EAAAA,EAAAA,IAAiBsG,IAC1C,MAAM,MAAEyD,GAAUzD,EAAEI,cACpBkN,IAAiB7J,EAAM,KAGlBkM,GAAaC,KAAWC,EAAAA,EAAAA,GAC7BrC,EAAYkB,GAAe3V,QAAQ2T,IAG/BoD,IAAarS,EAAAA,EAAAA,KAAY,CAACjC,EAAYuU,KAC1C,MAAM5U,GAASjF,EAAAA,EAAAA,MACT8Z,EAAWD,EAAavB,GAAiBhT,QAAMrF,EAC/C6E,EAAQ+U,OAAsC5Z,GAAzBiO,EAAAA,EAAAA,KAAWjJ,EAAQK,GAExCyU,EAAiBjV,GAAQgV,EAC/B,IAAKC,EACH,OAAIC,EAAAA,IAAcpZ,EAAAA,GAAAC,cAAA,OAAKoZ,IAAK3U,GAAI,+BAA6BA,QAC7D,EAGF,MAAM6I,EAASrJ,KAASmK,EAAAA,EAAAA,IAAcnK,GAASA,EAAKqJ,SAAWF,OAAiBhO,EAE1Eia,EAAqB/B,GAAuBhV,IAAImC,GAChD6U,EAAmBjC,GAAqB/U,IAAImC,GAC5C8U,EAAWF,GAAsBC,EACjCE,EAAYP,EAAWnC,GAAoB5B,SAAS+D,EAASzM,MAAQyK,EAAY/B,SAASzQ,IAiCzFgV,EAAUC,GApBjB,WACE,GAAIL,EAAoB,MAAO,CAACpD,GAChC,GAAIG,GAAcnS,EAAM,CACtB,IAAImK,EAAAA,EAAAA,IAAcnK,GAChB,MAAO,EAAC0V,EAAAA,EAAAA,KAAejW,EAAMO,IAG/B,MAAM2V,GAAaC,EAAAA,EAAAA,KAAiBzV,EAAQH,EAAKQ,IACjD,MAAO,EACLqV,EAAAA,EAAAA,KAAcpW,EAAMO,EAAM2V,IAC1BrZ,EAAAA,EAAAA,IAAewZ,EAAAA,EAAAA,KAAa9V,EAAM2V,GAAY,IAAS1W,EAAAA,EAAO8W,cAElE,CACA,GAAI3D,GAAiBpS,EAAM,CACzB,MAAMgW,GAAUC,EAAAA,EAAAA,IAAejW,GAC/B,OAAOgW,GAAW,CAACvW,EAAKuW,GAC1B,CAEF,CAEsCE,IAAiB,GAEvD,OACEpa,EAAAA,GAAAC,cAACoa,EAAAA,EAAU,CACThB,IAAK3U,EACLjG,WAAW+B,EAAAA,EAAAA,GAAe+U,EAAiBrH,GAC3CjB,MAAOjN,EAAAA,GAAAC,cAACyO,EAAAA,EAAa,CAACxK,KAAMiV,IAC5BmB,cACEta,EAAAA,GAAAC,cAACkE,EAAAA,EAAM,CACLD,KAAMA,GAAQgV,EACd7R,gBAAiBkG,EACjBxK,KAAK,WAGT2W,SAAUA,EACVC,kBAAmBA,EACnBxM,SAAUqM,EACVe,SAAUpE,EACVjJ,QAAM,EACNsN,aAjDEhB,EAAiBxZ,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,eACV,UAAlBgM,EACKpW,EAAAA,GAAAC,cAACwa,EAAAA,EAAK,CAACC,QAASjB,EAAWtM,SAAUqM,EAAUmB,WAAS,IAE3C,aAAlBvE,EACKpW,EAAAA,GAAAC,cAAC2a,EAAAA,EAAQ,CAACF,QAASjB,EAAWtM,SAAUqM,EAAUmB,WAAS,SADpE,EA8CEE,cAAc,MAEdnT,QAASA,IAAMyQ,GAAgBzT,GAE/B+R,gBAAiBA,GAAmB,KAAOA,EAAgB/R,EAAI6U,KAC/D,GAEH,CACD7B,GAAkBrK,EAAe8I,EAAYjI,EAAekI,EAAezS,EAAM2T,GACjFC,GAAwBrB,EAA0BO,EAAiBM,EAAoBG,EACvFZ,EAAeD,IAGXyE,IAAiBvb,EAAAA,EAAAA,KAAQ,KAC7B,GAAKkW,GAAY/V,OACjB,OACEM,EAAAA,GAAAC,cAAA,OAAKoZ,IAAI,cACN1D,GAA0B3V,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,EAAAA,EAAO4X,qBAAsBpX,EAAKgS,IAC5EF,GAAYxR,KAAKiV,GAAaF,GAAWE,EAASzM,MAAM,KACzDzM,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,EAAAA,EAAO4X,qBAAsBpX,EAAK,gBAC9C,GAEP,CAAC8R,EAAYE,EAAwBhS,EAAMqV,KAE9C,OACEhZ,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAAA,EAAO6X,UAAWvc,IAC9CwX,GACCjW,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAAA,EAAOiE,OAAQ,iBAAkB3G,IAAKkD,EAAK/E,MAAQ,WAAQS,GACvF0X,GAAoB9S,KAAKiV,GACxBlZ,EAAAA,GAAAC,cAACuN,EAAAA,EAAQ,CACP/O,UAAW0E,EAAAA,EAAO8X,SAClBlN,WAAY2J,GAAiBwB,GAC7BxR,QAASyQ,GACTtK,SAAUqL,EACVvL,UAAQ,MAGXkJ,GAAmB5S,KAAI,CAACS,EAAI9E,IAC3BI,EAAAA,GAAAC,cAACuN,EAAAA,EAAQ,CACP/O,UAAW0E,EAAAA,EAAO8X,SAClB7N,OAAQ1I,EACRgJ,YAAa0J,IAAkBxX,EAAIsX,EAAYxX,OAxQ7B,EAyQlB2N,cAAeA,EACf3F,QAASyQ,GACTtK,SAAUnJ,MAGb8S,GAAoBvT,KAAI,CAACS,EAAI9E,IAC5BI,EAAAA,GAAAC,cAACuN,EAAAA,EAAQ,CACP/O,UAAW0E,EAAAA,EAAO8X,SAClB7N,OAAQ1I,EACRgJ,YACE0J,IAAkBxX,GAAKiX,GAAmBnX,QAAU,GAAKwX,EAAYxX,OAnRrD,EAqRlBiO,UAAQ,EACRjG,QAASyQ,GACTtK,SAAUnJ,MAGd1E,EAAAA,GAAAC,cAACib,EAAAA,EAAS,CACRxW,GAAIqR,EACJpX,IAAK4M,GACLoB,MAAOiJ,EACPhJ,SAAUgM,GACVhO,YAAaiL,GAAqBlS,EAAK,iBAK5CkV,IAAanZ,OACZM,EAAAA,GAAAC,cAACkb,EAAAA,EAAc,CACb1c,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAAA,EAAOiY,WAAY7E,GAAsBpT,EAAAA,EAAOkY,OAAQ,iBAClFC,MAAOzC,GACP0C,aAAe,IAAGhG,IAClBuF,eAAgBA,GAChBpE,WAAYoC,GACZ9C,gBAAiBA,GAEhB6C,GAAY5U,KAAKS,GAAOsU,GAAWtU,MAEnC8F,IAAaqO,IAAgBA,GAAYnZ,OAG5CM,EAAAA,GAAAC,cAACub,EAAAA,EAAO,MAFRxb,EAAAA,GAAAC,cAAA,KAAGxB,UAAW0E,EAAAA,EAAOsY,WAAY3F,GAAgB,yBAI/C,G,yGCxYV,MCyGA,EA7EmBuE,EACjBpN,QACAyM,WACAY,gBACAE,eACAK,gBAAgB,QAChB1N,WACAoN,WACArN,SACAzO,YACAid,iBACA/B,oBACA3W,QACA0E,UACA+O,sBAEA,MAAM9S,GAAOC,EAAAA,EAAAA,KAEP+X,GAAepB,IAAapN,EAC5BlE,GAAcrG,EAAAA,EAAAA,IAAgB,KAC9B2X,IAEApN,EACFsJ,MAIF/O,MAAW,IAGb,OACE1H,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GD5DM,WC8DfkZ,GD9D2K,WC+D3KvM,GD/DmF,WCgEnFwO,GDhEsC,WCiEtCrB,GDjEoJ,WCkEpJ7b,GAEFiJ,QAASuB,EACTjG,MAAOA,EACPvC,IAAKkD,EAAK/E,MAAQ,WAAQS,EAC1B2N,KAAM2O,EAAc,cAAWtc,EAE/BqN,SAAUiP,EAAc,OAAItc,IAE1B8N,IAAaoN,GAAYrN,GAAUlN,EAAAA,GAAAC,cAAC2b,EAAAA,EAAY,MACjDpB,GACCxa,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GD7E8K,WC+E1K,QAAlBqa,ED/E0O,WAAtB,aCkFnNL,GAGJF,GACCta,EAAAA,GAAAC,cAAA,OAAKxB,UDtFkQ,YCuFpQ6b,GAGLta,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GD1FwF,WC0F3Dkb,IAC1CzO,GAEFyM,GACC1Z,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GD9F4G,WC8F5EmZ,IAC7CD,IAGHc,GAAgBqB,EAAAA,IAChB7b,EAAAA,GAAAC,cAAA,OAAKxB,UDnGwD,aCqG3D,C,qJCrGV,MC0LA,GAAeH,EAAAA,EAAAA,KAvJiBwd,EAC9BC,mBACAC,eACAC,cACAC,oBACAzd,gBAGA,MAAM0d,GAAexT,EAAAA,EAAAA,IAAuB,MAEtCI,GAAYJ,EAAAA,EAAAA,IAA0B,OAErCyT,EAAkBC,IAAoBC,EAAAA,EAAAA,IAAU,CAAE7T,MAAO,EAAGC,OAAQ,IAErE6T,GAAMC,EAAAA,EAAAA,MAELC,EAAYC,IAAiB9Q,EAAAA,EAAAA,MAE9B+Q,EAAmBV,IAAe9a,EAAAA,EAAAA,KAAoB8a,EAAa,WACnEta,GAAaN,EAAAA,EAAAA,GAASsb,IAE5Bxc,EAAAA,EAAAA,KAAU,KACHwB,IACLib,EAAAA,EAAAA,IAAajb,GAAYkb,KAAKH,EAAc,GAC3C,CAAC/a,IAEJ,MAAMmb,GAAmBvd,EAAAA,EAAAA,KAAQ,KAC/B,MAAMwd,EAA8D,GACpE,IAAK,IAAIC,EAAO,EAAGA,GArCT,EAqCwBA,IAAQ,CACxC,MAAMC,EAAgB9M,KAAK+M,MArCJ,GAqCkC,EApCxC,IAoC6CF,EAAO,KAC/DG,EAAeH,EAvCb,EAwCFI,EArCa,KACN,GADM,KAqCqDD,EAElEE,EAAaL,EAAO,GAAM,EAAI7M,KAAKmN,GAAKL,EAAgB,EAE9D,IAAK,IAAIrd,EAAI,EAAGA,EAAIqd,EAAerd,IAAK,CACtC,MAAM2d,EAAS3d,EAAIqd,EAAiB9M,KAAKmN,GAAK,EAAID,EAElD,GAAInB,GAAqBqB,EAAkB,IAAVpN,KAAKmN,IAAaC,EAAkB,IAAVpN,KAAKmN,GAC9D,SAIF,MAGM9T,EAAI,GAHmB,KAAb4T,EAAoBjN,KAAKqN,IAAID,GAIvC5T,EAAI,GAHMyT,EAAajN,KAAKsN,IAAIF,GAKhCG,EAAa,IAAMP,EAAehN,KAAKwN,SAE7CZ,EAAY9E,KAAK,CACfzO,IAAGG,IAAG+T,cAEV,CACF,CACA,OAAOX,CAAW,GACjB,CAACb,KAEJ3L,EAAAA,EAAAA,GAAkB4L,GAAeyB,IAC/BvB,EAAiB,CACf5T,MAAOmV,EAAMC,YAAYpV,MACzBC,OAAQkV,EAAMC,YAAYnV,QAC1B,KAGJvI,EAAAA,EAAAA,KAAU,KACR,MAAM6a,EAAYmB,EAAahT,QAC3B6R,GACFqB,EAAiB,CACf5T,MAAOuS,EAAU8C,YACjBpV,OAAQsS,EAAU+C,cAEtB,GACC,CAAC1B,IAEJ,MAAM2B,GAAOpb,EAAAA,EAAAA,IAAgB,KAC3B,MAAMqb,EAASlV,EAAUI,QACzB,IAAK8U,IAAWxB,EAAY,OAC5B,MAAMyB,EAAMD,EAAOE,WAAW,OACxB,MAAE1V,EAAK,OAAEC,GAAWuV,EAC1B,IAAKxV,IAAUC,EAAQ,OAEvBwV,EAAIE,OACJtB,EAAiB9E,SAAQ,EACvBxO,IAAGG,IAAG+T,iBAEN,MAAMW,GAAe5V,EAAQ0H,KAAKC,IAAI3H,EAzF3B,IAyF6C8T,IAAQ,EAC1D+B,EAAU9U,EAAI2G,KAAKC,IAAI3H,EA1FlB,IA0FoC8T,GAAO8B,EAChDE,EAAU5U,EAAIwG,KAAKC,IAAI1H,EA3FlB,IA2FqC6T,GAAO8B,EAEjDtb,EA/FW,GA+FawZ,EAAMmB,GAAcW,EAAc,GAAM,GAEtEH,EAAIM,UAAU/B,EAAY6B,EAAUvb,EAAO,EAAGwb,EAAUxb,EAAO,EAAGA,EAAMA,EAAK,IAE/Emb,EAAIO,UAEAzC,IACFkC,EAAIE,OACJF,EAAIQ,UAAY1C,EAChBkC,EAAIS,yBAA2B,cAC/BT,EAAIU,SAAS,EAAG,EAAGnW,EAAOC,GAC1BwV,EAAIO,WAGN,MAAMI,EAAiBX,EAAIY,qBAAqBrW,EAAQ,EAAGC,EAAS,EAAG,EAAGD,EAAQ,EAAGC,EAAS,EAAGD,EAAQ,GACzGoW,EAAeE,aAAa,EAAG,aAC/BF,EAAeE,aAAa,EAAG,WAG/Bb,EAAIE,OACJF,EAAIS,yBAA2B,kBAC/BT,EAAIQ,UAAYG,EAChBX,EAAIU,SAAS,EAAG,EAAGnW,EAAOC,GAC1BwV,EAAIO,SAAS,IAuBf,OApBAte,EAAAA,EAAAA,KAAU,KACR6d,GAAM,GACL,CAACvB,KAEJtc,EAAAA,EAAAA,KAAU,KACR,MAAM,MAAEsI,EAAK,OAAEC,GAAW0T,IACpB6B,EAASlV,EAAUI,QACzB,IAAKV,IAAUC,EACb,OAGF,MAAMsW,EAAU7O,KAAKC,IAAI3H,EAAOC,IAChCsB,EAAAA,EAAAA,KAAgB,KACdiU,EAAOxV,MAAQuW,EAAUzC,EACzB0B,EAAOvV,OAASsW,EAAUzC,EAE1ByB,GAAM,GACN,GACD,CAAC5B,EAAkBG,IAGpBvc,EAAAA,GAAAC,cAAA,OACEtB,IAAKwd,EACL1d,WAAW+B,EAAAA,EAAAA,GD/KM,WC+KsB/B,GACvCuE,OAAOC,EAAAA,EAAAA,GACJ,YAAW8Y,EAAiB,KAC5B,YAAWA,EAAiB,IAAMA,EAAiB,OAGtD/b,EAAAA,GAAAC,cAAA,UAAQxB,UDrL6B,WCqLHE,IAAKoK,IACnC,G,oHCtLV,QAA6C,WCgF7C,GAAezK,EAAAA,EAAAA,KAvDyB2gB,EACtCC,WACAC,WACA1gB,YACA2gB,eACAC,cAEA,MAAMC,GAAcC,EAAAA,EAAAA,KAAmBL,EAAS9N,YAAY,GAEtDoO,GAAmBne,EAAAA,EAAAA,GAAU8d,OAAyB9f,EAAdigB,GAExCG,GAAkBlgB,EAAAA,EAAAA,KAAQ,IACzBmgB,EAAAA,GACEC,MAAMC,KAAK,CAAElgB,OAfF,IAe2BuE,KAAI,IA4CrD,SAAgCmb,EAAe,IAC7C,MAAM5V,GAAK4V,EAAe,EAAIjP,KAAKwN,SAAWyB,EAAe,IAAMjP,KAAKwN,SAAW,GAAM,GAAK,GACxFhU,EAAIyV,EAAejP,KAAKwN,SAAWyB,EAAe,EAExD,MAAQ,eAAc5V,MAAMG,EAAIyV,KAAgB5V,KAAKG,GACvD,CAjD2DkW,CAAuBT,KADxC,IAErC,CAACA,IAEJ,GAAKI,GAAqBL,EAI1B,OACEnf,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GD/CM,WC+CsB/B,GACvCuE,OAAOC,EAAAA,EAAAA,GAAWhB,QAAQmd,IAAkB,oBAAmBA,QAE9DK,EAAMxb,KAAI,CAAC6b,EAAMlgB,KAChB,MAAMoD,EAAS,wBAAuB8c,OACtC,OAAIX,EAEAnf,EAAAA,GAAAC,cAACkR,EAAAA,EAAW,CACVC,WAAY8N,EAAS9N,WACrB3S,UAAW0E,EACXH,MAAOA,EACP+c,qBAAmB,EACnBhd,KAAMqc,EACNY,eAAsB,IAANpgB,EAAUyf,OAAUhgB,IAMxCW,EAAAA,GAAAC,cAAA,OACEiD,IAAKsc,EACLS,IAAI,GACJxhB,UAAW0E,EACXH,MAAOA,EACPI,WAAW,EACX4c,eAAsB,IAANpgB,EAAUyf,OAAUhgB,GACpC,IAGF,G,4OCzBV,MAAM6gB,EAAY,IAAMC,EAAAA,EAElBC,EAAc,IAAMD,EAAAA,EAEpBE,EAAoBF,EAAAA,EAiK1B,GAAe7hB,EAAAA,EAAAA,KAAK8F,EAAAA,EAAAA,KAClB,CAACC,GAAUic,kBACT,MAAM,oBAAEC,EAAmB,UAAEC,GAAcnc,GACrC,gBAAEoc,IAAoBC,EAAAA,EAAAA,KAAerc,GAErCsc,GAAcC,EAAAA,EAAAA,KAA+Bvc,EAAQ,mBAE3D,MAAO,CACLoc,gBAAiBA,IAAkBH,GACnCO,mBAAoBL,EAAUK,mBAC9BC,eAAgBP,EAChBI,cACD,GAZevc,EA/JU2c,EAC5BT,cACApB,WACAzgB,YACAsE,OAAOmd,EACPc,aAAaZ,EACbK,kBACAI,qBACAC,iBACAH,cACAM,iBACAC,cACAC,aACA7P,YACAL,0BAEA,MAAM,mBAAEmQ,IAAuB7a,EAAAA,EAAAA,MAGzB5H,GAAMgK,EAAAA,EAAAA,IAAuB,MAE7B0Y,EAA6B,WAAlBnC,EAASzS,KAEpB6U,GAAoB/hB,EAAAA,EAAAA,KAAQ,IAChCshB,GAAoBlN,MAAM4N,IAAMC,EAAAA,EAAAA,KAAeD,EAAErC,SAAUA,MAC1D,CAAC2B,EAAoB3B,IAClBuC,EAAeH,GAAmBI,YAAYhd,IAE9C,YAAEid,IAAgBC,EAAAA,EAAAA,GAAeP,EAAWnC,EAAS9N,gBAAa/R,GAElEwiB,GAAmBtiB,EAAAA,EAAAA,KAAQ,KAC/B,IAAK8hB,EAAU,OAAOC,GAAmBQ,iBAAiBpd,GAE1D,IAAKid,EAAa,OAClB,MAAMI,EAAalB,GAAoBlN,MAAMqO,GAAcA,EAAU9C,SAAS+C,WAAaN,EAAY5P,SACnG+P,iBAAiBpd,GACrB,OAAOqd,CAAU,GAChB,CAACT,EAAmBT,EAAoBc,EAAaN,IAElDa,GAAW3iB,EAAAA,EAAAA,KAAQ,KACvB,GAAIsiB,EACF,OAAOA,EAGT,IAAKf,GAAgBqB,SACnB,OAGF,MAAM,SAAEA,GAAarB,EAGrB,OAAOqB,EAFahS,KAAK+M,MAAM/M,KAAKwN,SAAWwE,EAASziB,SAE3BgF,EAAE,GAC9B,CAACmd,EAAkBf,IAEhBsB,GAAiBC,EAAAA,EAAAA,IAAkB1jB,EAAKsS,GAExCqR,EAAsBb,IAAgBlC,EAAAA,EAAAA,KAAmBkC,GACzDc,EAAkBL,IAAY3C,EAAAA,EAAAA,KAAmB2C,GAEjDM,GAAsBnhB,EAAAA,EAAAA,GAASihB,GAC/BG,GAAkBphB,EAAAA,EAAAA,GAASkhB,GAE3BG,GAAiBnjB,EAAAA,EAAAA,KAAQ,IAC7BkhB,GAAiB9M,MAAMgP,IAAWnB,EAAAA,EAAAA,KAAemB,EAAQzD,MACxD,CAACuB,EAAiBvB,IAEf0D,EAAmB3gB,QACvB0e,GAAe+B,IAAmBrB,GAAYmB,IAAwBC,GAElEI,EAAmBT,IAAoBQ,IAAqB3B,GAAmBE,IAEnFvY,aAAcka,EACdja,qBAAsBka,IACpBja,EAAAA,EAAAA,GAA4B8Z,OAAkBvjB,GAAW,EAAM,SAEjEuJ,aAAcoa,EACdna,qBAAsBoa,IACpBna,EAAAA,EAAAA,GAA4B+Z,OAAkBxjB,GAAW,EAAM,QAE7D6jB,GAActgB,EAAAA,EAAAA,IAAgB,KAClCwe,EAAmB,CAAEd,cAAapB,YAAW,KAGxCiE,GAAmBC,GAAqBC,KAAyBrhB,EAAAA,EAAAA,KAClEshB,KAAoBjC,GAAcwB,GAAqBM,KAE3Dva,aAAc2a,GACd1a,qBAAsB2a,KACpB1a,EAAAA,EAAAA,GAA4Bwa,QAAkBjkB,GAAW,GAEvDokB,IAAgBjjB,EAAAA,EAAAA,GACpB2C,EAAAA,EAAO6P,KACP8P,GAAsB3f,EAAAA,EAAOugB,UAC7BzC,GAAkB9d,EAAAA,EAAO8d,eACzBxiB,GAGF,OACEuB,EAAAA,GAAAC,cAAA,OAAKxB,UAAWglB,GAAe9kB,IAAKA,IAChCsiB,GAAkBsC,IAClBvjB,EAAAA,GAAAC,cAAC0jB,EAAAA,EAAmB,CAClBllB,UAAW+kB,GACXtE,SAAUA,EACV2B,mBAAoBA,EACpB9d,KAAMA,EACNkO,oBAAqBA,KAGvBgQ,GAAkBI,GAClBrhB,EAAAA,GAAAC,cAACkR,EAAAA,EAAW,CACVC,WAAY8N,EAAS9N,WACrB3S,UAAW0E,EAAAA,EAAOwe,YAClB5e,KAAMA,EACN6gB,OAAQ1C,EACR2C,iBAAe,EACfvS,UAAWA,EACXD,8BAA+BJ,EAC/B6S,aAAW,IAGdd,IAAuB3B,GACtBrhB,EAAAA,GAAAC,cAAC8jB,EAAAA,EAAe,CACd1K,IAAM,GAAEoI,KAAgB1e,IACxBtE,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAAA,EAAO6gB,aAAcf,GAC/ClgB,MAAMkhB,EAAAA,EAAAA,IAjIe,IAiIIlhB,GACzBvB,OAAQghB,EACR0B,KAAM9B,IAAmBlB,EACzBiD,QAAShD,EACT9d,OAAQ+f,GACR/D,QAASgE,GACTS,aAAW,IAGdhB,GACC9iB,EAAAA,GAAAC,cAAAD,EAAAA,GAAAokB,SAAA,KACEpkB,EAAAA,GAAAC,cAAC8jB,EAAAA,EAAe,CACd1K,IAAM,GAAE6I,KAAYlB,IACpBviB,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAAA,EAAOkhB,OAAQtB,GACzChgB,KAAMie,EACNxf,OAAQihB,EACRyB,KAAM9B,EACN+B,QAAM,EACN9E,QAAS6D,EACTY,aAAW,IAEZzC,IAAaQ,GAAoBO,GAChCpiB,EAAAA,GAAAC,cAACgf,EAAAA,EAAiB,CAChBC,SAAUA,EACVzgB,UAAWskB,EACX3D,aAAcjP,KAAKC,IAxJM,GAwJFrN,EAAuCsd,GAC9DhB,QAAS6D,KAKb,I,+HCzLV,MAqDA,GAAe5kB,EAAAA,EAAAA,KArD2BqlB,EACxCzE,WACA2B,qBACApiB,YACAsE,OACAuhB,gBACArT,0BAEA,MAAMqQ,GAAoB/hB,EAAAA,EAAAA,KAAQ,IAChCshB,GAAoBlN,MAAMqO,IAAcR,EAAAA,EAAAA,KAAeQ,EAAU9C,SAAUA,MAC1E,CAAC2B,EAAoB3B,IAClBqF,EAAejD,GAAmBkD,YAAY9f,GAC9C+f,EAAYF,EAAgB,WAAUA,SAAiBllB,EACvDqlB,GAAYrjB,EAAAA,EAAAA,GAASojB,GAErB5b,GAAuB1G,EAAAA,EAAAA,GAA6BuiB,GAEpDC,EAAuC,UAAlBzF,EAASzS,MAA0C,OAAtByS,EAAS+C,SAC3D2C,EAA6BN,GAAmC,UAAlBpF,EAASzS,MAA0C,MAAtByS,EAAS+C,SAE1F,MAAsB,WAAlB/C,EAASzS,KAETzM,EAAAA,GAAAC,cAACkR,EAAAA,EAAW,CACVC,WAAY8N,EAAS9N,WACrB3S,WAAW+B,EAAAA,EAAAA,GAAe,sBAAuB/B,GACjDsE,KAAMA,EACNsO,8BAA+BJ,IAKjC2T,EAEA5kB,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,QAAQ3L,UAAU,sBAAsBuE,MAAQ,cAAaD,eAAkBA,QAK5F/C,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GACT,sBACAmkB,GAAsB,mBACtB9b,EACApK,GAEFuE,MAAOD,EAAQ,UAASA,gBAAmBA,WAAW1D,EACtD6D,IAAKwhB,GAAaG,EAClB5E,IAAKqB,GAAmBrU,MACxB7J,WAAW,GACX,G,wECpEN,MAQA,EAR4C1C,IAC1C,MAAM,OAAEoF,GAAWpF,EACbokB,GAAkBC,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,mBAAoBnf,GAG3E,OAAOgf,EAAkB9kB,EAAAA,GAAAC,cAAC6kB,EAAoBpkB,QAAYrB,CAAS,C,wECLrE,MAQA,EAR0CqB,IACxC,MAAM,OAAEoF,GAAWpF,EACbwkB,GAAgBH,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,iBAAkBnf,GAGvE,OAAOof,EAAgBllB,EAAAA,GAAAC,cAACilB,EAAkBxkB,QAAYrB,CAAS,C,oWCbjE,QAA0E,WCiC1E,GAAef,EAAAA,EAAAA,KArBsB6mB,EACnCC,aACAC,WACA7Z,cAGExL,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GDlBG,WCoBjB6kB,GDpB8G,WCqB9GD,IAAe5Z,GDrB2E,aCwB1FxL,EAAAA,GAAAC,cAAA,OAAKxB,UDxBmC,YCyBtCuB,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,IAChBnD,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,IAChBnD,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,QC4ZxB,GAAe7E,EAAAA,EAAAA,KAAK8F,EAAAA,EAAAA,KAClB,CAACC,GACCuC,SAAQrC,gBAAe+gB,YAAWC,uBAElC,MAAMjhB,GAAOwQ,EAAAA,EAAAA,KAAWzQ,EAAQuC,GAC1B/B,GAAOC,EAAAA,EAAAA,KAAWT,EAAQuC,GAChC,IAAKtC,EACH,MAAO,CACLsB,cAAevB,EAAOuB,eAI1B,MAAM4f,EAAgBD,IAAoBE,EAAAA,EAAAA,KAAwBphB,EAAQuC,EAAQrC,EAAgB,QAAU,OACtGyQ,EAAcuQ,GAChBG,EAAAA,EAAAA,KAAkBrhB,EAAQuC,EAAQ2e,IAClCtQ,EAAAA,EAAAA,KAAsB5Q,EAAQuC,EAAQrC,EAAgB,QAAU,QAC9D,WAAEohB,EAAU,YAAEC,GAAgB5Q,GAAe,CAAC,EAC9C6Q,EAAoBthB,GAAiBqhB,GAAaE,QAASxY,EAAAA,EAAAA,KAAWjJ,EAAQuhB,EAAYE,aAAUzmB,EACpG0mB,EAAgB/Q,GAAcgR,EAAAA,EAAAA,KAAa3hB,EAAQ2Q,QAAe3V,EAClE4mB,EAAoBJ,GAAqBE,EACzCG,EAAmBlR,IAAemR,EAAAA,EAAAA,GAAoBnR,IAAcoR,aACpEC,EAAoBrR,GAAcsR,EAAAA,EAAAA,KAAiBtR,QAAe3V,EAClEknB,EAAsBF,GAAqBH,GAC7CR,EAAAA,EAAAA,KAAkBrhB,EAAQC,EAAKI,GAAIwhB,QACnC7mB,GACImnB,cAAeC,EAAqBC,aAAcC,GAAuBN,GAAqB,CAAC,GAGrGzf,OAAQggB,EACRC,SAAUC,EACVra,KAAMsa,IACJC,EAAAA,EAAAA,KAAyB3iB,IAAW,CAAC,EACnC+gB,GAAcE,GAAa1e,IAAWggB,IAAkBriB,EAC1DqC,IAAWkgB,EAAkBA,IAAoBG,EAAAA,IAC/CC,EAAmB5iB,EAAKsK,SAAWhI,IAAWggB,GAC/ChgB,KAAW8Z,EAAAA,EAAAA,KAAerc,GAAQ8iB,iBAEjCtN,GAAaC,EAAAA,EAAAA,KAAiBzV,EAAQuC,GACtCwgB,EAAmBpS,IAAeqS,EAAAA,EAAAA,KAAuBhjB,EAAQ2Q,GAEjEtD,GAAe4V,EAAAA,EAAAA,KAAkBjjB,EAAQuC,EAAQqgB,EAAAA,GAAgB,gBAEjEM,GAAaC,EAAAA,EAAAA,KAAiBnjB,EAAQuC,GAEtC6gB,EAAYzS,GAAapN,QAAQ6f,UACjCC,EAAmBD,IAAaE,EAAAA,EAAAA,KAAgBtjB,EAAQojB,EAAUra,OAAQqa,EAAU/iB,IAE1F,MAAO,CACLJ,OACAsjB,SAASC,EAAAA,EAAAA,KAAkBvjB,GAAMwjB,EAAAA,EAAAA,KAAqBzjB,IAAS0jB,EAAAA,EAAAA,KAAuB1jB,IACtF4hB,oBACAQ,sBACAE,qBACAJ,sBACAyB,OAAOC,EAAAA,EAAAA,KAAY5jB,EAAQuC,EAAQqgB,EAAAA,IACnC7B,aACA8B,kBACAgB,kBAAkBC,EAAAA,EAAAA,KAAuB9jB,GACzC+jB,cAAehD,GAAkC,WAApB2B,EAC7BsB,iBAAkBhkB,EAAOikB,YAAYC,YAAY7oB,QAAU,GAAK,KAC5DimB,GAAc3Q,GAAe,CAC/BwT,2BAA2BC,EAAAA,EAAAA,KAAqBpkB,EAAQ2Q,IAE1DnQ,OACAgV,aACAuN,mBACA1V,eACAgX,yBAAyBvpB,EAAAA,EAAAA,KAA0BkF,GACnD2Q,cACAwQ,gBACA5f,cAAevB,EAAOuB,cACtB+iB,eAAgBpB,GAAYoB,eAC5BC,OAAQrB,GAAYsB,WACpBC,SAAUzkB,EAAOykB,SACjBpB,mBACD,GA3EetjB,EA7ToB2kB,EACtCniB,SACAoiB,WACAC,YACAC,gBACAC,WACAR,iBACAC,SACA3X,sBACA3M,OACAojB,mBACAE,UACA/iB,OACAgV,aACA4M,sBACAR,oBACAuC,4BACAjC,sBACAI,qBACAyC,YACApB,QACAU,0BACAtD,aACA8B,kBACAgB,mBACAE,gBACAC,mBACAjB,oBACA1V,gBACA8T,iBACAxQ,eACAzQ,iBACAqB,iBACA0f,aACAC,oBACA9mB,aACAqqB,YACAO,mBAEA,MAAM,SACJC,GAAQ,gBACRC,GAAe,eACfC,GAAc,iBACdC,GAAgB,aAChBC,GAAY,WACZC,GAAU,eACVC,GAAc,gBACdC,GAAe,0BACfC,GAAyB,eACzBC,KACExjB,EAAAA,EAAAA,OAEE,SAAEiF,KAAaC,EAAAA,EAAAA,OACdue,GAAmBC,GAAiBC,KAAoBloB,EAAAA,EAAAA,MACxDmoB,GAAiBC,GAAeC,KAAkBroB,EAAAA,EAAAA,MAClDsoB,GAAuBC,GAAqBC,KAAwBxoB,EAAAA,EAAAA,MACpEyoB,GAAyBC,GAAuBC,KAA2B3oB,EAAAA,EAAAA,MAC3E4oB,GAAuBC,GAAqBC,KAAyB9oB,EAAAA,EAAAA,MACrE+oB,GAA6BC,GAA2BC,KAA+BjpB,EAAAA,EAAAA,MAExF,QAAE4M,GAAO,kBAAEsc,IAAsB5mB,GAAQ,CAAC,GAEhD6mB,EAAAA,EAAAA,GAAiB5mB,GAAgBqB,GAAgBgB,EAAQ4e,GAAexQ,IAExE,MAAM,eAAEoW,GAAc,IAAEzsB,KAAQ0sB,EAAAA,EAAAA,GAAiB,CAC/C/mB,OACAsC,SACAoO,eACAtD,gBACAsW,QACAsD,sBAAsBC,EAAAA,EAAAA,KAAuB,CAAEC,MAAO9D,IACtDnB,sBACAE,sBACAE,qBACAS,oBACAnB,oBACAhV,sBACAiY,gBACAR,0BACAO,YACA1kB,iBACA+gB,aACAsD,WAGI6C,IAAwBC,EAAAA,EAAAA,GAAkBC,EAAAA,KAE1C1iB,IAAcrG,EAAAA,EAAAA,IAAgB,KAClC,MAAMgpB,EAAoBpgB,IAAY0f,GAMtC,GAJI1f,IACFse,GAA0B,CAAEnd,OAAO,IAGjC2Y,GACFoE,GAAa,CACX9iB,SACAilB,UAAWtG,SAHf,CAQA,GAAIhhB,GAMF,OALAglB,GAAgB,CAAE3iB,SAAQglB,mBAAmB,GAAQ,CAAEE,uBAAuB,SAE1EtgB,IACFge,GAAe,CAAEuC,OAAO,KAK5B,GAAInd,GAAS,CACX,GAAIsZ,EAGF,YAFA2B,QAAgBxqB,EAAW,CAAEysB,uBAAuB,IAQpD,GAJKF,GACHhC,GAAe,CAAEhjB,UAAU,CAAEklB,uBAAuB,KAGjDZ,GAAmB,MAE5B,CAEA5B,GAAS,CAAE5kB,GAAIkC,EAAQglB,oBAAmBI,sBAAsB,GAAQ,CAAEF,uBAAuB,IAE7F1G,GAAcgD,GAChBqB,IA5BF,CA6BA,IAGIwC,IAAkBrpB,EAAAA,EAAAA,IAAiBsG,IACvCA,EAAEoD,iBACF+c,KAAcziB,EAAO,IAGjBslB,IAAetpB,EAAAA,EAAAA,IAAgB,KACnC8nB,KACAT,IAAiB,IAGbkC,IAAavpB,EAAAA,EAAAA,IAAgB,KACjCioB,KACAT,IAAe,IAGXgC,IAAyBxpB,EAAAA,EAAAA,IAAgB,KAC7CooB,KACAT,IAAqB,IAGjB8B,IAAezpB,EAAAA,EAAAA,IAAgB,KAC9B0B,GACLylB,GAAe,CAAEnjB,OAAQtC,EAAKI,GAAI4nB,WAAY,IAAK,IAG/CC,IAAiBC,EAAAA,EAAAA,GAAsB,CAC3CloB,OACAO,OACAqnB,gBACAC,cACAC,0BACAC,gBACArD,WACAG,WACAvB,UACAS,mBACA9jB,iBACAqB,iBACA0f,eAGIlD,IAAiBC,EAAAA,EAAAA,IAAkB1jB,GAAK2F,EAAO2M,OAAsB5R,IAG3Ec,EAAAA,EAAAA,KAAU,KACJiiB,IAAkBxT,IAAWka,SAA+BzpB,IAAnBspB,GAC3CgB,GAAW,CAAE/iB,UACf,GACC,CAACA,EAAQ+hB,EAAgBG,GAAUla,GAASwT,KAE/C,MAAMqK,GAAW5nB,GAAQgV,IAAcG,EAAAA,EAAAA,KAAanV,EAAMgV,IAClD6S,cAAeC,KAAwB7jB,EAAAA,EAAAA,GAA4B2jB,IAErEG,IAAOrtB,EAAAA,EAAAA,KAAQ,KACnB,GAAKstB,EAAAA,GAEL,OAAItoB,GACM,KAAGuoB,EAAAA,EAAAA,IAAmBlnB,GAAe,SAAUgB,KAGjD,KAAGkmB,EAAAA,EAAAA,IAAmBlmB,EAAQ,SAAUqgB,EAAAA,KAAiB,GAChE,CAACrgB,EAAQhB,GAAerB,KAE3B,IAAKD,EACH,OAGF,MAAMJ,GAAOW,GAAQP,EAEfyoB,IAAgBvsB,EAAAA,EAAAA,GACpB,4BACAiE,EAAAA,EAAAA,KAASmC,GAAU,UAAY,QAC/BgI,IAAW,QACXwW,GAAc,WACd8B,GAAmB,iBACnB5B,IAAa,aACb7mB,IAGF,OACEuB,EAAAA,GAAAC,cAAC+sB,EAAAA,EAAQ,CACPruB,IAAKA,GACLF,UAAWsuB,GACXH,KAAMA,GACN5pB,MAAQ,QAAOomB,MACflc,QAAS0B,KAAYpD,GACrB+gB,eAAgBA,GAChB7kB,QAASuB,GACTogB,YAAa4C,GACbgB,mBAAiB,GAEjBjtB,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe,SAAU,qBACvCR,EAAAA,GAAAC,cAACkE,EAAAA,EAAM,CACLD,KAAMA,GACNmD,gBAAiBxC,GAAM0I,OACvBhJ,cAAeA,GACfxB,KAAMuiB,GAAY,SAAW,QAC7B4H,WAAYroB,GAAM0I,OAClB4f,aAAcR,IAAuB1qB,QAAQqC,EAAK8oB,mBAClDC,kBAAmBC,EAAAA,GAAkBC,SACrCC,gBAAgB,gBAElBxtB,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,wBACbuB,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GAAe,gBAAiB,eAAgBmsB,IAAuB,0BAElFA,IAAuB1qB,QAAQqC,EAAK8oB,oBACpCptB,EAAAA,GAAAC,cAACwtB,EAAAA,EAAQ,CAAChhB,KAAK,OAAOhO,UAAU,mCAAmCsE,KAAK,aAE1E/C,EAAAA,GAAAC,cAACytB,EAAAA,EAAS,CACRppB,KAAMA,EACNsjB,QAASA,EACT+F,6BAA2B,EAC3BC,YAAanC,GACb7C,OAAQA,EACRxD,WAAYA,KAGf9gB,EAAKupB,cAAgBvpB,EAAKwpB,gBACzB9tB,EAAAA,GAAAC,cAACklB,EAAc,CAAC3Z,SAAUA,GAAU4Z,WAAYA,EAAYC,SAAUqD,KAG1E1oB,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,QACbuB,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,YACbuB,EAAAA,GAAAC,cAACyO,EAAAA,EAAa,CACZxK,KAAMA,GACN+J,iBAAe,EACf5G,gBAAiBT,IAAW/B,GAAMH,IAAMG,GAAM0I,OAC9ChJ,cAAeA,GACf0M,oBAAqBA,IAEtB2W,IAAYrjB,IAAiBvE,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,UACzCpK,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,cACduW,IACChV,EAAAA,GAAAC,cAAC4H,EAAAA,EAAe,CACdC,QAASkN,GACTjN,eAAiBxD,QAA4ClF,EAA5BmpB,EACjCxgB,UAAWggB,GAAO9f,QAIxBlI,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,YACZ2sB,MACC9F,IACAtlB,EAAAA,GAAAC,cAACytB,EAAAA,EAAS,CACRppB,KAAMA,EACN6kB,SAAUA,EACVvB,QAASA,EACTrjB,cAAeA,GACfwpB,WAAYlpB,GAAMmpB,eAClBpF,OAAQA,EACRxD,WAAYA,MAKnBqF,IACCzqB,EAAAA,GAAAC,cAAC4F,EAAAA,EAAe,CACdC,OAAQkkB,GACRjkB,QAASmkB,GACTlkB,oBAAqB2kB,GACrBrmB,KAAMA,EACNC,cAAeA,KAGlBqmB,IACC5qB,EAAAA,GAAAC,cAACilB,EAAAA,EAAa,CACZpf,OAAQqkB,GACRpkB,QAASskB,GACTrkB,oBAAqB8kB,GACrBlkB,OAAQA,IAGXmkB,IACC/qB,EAAAA,GAAAC,cAAC6kB,EAAAA,EAAe,CACdhf,OAAQwkB,GACRvkB,QAASykB,GACTxkB,oBAAqBilB,GACrBrkB,OAAQA,IAGH,I,sLC/Yf,MAuJA,GAAetI,EAAAA,EAAAA,KAvJiBovB,EAC9B5c,QACA8X,SACAtkB,OACA6kB,WACAvB,UACA+F,8BACAM,iBACAL,cACArpB,gBACAwpB,aACA3I,iBAEA,MAAM,mBAAE8I,IAAuB3nB,EAAAA,EAAAA,MAEzB4nB,GAAUvqB,EAAAA,EAAAA,MAEV,oBACJwqB,EAAsB,EAAC,qBAAEC,EAAuB,GAC7C/pB,EAAKsK,QAAiB,CAAC,EAARtK,EAEdgqB,GAAmBnF,GAAYrY,IAAUmd,EACzCrf,EAAUtK,EAAKsK,UAAYkC,EAC3Byd,GAAmBhvB,EAAAA,EAAAA,KAAQ,IAC/BqP,GAAWga,EAASvW,OAAOmc,OAAO5F,GAAQnR,QAAO,EAAGgX,iBAAkBA,SAAepvB,GACpF,CAACupB,EAAQha,IAEN6f,GAAclvB,EAAAA,EAAAA,KAAQ,IAC1BqP,EAEMgZ,GAAW2G,GAAkB9W,QAAQiX,IAAwB,IAAhBA,EAAI9G,UAAmBloB,QACnE6uB,GAAkB7uB,QACpBoR,GAASxM,GAAMmqB,aACnB,CAACnqB,EAAMwM,EAAOyd,EAAkB3f,EAASgZ,IAEtC+G,GAAgBpvB,EAAAA,EAAAA,KAAQ,KAC5B,MAAMqvB,EAAyBhG,GAC1BvW,OAAOmc,OAAO5F,GAAQiG,MAAMH,IAASA,EAAI9G,SAAW8G,EAAID,cAE7D,OAAO7G,GAAYgB,IAAWgG,CAAuB,GACpD,CAAChG,EAAQhB,IAENkH,GAAgBhe,GAAgBxM,EAAKwqB,cAMrCC,IAJsBC,EAAAA,EAAAA,IAC1B,KAAOC,EAAAA,EAAAA,IAASrB,GAAeA,IAAgBA,GAC/C,CAACA,KAEqC3rB,QACtCwsB,GAAeL,GAAuBU,GAAiB3F,GAAYkF,GAChEC,GAAmBP,GAGlBmB,EAAWjtB,SAASwsB,GAAeK,KAAmBvqB,GACtD9F,GAAY+B,EAAAA,EAAAA,GAChB,YACAmuB,GAAiB,SAChBO,GAAY/F,GAAY,SACzB+F,GAAY,UAGRC,GAAgBvsB,EAAAA,EAAAA,IAAiBsG,IACrCA,EAAEkmB,kBAEF,MAAM7c,GAAQ8c,EAAAA,EAAAA,KACdnB,EAAmB,CACjBoB,MAAOhrB,EAAKI,GACZ0I,OAAQ9I,EAAKI,GACb6N,QACAgd,sBAAsB,GACtB,IA0EJ,OACEvvB,EAAAA,GAAAC,cAACuvB,EAAAA,EAAc,CAACnO,UAAQ,EAAC5iB,UAAU,uBAAuBqH,OAAQipB,GAxEpE,WACE,MAAMU,EAAyBpB,GAC7BruB,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe,qBAAsBmuB,GAAiB,UACpE3uB,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,WAITslB,EAAwBtB,GAC5BpuB,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,qBACbuB,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,aAITulB,EAAuBrB,GAC3BtuB,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe,qBAAsBmuB,GAAiB,WAGlEiB,EAAsBd,GAAiBL,EAC3CzuB,EAAAA,GAAAC,cAAA,OAAKxB,UAAWA,IACZqwB,GAAiB9uB,EAAAA,GAAAC,cAAC1B,EAAAA,EAAe,CAACC,MAAMqxB,EAAAA,EAAAA,IAAqBpB,WAE/DpvB,EAEEywB,EAAgB3G,GACpBnpB,EAAAA,GAAAC,cAAA,OAAKxB,UAAWA,GACduB,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,iBAIT2lB,EAAgBhC,GACpB/tB,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CACLC,MAAO4d,EAAa,YAAc,UAClC3mB,UAAU,oBACVuxB,MAAI,EACJjtB,KAAK,OACL2E,QAASynB,GAERhB,EAAQ,YAIP8B,GAAwBL,IAAuBF,IAA0BD,GAC1EK,EAECtwB,EAAW,CACfmwB,EAAsBF,EAAwBC,EAAuBE,EAAoBK,GACzFxY,OAAOxV,SAET,OAAIsC,EAAsBurB,EAGtB/B,IAAmC,IAApBvuB,EAASE,QAAgBuwB,GAA8BF,EAElD,IAApBvwB,EAASE,OAEW,IAApBF,EAASE,OAAqBF,EAAS,GAEvCmuB,EACgC,CAChC+B,EAAuBE,EAAoBH,EAAwBK,GACnErY,OAAOxV,SACwB,GAIjCjC,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,qBACZe,QAbL,CAgBF,CAIK0wB,GACc,G,sRC5HrB,MAGaC,EAAyC,CACpD,KAAM,eACN,IAAK,cACL,KAAM,cACN,KAAM,eACN,IAAK,cACL,KAAM,iBACN,KAAM,aACN,KAAM,kBA6TR,GAAe7xB,EAAAA,EAAAA,KAAK8F,EAAAA,EAAAA,KACjBC,IACC,MACEikB,aACE8H,KAAMC,EACN9H,WAAY+H,EACZC,QAASC,GAEXC,OACEC,SAAS,SACPC,IAGJC,SACEC,gBACEF,SAAUG,IAGdC,gBACEC,OAAQC,GACT,cACDrrB,EAAa,gBACbsrB,GACE7sB,GACE,4BAAE8sB,EAA2B,iBAAEC,IAAqB1Q,EAAAA,EAAAA,KAAerc,IACjEgtB,aAAeC,cAAeC,KAAyB7Q,EAAAA,EAAAA,KAAerc,GAE9E,MAAO,CACLgsB,kBACAG,oBACAF,mBACAc,mBACAxrB,gBACAurB,8BACAK,iBAAkBvvB,QAAQ0uB,GAAUjxB,QACpC+xB,mBAAoBxvB,QAAQ6uB,GAAiBpxB,QAC7CgyB,YAAYC,EAAAA,EAAAA,GAAmBttB,EAAQ,iBACvCutB,kBAAkBD,EAAAA,EAAAA,GAAmBttB,EAAQ,mBAC7CwtB,cAAcF,EAAAA,EAAAA,GAAmBttB,EAAQ,kBACzC6sB,kBACAK,qBACAN,WACD,GA1Ce7sB,EA1T2B0tB,EAC7CC,kBACAC,yBACAC,4BACA5B,kBACAC,mBACAc,mBACAxrB,gBACAsiB,mBACAiJ,8BACAO,aACAG,eACAK,uBACA1B,oBACAoB,mBACAJ,mBACAC,qBACAP,kBACAK,qBACAN,eAEA,MAAM,gBACJkB,EAAe,oBACfC,EAAmB,SACnB9I,EAAQ,yBACR+I,EAAwB,0BACxBC,EAAyB,mBACzBC,EAAkB,sBAClBC,IACEjsB,EAAAA,EAAAA,MAGEksB,GAAgB9pB,EAAAA,EAAAA,IAAuB,MAEvChF,GAAO9E,EAAAA,EAAAA,MAEbsB,EAAAA,EAAAA,KAAU,KACRgyB,GAAiB,GAChB,IAEH,MAAM,IACJxzB,EACAiK,aAAc8pB,EACdC,aAAcC,IACZC,EAAAA,EAAAA,GAAkB,CACpB/sB,OAAQyrB,EACR9yB,WAAW,EACXq0B,kBAAkB,IAIdC,IAFuB/D,EAAAA,EAAAA,GAAgB4D,IAEPrzB,EAAAA,EAAAA,KAAQ,KACrC,CACLmF,GAAIsuB,EAAAA,IACJ/lB,MAAO,CAAEzO,KAAM8xB,IAAmB,KAAO0C,EAAAA,IAAgBrvB,EAAK,uBAAyBA,EAAK,mBAC5FsvB,gBAAiBhc,EAAAA,EACjBic,gBAAiBjc,EAAAA,KAElB,CAACqZ,EAAkB3sB,KAEhBwvB,GAAmB5zB,EAAAA,EAAAA,KAAQ,IACxB+wB,EACHA,EAAiBrsB,KAAKS,GAClBA,IAAOsuB,EAAAA,IACFD,EAGF1C,EAAgB3rB,IAAO,CAAC,IAC9B+S,OAAOxV,cACR5C,GACH,CAACgxB,EAAiB0C,EAAgBzC,IAE/B8C,GAAsBD,GAAkBE,WAAWC,GAAWA,EAAO5uB,KAAOsuB,EAAAA,MAC5EO,GAAqBH,KAAwBhC,EAC7CoC,GAvFmB,IAuFsBpC,EAEzCqC,IAAqBC,EAAAA,EAAAA,MACrBC,IAAap0B,EAAAA,EAAAA,KAAQ,KACzB,GAAK4zB,GAAqBA,EAAiBzzB,OAI3C,OAAOyzB,EAAiBlvB,KAAI,CAACqvB,EAAQ1zB,KACnC,MAAM,GAAE8E,EAAE,MAAEuI,GAAUqmB,EAChBM,EAAYlvB,IAAOsuB,EAAAA,KAAiBpzB,EAAI8xB,EAAa,EAErDnF,EAA0C,GAiDhD,IAAI5K,GAlDmBkS,EAAAA,EAAAA,MAAqBz0B,EAAAA,EAAAA,MAAasF,IAIvD6nB,EAAetU,KAAK,CAClBhL,MAAOtJ,EAAK,eACZ8J,KAAM,OACNqmB,QAASA,KACezhB,OAAOmc,OAAO6B,GAAiB0D,QAAO,CAACrF,EAAKtlB,IAAOslB,GAAOtlB,EAAG4qB,WAAa,EAAI,IAAI,IACnFnC,IAAiByB,EAAOU,WAC3CxB,EAAsB,CACpB/uB,MAAO,mBAMP+sB,EAAkB9rB,IAAKhF,QAAUkyB,EACnCY,EAAsB,CACpB/uB,MAAO,oBAKX4uB,EAAyB,CACvBrJ,SAAUtkB,GACV,IAKJA,IAAOsuB,EAAAA,MACTzG,EAAetU,KAAK,CAClBhL,MAAOtJ,EAAK,cACZ8J,KAAM,OACNqmB,QAASA,KACPvB,EAAmB,CAAEvJ,SAAUtkB,GAAK,IAIxC6nB,EAAetU,KAAK,CAClBhL,MAAOtJ,EAAK,gBACZ8J,KAAM,SACNwmB,aAAa,EACbH,QAASA,KACPxB,EAA0B,CAAEtJ,SAAUtkB,GAAK,KAMjD,IAEIqN,EAFAvT,EAAOyO,EAAMzO,KACb01B,EAAWjnB,EAAMinB,SAWrB,OATIA,GAAUx0B,QAA+B,6BAArBw0B,EAAS,GAAGznB,MAA8D,IAAvBynB,EAAS,GAAG3gB,QACrFoO,EAAcuS,EAAS,GAAG9iB,WAC1B5S,EAAOA,EAAKwF,MAAMkwB,EAAS,GAAGx0B,OAAS,GACvCw0B,EAAWA,EAASlwB,MAAM,KAE1B+N,GAAQoiB,EAAAA,EAAAA,IAAe31B,EAAM01B,GAAY,IAAIliB,OAC7CxT,GAAO41B,EAAAA,EAAAA,IAAkB51B,EAAM01B,GAAY,KAGtC,CACLxvB,KACAuI,OAAOonB,EAAAA,EAAAA,GAAuB,CAC5B71B,OACA01B,WACAI,sBAAuBhB,EAAOiB,oBAEhC9mB,KAAM0iB,EAAamD,EAAOrR,YAAelQ,EAAQ,KAAO,kBACxDA,MAAOuhB,EAAOrR,UAAYqR,EAAOrR,YAAYkO,EAAemD,EAAOrR,SAAWlQ,EAC9E4P,cACA2S,sBAAuBhB,EAAOiB,kBAC9BC,WAAYf,GAAmB/uB,IAAK+vB,WACpCC,cAAezyB,QAAQwxB,GAAmB/uB,IAAKiwB,oBAC/Cf,YACArH,eAAgBA,GAAgB7sB,OAAS6sB,OAAiBltB,EAC3D,GACD,GACD,CACD8zB,EAAkBzB,EAAY+B,GAAoB9vB,EAAM0sB,EAAiBwB,EAAcrB,EACvFoB,IAGIgD,IAAkBhyB,EAAAA,EAAAA,IAAiBiyB,IACvCzC,EAAoB,CAAEhB,iBAAkByD,GAAS,CAAE/I,uBAAuB,GAAO,KAInF3rB,EAAAA,EAAAA,KAAU,KACHwzB,IAAYj0B,QAIb0xB,GAAoBuC,GAAWj0B,QACjC0yB,EAAoB,CAAEhB,iBAlMD,GAmMvB,GACC,CAACA,EAAkBuC,GAAYvB,KAElCjyB,EAAAA,EAAAA,KAAU,KACR,GAAK8L,EAAAA,IAAiB0nB,IAAYj0B,SAAUwoB,EAI5C,OAAO4M,EAAAA,EAAAA,IAAcrC,EAActpB,QAAU,CAC3C4rB,wBAAyB,aACzBC,QAAUA,CAAC9rB,EAAG+rB,IACRA,IAAcC,EAAAA,GAAeC,MAC/B/C,EACE,CAAEhB,iBAAkBjhB,KAAKE,IAAI+gB,EAAmB,EAAGuC,GAAWj0B,OAAS,IACvE,CAAEosB,uBAAuB,KAEpB,GACEmJ,IAAcC,EAAAA,GAAeE,QACtChD,EAAoB,CAAEhB,iBAAkBjhB,KAAKC,IAAI,EAAGghB,EAAmB,IAAM,CAAEtF,uBAAuB,KAC/F,IAKX,GACD,CAACsF,EAAkBuC,GAAYzL,EAAkBkK,IAEpD,MAAMiD,IAAwB1sB,EAAAA,EAAAA,MAC9B0sB,GAAsBlsB,SAAWqqB,IACjCrzB,EAAAA,EAAAA,KAAU,IAAOk1B,GAAsBlsB,SAAUmsB,EAAAA,EAAAA,IAAsB,KACjED,GAAsBlsB,SACxBipB,EAAoB,CAAEhB,iBAlOD,GAmOvB,SACG/xB,GAAY,CAAC+xB,EAAkBgB,KAEpCmD,EAAAA,EAAAA,GAAe,CACblQ,UAAWmO,GACXgC,OAAQA,IAAMpD,EAAoB,CAAEhB,iBAxOb,GAwOqD,CAAEtF,uBAAuB,OAGvG3rB,EAAAA,EAAAA,KAAU,KACR,MAAMs1B,EAAiBvsB,IACrB,GAAIA,EAAEwsB,SAAWxsB,EAAEysB,UAAYzsB,EAAE0sB,KAAKC,WAAW,UAAYlC,GAAY,CACvE,MAAO,CAAEmC,GAAS5sB,EAAE0sB,KAAKG,MAAM,cAAgB,GAC/C,IAAKD,EAAO,OAEZ,GAlPsB,MAkPlBA,EAEF,YADAxM,EAAS,CAAE5kB,GAAIkB,EAAeomB,sBAAsB,IAItD,MAAMsH,EAAS0C,OAAOF,GAAS,EAC/B,GAAIxC,EAASK,GAAWj0B,OAAS,EAAG,OAEpC0yB,EAAoB,CAAEhB,iBAAkBkC,GAAU,CAAExH,uBAAuB,IAC3E5iB,EAAEoD,gBACJ,GAKF,OAFA2pB,SAASC,iBAAiB,UAAWT,GAAe,GAE7C,KACLQ,SAASE,oBAAoB,UAAWV,GAAe,EAAK,CAC7D,GACA,CAAC7vB,EAAe+tB,GAAYrK,EAAU8I,IAEzC,MACEzzB,IAAKy3B,GACLxtB,aAAcytB,KACZxD,EAAAA,EAAAA,GAAkB,CACpB/sB,QAASwqB,EACTgG,mBAAmB,EACnBxD,kBAAkB,IAGpB,SAASyD,GAAiBlR,GACxB,MAAMmR,EAAenkB,OAAOmc,OAAO6B,GAChC1c,MAAK,EAAGjP,QAASA,IAAOivB,GAAYvC,GAAkB1sB,KACnD+xB,EAAWD,IAAiBjD,GAElC,OACEvzB,EAAAA,GAAAC,cAACstB,EAAAA,EAAQ,CACPmJ,WAAYD,EAAW,SAAW,MAClCzN,SAAUyN,EAAWD,EAAa9xB,QAAKrF,EACvCgmB,SAAUA,EACV6C,iBAAkBA,EAClB6J,gBAAiBA,EACjBC,uBAAwBA,EACxBC,0BAA2BA,EAC3B0E,mBAAoBnF,GAAoBC,KAAwBP,EAAgB0F,SAChF1F,gBAAiBA,EACjBD,SAAUA,GAGhB,CAEA,MAAM4F,GAAsBlD,IAAcA,GAAWj0B,OAAS,EAK9D,OAJAS,EAAAA,EAAAA,KAAU,KACR81B,SAASa,KAAKC,UAAUC,OAAO,mBAAoBH,KAAwB3E,EAAqB,GAC/F,CAAC2E,GAAqB3E,IAGvBlyB,EAAAA,GAAAC,cAAA,OACEtB,IAAKA,EACLF,WAAW+B,EAAAA,EAAAA,GACT,cACAq2B,IAAuB3E,GAAwB,2BAC/CQ,GAA2B,sBAG5BmE,GACC72B,EAAAA,GAAAC,cAACg3B,EAAAA,EAAO,CACNC,2BAA2B,cAC3BC,KAAMxD,GACNyD,UAAWhG,EACXiG,YAAazC,KAEbyB,GACFr2B,EAAAA,GAAAC,cAAA,OAAKtB,IAAKy3B,GAAgB33B,UAAU,0BAClCY,EACJW,EAAAA,GAAAC,cAACkK,EAAAA,GAAU,CACTxL,IAAK8zB,EACLroB,KAAM,OACNC,UAAW+mB,EACXkG,YAAaT,GAAsBlD,GAAWj0B,YAASL,GAEtDk3B,IAEC,I,iWC/XV,SAAgB,KAAO,WAAW,UAAY,WAAW,OAAS,WAAW,MAAQ,WAAW,eAAe,WAAW,YAAc,WAAW,KAAO,WAAW,KAAO,WAAW,KAAO,WAAW,cAAgB,WAAW,OAAS,WAAW,aAAe,YAAY,OAAS,YC8BtRgB,EAAkC,CACtCC,cAAc,EACdvqB,MAAO,iBACPwqB,WAAY,iBACZC,sBAAuB,WAyIzB,GAAep5B,EAAAA,EAAAA,KAtIeq5B,EAC5BzG,kBACA7H,cACA3hB,cAEA,MAAM,sBAAEkwB,IAA0BrxB,EAAAA,EAAAA,MAC5B5C,GAAOC,EAAAA,EAAAA,KAEPi0B,GAAiBC,EAAAA,EAAAA,IAA8BC,EAAAA,KAC/CC,GAAiBtE,EAAAA,EAAAA,MACjBuE,EAAqBD,EAAeD,EAAAA,MAAqBtD,WAEzDyD,GAAe34B,EAAAA,EAAAA,KAAQ,KAC3B,IAAKs4B,GAAgBn4B,OAAQ,OAAOiE,EAAK,WAEzC,MAAMw0B,GAAY/4B,EAAAA,EAAAA,MAAYqxB,MAAML,KAEpC,OAAOyH,EAAe7zB,MAAM,EAzBV,GAyB4BC,KAAI,CAAC2C,EAAQhH,EAAGw4B,KAC5D,MAAMC,EAASz4B,IAAMw4B,EAAI14B,OAAS,EAC5B4E,EAAO6zB,EAAUvxB,GACvB,IAAKtC,EACH,OAGF,MAAM2I,GAAQxG,EAAAA,EAAAA,KAAa9C,EAAMW,GAEjC,OACEtE,EAAAA,GAAAC,cAAAD,EAAAA,GAAAokB,SAAA,KACEpkB,EAAAA,GAAAC,cAAA,QAAMxB,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAOmB,KAAM2zB,GAAsB3zB,EAAKmqB,aAAetrB,EAAOm1B,UAC3FhxB,EAAAA,EAAAA,GAAW2F,IAEborB,EAAS,GAAK,KACd,GAEL,GACD,CAACR,EAAgBl0B,EAAMs0B,IAEpB1L,GAAiBhtB,EAAAA,EAAAA,KAAQ,KAC7B,MAAMg5B,GAAkBrH,EAAgBxjB,aAAe,CACrDT,MAAOtJ,EAAK,gCACZ8J,KAAM,WACNqmB,QAASA,KACP8D,EAAsB,CAAElqB,aAAa,GAAO,GAI1C8qB,EAAetH,EAAgBxjB,aAAe,CAClDT,MAAOtJ,EAAK,8BACZ8J,KAAM,SACNqmB,QAASA,KACP8D,EAAsB,CAAElqB,aAAa,GAAQ,GAI3C+qB,EAAa,CACjBxrB,MAAOtJ,EAAK,+BACZ8J,KAAM,kBACNqmB,QAASA,KACP8D,EAAsB,CAAEhB,UAAU,GAAO,GAI7C,OAAO8B,EAAAA,EAAAA,IAAQ,CAACH,EAAgBC,EAAcC,GAAY,GACzD,CAACvH,EAAgBxjB,YAAa/J,EAAMi0B,IAEjC3L,GAAkBtlB,EAAAA,EAAAA,KAAauC,IACnCA,EAAEoD,iBACF+c,KAAe,GACd,CAACA,IA+CJ,OACErpB,EAAAA,GAAAC,cAAC+sB,EAAAA,EAAQ,CACPtlB,QAASA,EACT2hB,YAAa4C,EACbxtB,WAAW+B,EAAAA,EAAAA,GACT2C,EAAO6P,KACPke,EAAgBxjB,aAAevK,EAAOw1B,UACtC,sBACA,qBAEFC,gBAAiBz1B,EAAO01B,OACxBtM,eAAgBA,EAChBU,mBAAiB,GAEhBiE,EAAgBxjB,YAzDjB1N,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAO21B,KAAM,SAC1C94B,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,YACbuB,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe,QAAS2C,EAAO8J,QAC7CjN,EAAAA,GAAAC,cAAA,MAAIQ,IAAI,OAAOhC,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAOiH,KAAM,aACpDpK,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,iBAAiB3L,UAAW0E,EAAOsK,OAC7C9J,EAAK,mBAGV3D,EAAAA,GAAAC,cAAC84B,EAAAA,EAAK,CACJt6B,UAAW0E,EAAOsrB,YAClBjwB,KAAMy5B,GAAqBpI,EAAAA,EAAAA,IAAqBoI,QAAsB54B,MAS5EW,EAAAA,GAAAC,cAAAD,EAAAA,GAAAokB,SAAA,KACEpkB,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe,SAAU2C,EAAO61B,gBAC9Ch5B,EAAAA,GAAAC,cAACkE,EAAAA,EAAM,CAACD,KAAMqzB,KAEhBv3B,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAO21B,KAAM,SAC1C94B,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,YACbuB,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe,QAAS2C,EAAO8J,QAC7CjN,EAAAA,GAAAC,cAAA,MAAIQ,IAAI,OAAOhC,WAAW+B,EAAAA,EAAAA,GAAe2C,EAAOiH,KAAM,aAAczG,EAAK,oBAG7E3D,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,YACbuB,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe,SAAU2C,EAAO81B,eAC7Cf,GAEHl4B,EAAAA,GAAAC,cAAC84B,EAAAA,EAAK,CACJt6B,UAAW0E,EAAOsrB,YAClBjwB,KAAMy5B,GAAqBpI,EAAAA,EAAAA,IAAqBoI,QAAsB54B,OAuBrE,I,2DCvKf,MCuEA,GAAef,EAAAA,EAAAA,KAAK8F,EAAAA,EAAAA,KAAqB,CAACC,GAAU2kB,WAAU0N,iBAGrD,CACLwC,WAHiBlQ,GAA2B,WAAf0N,GAA0ByC,EAAAA,EAAAA,KAAiB90B,EAAQ2kB,QAAY3pB,EAI5F+5B,eAAeC,EAAAA,EAAAA,KAAoBh1B,EAAQ,SAL3BD,EAvC2Bk1B,EAC7CJ,aAAYE,gBAAerH,kBAAiBC,6BAE5C,MAAMruB,GAAOC,EAAAA,EAAAA,MACP,SAAE4H,IAAaC,EAAAA,EAAAA,MAEf8tB,GAAmB5yB,EAAAA,EAAAA,KAAY,KACnCorB,EAAgB,CAAEtlB,KAAM,aAAc+sB,QAASN,IAC/ClH,EAAuByH,EAAAA,GAAgBC,8BAA8B,GACpE,CAACR,EAAYnH,EAAiBC,IAEjC,OACEhyB,EAAAA,GAAAC,cAAA,OAAKxB,UD5Cc,YC6CjBuB,EAAAA,GAAAC,cAAA,OAAKxB,UD7CiC,YC8CnC26B,GAAiBp5B,EAAAA,GAAAC,cAAC05B,EAAAA,EAAuB,CAACh5B,QAASy4B,EAAer2B,KAhBzD,MAkBZ/C,EAAAA,GAAAC,cAAA,MAAIxB,UDhDqD,WCgD5BgC,IAAI,QAAQkD,EAAK,2BAC9C3D,EAAAA,GAAAC,cAAA,KAAGxB,UDjD+E,WCiDhDgC,IAAI,QACnCkD,EAAKu1B,EAAa,mCAAqC,mBAEzDA,GACCl5B,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CACL2F,QAAS1B,EACTouB,OAAK,EACL5J,MAAI,EACJtoB,QAAS6xB,EACTx2B,KAAK,UACLnE,MAAO+E,EAAK/E,OAEZoB,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,aACXpK,EAAAA,GAAAC,cAAA,OAAKxB,UD9D4M,YC+D9MkF,EAAK,sCAIR,K,eCnEV,QAA4H,WCsE5H,GAAerF,EAAAA,EAAAA,KArDYu7B,EAAG5I,WAAU6I,qBACtC,MAAM,sBAAEC,EAAqB,uBAAEC,EAAsB,iBAAEC,IAAqB1zB,EAAAA,EAAAA,MAEtE5H,GAAMgK,EAAAA,EAAAA,IAAuB,MAC7BhF,GAAOC,EAAAA,EAAAA,MAEb2M,EAAAA,EAAAA,GAAkB5R,GAAMif,IACtB,MAAMlV,EAASkV,EAAMsc,gBAAgB,IAAIC,WAAavc,EAAMC,YAAYnV,OACxEoxB,EAAepxB,EAAO,IAGxB,MAAM0xB,GAAmB76B,EAAAA,EAAAA,KAAQ,IACxB8S,OAAOmc,OAAOyC,GAAUoJ,MAAK,CAACC,EAAGC,IAAMA,EAAEC,YAAcF,EAAEE,cAC7D7mB,MAAM8mB,GAAYA,EAAQC,iBAC5B,CAACzJ,IAEE0J,GAAiBp7B,EAAAA,EAAAA,KAAQ,IACtB,CAAC66B,EAAiBQ,YAAaR,EAAiBS,OAAQT,EAAiBU,SAASrjB,OAAOxV,SAAS84B,KAAK,OAC7G,CAACX,IAEEY,GAAep4B,EAAAA,EAAAA,IAAgB,KACnCm3B,EAAsB,CACpBkB,KAAMb,EAAiBa,KACvBC,aAAa,GACb,IAGEC,GAAev4B,EAAAA,EAAAA,IAAgB,KACnCo3B,EAAuB,CAAEiB,KAAMb,EAAiBa,OAChDhB,EAAiB,CACfhtB,MAAOtJ,EAAK,6BAA8B,GAC1CmE,QAASnE,EAAK,qCAAsCg3B,IACpD,IAGJ,OACE36B,EAAAA,GAAAC,cAAA,OAAKxB,UDrDqC,WCqDbE,IAAKA,GAChCqB,EAAAA,GAAAC,cAAA,MAAIxB,UDtDuD,YCsD7BkF,EAAK,yBACnC3D,EAAAA,GAAAC,cAAA,KAAGxB,UDvD0E,YCwD1EkF,EAAK,wBAAyBg3B,IAEjC36B,EAAAA,GAAAC,cAAA,OAAKxB,UD1D6F,YC2DhGuB,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CAACqyB,OAAK,EAACnyB,QAAM,EAAC1E,KAAK,UAAUtE,UAAW0E,EAAeuE,QAASszB,GACpEr3B,EAAK,2BAER3D,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CAACqyB,OAAK,EAACnyB,QAAM,EAAC1E,KAAK,UAAUyE,MAAM,SAASE,QAASyzB,EAAc18B,UAAW0E,GAClFQ,EAAK,yBAGN,ICRJy3B,EAAmB,IAAIv5B,IAAI,CAAC,IAAK,MAgOvC,GAAevD,EAAAA,EAAAA,KA9NgBivB,EAC7B9uB,YACAi4B,aACA1N,WACA3D,WACA6C,mBACAyO,oBACAzF,kBACAD,WACAc,kBACAC,yBACAC,gCAEA,MAAM,SACJ3I,EAAQ,aACR+R,EAAY,gBACZxR,EAAe,kBACfyR,IACE/0B,EAAAA,EAAAA,MAEE4V,GAAexT,EAAAA,EAAAA,IAAuB,MACtC4yB,GAAsB5yB,EAAAA,EAAAA,KAAO,IAC5B6yB,EAA0BC,IAA+B7vB,EAAAA,EAAAA,IAAS,GAEnE8vB,EAA4B,aAAfhF,EACbiF,EAA6B,QAAfjF,EACdkF,EAAyB,UAAflF,EACVmF,EACJF,EAAc3I,EAAAA,IAAgB0I,EAAa3D,EAAAA,IAAqB6D,EAAUE,EAAAA,IAAkB9S,EAGxF+S,EAAuBJ,GAAehF,GAAqBzF,EAE3D3I,GAAauP,EAAAA,EAAAA,IAA8B+D,IACjDG,EAAAA,EAAAA,GAAsBzT,GAEtB,MAAM0T,GAAe1T,GAAY7oB,QAAU,GAAKw8B,EAAAA,IAC1CC,EAAgBJ,EAClB7K,GAAiBxjB,YAAc0uB,EAAAA,IAA2BF,EAAAA,IAAiB,GAEzE,cAAEG,EAAa,iBAAEC,IAAqBC,EAAAA,EAAAA,GAAahU,IAElD1P,GAAaC,KAAWC,EAAAA,EAAAA,QAAkB1Z,EAAWkpB,OAAYlpB,EAAWm9B,EAAAA,KAE7EC,IAAgCl9B,EAAAA,EAAAA,KAAQ,KAC5C,MAAMm9B,EAAgBrqB,OAAOmc,OAAOyC,GAAY,CAAC,GAC3C9nB,EAAUuzB,EAAc/oB,MAAM8mB,GAAYA,EAAQkC,YACxD,SAAKxzB,IAAWyzB,EAAAA,EAAAA,MAAkBzzB,EAAQqxB,YAAcqC,EAAAA,MAEjDlB,GAAee,EAAc7N,MAAM4L,GAAYA,EAAQC,eAAc,GAC3E,CAACiB,EAAa1K,KAEjB9wB,EAAAA,EAAAA,KAAU,KACHs8B,IAA+BhB,EAA4B,EAAE,GACjE,CAACgB,MAGJK,EAAAA,EAAAA,IAAWv9B,EAAAA,EAAAA,KAAQ,IAAO8lB,GAAYkD,GAAY7oB,OAAS,CACzD,cAAgBwJ,IACdA,EAAEoD,iBACF+uB,EAAa,CAAE0B,kBAAmB,EAAGxU,cAAa,EAEpD,gBAAkBrf,IAChBA,EAAEoD,iBACF+uB,EAAa,CAAE0B,iBAAkB,EAAGxU,cAAa,QAEjDlpB,GAAY,CAACgmB,EAAUkD,MAG3BpoB,EAAAA,EAAAA,KAAU,KACR,GAAKklB,IAAYuW,GAAYrT,GAAeyU,EAAAA,GA2B5C,OAFA/G,SAASC,iBAAiB,UAAWT,GAE9B,KACLQ,SAASE,oBAAoB,UAAWV,EAAc,EAxBxD,SAASA,EAAcvsB,GACrB,IAAM+zB,EAAAA,IAAa/zB,EAAEg0B,UAAcD,EAAAA,IAAa/zB,EAAEwsB,UAAaxsB,EAAE0sB,KAAKC,WAAW,SAAU,CACzF,MAAO,CAAEC,GAAS5sB,EAAE0sB,KAAKG,MAAM,cAAgB,GAC/C,IAAKD,GAASsF,EAAiB74B,IAAIuzB,GAAQ,OAE3C,MAAMqH,EAAkBpB,GAAwB7K,IAAoBA,EAAgBxjB,YAE9E0vB,EAAQD,GAAmB,EAAI,EAC/BE,EAAWrH,OAAOF,GAASsH,EAAQ,EAEzC,GAAID,IAAiC,IAAdE,EAErB,YADApL,IAA4BqL,EAAAA,GAAkBC,UAIhD,GAAIF,EAAW9U,EAAY7oB,OAAS,EAAG,OAEvC4pB,EAAS,CAAE5kB,GAAI6jB,EAAY8U,GAAWrR,sBAAsB,GAC9D,CACF,CAMC,GACA,CACDkF,EAAiB0K,EAASvW,EAAU4M,EAA2B3I,EAAU+R,EAAc9S,EACvFwT,IAGF,MAAM,QAAEyB,KAAYC,EAAAA,EAAAA,IAAwB,CAC1CC,QAASvhB,EACTwhB,WA/G0B,MAkHtBC,IAAsBh7B,EAAAA,EAAAA,IAAgB,KAC1CqvB,EAA2BqL,EAAAA,GAAkBC,UAC7C1T,GAAiB,IAGbgU,IAA0Bj7B,EAAAA,EAAAA,IAAgB,KAC1C24B,EAAoBpyB,QACtBoyB,EAAoBpyB,SAAU,EAGhCy0B,IAAqB,IAGjB3R,IAAkB6R,EAAAA,EAAAA,IAAsBl3B,IACxC20B,EAAoBpyB,QACtBoyB,EAAoBpyB,SAAU,EAGhCmgB,EAAS,CAAE5kB,GAAIkC,EAAQolB,sBAAsB,GAAO,GACnD,CAAC1C,GApIsB,KAoIU,GAE9ByU,IAAkBn7B,EAAAA,EAAAA,IAAiBsG,IACvC,MAAMG,EAAOH,EAAEI,cAAcC,wBACvBC,EAAIN,EAAEO,QAAUJ,EAAKK,KACrBC,EAAIT,EAAEU,QAAUP,EAAKQ,IACvBL,EAAIH,EAAKZ,OAASkB,EAAIN,EAAKM,IAC/B4xB,EAAoBpyB,SAAU,EAAI,IAW9B60B,GCpMO,SACb7hB,EACA8hB,EACAC,EACAx/B,GAGA,MAAMy/B,GAAuBx1B,EAAAA,EAAAA,IAAuB,MAE9Cy1B,GAAuBz1B,EAAAA,EAAAA,KAAO,GAC9B01B,GAAmB11B,EAAAA,EAAAA,IAAO,GAC1B21B,GAAsB31B,EAAAA,EAAAA,KAAO,GAC7B41B,GAAiB51B,EAAAA,EAAAA,KAAO,GACxB61B,GAAkB71B,EAAAA,EAAAA,IAAO,GACzB81B,GAA2B91B,EAAAA,EAAAA,KAAO,GAElC+1B,GAA0B97B,EAAAA,EAAAA,IAAgB,CAAC+7B,GAAsB,KACjEL,EAAoBn1B,SACnBg1B,EAAqBh1B,SAAYgT,EAAahT,UAEnDg1B,EAAqBh1B,QAAQnG,MAAM47B,QAAU,QAC7CziB,EAAahT,QAAQ01B,UAxBF,EA0BdC,EAAAA,IAAcH,IACjBI,EAAAA,EAAAA,GAAkB5iB,EAAahT,SAGjCi1B,EAAqBj1B,SAAU,EAC/Bk1B,EAAiBl1B,QA/BE,EAgCnBm1B,EAAoBn1B,SAAU,EAC9Bo1B,EAAep1B,SAAU,EAAI,IAGzB61B,GAA2Bp8B,EAAAA,EAAAA,IAAgB,KAC1C07B,EAAoBn1B,SACpBg1B,EAAqBh1B,UAE1Bg1B,EAAqBh1B,QAAQnG,MAAM47B,QAAU,OAE7CN,EAAoBn1B,SAAU,EAAK,IAG/B81B,GAAer8B,EAAAA,EAAAA,IAAgB,KACnC,IAAKuZ,EAAahT,QAAS,OAE3B,GAAIi1B,EAAqBj1B,QAGvB,YAFAi1B,EAAqBj1B,SAAU,GAKjC,MAAM+1B,EAAe/iB,EAAahT,QAAQ01B,UACpCM,EAAeD,EAAeb,EAAiBl1B,QAC/Ci2B,EAAaF,EAAeb,EAAiBl1B,QAC7Ck2B,EAA2B,IAAjBH,EACVI,EAAiBlqB,KAAKC,MAAQmpB,EAAgBr1B,QAEpD,GAAIg1B,EAAqBh1B,QAAS,CAChC,GAAIk2B,IAAYf,EAAoBn1B,QAElC,YADAo2B,EAAAA,EAAAA,IAAcb,EAAyB,CAACviB,EAAahT,QAASg1B,EAAqBh1B,WAIrFo2B,EAAAA,EAAAA,IAAcP,EAA0Bb,EAAqBh1B,QAC/D,CAGEi2B,IACGb,EAAep1B,SAAWm2B,EAtET,KAuEdJ,EAAe,GAAKT,EAAyBt1B,SAEnD80B,MACSkB,GAAgBD,EAAe,GACxChB,MAGFG,EAAiBl1B,QAAU+1B,EAC3BX,EAAep1B,QAAUk2B,EACzBb,EAAgBr1B,QAAUiM,KAAKC,MAC/BopB,EAAyBt1B,QAAUg2B,GAAgBD,EAAe,CAAC,IAI/DM,GAAc1B,EAAAA,EAAAA,IAAsBzxB,IACxC,IAAK8P,EAAahT,QAAS,OAC3B,MAAM6R,EAAYmB,EAAahT,QAEV6R,EAAUykB,aAAezkB,EAAU0kB,cACnB,IAAjBrzB,EAAMszB,SAEtBtzB,EAAMszB,OAAS,EACjB1B,MAEAC,MACF,GACC,CAAC/hB,EAAc8hB,EAAcC,GAnGL,KAwH3B,OAnBA/9B,EAAAA,EAAAA,KAAU,KACR,MAAM6a,EAAYmB,EAAahT,QAC/B,GAAK6R,EAWL,OAT4B,IAAxBA,EAAU6jB,YACZ70B,EAAAA,EAAAA,KAAgB,KACd00B,GAAwB,EAAK,IAIjC1jB,EAAUkb,iBAAiB,SAAU+I,EAAc,CAAEW,SAAS,IAC9D5kB,EAAUkb,iBAAiB,QAASsJ,EAAa,CAAEI,SAAS,IAErD,KACL5kB,EAAUmb,oBAAoB,SAAU8I,GACxCjkB,EAAUmb,oBAAoB,QAASqJ,EAAY,CACpD,GACA,CAACrjB,EAAcqjB,IAEV3jB,EAAAA,IAAWnd,OAEfW,EADFW,EAAAA,GAAAC,cAAA,OAAKtB,IAAKw/B,EAAsB1/B,UAAU,qBAAqB4a,IAAI,sBAEvE,CD6EkCwmB,CAAiB1jB,GARnBvZ,EAAAA,EAAAA,IAAgB,KAC5C04B,EAAkB,CAAEvM,SAAS,EAAM2M,cAAa,KAGpB94B,EAAAA,EAAAA,IAAgB,KAC5C04B,EAAkB,CAAEvM,SAAS,EAAO2M,cAAa,IAG0DE,GA6B7G,OACE57B,EAAAA,GAAAC,cAACkb,EAAAA,EAAc,CACb1c,WAAW+B,EAAAA,EAAAA,GAAe,0BAA2B0nB,GAAoB,mBAAoBzpB,GAC7FE,IAAKwd,EACLb,MAAOzC,GACP0C,aAAa,oCACbukB,iBAAkBtD,EAAAA,IAClBuD,yBAAuB,EACvBjlB,eAAgBkjB,GAChBgC,UAAW/D,EAAcE,EAAgBX,EACzC9kB,WAAYoC,GACZmnB,YAAalC,IAEZtB,IACCz8B,EAAAA,GAAAC,cAAC45B,EAAkB,CACjBxgB,IAAI,cACJ4X,SAAUA,EACV6I,eAAgB2B,IAGnBM,GACC/7B,EAAAA,GAAAC,cAAC03B,EAAO,CACNte,IAAI,UACJ6X,gBAAiBA,EACjBxpB,QAASk2B,GACTvU,YAAawU,KAGhBhlB,IAAanZ,OAvDlB,WACE,MAAMwgC,EAAiB3X,EAAYjT,QAAQuD,GAAa,IAElDsnB,GAAcC,EAAAA,EAAAA,IAAoBvE,IAAqB,EAE7D,OAAOhjB,GAAa5U,KAAI,CAACS,EAAI9E,KAC3B,MAAMupB,EAAW+W,EAAiBtgC,EAAIugC,EAChC/W,EAAYoS,EAA2BW,GAAiB+D,EAAiBtgC,GAAKs8B,EAAAA,IAEpF,OACEl8B,EAAAA,GAAAC,cAAC8oB,EAAAA,EAAI,CACH1P,IAAK3U,EACL27B,cAAelX,EAAWvpB,GAAI0gC,EAAAA,EAAAA,IAAY57B,EAAIk3B,GAC9Ch1B,OAAQlC,EACRykB,SAAUA,EACVH,SAAUA,EACVzkB,cAAeq3B,EACf1S,cAAeoT,EAAiB53B,GAChCukB,UAAWoT,EAAc33B,GACzB0kB,UAAWA,EACXnY,oBAAqBusB,GACrBnU,YAAa4C,IACb,GAGR,CA+BMsU,IACE1nB,IAAgBA,GAAYnZ,QAAWk8B,EAUzC57B,EAAAA,GAAAC,cAACub,EAAAA,EAAO,CAACnC,IAAI,YARXrZ,EAAAA,GAAAC,cAACq5B,EAAW,CACVtQ,SAAUA,EACV0N,WAAYA,EACZ3E,gBAAiBA,EACjBC,uBAAwBA,IAMf,G,0DErRd,IAAKwO,EAAkB,SAAlBA,GAAkB,OAAlBA,EAAAA,EAAkB,eAAlBA,EAAAA,EAAkB,qBAAlBA,EAAAA,EAAkB,eAAlBA,CAAkB,MAMvB,SAASC,EAAgDpE,GAC9D,OAAO98B,EAAAA,EAAAA,KAAQ,KACb,MAAMmhC,EAAaruB,OAAOmc,OAAO6N,GAC3BsE,EAAaD,EAAWjpB,QAAQmpB,GAASA,EAAO,IAAGlhC,OACnDmhC,EAAeH,EAAWjpB,QAAQmpB,GAASA,EAAO,IAAGlhC,OAE3D,OAAQkH,IACN,MAAMqiB,EAAYoT,EAAcz1B,GAChC,OAAkB,IAAdqiB,EACKuX,EAAmBM,KAI1B7X,IAAcpU,KACXoU,KAAc,KACb0X,GAAcE,GAAgB5X,EAAY,GAC1C4X,EAAeF,GAAc1X,EAAY,EAEtCuX,EAAmBO,QAGrBP,EAAmBQ,IAAI,CAC/B,GACA,CAAC3E,GACN,C,kQC/BA,QAAoE,WAApE,EAAiN,WAAjN,EAAyT,WAAzT,EAA4U,WCgCtU4E,EAAsBjL,OAAO7V,EAAAA,GAuInC,GAAe7hB,EAAAA,EAAAA,KApI4B4iC,EACzC58B,OACAskB,SACAuY,oBACAlwB,0BAEA,MAAM,WAAEmwB,IAAe76B,EAAAA,EAAAA,MAGjB86B,GAAiB14B,EAAAA,EAAAA,IAAuB,MAExC24B,GAAgB34B,EAAAA,EAAAA,IAAuB,MAEvChF,GAAOC,EAAAA,EAAAA,MAEN29B,KAAoBC,IAAejiC,EAAAA,EAAAA,KAAQ,IAC3CqpB,GAIE6Y,EAAAA,EAAAA,KAAiBpvB,OAAOmc,OAAO5F,QAASvpB,GAAW,GAAM2E,MAAM,EAtBvD,GAmBN,IAIR,CAAC4kB,KAEG8Y,EAAkBC,IAAuB/1B,EAAAA,EAAAA,KAAS,IAClDg2B,EAAkBC,IAAuBj2B,EAAAA,EAAAA,SAA6BvM,IAG3E4J,YAAa64B,EACbC,gBAAiBC,IACfC,EAAAA,EAAAA,IAAc/4B,IACoB,IAAhCq4B,EAAgB9S,aAAqBnqB,EAAK4mB,oBAE9ChiB,EAAEkmB,kBACFlmB,EAAEoD,iBAEF80B,EAAW,CACTx6B,OAAQtC,EAAKI,GACbmiB,SAAU0a,EAAgB78B,GAC1BsnB,sBAAsB,EACtBJ,mBAAmBsW,EAAAA,EAAAA,QACnB,IAmBJ,OAhBA/hC,EAAAA,EAAAA,KAAU,KACR,MAAMgiC,EAAqBd,EAAel4B,QACpCi5B,EAAoBd,EAAcn4B,QACxC,IAAKg5B,IAAuBC,EAAmB,OAE/C,MAAMC,EAAmBF,EAAmBtyB,YACtCyyB,EAAkBF,EAAkBvyB,YAEtCM,KAAKoyB,IAAIF,EAAmBC,GAAmBrB,EACjDY,EAAoB1xB,KAAKC,IAAIiyB,EAAkBC,IAE/CT,OAAoBxiC,GAEtBsiC,EAAoBU,EAAmBC,EAAgB,GACtD,CAACf,EAAiBJ,IAGnBnhC,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GDhGM,WCkGfkhC,GDlGojB,WCmGpjBE,GDnGinB,YCqGnnBnhC,IAAKkD,EAAK/E,MAAQ,WAAQS,EAC1B2D,MAAO4+B,EAAoB,wBAAuBA,WAAuBviC,GAExEkiC,GACCvhC,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,GACdnD,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GD3GsK,WC6G/K+gC,EAAgB9S,aAAetrB,GAEjCxE,IAAK2iC,EACL55B,QAASo6B,EACTU,YAAaR,GAEbhiC,EAAAA,GAAAC,cAAC4Q,EAAAA,EAAS,CACRC,MAAOywB,EACPtwB,oBAAqBA,IAEvBjR,EAAAA,GAAAC,cAAA,OAAKxB,UDvH8U,aCuHpT6I,EAAAA,EAAAA,GAAWi6B,EAAgBt0B,SACxD20B,GAAoBF,GACpB1hC,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,GACdnD,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,MAKtBnD,EAAAA,GAAAC,cAAA,OAAKxB,UD/Hge,YCgIle+iC,EAAYv9B,KAAK6M,GAChB9Q,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GDlIiH,WCmItGsQ,EAAM2d,aAAetrB,GAE3CkW,IAAKvI,EAAMpM,IAEX1E,EAAAA,GAAAC,cAAC4Q,EAAAA,EAAS,CACRC,MAAOA,EACPrS,UDzI0W,WC0I1WwS,oBAAqBA,IAEvBjR,EAAAA,GAAAC,cAAA,QAAMxB,UD5Ioa,aC4I/X6I,EAAAA,EAAAA,GAAWwJ,EAAM7D,YAKlEjN,EAAAA,GAAAC,cAAA,OAAKxB,UDjJsf,eCoJ7f8iC,GAAmBvhC,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe2C,EDpJ+B,aCoJIQ,EAAK,YAC5F3D,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GDtJiP,WCsJ9M+gC,GAAiB9S,aAAetrB,GAC9ExE,IAAK0iC,EACL35B,QAASo6B,EACTU,YAAaR,GAEZb,KACCS,IAAqBF,GACrB1hC,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,GACdnD,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,MAKlB,I,qCCzHV,MAAMs/B,EAAqB,IAEZ,SAASpX,GAAiB,KACvC/mB,EAAI,OACJskB,EAAM,YACN5T,EAAW,qBACXsW,EAAoB,OACpB1kB,EAAM,aACN8K,EAAY,MACZsW,EAAK,oBACLzB,EAAmB,oBACnBE,EAAmB,iBACnBW,EAAgB,kBAChBnB,EAAiB,mBACjBU,EAAkB,oBAClB1V,EAAmB,cACnBiY,EAAa,UACbD,EAAS,wBACTP,EAAuB,QACvBga,EAAO,cACPn+B,EAAa,UACb+gB,IAuBA,MAAM6I,GAAUvqB,EAAAA,EAAAA,KAEVjF,GAAMgK,EAAAA,EAAAA,IAAuB,MAE7Bg6B,EAAW3tB,IAAe4tB,EAAAA,EAAAA,KAAgB5tB,GAE1CkR,EAAmBlR,IAAemR,EAAAA,EAAAA,GAAoBnR,IAAcoR,cAC1E+E,EAAAA,EAAAA,GAAiBvkB,EAAQ+7B,EAAWzc,OAAmB7mB,EAAWknB,GAElE,MAAMkB,EAAYzS,GAAapN,QAAQ6f,UACjCob,EAAwBvX,IAAyBA,EAAqBE,OAE5EsX,EAAAA,EAAAA,GAAeD,EAAwBpb,GAAWra,YAAS/N,EAAWooB,GAAW/iB,GAAI4mB,GAAsBE,OAE3G,MAAMuX,EAAezX,GAAsBE,OAASxW,EAC9CguB,EAAkBD,KAAiBE,EAAAA,EAAAA,KAAkBF,GAErDG,EAAiBF,GAAkBG,EAAAA,EAAAA,KAA4BJ,QAAgB1jC,EAC/E+jC,GAAe/hC,EAAAA,EAAAA,GAAS2hC,GAAkBK,EAAAA,EAAAA,KAAoBN,EAAc,cAAW1jC,GACvFikC,EAAerhC,QAAQ+S,IAAeuuB,EAAAA,EAAAA,KAAqBvuB,IAE3DwuB,GAAoBjkC,EAAAA,EAAAA,KAAQ,KAChC,IAAKknB,EACH,OAIF,MAAMgd,GAAYrkC,EAAAA,EAAAA,MAAYskC,MAAMtT,KACpC,OAAO3J,EAAoBxiB,KAAK8C,GAAW08B,EAAU18B,KAAS0Q,OAAOxV,QAAQ,GAC5E,CAACwkB,IAEEkd,GAA4Bh9B,EAAAA,EAAAA,KAAY,KAC5C,IAAKpC,IAAkB+gB,GAChB5T,GAAgBsD,GAAetD,EAAakyB,UAA+B,IAAnB5uB,EAAY9M,KACzE,OAAOlI,EAAAA,GAAAC,cAAC2R,EAAAA,EAAY,CAACF,aAAcA,IAGrC,MAAMmyB,EAAsB7b,GAASA,EAAM8b,WAAW1d,eAAiBgB,GAAkB1iB,GACnFq/B,EAAoB/b,GAAO8b,YAAc9b,EAAMxpB,MAAQwpB,EAAMgc,QAKnE,IAHyB1/B,GAAMsK,UAAYrK,IAAkB+gB,GAAa0C,IAAU+b,KAC7ErB,IAAYmB,GAGjB,OACE7jC,EAAAA,GAAAC,cAAA,KAAGxB,UAAU,eAAegC,IAAK0tB,EAAQvvB,MAAQ,OAAS,OACxDoB,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,SAAS0vB,EAAQ,WAChCkG,EAAAA,EAAAA,GAAuB,CACtB71B,KAAMwpB,EAAMxpB,MAAMA,MAAQ,GAC1B01B,SAAUlM,EAAMxpB,MAAM01B,SACtB+P,UAAU,EACVC,uBAAuB,KAM/B,IAAKlvB,EACH,OAGF,IAAImvB,EAAAA,EAAAA,KAAiBnvB,GACnB,OACEhV,EAAAA,GAAAC,cAAA,KAAGxB,UAAU,uCAAuCgC,IAAK0tB,EAAQvvB,MAAQ,OAAS,QAC/EwlC,EAAAA,EAAAA,KAA6BjW,EAASnZ,IAK7C,GAAI2tB,EACF,OACE3iC,EAAAA,GAAAC,cAAA,KAAGxB,UAAU,uCAAuCgC,IAAK0tB,EAAQvvB,MAAQ,OAAS,QAC/EylC,EAAAA,EAAAA,GACClW,EACAnZ,EACAiR,KAAsB5X,EAAAA,EAAAA,IAAc4X,GAAqBA,OAAoB5mB,EAC7E4mB,IAAqB5X,EAAAA,EAAAA,IAAc4X,GAAqBA,EAAoB3hB,EAC5Ek/B,EACAjd,EACAI,EACAS,EACA,CAAEkd,YAAY,QACdjlC,OACAA,IAMR,MAAMklC,GAAaC,EAAAA,EAAAA,KAAqBrW,EAASvnB,EAAQqf,GAEzD,OACEjmB,EAAAA,GAAAC,cAAA,KAAGxB,UAAU,uCAAuCgC,IAAK0tB,EAAQvvB,MAAQ,OAAS,OAC/E2lC,GACCvkC,EAAAA,GAAAC,cAAAD,EAAAA,GAAAokB,SAAA,KACEpkB,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,gBAAe6I,EAAAA,EAAAA,GAAWi9B,IAC1CvkC,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,SAAQ,OAG1B8F,GAAiByQ,EAAY4Q,aAAgB5lB,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,eAAe3L,UAAU,qBAClD,UAAhCuW,EAAY8uB,WAAWr3B,MAAqBzM,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,cAAc3L,UAAU,qBAmExF,SACEqJ,EAAqBmJ,EAAiCwzB,EAAkBnB,GAExE,MAAMoB,EACJ1kC,EAAAA,GAAAC,cAAC0kC,EAAAA,EAAc,CACb78B,QAASA,EACT88B,QAAS3iC,QAAQwiC,GACjBI,8BAA+B5zB,EAC/B6zB,YAAU,IAId,IAAKL,EACH,OAAOC,EAGT,MAAMK,GAAYC,EAAAA,EAAAA,KAAoBl9B,GAEtC,OACE9H,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,iBACduB,EAAAA,GAAAC,cAAA,OACEiD,IAAKuhC,EACLxkB,IAAI,GACJxhB,WACE+B,EAAAA,EAAAA,GAAe,uBAAwB8iC,GAAgB,QAASyB,GAAa,yBAE/E3hC,WAAW,KAEZ6hC,EAAAA,EAAAA,KAAgBn9B,IAAY9H,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,SACvCs6B,EAGP,CAlGSQ,CAAclwB,EAAa/D,EAAqBmyB,GAAgBF,EAAgBI,GAC/E,GAEL,CACD3c,EAAoBJ,EAAqBid,EAAmBl/B,EAAMsC,EAAQohB,EAAO2a,EACjFW,EAAcZ,EAASvU,EAASnZ,EAAaiR,EAAmBmB,EAAkBgc,EAAcF,EAChGjyB,EAAqBS,EAAcnN,EAAe+gB,IAsDpD,OAnCA6f,EAAAA,EAAAA,KAAgB,KACd,MAAMC,EAAUzmC,EAAIwK,QAEpB,GAAKuf,GAA4B0c,EAAjC,CAKA,GAAIlc,IAAkBsX,EAAAA,EAAmBO,QACvCqE,EAAQpiC,MAAMqiC,QAAU,KAExBr7B,EAAAA,EAAAA,KAAgB,KACdo7B,EAAQrO,UAAUl0B,IAAI,mBACtBuiC,EAAQpiC,MAAMqiC,QAAU,GAAG,QAExB,IAAInc,IAAkBsX,EAAAA,EAAmBQ,KAQ9C,OAPAoE,EAAQpiC,MAAMsiC,UAAa,mBAAkBrc,EAAYiT,EAAAA,aAEzDlyB,EAAAA,EAAAA,KAAgB,KACdo7B,EAAQrO,UAAUl0B,IAAI,qBACtBuiC,EAAQpiC,MAAMsiC,UAAY,EAAE,GAIhC,CAEAhlC,YAAW,MACT0J,EAAAA,EAAAA,KAAgB,KACdo7B,EAAQrO,UAAUwO,OAAO,kBAAmB,qBAC5CH,EAAQpiC,MAAMqiC,QAAU,GACxBD,EAAQpiC,MAAMsiC,UAAY,EAAE,GAC5B,GACD7C,EAAqB+C,EAAAA,IA3BxB,CA2B4C,GAC3C,CAAC9c,EAAyBO,EAAWC,IAEjC,CACLkC,eApDF,WACE,OAAI9mB,GAAMsK,UAAY8zB,EAElB1iC,EAAAA,GAAAC,cAACihC,EAAoB,CACnB58B,KAAMA,EACN68B,kBAAmBwC,EACnB1yB,oBAAqBA,EACrB2X,OAAQA,IAKP+a,GACT,EAwCEhlC,MAEJ,C,kFCrPe,SAAS49B,EAAahU,EAA6ClP,GAChF,MAAMosB,GAAYlmC,EAAAA,EAAAA,KAAQ,KACxB,GAAKgpB,EAIL,OAAOA,EAAWwL,QAAO,CAACrF,EAAKhqB,EAAI9E,KACjC8uB,EAAIhqB,GAAM9E,EACH8uB,IACN,CAAC,EAA4B,GAC/B,CAACnG,IAEEmd,GAAgB3mC,EAAAA,EAAAA,GAAsB0mC,GACtCE,GAAa5mC,EAAAA,EAAAA,GAAsBsa,GAEnCgjB,GAAgB98B,EAAAA,EAAAA,KAAQ,IACvBkmC,GAAcC,GAAiBrsB,IAAQssB,GAIrCC,EAAAA,EAAAA,IAAUH,GAAW,CAACI,EAAOnhC,SACLrF,IAAtBqmC,EAAchhC,GAAoBmhC,EAAQH,EAAchhC,IAAM,MAJ9D,CAAC,GAMT,CAAC2U,EAAKosB,EAAWE,EAAYD,IAIhC,MAAO,CACLrJ,gBACAC,kBAJuBmE,EAAAA,EAAAA,GAAqBpE,GAMhD,C,iZCZA,MAqGA,GAAe/9B,EAAAA,EAAAA,KArGoCwnC,EACjDh+B,UACAooB,oBAEA,MAAM,gBACJ6V,EAAe,mBAAEC,EAAkB,iBAAE/L,IACnC1zB,EAAAA,EAAAA,OAEE,WAAEof,GAAe7d,EAEjBnE,GAAOC,EAAAA,EAAAA,MACNqiC,EAAeC,IAAoBt6B,EAAAA,EAAAA,OACnCu6B,EAAkBC,EAAgBC,IAAmBrkC,EAAAA,EAAAA,IAAQ,GAC9DskC,EAAQx+B,EAAQF,QAAQwE,OAAQk6B,MAChCC,GAAoBllC,EAAAA,EAAAA,IAASmlC,EAAAA,EAAAA,KAAkBF,EAAO,SACtDG,GAAoBplC,EAAAA,EAAAA,IAASqlC,EAAAA,EAAAA,KAA8BJ,IAC3DK,EAAU7+B,EAAQF,QAAQwE,OAAQk6B,OAAOK,QAEzCC,GAAyBhkC,EAAAA,EAAAA,IAAgB,KAC7Cq3B,EAAiB,CACfhtB,MAAOtJ,EAAK,wBACZmE,QAASnE,EAAK,mBACdyI,OAAQ,CACNA,OAAQ,4BACRotB,QAAS,CACPqN,OAAQpN,EAAAA,GAAgBqN,OAG5BC,WAAYpjC,EAAK,SACjB,IAGEqjC,GAA2BpkC,EAAAA,EAAAA,IAAiBqkC,IAChDf,OAAiB7mC,GACjB2mC,EAAmB,CAAEiB,SACrBL,GAAwB,IAGpBM,GAAuBtkC,EAAAA,EAAAA,IAAgB,KAC3CsjC,OAAiB7mC,EAAU,IAGvB8nC,GAAiBvkC,EAAAA,EAAAA,IAAgBwkC,UACrC,IAAKX,EAAmB,OAExBJ,IACAO,IAGA,MAAMS,QAAaC,EAAAA,EAAAA,IAAUb,GAC7BT,EAAmB,CACjBiB,KAAM,IAAIM,KAAK,CAACF,GAAO,cACvBV,SAAS,EACTa,QAASlB,EAAMmB,YAAY9zB,MAAM+zB,QAAyBroC,IAAnBqoC,EAAEC,gBAA6BA,cACtE,IAoBJ,OACE3nC,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,kCAAkCiO,SAAU,EAAGM,KAAK,SAAStF,QAlB7C0/B,WAC3BzhB,GAAc4gB,EACbI,EACFP,IAEAF,QAAuBoB,EAAAA,EAAAA,IAAUf,IAGnCR,EAAgB,CACdn/B,OAAQkB,EAAQlB,OAChBilB,UAAW/jB,EAAQpD,GACnBmiB,SAAUI,EAAAA,GACV2gB,OAAQC,EAAAA,GAAkBC,iBAE9B,GAKE9nC,EAAAA,GAAAC,cAACkE,EAAAA,EAAM,CACLmiC,MAAOx+B,EAAQF,QAAQwE,OAAQk6B,MAC/ByB,kBAAgB,EAChBC,UAAWrB,EACX5jC,KAAK,UAEP/C,EAAAA,GAAAC,cAAA,YAAOiwB,KAEPlwB,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,yBAAyBkF,EAAKgjC,EAAU,kBAAoB,oBAC5E3mC,EAAAA,GAAAC,cAACgoC,EAAAA,EAAS,CACRhB,KAAMhB,EACNlgC,QAASmhC,EACTt6B,SAAUo6B,IAEZhnC,EAAAA,GAAAC,cAACioC,EAAAA,EAAa,CACZpiC,OAAQqgC,EACRl5B,MAAOtJ,EAAK,kBACZwkC,eAAgBhB,EAChBphC,QAASsgC,EACT+B,UAAWlY,MAER,ICjEX,GAAe5xB,EAAAA,EAAAA,KAxCkC+pC,EAC/CvgC,UACAooB,oBAEA,MAAM,gBACJ6V,IACEx/B,EAAAA,EAAAA,MAEE5C,GAAOC,EAAAA,EAAAA,KAWb,OACE5D,EAAAA,GAAAC,cAAAD,EAAAA,GAAAokB,SAAA,KACEpkB,EAAAA,GAAAC,cAAA,YAAOiwB,KACPlwB,EAAAA,GAAAC,cAAA,QACExB,UAAU,gCACViO,SAAU,EACVM,KAAK,SACLtF,QAhB0B4gC,KAC9BvC,EAAgB,CACdn/B,OAAQkB,EAAQlB,OAChBilB,UAAW/jB,EAAQpD,GACnBmiB,SAAUI,EAAAA,GACV2gB,OAAQC,EAAAA,GAAkBC,iBAC1B,EAWE,aAAYnkC,EAAK,oBAEjB3D,EAAAA,GAAAC,cAACkE,EAAAA,EAAM,CACLmiC,MAAOx+B,EAAQF,QAAQwE,OAAQk6B,MAC/ByB,kBAAgB,EAChBC,WAAS,EACTjlC,KAAK,WAGR,I,gGCrDP,QAAkN,WAAlN,EAAwhB,WAAxhB,EAAylB,WAAzlB,EAA4mB,WAA5mB,EAAiqB,WAAjqB,EAAstB,WAAttB,EAAuwB,WAAvwB,EAAm0B,WCgLn0B,SAASwlC,IAAe,QAAEC,IACxB,MAAM,SAAElf,IAAa/iB,EAAAA,EAAAA,MACfiB,EC1KR,SAAyBtD,EAAeukC,EAAgB,aACtD,MAAOjhC,EAAOkhC,IAAY98B,EAAAA,EAAAA,IAAS68B,GAC7BE,GAAatnC,EAAAA,EAAAA,IAASunC,EAAAA,EAAAA,KAAkB1kC,IAAO,EAAO5C,EAAAA,GAAeC,SAa3E,OAXApB,EAAAA,EAAAA,KAAU,KACR,WACE,IAAKwoC,EACH,OAGF,MAAME,QAAqBC,EAAAA,EAAAA,IAAgBH,GAC3CD,EAAU,KAAGK,EAAAA,EAAAA,IAAQF,KACtB,EAPD,EAOI,GACH,CAACF,IAEGnhC,CACT,CD0JgBwhC,CAAgBR,EAtJJ,aAwJ1B,OACExoC,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,EAAauE,QAASA,IAAM4hB,EAAS,CAAE5kB,GAAI8jC,EAAQ9jC,MACjE1E,EAAAA,GAAAC,cAACkE,EAAAA,EAAM,CAAC1F,UAAW0E,EAAekW,IAAKmvB,EAAQ9jC,GAAI3B,KAAK,QAAQmB,KAAMskC,IACtExoC,EAAAA,GAAAC,cAAA,OAAK+C,MAAQ,eAAcwE,IAAS/I,UAAW0E,GAC7CnD,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,cAAc3L,UAAW0E,IACpCnD,EAAAA,GAAAC,cAAA,QAAMxB,UAAW0E,IAAsB0sB,EAAAA,EAAAA,IAAqB2Y,GAASS,cAAgB,KAGvFjpC,EAAAA,GAAAC,cAAA,QAAMxB,UAAW0E,GAAsBqlC,EAAQv7B,OAGrD,CAEA,SAASi8B,IAAa,QACpBV,EAAO,OACP5hC,EAAM,cACNuiC,EAAa,qBACbC,IAOA,MAAM,iBAAEC,EAAgB,iBAAEC,IAAqB/iC,EAAAA,EAAAA,MACzC5C,GAAOC,EAAAA,EAAAA,KAYb,OACE5D,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GAAe2C,ED3NqiB,YC4N/jBuE,QAASA,KAZP0hC,EACFE,EAAiB,CACf5kC,GAAIkC,EAAQolB,sBAAsB,EAAMud,WAAY,kBAAmBC,uBAAuB,IAGhGH,GAOiC,GAEjCrpC,EAAAA,GAAAC,cAACkE,EAAAA,EAAM,CAAC1F,UAAW0E,EAAekW,IAAKmvB,EAAQ9jC,GAAI3B,KAAK,QAAQmB,KAAMskC,IACtExoC,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,GACdnD,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,KAElBnD,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GAAe2C,EDlOw1B,aCmOr3BnD,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,KAElBnD,EAAAA,GAAAC,cAAA,OAAKxB,UAAW0E,GACdnD,EAAAA,GAAAC,cAAA,QAAMxB,UAAW0E,GAAuB,IAAGgmC,MACzCC,GAAwBppC,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,aAAa3L,UAAW0E,KAE/DnD,EAAAA,GAAAC,cAAA,QAAMxB,UAAW0E,GAAsBQ,EAAK,gBAGlD,CAEA,UAAerF,EAAAA,EAAAA,KACb8F,EAAAA,EAAAA,KAAqB,CAACC,GAAUuC,aAC9B,MAAM,kBAAE6iC,EAAiB,iBAAEC,EAAgB,MAAEC,IAAUC,EAAAA,EAAAA,KAAwBvlC,EAAQuC,IAAW,CAAC,EAGnG,MAAO,CACL6iC,oBACAC,mBACAC,QACAP,sBAN2BS,EAAAA,EAAAA,KAA2BxlC,GAOvD,GATHD,EAnMsB0lC,EACtBljC,SACA6iC,oBACAC,mBACAC,QACAP,2BAEA,MAAMzlC,GAAOC,EAAAA,EAAAA,MACP,6BAAEmmC,EAA4B,2BAAEC,IAA+BzjC,EAAAA,EAAAA,OAC9D0jC,EAAWC,EAAaC,IAAkBnoC,EAAAA,EAAAA,IAAQ,IAClDooC,EAAUC,EAAYC,IAAiBtoC,EAAAA,EAAAA,IAAQ,GAEhDrD,GAAMgK,EAAAA,EAAAA,IAAuB,MAC7B4hC,GAAkBhrC,EAAAA,EAAAA,KAAQ,KAC9B,IAAKkqC,EACH,OAGF,MAAMplC,GAASjF,EAAAA,EAAAA,MACf,OAAOqqC,EAAkBxlC,KAAKS,IAAOoQ,EAAAA,EAAAA,KAAWzQ,EAAQK,KAAK+S,OAAOxV,QAAQ,GAC3E,CAACwnC,KAEGe,EAAqBC,IAA0B7+B,EAAAA,EAAAA,KAAU69B,GAC1DiB,GAAuBnrC,EAAAA,EAAAA,KAAQ,IAAMgrC,GAAiBvmC,MAAM,EAtCvC,KAsCiE,CAACumC,IACvFI,EAA4B1oC,QAAQyoC,GAAsBhrC,SAEhEkrC,EAAAA,EAAAA,GAAoBjsC,GAAMgsC,IAA8BjB,GAAoBc,GAAqB,GACjG,MACMK,EAAuB5oC,SAC1BuoC,IACKd,GAHYU,GAAYH,IAIzBU,IAGPxqC,EAAAA,EAAAA,KAAU,KACHspC,GACHO,EAA2B,CAAEpjC,UAC/B,GACC,CAACA,EAAQ6iC,KAEZz9B,EAAAA,EAAAA,IAAW,IAAMy+B,GAAuB,IArDf,MAuDzBtqC,EAAAA,EAAAA,KAAU,KACR,GAAIqqC,GAAuBD,GAAmBb,EAAkB,CAC9D,MAAMhlC,EAAKpE,YAAW,KACpBmqC,GAAuB,EAAM,GA3DV,KA8DrB,MAAO,IAAMlqC,aAAamE,EAC5B,CAEgB,GACf,CAAC6lC,EAAiBb,EAAkBc,IAEvC,MAAMM,GAAeloC,EAAAA,EAAAA,IAAgB,KACnCmnC,EAA6B,CAAEnjC,WAC3B8iC,GACFS,IACAE,MAEAH,IACAI,IACF,IAGF,OACEtqC,EAAAA,GAAAC,cAAA,OAAKxB,WAAW+B,EAAAA,EAAAA,GD9GG,aC+GjBR,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,aACbuB,EAAAA,GAAAC,cAAA,QACExB,WAAW+B,EAAAA,EAAAA,GAAemqC,GDjHkG,YCkH5HjjC,QAASijC,EAA4BG,OAAezrC,GAEnDsE,EAAK,mBAGT6mC,GAAuBxqC,EAAAA,GAAAC,cAAC8qC,EAAAA,EAAQ,CAACtsC,UDvHgM,aCwHjOosC,GACC7qC,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GACTypC,GD3HkS,WC4HlSG,GD5HwY,aC+H1YpqC,EAAAA,GAAAC,cAAA,OAAKxB,UD/H2B,YCgI9BuB,EAAAA,GAAAC,cAAA,OACEwI,MAAM,KACNC,OAAO,IACPgI,QAAQ,WACRC,KAAK,OACLq6B,MAAM,8BAENhrC,EAAAA,GAAAC,cAAA,QACExB,UDxIyE,WCyIzE,YAAU,UACV,YAAU,UACVmS,EAAE,uOACFD,KAAK,YAIX3Q,EAAAA,GAAAC,cAAA,OAAKxB,UDhJ4O,YCiJ/OuB,EAAAA,GAAAC,cAAA,OAAKxB,UDjJyI,YCkJ5IuB,EAAAA,GAAAC,cAAA,QAAMxB,UDlJyJ,YCkJ/HkF,EAAK,oBACrC3D,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CACL9I,UDpJgL,WCqJhL+I,MAAM,cACNE,QAASojC,GAET9qC,EAAAA,GAAAC,cAACqK,EAAAA,EAAI,CAACF,KAAK,YAGfpK,EAAAA,GAAAC,cAAA,OAAKtB,IAAKA,EAAKF,WAAW+B,EAAAA,EAAAA,GD3Jge,WC2J7b,iBAC1DkqC,GAAsBzmC,KAAI,CAACukC,EAAS5oC,IACtBqrC,IAANrrC,EACLI,EAAAA,GAAAC,cAACipC,GAAY,CACXV,QAASA,EACT5hC,OAAQA,EACRuiC,cAAeQ,EApIN,GAoIqC,EAC9CP,qBAAsBA,IAGxBppC,EAAAA,GAAAC,cAACsoC,GAAc,CAACC,QAASA,SAOjC,KE8iBV,IAAelqC,EAAAA,EAAAA,KAAK8F,EAAAA,EAAAA,KAClB,CAACC,GAAUyD,UAAS+e,eAClB,MAAM,OACJjgB,EAAM,SAAEskC,EAAQ,QAAEtjC,GAChBE,GAEE,cAAE0e,EAAa,aAAEE,GAAiB9e,EAAQwE,QAAU,CAAC,EACrD++B,GAAkBhlB,EAAAA,EAAAA,GAAoBre,IAAUse,aAChDglB,EAAgBD,GAClBzlB,EAAAA,EAAAA,KAAkBrhB,EAAQuC,EAAQukC,QAClC9rC,EAEEkT,GAAQC,EAAAA,EAAAA,KAAYnO,IACpB,aACJ2X,GACE3X,EAAOgnC,SAASC,OAAO/4B,IAAU,CAAC,EAEhCg5B,IAAY1kB,IAAW2kB,EAAAA,EAAAA,KAAuBnnC,EAAQyD,EAAS+e,IAEnEoO,UAAWwW,EACXC,YAAaC,GACVJ,IAAa7qB,EAAAA,EAAAA,KAAerc,GAAQunC,gBAAmB,CAAC,EAEvDC,GAAa/mC,EAAAA,EAAAA,KAAWT,EAAQ6mC,GAAYtkC,GAC5CklC,GAAah3B,EAAAA,EAAAA,KAAWzQ,EAAQuC,GAEhCmlC,EAAarlB,GAAe5R,EAAAA,EAAAA,KAAWzQ,EAAQqiB,QAAgBrnB,EAE/D2sC,EAAepkC,EAAQwE,QAAQ6/B,OAC/BC,GAAqBC,EAAAA,EAAAA,KAA6B9nC,EAAQ2nC,GAE1DI,EAAYxkC,EAAQwE,QAAQigC,MAKlC,MAAO,CACLR,aACAC,aACAC,aACArlB,eACAF,gBACA4kB,gBACAG,YACAW,qBACAI,kBAbuBC,EAAAA,EAAAA,KAA0BloC,EAAQ+nC,GAczDt7B,OAZYuW,EAAAA,EAAAA,KAAuBhjB,EAAQyD,GAa3CkU,eACAwwB,uBAAuBC,EAAAA,EAAAA,KAA4BpoC,MAC/CknC,GAAa,CACfE,iBACAE,oBAEFvC,sBAAsBS,EAAAA,EAAAA,KAA2BxlC,GACjDuB,cAAevB,EAAOuB,cACvB,GAvDexB,EAznB6BsoC,EAC/C5kC,UACA+e,WACAyd,aACAqI,kBAAkB,EAClBC,cACAC,eACAhB,aACAC,aACAtlB,gBACA4kB,gBACA1kB,eACAqlB,aACAR,YACAE,iBACAE,mBACAO,qBACAI,mBACAQ,gBACAh8B,QACAi8B,uBACAP,wBACAxwB,eACAgxB,gCACAnI,gCACAxzB,gCACA47B,4BACArnC,iBACAwjC,4BAEA,MAAM,iBACJC,GAAgB,gBAChB6D,GAAe,cACfC,GAAa,WACbC,GAAU,6BACVC,GAA4B,sCAC5BC,KACE/mC,EAAAA,EAAAA,MAEE4nB,IAAUvqB,EAAAA,EAAAA,KACVD,IAAO9E,EAAAA,EAAAA,KAGPF,IAAMgK,EAAAA,EAAAA,IAAuB,OAEnC4kC,EAAAA,EAAAA,IAAe5uC,GAAKquC,IACpB7hB,EAAAA,EAAAA,GACErjB,EAAQlB,OACoB,YAA5BkB,EAAQg8B,WAAWr3B,KAAqB3E,EAAQg8B,UAAU1d,kBAAe/mB,EACzE+rC,IAEFoC,EAAAA,EAAAA,GAAgB,CACdC,WAAY9uC,GACZiI,OAAQkB,EAAQlB,OAChB2kC,YACAE,iBACAE,mBACAiB,iBAGFc,EAAAA,EAAAA,KAAkB,KACZ5lC,EAAQqhB,UACV8jB,KAA2B,CAAEU,0BAA2B,CAAC7lC,EAAQpD,KACnE,IAGF,MAAMkpC,GAAwBjB,GAAmB,GAC1C5d,GAAS8e,KAAa7rC,EAAAA,EAAAA,GAAQ4rC,IAC/BE,GAAiD,gBAAjChmC,EAAQF,QAAQwE,QAAQK,KACxCshC,GAA8C,aAAjCjmC,EAAQF,QAAQwE,QAAQK,KACrCuhC,GAAqD,wBAAjClmC,EAAQF,QAAQwE,QAAQK,MAAkC3E,EAAQF,QAAQwE,OAAQk6B,MACtG2H,GAAmD,uBAAjCnmC,EAAQF,QAAQwE,QAAQK,MAAiC3E,EAAQF,QAAQwE,OAAQk6B,MACnG4H,IAAkBC,EAAAA,EAAAA,KAAuBrmC,GACzCsmC,GAA+C,cAAjCtmC,EAAQF,QAAQwE,QAAQK,KACtC4hC,GAA8C,aAAjCvmC,EAAQF,QAAQwE,QAAQK,KACrC6hC,GAAoD,mBAAjCxmC,EAAQF,QAAQwE,QAAQK,KAC3C8hC,GAAgD,eAAjCzmC,EAAQF,QAAQwE,QAAQK,KAEvC+hC,GAAuBvsC,QAAQ6F,EAAQ2mC,sBAAwB3mC,GAAS0Y,YAE9EkuB,EAAAA,EAAAA,GAAyB/vC,GAAKkuC,IAE9B1sC,EAAAA,EAAAA,KAAU,KACJytC,IAIJttC,WAAWutC,GA1FU,GA0FClB,EAAmC,GACxD,CAACA,EAAiBkB,GAAWD,KAEhC,MAAMrlC,IAAY8Z,EAAAA,EAAAA,IAAkB1jB,GAAK0S,GAEnCs9B,IAAwBhmC,EAAAA,EAAAA,IAAO,MACnC,MAAMumB,EAAW6d,GAAsB5jC,SAAWrB,EAAQpD,IAAMqoC,EAAqB5jC,QACrF,OAAO2kC,KAAkBhmC,EAAQ6d,YAAcuJ,CAChD,EAHoC,KAKrC/uB,EAAAA,EAAAA,KAAU,KACJoI,IAAaomC,GAAsBxlC,UACrCwlC,GAAsBxlC,SAAU,EAChC+jC,GAAgB,CAAE0B,WAAW,IAC/B,GACC,CAACrmC,GAAW2kC,KAEf,MAAM,qBAAErkC,KAAyBC,EAAAA,EAAAA,GAA4BimB,QAAS1vB,EAAWuuC,IAAuB,GAGlGnK,IAAYrkC,EAAAA,EAAAA,MAAYskC,MAAMtT,KAC9Bye,IAActvC,EAAAA,EAAAA,KAAQ,IACnBinB,EACHA,EAAcviB,KAAK8C,GAAW08B,KAAY18B,KAAS0Q,OAAOxV,cAC1D5C,GACH,CAACmnB,EAAeid,KAEbvT,IAAgBvpB,EAAAA,EAAAA,KAAY,KACzB09B,EAAAA,EAAAA,GACLlW,GACArmB,EACA+jC,EACAC,EACA+C,GACAzD,EACA1kB,EACA5V,EACA,CAAEwzB,cACFO,EACAxzB,IAED,CACDizB,EAAYx8B,EAAS+8B,EAA+BxzB,EAA+B8c,GACnF2d,EAAYD,EAAYnlB,EAAc0kB,EAAeyD,GAAa/9B,KAG9D,kBACJg+B,GAAiB,kBAAEC,GAAiB,wBACpCC,GAAuB,kBAAEC,GAAiB,uBAC1CC,GAAsB,sBAAEC,KACtBC,EAAAA,EAAAA,GAAuBzwC,IACrB0wC,QAA2ChwC,IAAtB0vC,GAOrBO,GAAsBA,KAC1B,MAAMC,EAAWznC,EAAQF,QAAQwE,QAAQmjC,SACpCA,GAELlC,GAA6B,CAC3BzmC,OAAQkB,EAAQlB,OAChBilB,UAAW/jB,EAAQpD,IACnB,EAGE8qC,GAAyBA,KAC7BnG,GAAiB,CACfoG,QAAQ,EACRC,WAAY7D,GAAYnnC,GACxBirC,SAAUnpB,IAAgB,GAC1BopB,aAAc9nC,EAAQF,QAAQwE,QAAQ6/B,QAAU,GAChD,EAGE4D,GAAwBA,KAC5BvC,GAAsC,CACpC1mC,OAAQkB,EAAQlB,OAChBilB,UAAW/jB,EAAQpD,IACnB,EAGEorC,GAAsBA,KAC1B,MAAMC,EAAOjoC,EAAQF,QAAQwE,QAAQ2jC,KAChCA,GACL5C,GAAc,CAAE4C,OAAMjoC,QAAS,CAAElB,OAAQkB,EAAQlB,OAAQilB,UAAW/jB,EAAQpD,KAAO,EAcrF,GADyBooC,GAAkD,0BAAjChlC,EAAQF,QAAQwE,QAAQ5N,KAEhE,OAAOwB,EAAAA,GAAAC,cAAA,QAAMtB,IAAKA,KAGpB,GAAI2lC,EACF,OAAOtkC,EAAAA,GAAAC,cAAA,QAAMtB,IAAKA,GAAKF,UAAU,2BAA2ByxB,MA0H9D,SAAS8f,KACP,MAAMT,EAAWznC,EAAQF,QAAQwE,QAAQmjC,SACzC,IAAKA,EAAU,OACf,MAAM,OAAEzpB,EAAM,OAAE1Y,GAAWmiC,EAErBU,EAAWnqB,GAASxY,EAAAA,EAAAA,MAAWlO,EAAAA,EAAAA,MAAa0mB,QAAUzmB,EACtD6wC,EAAa9iC,GACfE,EAAAA,EAAAA,MAAWlO,EAAAA,EAAAA,MAAagO,GACN,mBAAlBmiC,EAAS9iC,MAA8B3E,EAAQ6d,gBAChCtmB,EAAb0sC,EAEN,OAAImE,GAAcA,EAAWxrC,KAAOkB,GAEhC5F,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,+BACbuB,EAAAA,GAAAC,cAAA,YAAM,IAAE0D,GAAK,UAAU,KACJ,aAAlB4rC,EAAS9iC,MACRzM,EAAAA,GAAAC,cAACkE,EAAAA,EAAM,CAAC1F,UAAU,6BAA6BsE,KAAK,QAAQmB,KAAMgsC,IAEpElwC,EAAAA,GAAAC,cAAA,YAAM,KAAEwO,EAAAA,EAAAA,KAAa9K,GAAMusC,GAAY,MAM3ClwC,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,+BACbuB,EAAAA,GAAAC,cAAA,YAAM,IAAE0D,GAAK,YAAY,KACN,aAAlB4rC,EAAS9iC,MACRzM,EAAAA,GAAAC,cAACkE,EAAAA,EAAM,CAAC1F,UAAU,6BAA6BsE,KAAK,QAAQmB,KAAM+rC,GAAYpE,IAEhF7rC,EAAAA,GAAAC,cAAA,YAAM,KAAEwO,EAAAA,EAAAA,KAAa9K,GAAMssC,GAAYpE,GAAa,KAG1D,CAoOA,MAAMptC,IAAY+B,EAAAA,EAAAA,GAChB,kCACA+qC,IAAcI,GAAoB,WACjCmC,IAAiBE,IAAqBC,KAAoB,kBAC3DoB,IAAsB,gBACtBxC,GAAgB,eAChBhkC,IAGF,OACE7I,EAAAA,GAAAC,cAAA,OACEtB,IAAKA,GACL+F,IAAIyrC,EAAAA,EAAAA,KAAiBroC,EAAQpD,IAC7BjG,UAAWA,GACX,kBAAiBqJ,EAAQpD,GACzB,iBAAgBoD,EAAQqhB,eAAY9pB,EACpCmjC,YAncqBt5B,KACvBknC,EAAAA,EAAAA,GAAwBlnC,GACxB8lC,GAAwB9lC,EAAE,EAkcxBmnC,cAAepB,KAEbjB,KAAsBD,KAAeG,KAAoBD,IACzDjuC,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,yBAAyBiJ,QAla3BuB,KACmB,YAAjCnB,EAAQF,QAAQwE,QAAQK,MAC1B2gC,GAAW,CACTxmC,OAAQkB,EAAQlB,OAChBilB,UAAW/jB,EAAQpD,IAEvB,GA4ZoEwrB,MAEjE4d,IAjZL,WACE,MAAMwC,EAAcxoC,EAAQF,QAAQwE,QAAQtE,QAC5C,OACE9H,EAAAA,GAAAC,cAAA,QACExB,UAAU,sBACViO,SAAU,EACVM,KAAK,SACLtF,QAAS8nC,IAETxvC,EAAAA,GAAAC,cAAC05B,EAAAA,EAAuB,CACtBtgB,IAAKvR,EAAQpD,GACb/D,QAASurC,EACThoB,KAAMsoB,EACNroB,QAAM,EACNosB,gBAAc,IAEhBvwC,EAAAA,GAAAC,cAAA,cAASkuB,GAAQ,2BACjBnuB,EAAAA,GAAAC,cAAA,YACGkuB,GAAQ,4BAA6BA,GAAQ,SAAUrmB,EAAQF,QAAQwE,QAAQ6/B,OAAQ,OAEzFqE,GACCtwC,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,iCACZ41B,EAAAA,EAAAA,GAAuB,CAAE71B,KAAM8xC,EAAY9xC,KAAM01B,SAAUoc,EAAYpc,YAI5El0B,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,yBACduB,EAAAA,GAAAC,cAACuwC,EAAAA,EAAQ,CAACC,OAAO,WAChBtiB,GAAQ,0BAIjB,CAiXsBuiB,GACjB3C,IAhXL,WACE,MAAM4C,EAAiB7oC,EAAQF,QAAQwE,QAAQwkC,WACzCC,EAAc/oC,EAAQF,QAAQwE,QAAQykC,YACtCP,EAAcxoC,EAAQF,QAAQwE,QAAQtE,QAC5C,OACE9H,EAAAA,GAAAC,cAAA,QACExB,UAAU,8CACViO,SAAU,EACVM,KAAK,SACLtF,QAASooC,IAET9vC,EAAAA,GAAAC,cAAC05B,EAAAA,EAAuB,CACtBtgB,IAAKvR,EAAQpD,GACb/D,QAASurC,EACThoB,KAAMsoB,EACNroB,QAAM,EACNosB,gBAAc,IAEhBvwC,EAAAA,GAAAC,cAAA,cACGkuB,GAAQ0iB,EAAc,yBAA2B,4BAEpD7wC,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,2BACbstC,IAAczkC,EAAAA,EAAAA,GACb6mB,GACEwiB,EAAiB,2BAA6BE,EAC1C,4BAA8B,iCAClCpqC,EAAAA,EAAAA,KAAa0nB,GAAS4d,IAExB,CAAC,qBAGL/rC,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,4BACb6I,EAAAA,EAAAA,GAAW6mB,GACV,iCACAA,GAAQ,SAAUrmB,EAAQF,QAAQwE,QAAQ6/B,OAAQ,MACjD,CAAC,qBAGLqE,GACCtwC,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,iCACZ41B,EAAAA,EAAAA,GAAuB,CAAE71B,KAAM8xC,EAAY9xC,KAAM01B,SAAUoc,EAAYpc,YAI5El0B,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,yBACb0vB,GAAQ,gCAIjB,CA+TmB2iB,GACd1C,IA5TDpuC,EAAAA,GAAAC,cAAA,QACExB,UAAU,8CACViO,SAAU,EACVM,KAAK,SACLtF,QAAS4nC,IAETtvC,EAAAA,GAAAC,cAAC05B,EAAAA,EAAuB,CACtBtgB,IAAKvR,EAAQpD,GACb/D,QAAS2rC,EACTpoB,KAAMsoB,EACNroB,QAAM,EACNosB,gBAAc,IAEhBvwC,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,iCACZsyC,EAAAA,EAAAA,IAAcjpC,EAAQF,QAAQwE,OAAQigC,OACvCrsC,EAAAA,GAAAC,cAAA,cAASkuB,GAAQ,WAEnBnuB,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,kCACb6I,EAAAA,EAAAA,GACC6mB,GAASrmB,EAAQ6d,WACkB,0BAA/B,8BAA0Dlf,EAAAA,EAAAA,KAAa0nB,GAAS4d,IACpF,CAAC,qBAGL/rC,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,yBACduB,EAAAA,GAAAC,cAACuwC,EAAAA,EAAQ,CAACC,OAAO,WAChBtiB,GAAQ,2BAmSZkgB,IAzLL,WACE,MAAMkB,EAAWznC,EAAQF,QAAQwE,QAAQmjC,SACzC,GAAKA,GAAmC,aAAvBA,EAAS97B,KAAKhH,KAE/B,OACEzM,EAAAA,GAAAC,cAAA,QACExB,UAAU,8CACViO,SAAU,EACVM,KAAK,SACLtF,QAAS4nC,IAGTtvC,EAAAA,GAAAC,cAAC05B,EAAAA,EAAuB,CACtBh5B,QAAS4uC,EAAS97B,KAAK9S,QACvBujB,KAAMsoB,EACNroB,QAAM,EACNosB,gBAAc,EACdxtC,KAlbqB,MAqbtBitC,KACDhwC,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,gCAvFrB,WACE,MAAM8wC,EAAWznC,EAAQF,QAAQwE,QAAQmjC,SACnCyB,EAAkBjF,IAAct9B,EAAAA,EAAAA,KAAa9K,GAAMooC,GACnDkF,EAAkB1B,GAAUznC,QAClC,IAAKynC,EAAU,OAEf,GAAI0B,EACF,OAAO5c,EAAAA,EAAAA,GAAuB,CAAE71B,KAAMyyC,EAAgBzyC,KAAM01B,SAAU+c,EAAgB/c,WAExF,MAAMgd,EAAkB3B,GAAU4B,eAElC,GAAI5B,EAAS3T,QACX,OAAOj4B,GAAK4rC,EAAS6B,QAAU,kCAAoC,4BAGrE,GAAI7B,EAAS8B,WACX,OAAO1tC,GAAK,0BAGd,GAAImE,EAAQ6d,WAAY,CACtB,GAAIurB,EACF,OAAOvtC,GAAK,mCAAoC,CAC9CO,KAAM8sC,GAAmB,UACzBrH,MAAOuH,GACN,CAAEI,WAAW,EAAMC,YAAaL,IAGrC,GAAI3B,EAASiC,WACX,OAAO7tC,GAAK,0CAA2C,CACrDO,KAAM8sC,GAAmB,WAG/B,CAEA,OAAIzB,EAASkC,YACJ3pC,EAAQ6d,WACXhiB,GAAK,sCAAuC,CAC5C+tC,QAAQX,EAAAA,EAAAA,IAAcG,GACtBhtC,KAAM8sC,GAAmB,QACxB,CACDO,YAAaL,EACbI,WAAW,EACXK,cAAc,IAEdhuC,GAAK,+BAAgC,CACrC+tC,QAAQX,EAAAA,EAAAA,IAAcG,IACrB,CACDK,YAAaL,EACbI,WAAW,EACXK,cAAc,IAIhBT,EACKvtC,GAAK,6BAA8B,CACxCgmC,MAAOuH,GACN,CAAEI,WAAW,EAAMC,YAAaL,IAGjC3B,EAASiC,WACJ7tC,GAAK,yCADd,CAKF,CAwBSiuC,IAGH5xC,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,yBACbuB,EAAAA,GAAAC,cAACuwC,EAAAA,EAAQ,CAACC,OAAO,YAChBlB,EAASsC,yBAA6B/pC,EAAQ6d,aAAckpB,KAAc,IAAIthC,OAC5C4gB,GAAQ,yBAAvCxqB,GAAK,yBAEV4rC,EAAS97B,KAAKK,mBACb9T,EAAAA,GAAAC,cAACwS,EAAAA,EAAU,CACTjL,MAAOwU,GAAgB,OACvBxd,KAAM2vB,GAAQ,yBAAyB0B,EAAAA,EAAAA,IAAqB0f,EAAS97B,KAAKK,sBAKpF,CAmJmBg+B,GACdxD,IAlJL,WACE,MAAMiB,EAAWznC,EAAQF,QAAQwE,QAAQmjC,SACzC,IAAKA,GAAmC,mBAAvBA,EAAS97B,KAAKhH,KAA2B,OAE1D,MAAM9L,GAAU6S,EAAAA,EAAAA,IAAmB+7B,EAAS97B,MACtCC,GAAaM,EAAAA,EAAAA,IAAkBu7B,EAAS97B,OACxC,SAAES,EAAQ,QAAEC,EAAO,MAAEF,GAAUP,GAAc,CAAC,EAEpD,IAAKQ,IAAaC,IAAYF,EAAO,OAErC,MAAM8H,EAAmB,CAAC7H,EAAS69B,YAAa79B,EAAS89B,WAEnDC,EAAuB,GAAE/9B,EAAS8H,aAAahY,MAAM,EAAG,OAE9D,OACEhE,EAAAA,GAAAC,cAAA,QACExB,UAAU,oEACViO,SAAU,EACVM,KAAK,SACLhK,MAAQ,oBAAmBivC,IAC3BvqC,QAAS4nC,IAETtvC,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,4CACbuB,EAAAA,GAAAC,cAAC6b,EAAAA,EAAuB,CACtBrd,UAAU,mCACVsd,iBAAkBA,EAClBC,aAAc9H,EAAS8H,aACvBC,YAAa9H,EAAQxT,QACrBub,mBAAiB,KAGrBlc,EAAAA,GAAAC,cAAC05B,EAAAA,EAAuB,CACtBh5B,QAASA,EACTujB,KAAMsoB,EACNroB,QAAM,EACNosB,gBAAc,EACdxtC,KA7eqB,MA+etBitC,KACDhwC,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,8BAA8BuE,MAAQ,UAASkR,EAASg+B,aACpE3C,EAAS97B,KAAKxG,MAAM,KAAGsiC,EAAS97B,KAAK0+B,QAExCnyC,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,mCAAmCuE,MAAQ,UAASkR,EAASg+B,aAC1ElyC,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,kCACZ0vB,GAAQ,wBAEXnuB,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,+BACZwV,EAAM7J,MAETpK,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,kCACZ0vB,GAAQ,2BAEXnuB,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,+BACZyV,EAAS9J,MAEZpK,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,kCACZ0vB,GAAQ,yBAEXnuB,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,+BACZ0V,EAAQ/J,OAIbpK,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,yBACbuB,EAAAA,GAAAC,cAACuwC,EAAAA,EAAQ,CAACC,OAAO,WAChBtiB,GAAQ,oBAEXnuB,EAAAA,GAAAC,cAACwS,EAAAA,EAAU,CACTjL,MAAOyqC,EACPzzC,KAAM2vB,GAAQ,oBAItB,CAyEyBikB,GACpB7D,IAxEL,WACE,MAAMsC,EAAc/oC,EAAQF,QAAQwE,QAAQykC,YAE5C,OACE7wC,EAAAA,GAAAC,cAAA,QACExB,UAAU,8CACViO,SAAU,EACVM,KAAK,SACLtF,QAASmoC,IAET7vC,EAAAA,GAAAC,cAAC05B,EAAAA,EAAuB,CACtBtgB,IAAKvR,EAAQpD,GACb/D,QAAS2rC,EACTpoB,KAAMsoB,EACNroB,QAAM,EACNosB,gBAAc,IAEhBvwC,EAAAA,GAAAC,cAAA,cACGkuB,GAAQ0iB,EAAc,yBAA2B,4BAEpD7wC,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,2BACbstC,IAAczkC,EAAAA,EAAAA,GAAW6mB,GAAQ0iB,EAC9B,4BAA8B,iCAAiCpqC,EAAAA,EAAAA,KAAa0nB,GAAS4d,IACzF,CAAC,qBAEH/rC,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,4BACb6I,EAAAA,EAAAA,GAAW3D,GACV,gBAAiB,CACfgmC,MACE3pC,EAAAA,GAAAC,cAAA,UAAI8wC,EAAAA,EAAAA,IAAcjpC,EAAQF,QAAQwE,QAAQigC,SAE3C,CACDiF,WAAW,EACXC,YAAazpC,EAAQF,QAAQwE,QAAQigC,QAEtC,CAAC,qBAENrsC,EAAAA,GAAAC,cAAA,QAAMxB,UAAU,yBACd0vB,GAAQ,0BAKhB,CA6BqBkkB,GAChBrE,IACChuC,EAAAA,GAAAC,cAAC6lC,EAA4B,CAACh+B,QAASA,EAASooB,cAAeA,KAEhE+d,IACCjuC,EAAAA,GAAAC,cAACooC,EAA0B,CAACvgC,QAASA,EAASooB,cAAeA,KAE9Dge,IAAmBluC,EAAAA,GAAAC,cAAC6pC,GAAe,CAACljC,OAAQ8f,IAC5CqoB,IACC/uC,EAAAA,GAAAC,cAACqyC,EAAAA,EAAoB,CACnBxsC,OAAQgpC,GACRyD,OAAQxD,GACRjnC,QAASA,EACTif,gBAAgB,SAChBhhB,QAASmpC,GACTlpC,oBAAqBmpC,KAGxBX,IACCxuC,EAAAA,GAAAC,cAACuyC,EAAAA,EAAS,CACRC,WAAS,EACT3qC,QAASA,EACT+e,SAAUA,EACV5V,oBAAqBI,EACrB+3B,qBAAsBA,KAGtB,I,wEC9sBV,MAQA,EARiD1oC,IAC/C,MAAM,OAAEoF,GAAWpF,EACb4xC,GAAuBvtB,EAAAA,EAAAA,GAAgBC,EAAAA,GAAQC,MAAO,wBAAyBnf,GAGrF,OAAOwsC,EAAuBtyC,EAAAA,GAAAC,cAACqyC,EAAyB5xC,QAAYrB,CAAS,C,8FCF/E,MAAMqzC,EAAsB,IACtBC,EAAyBC,EAAAA,IACzBC,EAAe,GAEN,SAASrF,GAAgB,WACtCC,EAAU,OACV7mC,EAAM,UACN2kC,EAAS,eACTE,EAAc,iBACdE,EAAgB,oBAChBmH,EAAmB,YACnBlG,EAAW,QACXmG,EAAO,qBACPC,IAYA,MAAMC,GAAiBtqC,EAAAA,EAAAA,KAAQikC,IAE/BzH,EAAAA,EAAAA,KAAgB,KACd,MAAM+N,EAAcD,EAAe9pC,QAGnC,GAFA8pC,EAAe9pC,SAAU,EAErBoiC,GAAakC,EAAWtkC,QAAS,CACnC,MAAMgqC,EAAoB1F,EAAWtkC,QAAQiqC,QAAwB,gBAE/DC,EAAa1H,EACb2H,EAAiBN,GAAwBK,EAAa,MAAQ,cAE9DE,EAAOA,KACX,MAAMC,OAAiCn0C,IAAnBosC,EACf4H,EAAaX,EAAsBC,OAA0BtzC,EAE5Do0C,GAASC,EAAAA,EAAAA,IAAc,CAC3B14B,UAAWm4B,EACX/N,QAASqI,EAAWtkC,QACpBk0B,SAAUiW,EACVK,OAAQd,EACRW,cACAI,eAAgBnI,EAChBoI,2BAA4Bf,EAC5BgB,wBAAwB,IAG1B,GAAIf,EAAS,CACX,MAAMgB,EAAatG,EAAWtkC,QAAS6qC,cAA+B,aAClED,IACF/pC,EAAAA,EAAAA,KAAgB,MACdiqC,EAAAA,EAAAA,IAAcF,EAAY,UAAU,GAG1C,CAEA,OAAON,CAAM,EAGXP,GAEFgB,EAAAA,EAAAA,IAAoBX,IAEpBl8B,EAAAA,EAAAA,KAAe,MACbrN,EAAAA,EAAAA,IAAgBupC,IAAQ,GAG9B,IACC,CACD9F,EAAY7mC,EAAQ2kC,EAAWE,EAAgBE,EAAkBmH,EAAqBC,EAASC,GAEnG,C,4SChDA,MAAM9yB,EAAY,IAAMC,EAAAA,EAClBC,EAAc,IAAMD,EAAAA,EACpBg0B,EAAoBt4B,EAAAA,IAAUu4B,EAAAA,GAAc,EAAI,EAChDC,EAAWx4B,EAAAA,IAAUu4B,EAAAA,GAAc,EAAI,EA8F7C,GAAe91C,EAAAA,EAAAA,KAAK8F,EAAAA,EAAAA,KAClB,CAACC,GAAUic,kBACT,MAAM,gBAAEG,IAAoBC,EAAAA,EAAAA,KAAerc,GAErCsc,GAAcC,EAAAA,EAAAA,KAA+Bvc,EAAQ,mBAE3D,MAAO,CACLoc,gBAAiBA,IAAkBH,GACnCK,cACD,GATevc,EA5FMkwC,EACxBh0B,cACApB,WACAzgB,YACAsE,OAAOmd,EACPc,aAAaZ,EACbK,kBACA8zB,cACA5zB,cACA1P,0BAEA,MAAM,mBAAEmQ,IAAuB7a,EAAAA,EAAAA,MAGzB5H,GAAMgK,EAAAA,EAAAA,IAAuB,MAE7B6rC,GAAY7rC,EAAAA,EAAAA,IAAuB,OAElC8rC,EAAYC,IAAiB9oC,EAAAA,EAAAA,IAAmB,IAEjDwW,GAAiBC,EAAAA,EAAAA,IAAkB1jB,EAAKsS,GAExCyR,GAAiBnjB,EAAAA,EAAAA,KAAQ,IAC7BkhB,GAAiB9M,MAAMgP,IAAWnB,EAAAA,EAAAA,KAAemB,EAAQzD,MACxD,CAACuB,EAAiBvB,IAEf0D,EAAmB3gB,QACvB0e,GAAe+B,GAEXiyB,EAAoBF,EAAW/0C,OAASy0C,GAE9CS,EAAAA,EAAAA,IAAsB,EAAEC,MACjBjyB,GAKA2xB,GAAeA,IAAgBM,GAAmB,IAInDF,GACFD,GAAeI,GAAS,IAAIA,EAAM1/B,KAAKC,SATvCq/B,EAAc,GAUhB,GACC,CAACH,EAAaI,EAAmB/xB,IAEpC,MACEha,aAAcka,IACZ+P,EAAAA,EAAAA,GAAkB,CACpBl0B,IAAK61C,EACLle,mBAAmB,EACnBxwB,OAAQ8c,EACRnkB,UAAW,OACXq0B,kBAAkB,IAGd5P,GAActgB,EAAAA,EAAAA,IAAgB,KAClC,MAAMmyC,EAAgBN,EAAWzwC,MAAM,GACvC0wC,EAAcK,GACTA,EAAcr1C,QACjB0hB,EAAmB,CAAEd,cAAapB,YACpC,IAGIuE,GAAgBjjB,EAAAA,EAAAA,GACpB2C,EAAAA,EAAO6P,KACP8P,GAAsB3f,EAAAA,EAAOugB,UAC7BjlB,GAGF,OACEuB,EAAAA,GAAAC,cAAA,OAAKxB,UAAWglB,EAAe9kB,IAAKA,EAAKq2C,eAAa,GACpDh1C,EAAAA,GAAAC,cAACwtB,EAAAA,EAAQ,CAACpU,IAAI,OAAO5M,KAAK,OAAO1J,KAAK,WAAWC,MAAQ,UAASD,gBAAmBA,QACpF+f,GAAsB2xB,EAAWxwC,KAAKS,GACrC1E,EAAAA,GAAAC,cAACqD,EAAAA,EAAY,CACX+V,IAAK3U,EACL/F,IAAK61C,EACL/1C,UAAW0E,EAAAA,EAAOkhB,OAClBthB,KAAMie,EACNxf,OAAQyzC,EAAAA,EAAeC,mBACvBhxB,KAAM9B,EACN+B,QAAM,EACNL,aAAW,EACXysB,gBAAc,EACd4E,QAASd,EACTh1B,QAAS6D,MAGT,K,gDCvGV,MAAMkyB,EAAgB,KAAOj1B,EAAAA,EAiB7B,SAASk1B,EAAiBhxC,GACxB,OAAOA,EAAOgoC,KAChB,CAEA,MA4KA,GAAe/tC,EAAAA,EAAAA,KA5KQg3C,EACrBp2B,WACAoB,cACAi1B,eACAC,iBACA/2C,YACAg3C,kBACA7uC,SACAilB,YACA5a,sBACAvJ,UACAguC,kBAEA,MAAM,sBACJC,EAAqB,wBACrBC,EAAuB,sBACvBC,EAAqB,YACrBC,IACEvvC,EAAAA,EAAAA,MAEE5H,GAAMgK,EAAAA,EAAAA,IAA0B,MAEhCotC,GAAaptC,EAAAA,EAAAA,IAAwB,MACrCqtC,GAAertC,EAAAA,EAAAA,MAEfstC,EAAoC,SAA3B/2B,EAASA,SAASzS,KAE3BypC,GAAaC,EAAAA,EAAAA,GAAYd,GACzBe,EAAiBn0C,QAAQi0C,GAEzBG,GAAkBzzC,EAAAA,EAAAA,IAAgB,CAAC+mC,EAAQ,KAC/C+L,IAAc/L,EAAM,IAGhB1gC,GAAcrG,EAAAA,EAAAA,IAAiBsG,IACnC,GAA+B,SAA3BgW,EAASA,SAASzS,KAIpB,OAHAvD,EAAEkmB,uBACFinB,IAKF3uC,IAAUwX,EAASA,SAAS,KAGxB,kBACJ4vB,EAAiB,wBACjBE,EAAuB,kBACvBC,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuBzwC,EAAgC,SAA3BugB,EAASA,SAASzS,UAAiBpN,OAAWA,OAAWA,GAAW,IAEpGc,EAAAA,EAAAA,KAAU,KACJ2uC,IACF+G,EAAsB,CACpBjvC,SACAilB,cAGFqjB,IACAC,IACF,GACC,CAACD,EAAwBC,EAAuBL,EAAmBloC,EAAQilB,KAE9E+oB,EAAAA,EAAAA,IAAsB,EAAE0B,MACtB,MAAM5E,EAASxyB,EAASq1B,YAClB1b,EAASl6B,EAAIwK,QACnB,IAAKuoC,IAAW7Y,GAAU6Y,IAAW4E,GAAc/B,YAAa,OAEhE,GAAI6B,GAAkB1E,EAASwE,EAAWK,QAAQ7E,OAYhD,OAXAiE,EAAsB,CACpBa,eAAgB,CACd5vC,SACAilB,YACA6lB,iBAGJkE,EAAwB,CACtBhvC,SACAilB,cAKJ,GAAI3M,EAASq1B,YAAa,CACxB,MAAM,KAAE7qC,EAAI,IAAEG,GAAQgvB,EAAOtvB,wBACvBktC,EAAS/sC,EAAOmvB,EAAOhpB,YAAc,EACrC6mC,EAAS7sC,EAAMgvB,EAAO6G,aAAe,EAC3CoW,EAAY,CAAEW,SAAQC,UACxB,CAEA,MAAMC,EAAe3gB,OAAO4gB,iBAAiB/d,GAAQge,QAAU,EAC/Db,EAAa7sC,SAAS2tC,SAEtBd,EAAa7sC,QAAU0vB,EAAOke,QAAQ,CACpC,CAAEF,MAAOF,GACT,CAAEE,MAAO1mC,KAAKE,IAAmB,IAAfsmC,EArHN,GAqHsCpjC,OAAQ,IAC1D,CAAEsjC,MAAO,IACR,CACDG,SAAU,IAAML,EAChBM,OAAQ,YACR,GACD,CAAC/3B,EAAUg3B,GAAYK,QAASH,EAAgBxvC,EAAQilB,IAE3D,MAAMqrB,GAAaC,EAAAA,EAAAA,GAAYj4B,EAASq1B,cAGtC3rC,aAAcwuC,IACZvkB,EAAAA,EAAAA,GAAkB,CACpB/sB,OAAQ7D,QAAQid,EAASq1B,aACzB51C,IAAKo3C,EACLt3C,UAAW,OACXq0B,kBAAkB,IAGpB,OACE9yB,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CACL9I,WAAW+B,EAAAA,EAAAA,GACT2C,EAAAA,EAAO6P,KACPuiC,GAAgBpyC,EAAAA,EAAOk0C,IACvBpB,GAAU9yC,EAAAA,EAAOm0C,MACjBC,EAAAA,EAAAA,KAAiBr4B,IAAa/b,EAAAA,EAAOq0C,QACrCD,EAAAA,EAAAA,KAAiBr4B,IAAau2B,EAC9Bh3C,GAEFsE,KAAK,OACLpE,IAAKA,EACL6jC,YAAawM,EACbqB,cAAepB,EACfvnC,QAASuB,GAEmB,SAA3BiW,EAASA,SAASzS,KACjBzM,EAAAA,GAAAC,cAAAD,EAAAA,GAAAokB,SAAA,KACEpkB,EAAAA,GAAAC,cAACuwC,EAAAA,EAAQ,CAACC,OAAO,WACjBzwC,EAAAA,GAAAC,cAACq0C,EAAiB,CAChB71C,UAAW0E,EAAAA,EAAOi2B,cAClB9Y,YAAaA,EACbpB,SAAUA,EAASA,SACnBnc,KAAMqyC,EACNb,YAAar1B,EAASq1B,YACtBtjC,oBAAqBA,IAEtBmmC,GACCp3C,EAAAA,GAAAC,cAAC1B,EAAAA,EAAe,CACdI,IAAKo3C,EACLv3C,KAAO,KAAGqxB,EAAAA,EAAAA,IAAqB3Q,EAASq1B,aAAe2C,KACvDz4C,UAAW0E,EAAAA,EAAOs0C,eAKxBz3C,EAAAA,GAAAC,cAAC8gB,EAAAA,EAAqB,CACpBtiB,UAAW0E,EAAAA,EAAOi2B,cAClB9Y,YAAaA,EACbpB,SAAUA,EAASA,SACnBnc,KAAMqyC,EACNnkC,oBAAqBA,IAGxBukC,GAAgB91C,OACfM,EAAAA,GAAAC,cAACsD,EAAAA,EAAU,CAACR,KAAK,OAAOS,MAAOgyC,IAE/Bx1C,EAAAA,GAAAC,cAAC1B,EAAAA,EAAe,CACdC,MAAMqxB,EAAAA,EAAAA,IAAqB3Q,EAASyqB,OAASzqB,EAASq1B,aAAe,IACrE91C,UAAW0E,EAAAA,EAAOu0C,UAGf,I,eCnLb,MA6LA,GAAep5C,EAAAA,EAAAA,KA1LiBk0C,EAC9B1qC,UACA+e,WACA4rB,YACAkF,WACAC,eACA3mC,sBACA4mC,mBACAzO,uBACA0O,WAEA,MAAM,eACJC,EAAc,qBACdC,EAAoB,mBACpBC,EAAkB,oBAClBC,EAAmB,iBACnB7O,EAAgB,wBAChBuM,EAAuB,iBACvB3b,IACE1zB,EAAAA,EAAAA,MACE5C,GAAOC,EAAAA,EAAAA,MAEP,QAAEu0C,EAAO,QAAEC,EAAO,gBAAEC,GAAoBvwC,EAAQ0Y,UAChDguB,EAAuBvsC,QAAQ6F,EAAQ2mC,sBAAwB3mC,EAAQ0Y,WAEvEzM,GAAaxU,EAAAA,EAAAA,KAAQ,IACzB44C,EAAQpkB,QAAO,CAACrF,EAAKxP,IAAawP,EAAMxP,EAASyqB,OAAO,IACvD,CAACwO,IAEEG,GAA8B/4C,EAAAA,EAAAA,KAAQ,KAC1C,MAAM8E,GAASjF,EAAAA,EAAAA,MAEf,OAAOi5C,GAAiBtkB,QAAO,CAACrF,EAAK6pB,KACnC,MAAM,SAAEr5B,EAAQ,OAAE9R,GAAWmrC,EACvBl/B,GAAMm/B,EAAAA,EAAAA,KAAet5B,GACrBhb,GAAOoJ,EAAAA,EAAAA,KAAWjJ,EAAQ+I,GAEhC,IAAKlJ,EAAM,OAAOwqB,EAElB,MAAMlrB,EAAQkrB,EAAIrV,IAAQ,GAG1B,OAFA7V,EAAMyU,KAAK/T,GACXwqB,EAAIrV,GAAO7V,EACJkrB,CAAG,GACT,CAAC,EAAuC,GAC1C,CAAC2pB,IAEE33C,GAAQnB,EAAAA,EAAAA,KAAQ,KACpB,MAAMk5C,GAAaC,EAAAA,EAAAA,IAAc5wC,GACjC,OAAOqwC,EAAQl0C,KAAKib,IAClB,MAAMy5B,GAAcH,EAAAA,EAAAA,KAAet5B,EAASA,UACtCs2B,EAAiB8C,IAA8BK,GAC/CC,EAA2B7kC,EAtDZ,GAsD+C8jC,EAC9DgB,EAAMT,EAAUN,IAAOa,QAAet5C,EAE5C,MAAO,CACL6f,WACAy5B,cACAF,aACAjD,eAAiBoD,OAA4Cv5C,EAAjBm2C,EAC5CsD,UAAUvB,EAAAA,EAAAA,KAAiBr4B,GAC3B25B,MACD,GACD,GACD,CAAC/wC,EAAS+vC,EAAkBS,EAA6BH,EAASC,EAASN,EAAM/jC,IAE9E9K,GAAcrG,EAAAA,EAAAA,IAAiBsc,IACnC,GAAIk5B,EACF,OAAKhP,GAOL6O,EAAmB,CAAErxC,OAAQkB,EAAQlB,OAAQigB,WAAUkyB,OAAQ,CAAEC,SAAU95B,UAC3Eg5B,EAAoB,CAAEtxC,OAAQkB,EAAQlB,OAAQigB,mBAP5CwiB,EAAiB,CACf4P,eAAgB,eAUtBlB,EAAe,CACbnxC,OAAQkB,EAAQlB,OAChBilB,UAAW/jB,EAAQpD,GACnBwa,YACA,IAGEg6B,GAAiB35C,EAAAA,EAAAA,KAAQ,IAAM44C,EAAQxkC,MAAM4N,GAA0B,SAApBA,EAAErC,SAASzS,QAAkB8nC,aAAe,GAAG,CAAC4D,IAEnG9B,GAAkBzzC,EAAAA,EAAAA,IAAiB+mC,IACvCqO,EAAqB,CACnBpxC,OAAQkB,EAAQlB,OAChBilB,UAAW/jB,EAAQpD,GACnBilC,SACA,KAGJxpC,EAAAA,EAAAA,KAAU,KACH+4C,GAELjf,EAAiB,CACfkf,SAAST,EAAAA,EAAAA,IAAc5wC,GACvBmF,MAAOtJ,EAAK,kBACZmE,QAASnE,EAAK,gBAAiBu1C,GAC/BnS,WAAYpjC,EAAK,iBACjBy1C,aAAcF,EAAeG,WAC7BjtC,OAAQ,CACNA,OAAQ,0BACRotB,QAAS,CAAE5yB,OAAQkB,EAAQlB,OAAQilB,UAAW/jB,EAAQpD,KAExD40C,cAAe,CACbltC,OAAQ,mBACRotB,QAAS,CAAE5yB,OAAQkB,EAAQlB,OAAQilB,UAAW/jB,EAAQpD,KAExDsyC,SAnHkB,IAoHlBuC,iBAAiB,EACjBC,qBAAqB,EACrB/rC,KAAM,QACN,GACD,CAAC9J,EAAMmE,EAASoxC,IAEnB,MAAMO,GAAuB72C,EAAAA,EAAAA,IAAiBsc,IAC5C64B,EAAe,CACbnxC,OAAQkB,EAAQlB,OAChBilB,UAAW/jB,EAAQpD,GACnBwa,YACA,IAWJ,OAPAw6B,EAAAA,EAAAA,IAAc,IAAM,KAClB9D,EAAwB,CACtBhvC,OAAQkB,EAAQlB,OAChBilB,UAAW/jB,EAAQpD,IACnB,IAIF1E,EAAAA,GAAAC,cAAA,OACExB,WAAW+B,EAAAA,EAAAA,GACT,YACAiyC,GAAa,aACbjE,GAAwB,cAE1BxrC,MAAO20C,EAAY,cAAaA,WAAet4C,EAC/CoB,IAAKkD,EAAK/E,MAAQ,MAAQ,OAEzB8B,EAAMuD,KAAI,EACTib,WAAUs2B,iBAAgBiD,aAAYE,cAAaG,WAAUD,SAE7DT,EACEp4C,EAAAA,GAAAC,cAAC05C,EAAAA,EAAc,CACbtgC,IAAKs/B,EACLl6C,UAAU,mBACVg3C,gBAAgB,SAChBn1B,YAAam4B,EACblD,aAAcztC,EAAQ6d,WACtBmzB,SAAUA,EACV55B,SAAUA,EAASA,SACnB25B,IAAKA,EACLe,gBAAiBxQ,EACjB1hC,QAASuB,EACT4wC,SAAUJ,EACVxoC,oBAAqBA,IAGvBjR,EAAAA,GAAAC,cAACq1C,EAAc,CACbj8B,IAAKs/B,EACL/xC,OAAQkB,EAAQlB,OAChBilB,UAAW/jB,EAAQpD,GACnBjG,UAAU,mBACVg3C,gBAAgB,SAChBn1B,YAAam4B,EACblD,aAAcztC,EAAQ6d,WACtB6vB,eAAgBA,EAChBt2B,SAAUA,EACVxX,QAASuB,EACTysC,YAAaW,EACbplC,oBAAqBA,MAI1B2mC,EACG,G,0KChOV,MC6EA,GAAet5C,EAAAA,EAAAA,KAvDMw7C,EACnBh0C,SACAmH,QACAyM,WACA9O,cACAmvC,aACAhtC,YACAitC,eAAe,GACfj0C,UACAuF,eAEA,MAAM3H,GAAOC,EAAAA,EAAAA,MAENpF,EAAMy7C,IAAWruC,EAAAA,EAAAA,IAASouC,GAE3BE,GAAmBt3C,EAAAA,EAAAA,IAAiBsG,IACxC+wC,EAAQ/wC,EAAE2D,OAAOF,MAAM,IAGnBwtC,GAAev3C,EAAAA,EAAAA,IAAgB,KACnC0I,EAAS9M,EAAK,IAGhB,OACEwB,EAAAA,GAAAC,cAACkH,EAAAA,EAAK,CACJ1I,UAAU,SACVwO,MAAOA,EACPnH,OAAQA,EACRC,QAASA,EACTq0C,QAAM,GAELn4C,QAAQyX,IACP1Z,EAAAA,GAAAC,cAAA,OAAKxB,UDtDc,YCuDhBib,GAGL1Z,EAAAA,GAAAC,cAACib,EAAAA,EAAS,CACRtQ,YAAaA,EACb+B,MAAOnO,EACPoO,SAAUstC,EACVntC,UAAWA,EACXstC,2BAAyB,IAE3Br6C,EAAAA,GAAAC,cAAA,OAAKxB,UAAU,uBACbuB,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CAAC9I,UAAU,wBAAwBiJ,QAASyyC,GAChDJ,GAAcp2C,EAAK,SAEtB3D,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CAAC9I,UAAU,wBAAwBgJ,QAAM,EAACC,QAAS3B,GACvDpC,EAAK,YAGJ,I,qCCjDZ,MAAMyxC,EAAgB,KAAOj1B,EAAAA,EAiK7B,GAAe7hB,EAAAA,EAAAA,KA7IQq7C,EACrBz6B,WACA25B,MACAv4B,cACAw4B,WACAvD,eACA92C,YACAg3C,kBACA6E,YACA57C,aACAk7C,kBACA3oC,sBACAvJ,UACAmyC,eAEA,MAAM,qBAAEU,IAAyBh0C,EAAAA,EAAAA,MAE3B5H,GAAMgK,EAAAA,EAAAA,IAA0B,MAEhC6xC,GAAU7xC,EAAAA,EAAAA,IAAuB,MAEjChF,GAAOC,EAAAA,EAAAA,MACN62C,EAAoBC,EAAkBC,IAAqB34C,EAAAA,EAAAA,MAE5D,MAAEiL,EAAK,MAAE08B,GAAUkP,GAAO,CAAC,EAC3B+B,EAAU34C,QAAQgL,GAAUqtC,GAAa3Q,GAEzC1gC,GAAcrG,EAAAA,EAAAA,IAAgB,KAClC8E,IAAUwX,EAAS,IAGf27B,GAAoBj4C,EAAAA,EAAAA,IAAgB,KACxCi3C,IAAW36B,EAAS,IAGhB47B,GAAkBl4C,EAAAA,EAAAA,IAAiBm4C,IACvCR,EAAqB,CACnBr7B,WACAjS,MAAO8tC,IAETJ,GAAmB,KAGf,kBACJ7L,EAAiB,kBACjBC,EAAiB,wBACjBC,EAAuB,kBACvBC,EAAiB,uBACjBC,EAAsB,sBACtBC,IACEC,EAAAA,EAAAA,GAAuBzwC,GAAMi7C,OAAiBv6C,OAAWA,OAAWA,GAAW,GAE7E27C,GAAoBp4C,EAAAA,EAAAA,IAAgB,IAAMjE,EAAIwK,UAC9C8xC,GAAiBr4C,EAAAA,EAAAA,IAAgB,IAAMqzB,SAASa,OAChDokB,GAAiBt4C,EAAAA,EAAAA,IAAgB,IAAM43C,EAAQrxC,UAC/CgyC,GAAYv4C,EAAAA,EAAAA,IAAgB,KAAM,CAAGw4C,YAAY,EAAMC,6BAA6B,MAE1F,IAAIf,GAAuB,IAAV3Q,EAIjB,OACE3pC,EAAAA,GAAAC,cAACsH,EAAAA,EAAM,CACL9I,WAAW+B,EAAAA,EAAAA,GACT2C,EAAAA,EAAO6P,KACP7P,EAAAA,EAAO01C,IACPtD,GAAgBpyC,EAAAA,EAAOk0C,IACvByB,GAAY31C,EAAAA,EAAOq0C,OACnBsB,GAAYrD,EACZ/2C,GAAcyE,EAAAA,EAAOgK,SACrB1O,GAEFsE,KAAK,OACL2E,QAASuB,EACTu5B,YAAawM,EACbqB,cAAepB,EACftwC,IAAKA,GAELqB,EAAAA,GAAAC,cAAC8gB,EAAAA,EAAqB,CACpBtiB,UAAW0E,EAAAA,EAAOi2B,cAClB9Y,YAAaA,EACbpB,SAAUA,EACV5N,UApGW,EAqGXvO,KAAMqyC,EACNnkC,oBAAqBA,IAEtB2pC,GACC56C,EAAAA,GAAAC,cAAA,QAAMxB,UAAW0E,EAAAA,EAAOm4C,SACrBruC,GAASjN,EAAAA,GAAAC,cAAA,YAAOgN,GAChBqtC,GAAat6C,EAAAA,GAAAC,cAAA,YAAO0pC,IAGzB3pC,EAAAA,GAAAC,cAAA,OACExB,UAAW0E,EAAAA,EAAOo4C,KAClB9yC,MAAM,KACNC,OAAO,KACPgI,QAAQ,aAER1Q,EAAAA,GAAAC,cAAA,QAAMxB,UAAW0E,EAAAA,EAAOq4C,SAAU5qC,EAAE,8JAErCgpC,GACC55C,EAAAA,GAAAC,cAAC65C,EAAY,CACXh0C,OAAQ20C,EACR1tC,UA1He,GA2HfE,MAAOtJ,EAAKk1C,GAAK5rC,MAAQ,oBAAsB,oBAC/CyM,SAAU/V,EAAK,wBACfiH,YAAajH,EAAK,4BAClBq2C,aAAcnB,GAAK5rC,MACnBlH,QAAS40C,EACTrvC,SAAUwvC,IAGblB,GAAmB7K,GAClB/uC,EAAAA,GAAAC,cAACw7C,EAAAA,EAAI,CACH98C,IAAK67C,EACL10C,OAAQgpC,EACRyD,OAAQxD,EACRiM,kBAAmBA,EACnBC,eAAgBA,EAChBC,eAAgBA,EAChBC,UAAWA,EACXO,WAAS,EACTN,YAAU,EACVr1C,QAASmpC,EACTlpC,oBAAqBmpC,GAErBnvC,EAAAA,GAAAC,cAAC07C,EAAAA,EAAQ,CAACluC,KAAK,aAAa/F,QAASuB,GAClCtF,EAAK,wBAER3D,EAAAA,GAAAC,cAAC07C,EAAAA,EAAQ,CAACluC,KAAK,WAAW/F,QAASgzC,GAChC/2C,EAAKk1C,GAAK5rC,MAAQ,oBAAsB,qBAE3CjN,EAAAA,GAAAC,cAAC07C,EAAAA,EAAQ,CAACluC,KAAK,cAAcwmB,aAAW,EAACvsB,QAASmzC,GAC/Cl3C,EAAK,uBAIL,G,4HCpKN,SAASi4C,EACdv3C,EAAWw3C,GAEX,GAA0B,SAAtBA,EAAapvC,KAAiB,OAAOovC,EAEzC,GAA0B,aAAtBA,EAAapvC,KAAqB,CACpC,MAAM,OACJW,EAAM,eAAE0uC,EAAc,OAAEC,EAAM,QAAEj0C,EAAO,cAAEk0C,GACvCH,EACE33C,GAAOoJ,EAAAA,EAAAA,KAAWjJ,EAAQ+I,GAEhC,IAAKlJ,EAAM,OAEX,MAAO,CACLuI,KAAM,WACNvI,OACA43C,iBACAC,SACAj0C,UACAk0C,gBAEJ,CAEA,GAA0B,cAAtBH,EAAapvC,KAAsB,CACrC,MAAM,OACJ1F,EAAM,MAAEslC,EAAK,OAAEqF,EAAM,SAAEuK,GACrBJ,EACEh3C,GAAOC,EAAAA,EAAAA,KAAWT,EAAQ0C,GAEhC,IAAKlC,EAAM,OAEX,MAAO,CACL4H,KAAM,QACNyvC,QAAS,CACPzvC,KAAM,YACN5H,OACAwnC,QACAqF,SACAuK,YAGN,CAEA,GAA0B,UAAtBJ,EAAapvC,KAAkB,CACjC,MAAM,MACJ4/B,EAAK,OAAEqF,EAAM,SAAEuK,GACbJ,EAEJ,MAAO,CACLpvC,KAAM,QACNyvC,QAAS,CACPzvC,KAAM,QACN4/B,QACAqF,SACAuK,YAGN,CAEA,GAA0B,2BAAtBJ,EAAapvC,KAAmC,CAClD,MAAM,KAAEwuB,GAAS4gB,EAEjB,MAAO,CACLpvC,KAAM,yBACNwuB,OAEJ,CAEA,GAA0B,YAAtB4gB,EAAapvC,KAAoB,CACnC,MAAMnI,GAAOwQ,EAAAA,EAAAA,KAAWzQ,EAAQw3C,EAAaj1C,QAC7C,IAAKtC,EACH,OAEF,MAAO,CACLmI,KAAM,UACNnI,OACAunB,UAAWgwB,EAAahwB,UAE5B,CAEA,GAA0B,aAAtBgwB,EAAapvC,KAAqB,CACpC,MAAM,QACJ0vC,EAAO,eAAEC,EAAc,OAAE1K,EAAM,SAAEuK,EAAQ,OAAEI,EAAM,QAAEv0C,GACjD+zC,EAIJ,MAAO,CACLpvC,KAAM,WACN4vC,SACAH,QAAS,CACPzvC,KAAM,WACNilC,SACAuK,WACAvY,MAVUyY,EAAQl4C,KAAKS,IAAOI,EAAAA,EAAAA,KAAWT,EAAQK,KAAK+S,OAAOxV,SAW7Dq6C,aAViBF,GAAiBtnC,EAAAA,EAAAA,KAAWzQ,EAAQ+3C,QAAkB/8C,EAWvEyI,WAGN,CAEA,GAA0B,kBAAtB+zC,EAAapvC,KAA0B,CACzC,MAAM,OACJ7F,EAAM,qBAAE21C,EAAoB,OAAE7K,EAAM,SAAEuK,EAAQ,UAAEO,EAAS,kBAAEC,EAAiB,UAAEC,EAAS,wBACvFC,EAAuB,iBAAEC,EAAgB,MAAEvQ,EAAK,MAAE3I,GAChDmY,EACEv3C,GAAOwQ,EAAAA,EAAAA,KAAWzQ,EAAQuC,GAChC,IAAKtC,EACH,OAEF,MAAMu4C,EAAqBN,GAAsBt4C,KAAKS,IAAOoQ,EAAAA,EAAAA,KAAWzQ,EAAQK,KAAK+S,OAAOxV,SAE5F,MAAO,CACLwK,KAAM,gBACNyvC,QAAS,CACPzvC,KAAM,gBACNilC,SACAuK,WACA33C,OACAu4C,qBACAL,YACAC,oBACAC,YACAC,0BACAC,mBACAvQ,QACA3I,SAGN,CAEA,GAA0B,aAAtBmY,EAAapvC,KAAqB,CACpC,MAAM,OACJ7F,EAAM,qBAAE21C,EAAoB,OAAE7K,EAAM,SAAEuK,EAAQ,OAAEI,EAAM,UAAEG,EAAS,kBAAEC,EAAiB,UAAEC,EAAS,wBAC/FC,EAAuB,iBAAEC,GACvBf,EACEv3C,GAAOwQ,EAAAA,EAAAA,KAAWzQ,EAAQuC,GAChC,IAAKtC,EACH,OAEF,MAAMu4C,EAAqBN,GAAsBt4C,KAAKS,IAAOoQ,EAAAA,EAAAA,KAAWzQ,EAAQK,KAAK+S,OAAOxV,SAE5F,MAAO,CACLwK,KAAM,WACN4vC,SACAH,QAAS,CACPzvC,KAAM,WACNilC,SACAuK,WACA33C,OACAu4C,qBACAL,YACAC,oBACAC,YACAC,0BACAC,oBAGN,CAEA,GAA0B,oBAAtBf,EAAapvC,KAA4B,CAC3C,MAAM,eAAEqwC,EAAc,0BAAEC,GAA8BlB,EAChDmB,EAAYC,EAA6B54C,EAAQy4C,GACvD,IAAKE,EAAW,OAEhB,MAAO,CACLvwC,KAAM,kBACNqwC,eAAgBE,EAChBD,4BAEJ,CAGF,CAEO,SAASE,EACd54C,EAAW64C,GAEX,GAAuB,SAAnBA,EAAUzwC,KAAiB,OAAOywC,EAEtC,GAAuB,SAAnBA,EAAUzwC,KAAiB,CAC7B,MAAMnI,GAAOwQ,EAAAA,EAAAA,KAAWzQ,EAAQ64C,EAAUt2C,QAC1C,IAAKtC,EAAM,OAEX,MAAO,CACLmI,KAAM,OACNnI,OACA8sC,QAAS8L,EAAU9L,QAEvB,CAGF,CAEO,SAAS+L,EACdj5C,GAEA,MAAkB,aAAdA,EAAKuI,KACA,CACLgrB,WAAY,OACZD,cAAc,EACd4lB,SAAU,2CACVC,YAAa,8CACbC,YAAa,GAIC,eAAdp5C,EAAKuI,KACA,CACLgrB,WAAY,OACZD,cAAc,EACd4lB,SAAU,4CACVC,YAAa,+CACbC,YAAa,GAIC,aAAdp5C,EAAKuI,KACA,CACLgrB,WAAY,OACZD,cAAc,EACd4lB,SAAU,8CACVC,YAAa,iDACb3lB,sBAAuB,WAIT,eAAdxzB,EAAKuI,KACA,CACLgrB,WAAY,OACZD,cAAc,EACd4lB,SAAU,gDACVC,YAAa,mDACbC,YAAa,EACbC,qBAAqB,GAIP,QAAdr5C,EAAKuI,KACA,CACLgrB,WAAY,OACZD,cAAc,EACd4lB,SAAU,4CACVC,YAAa,+CACbC,YAAa,GAIC,QAAdp5C,EAAKuI,KACA,CACLgrB,WAAY,OACZD,cAAc,EACd4lB,SAAU,+CACVC,YAAa,kDACbC,YAAa,GAIV,CACL7lB,WAAY,OACZD,cAAc,EACd4lB,SAAU,4CACVC,YAAa,4CACbC,YAAa,EAEjB,CAEO,SAASE,EAA6B75C,EAAc85C,GACzD,MAAM/L,EAAS+L,EAAY/L,OAAS+L,EAAYC,MAAQ,IACxD,OAAIhM,EAAS,EACH,KAAI/tC,EAAKwuC,OAAOhiC,KAAKoyB,IAAImP,MAG3B,KAAI/tC,EAAKwuC,OAAOT,IAC1B,CAEO,SAASiM,EAAkBh6C,EAAc85C,GAC9C,OAAO95C,EAAKwuC,OAAOsL,EAAY/L,OAAS+L,EAAYC,MAAQ,IAC9D,CAEO,SAASE,EAA4B91C,GAC1C,MAAM,OAAEsE,GAAWtE,EAAQF,QAE3B,GAAqB,cAAjBwE,GAAQK,KAAsB,OAElC,MAAM,cAAEoxC,EAAa,MAAExR,GAAUjgC,EAEjC,MAAO,CACL1H,GAAIm5C,EACJxR,MAAO,CACLqF,OAAQrF,EACRqR,MAAO,GAETx5C,KAAM,CACJuI,KAAM,OACN/H,GAAIoD,EAAQ6d,WAAa7d,EAAQlB,OAAUkB,EAAQojC,UAAYpjC,EAAQlB,QAEzEsB,KAAMJ,EAAQI,KACdunC,QAAQ,EACRqO,SAAUh2C,EAAQ6d,iBAActmB,EAEpC,CAEO,SAAS0+C,EAAqCj2C,GACnD,MAAM,OAAEsE,GAAWtE,EAAQF,QAE3B,GAAqB,eAAjBwE,GAAQK,KAAuB,OAEnC,MAAM,cAAEoxC,EAAa,MAAExR,EAAK,aAAE3lB,GAAiBta,EAE/C,MAAO,CACL1H,GAAIm5C,EACJxR,MAAO,CACLqF,OAAQrF,EACRqR,MAAO,GAETx5C,KAAM,CACJuI,KAAM,OACN/H,GAAIgiB,GAENxe,KAAMJ,EAAQI,KACd81C,eAAgBl2C,EAAQpD,GAE5B,CAEO,SAASu5C,EAAwBC,EAA4BC,GAClE,OAAOC,EAAAA,EAAAA,GAAqBF,EAAKC,EACnC,C,qECrVO,SAAS9vC,EAAcnK,GAC5B,MAAO,UAAWA,CACpB,CAEO,SAASm6C,EAAcn6C,GAC5B,OAAQmK,EAAcnK,EACxB,CAEO,SAASiW,EAAejW,GAC7B,OAAImK,EAAcnK,GACE,uBAAdA,EAAKuI,MAA+C,uBAAdvI,EAAKuI,KACtC,yBAGS,oBAAdvI,EAAKuI,KACA,2BAGS,oBAAdvI,EAAKuI,KACA,mCAGT,EAGEvI,EAAKQ,KAAO45C,EAAAA,IACP,uBAGLp6C,EAAKgB,UACA,gBAGLhB,EAAKuI,MAAsB,gBAAdvI,EAAKuI,KACb,uBAGLvI,EAAKq6C,UACA,2BAGF,iCACT,C,8FCrCA,MAAMC,EAAmB,KACnBC,EAAyB,IAAIC,IACnC,IAAIC,EAAgB,IAAI98C,IACxB,MAGM+8C,GAAgBC,EAAAA,EAAAA,KAAS,KAC7B,MAAMC,EAAQn/B,MAAMC,KAAK++B,GACnBI,EAAcD,EAAM96C,MAAM,EALR,KAMlBg7C,EAAaF,EAAM96C,MAAMi7C,MAE/B14C,EAAAA,EAAAA,MAAa24C,kBAAkB,CAC7BC,QAASJ,IAGXA,EAAY/mC,SAAStT,GAAO+5C,EAAuBW,IAAI16C,EAAI0Q,KAAKC,SAEhEspC,EAAgB,IAAI98C,IAAIm9C,GAGpBL,EAAc57C,MAChB67C,GACF,GAlBuB,KAqBV,SAAS5iB,EAAsBqjB,GAC5C,MAAM77C,GAAQjE,EAAAA,EAAAA,KAAQ,KACpB,MAAM8E,GAASjF,EAAAA,EAAAA,MACf,OAAOigD,GAAKp7C,KAAKS,IAAO4I,EAAAA,EAAAA,KAAWjJ,EAAQK,KAAK+S,OAAOxV,QAAQ,GAC9D,CAACo9C,IAEEC,GAAkB//C,EAAAA,EAAAA,KAAQ,KAC9B,MAAM8E,GAASjF,EAAAA,EAAAA,MACf,OAAOoE,GAAOiU,QAAQvT,IACpB,MAAMq7C,EAAkBd,EAAuBe,IAAIt7C,EAAKQ,KAAO,EAC/D,GAAI0Q,KAAKC,MAAQkqC,EAAkBf,EACjC,OAAO,EAGT,IAAI/5C,EAAAA,EAAAA,KAASP,EAAKQ,IAAK,CACrB,MAAMG,EAAOX,EACPkE,GAAS0R,EAAAA,EAAAA,KAAiBzV,EAAQQ,EAAKH,IACvC+6C,EAAoBr3C,GAA0B,oBAAhBA,EAAOqE,KAC3C,OAAQ5H,EAAK05C,YAAc15C,EAAK0I,UAAWtI,EAAAA,EAAAA,KAAUJ,KAAUX,EAAKgB,WAAau6C,CACnF,CAAO,CACL,MAAMn7C,EAAOJ,EACb,OAAOqB,EAAAA,EAAAA,KAAcjB,KAAUA,EAAKo7C,YACtC,KACCz7C,KAAKY,GAASA,EAAKH,IAAG,GACxB,CAAClB,KAEJrD,EAAAA,EAAAA,KAAU,KACJm/C,GAAiB5/C,SACnB4/C,EAAgBtnC,SAAStT,GAAOi6C,EAAc97C,IAAI6B,KAClDk6C,IACF,GACC,CAACU,GACN,C,0HC9CA,MAAMK,EAA2D,CAC/D,kBAAmB,OAAQ,WAAY,SAAU,WAAY,eAEzDC,EAA2D,CAC/D,kBAAmB,kBAAmB,eAAgB,eAGjD,SAASC,EAAkBC,EAAqBC,EAA+BC,GACpF,IAAIC,EAA4B,GAC5BC,EAA6C,GAEjD,GAAa,aAATH,EAAqB,CACvB,MAAM,gBACJ9sB,KACGktB,GACDH,EACAF,EAAMK,gBAAkB,CAAC,GACzBC,EAAAA,EAAAA,IACAN,EAAMxsB,OACNqsB,GAGJM,EAAkBhtB,GAAmB,GACrCitB,EAAqB7tC,OAAOC,KAAK6tC,GAC9B1oC,QAAQ4B,GAAQpX,QAAQk+C,EAAe9mC,KAC5C,KAAO,CACL,MAAM,gBACJ6Z,KACGmtB,GACDL,EACAF,EAAMO,gBAAkB,CAAC,GACzBD,EAAAA,EAAAA,IACAN,EAAMxsB,OACNssB,GAGJK,EAAkB/sB,GAAmB,GACrCgtB,EAAqB7tC,OAAOC,KAAK+tC,GAC9B5oC,QAAQ4B,GAAQpX,QAAQo+C,EAAehnC,KAC5C,CAEA,MAAMhV,GAASjF,EAAAA,EAAAA,MAGf,MAAO,CACL6gD,gBAH8BA,EAAgBxoC,QAAQ/S,IAAOoQ,EAAAA,EAAAA,KAAWzQ,EAAQK,KAIhFw7C,oBAEJ,CAEA,SAASI,EAAuBH,GAC9B,GAAIA,EAAgB,CAClB,MAAM,gBACJltB,KACGstB,GACDJ,EAEJ,GACE9tC,OAAOmc,OAAO+xB,GAAS9oC,OAAOxV,SAASvC,OAAS,GAC5CuzB,GAAiBvzB,OAErB,MAAO,GAGT,GAAI6gD,EAAQC,KACV,MAAO,OACF,GAAID,EAAQE,OACjB,MAAO,SACF,GAAIF,EAAQG,SACjB,MAAO,WACF,GAAIH,EAAQI,SACjB,MAAO,WACF,GAAIJ,EAAQK,YACjB,MAAO,cAEX,CAEA,MAAO,EACT,CAyBA,MAAMC,EAA8B,CAClCd,KAAM,SACNe,WAAY,GACZxtB,OAAQ,CACNrmB,MAAO,CAAEzO,KAAM,IACfy0B,gBAAiB,GACjBC,gBAAiB,KAId,SAASiB,EAAe31B,EAAc01B,GAC3C,GAAIA,GAAUx0B,QAA+B,6BAArBw0B,EAAS,GAAGznB,MAA8D,IAAvBynB,EAAS,GAAG3gB,OACrF,OAAO/U,EAAKwF,MAAMkwB,EAAS,GAAGx0B,OAAS,GAEzCqhD,EAAAA,EAAYC,UAAY,EACxB,MAAMjrB,EAAQgrB,EAAAA,EAAYxN,KAAK/0C,GAC/B,OAAIu3B,GAAyB,IAAhBA,EAAMlB,MACVkB,EAAM,GAAK,IAEb,EACT,CAEO,SAAS3B,EAAkB51B,EAAc01B,GAC9C,GAAIA,GAAUx0B,QAA+B,6BAArBw0B,EAAS,GAAGznB,MAA8D,IAAvBynB,EAAS,GAAG3gB,OACrF,OAAO/U,EAAKwF,MAAMkwB,EAAS,GAAGx0B,OAAS,GAEzCqhD,EAAAA,EAAYC,UAAY,EACxB,MAAMjrB,EAAQgrB,EAAAA,EAAYxN,KAAK/0C,GAC/B,OAAIu3B,GAAyB,IAAhBA,EAAMlB,MACVr2B,EAAKwF,MAAM+xB,EAAM,GAAGr2B,OAAS,GAE/BlB,CACT,CAEA,MAAMyiD,EAA6DA,CACjEnB,EACA1zC,KAEA,OAAQA,EAAOK,MACb,IAAK,WAAY,CACf,MAAMy0C,EAAS/sB,EAAe2rB,EAAMxsB,OAAOrmB,MAAMzO,KAAMshD,EAAMxsB,OAAOrmB,MAAMinB,UAAY,IACtF,MAAO,IACF4rB,EACHxsB,OAAQ,IACHwsB,EAAMxsB,OACTrmB,MAAO,IACF6yC,EAAMxsB,OAAOrmB,MAChBzO,KAAM0iD,EAAS90C,EAAOotB,UAG1B2nB,WAAW,EAEf,CACA,IAAK,cAAe,CAClB,MAAM3iD,EAAO41B,EAAkB0rB,EAAMxsB,OAAOrmB,MAAMzO,KAAMshD,EAAMxsB,OAAOrmB,MAAMinB,UAAY,IACvF,MAAO,IACF4rB,EACHxsB,OAAQ,IACHwsB,EAAMxsB,OACTrmB,MAAO,CACLzO,OACA01B,SAAU,IAEZjS,SAAU7V,EAAOotB,SAEnB2nB,WAAW,EAEf,CACA,IAAK,WAAY,CACf,MAAMpvC,EAAQ3F,EAAOotB,QACfh7B,EAAO41B,EAAkB0rB,EAAMxsB,OAAOrmB,MAAMzO,KAAMshD,EAAMxsB,OAAOrmB,MAAMinB,UAAY,IACvF,MAAO,IACF4rB,EACHxsB,OAAQ,IACHwsB,EAAMxsB,OACTrmB,MAAO,CACLzO,KAAMuT,EAAQ,IAAMvT,EACpB01B,SAAU,IAEZjS,SAAU,IAEZk/B,WAAW,EAEf,CACA,IAAK,iBAAkB,CACrB,MAAMpvC,EAAoB3F,EAAOotB,QACjC,IAAIh7B,EAAOshD,EAAMxsB,OAAOrmB,MAAMzO,KAM9B,OALIshD,EAAMxsB,OAAOrmB,MAAMinB,UAAUx0B,QACS,6BAAxCogD,EAAMxsB,OAAOrmB,MAAMinB,SAAS,GAAGznB,MACW,IAA1CqzC,EAAMxsB,OAAOrmB,MAAMinB,SAAS,GAAG3gB,SAC/B/U,EAAOshD,EAAMxsB,OAAOrmB,MAAMzO,KAAKwF,MAAM87C,EAAMxsB,OAAOrmB,MAAMinB,SAAS,GAAGx0B,OAAS,IAExE,IACFogD,EACHxsB,OAAQ,IACHwsB,EAAMxsB,OACTrmB,MAAO,CACLzO,KAAMuT,EAAMA,MAAQ,IAAMvT,EAC1B01B,SAAU,CAAC,CACTznB,KAAM,2BACN8G,OAAQ,EACR7T,QAASqS,EAAMA,OAAS,IAAIrS,OAC5B0R,WAAYW,EAAMrN,MAGtBud,SAAU,IAEZk/B,WAAW,EAEf,CACA,IAAK,cACH,MAAO,IACFrB,EACH92B,SAAU5c,EAAOotB,QACjBumB,KAAM,QAEV,IAAK,qBACH,MAAO,IACFD,EACHK,gBAAgBC,EAAAA,EAAAA,IACdN,EAAMxsB,OACNqsB,IAGN,IAAK,qBACH,MAAO,IACFG,EACHO,gBAAgBD,EAAAA,EAAAA,IACdN,EAAMxsB,OACNssB,IAGN,IAAK,oBACH,MAAO,IACFE,EACHK,eAAgB/zC,EAAOotB,QACvBsnB,WAAY,IAEhB,IAAK,oBACH,MAAO,IACFhB,EACHO,eAAgBj0C,EAAOotB,QACvBsnB,WAAY,IAEhB,IAAK,cACH,OAAIhB,EAAMK,eACD,IACFL,EACHxsB,OAAQ,KACH8tB,EAAAA,EAAAA,IAAKtB,EAAMxsB,OAAQqsB,GACtB1yC,MAAO6yC,EAAMxsB,OAAOrmB,MAAQ6yC,EAAMxsB,OAAOrmB,MAAQ,CAAEzO,KAAM8hD,EAAuBR,EAAMK,oBACnFL,EAAMK,gBAEXA,oBAAgB9gD,EAChByhD,WAAY,GACZK,WAAW,GAEJrB,EAAMO,eACR,IACFP,EACHxsB,OAAQ,KACH8tB,EAAAA,EAAAA,IAAKtB,EAAMxsB,OAAQssB,MACnBE,EAAMO,gBAEXA,oBAAgBhhD,EAChByhD,WAAY,GACZK,WAAW,GAGNrB,EAEX,IAAK,aAAc,CACjB,MAAQp7C,GAAIskB,EAAQ,YAAEle,KAAgBwoB,GAAWlnB,EAAOotB,QAExD,MAAO,CACLumB,KAAM,OACN/2B,WACAsK,SACAwtB,WAAY,GAEhB,CACA,IAAK,gBACH,MAAO,IACFhB,EACHgB,WAAY10C,EAAOotB,SAGvB,IAAK,eACH,MAAO,IACFsmB,EACHqB,UAAW/0C,EAAOotB,SAGtB,IAAK,eACH,MAAO,IACFsmB,EACHt1C,UAAW4B,EAAOotB,SAGtB,IAAK,WACH,MAAO,IACFsmB,EACHt1C,WAAW,EACXE,MAAO0B,EAAOotB,SAGlB,IAAK,gBACH,MAAO,IACFsmB,EACHxsB,OAAQ,IACHwsB,EAAMxsB,OACTU,WAAY5nB,EAAOotB,UAGzB,IAAK,QACH,OAAOqnB,EACT,QACE,OAAOf,EACX,EAOF,EAJ0BuB,KACjBC,EAAAA,EAAAA,GAAWL,EAAgBJ,E,6DCxUpC,QAbA,SAAoBU,EAA8BC,GAChD,MAAMC,GAAgB7+C,EAAAA,EAAAA,GAAgB2+C,IAEtCphD,EAAAA,EAAAA,KAAU,KACR,GAAqB,iBAAVqhD,EACT,OAGF,MAAM98C,EAAKpE,YAAW,IAAMmhD,KAAiBD,GAC7C,MAAO,IAAMjhD,aAAamE,EAAG,GAC5B,CAAC88C,GACN,C,8FCRA,MAAME,EAAS,EACTC,EAAa,EAEJ,SAAS34C,EACtB/H,EACAvC,GAAa,EACbkjD,EACAC,EAASH,EACTI,EACAC,GAGA,MAAMh5C,GAAYJ,EAAAA,EAAAA,IAA0B,MACtCq5C,GAAYr5C,EAAAA,EAAAA,MAmDlB,OAjDAs5C,EAAAA,EAAAA,IAAc,KACPvjD,IACHsjD,EAAU74C,SAAU,EACtB,GACC,CAAClI,EAASvC,KAEbyB,EAAAA,EAAAA,KAAU,KACR,MAAM8d,EAASlV,EAAUI,QAEzB,IAAKlI,IAAYgd,GAAUvf,GAAcsjD,EAAU74C,QACjD,OAGF64C,EAAU74C,SAAU,EAEpB,MAAM+4C,EAAM,IAAIC,MAEVC,EAAcA,KAClB,MAAM35C,EAAQq5C,GAAkBI,EAAIz5C,MAC9BC,EAASq5C,GAAmBG,EAAIx5C,OAChCwV,EAAMD,EAAOE,WAAW,KAAM,CAAEkkC,OAAO,KAE7Cr4C,EAAAA,EAAAA,KAAgB,KACdiU,EAAOxV,MAAQA,EACfwV,EAAOvV,OAASA,EAEZ45C,EAAAA,KACFpkC,EAAIzG,OAAU,QAAOoqC,QAGvB3jC,EAAIM,UAAU0jC,EAAe,GAATL,EAAsB,GAATA,EAAYp5C,EAAiB,EAATo5C,EAAYn5C,EAAkB,EAATm5C,GAErES,EAAAA,KACHC,EAAAA,EAAAA,GAASrkC,EAAK,EAAG,EAAGzV,EAAOC,EAAQm5C,EAAQF,EAC7C,GACA,EAGJO,EAAIM,OAAS,KACPZ,GACFvqC,EAAAA,EAAAA,IAAe+qC,GAEfA,GACF,EAGFF,EAAIh/C,IAAMjC,CAAO,GAChB,CAACA,EAASvC,EAAYqjD,EAAiBD,EAAgBD,EAAQD,IAE3D74C,CACT,C,oHCzDA,MA2KA,EA3K8ByjB,EAC5BloB,OACAO,OACAmkB,WACAG,WACAvB,UACAS,kBACA9jB,gBACAqB,gBACA0f,YACA4G,eACAC,aACAC,yBACAC,gBAeCo2B,GAAa,KACd,MAAM9+C,GAAOC,EAAAA,EAAAA,MAEP,OAAE2J,GAAW1I,GAAQ,CAAC,EACtB69C,EAAyB79C,GAAMH,KAAO45C,EAAAA,IAEtCqE,GAAcpjD,EAAAA,EAAAA,KAAQ,KAC1B,GAAK+E,EAEL,OAAIC,EACKZ,EAAK,WAGVc,EAAAA,EAAAA,KAASH,EAAKI,IACTf,EAAK,mBAGVi/C,EAAAA,EAAAA,KAAiBt+C,GACZX,EAAK,eAGV4B,EAAAA,EAAAA,KAAcjB,GACTX,EAAK,gBAGPA,EAAK,mBAAmB,GAC9B,CAACW,EAAMC,EAAeZ,IAEzB,OAAOpE,EAAAA,EAAAA,KAAQ,KACb,IAAK+E,GAAQghB,EACX,OAGF,MAAM,iBACJu9B,EAAgB,wBAChBC,EAAuB,qBACvBC,EAAoB,mBACpBC,EAAkB,iBAClBC,EAAgB,iBAChBC,IACE38C,EAAAA,EAAAA,MAEE48C,EAAqBt2B,EAAAA,IAAgC,CACzD5f,MAAOm2C,EAAAA,GAAc,qBAAuB,kBAC5C31C,KAAM,kBACNqmB,QAASA,KAELovB,EADE3+C,EACe,CAAEqC,OAAQhB,EAAgBihB,SAAUviB,EAAKI,IAEzC,CAAEkC,OAAQtC,EAAKI,IAClC,GAIE2+C,EAAeA,KACf9+C,EACFu+C,EAAwB,CAAEp+C,GAAIJ,EAAKI,KAEnCm+C,EAAiB,CAAEn+C,GAAIJ,EAAKI,GAAIskB,SAAUA,GAC5C,EAGIs6B,EAAYn6B,EACd,CACAlc,MAAOtJ,EAAK,gBACZ8J,KAAM,QACNqmB,QAASuvB,GAET,CACAp2C,MAAOtJ,EAAK,YACZ8J,KAAM,MACNqmB,QAASuvB,GAGPE,EAAe,CACnBt2C,MAAO01C,EACPl1C,KAAM,SACNwmB,aAAa,EACbH,QAAS5H,GAGX,GAAI3nB,EACF,OAAOm0B,EAAAA,EAAAA,IAAQ,CAACyqB,EAAoBG,EAAWC,IAGjD,MAAMC,EAAoBn7B,EAAkB,CAC1Cpb,MAAOtJ,EAAK,+BACZ8J,KAAM,SACNqmB,QAAS1H,QACP/sB,EAEEokD,EAAa77B,EACf,CACA3a,MAAOtJ,EAAK,mBACZ8J,KAAM,SACNqmB,QAASA,IAAMivB,EAAqB,CAAEn8C,OAAQtC,EAAKI,GAAIkjB,SAAS,KAEhE,CACA3a,MAAQ,GAAEtJ,EAAK,sBACf8J,KAAM,OACNqmB,QAAS3H,GAGb,GAAIs2B,EACF,OAAO/pB,EAAAA,EAAAA,IAAQ,CAACyqB,EAAoBG,EAAWE,EAAmBC,IAGpE,MAAMC,EAAoBp/C,EAAKmqB,aAAenqB,EAAKwqB,cAC/C,CAAE7hB,MAAOtJ,EAAK,cAAe8J,KAAM,YAAaqmB,QAASA,IAAMmvB,EAAiB,CAAEv+C,GAAIJ,EAAKI,WAC3FrF,EACEskD,EAAuBr/C,EAAKmqB,aAAenqB,EAAKwqB,eAAmBxqB,EAAKsK,aAE1EvP,EADA,CAAE4N,MAAOtJ,EAAK,gBAAiB8J,KAAM,SAAUqmB,QAASA,IAAMmvB,EAAiB,CAAEv+C,GAAIJ,EAAKI,MAGxFk/C,GAAgBC,EAAAA,EAAAA,KAAev/C,GACjC,CAAE2I,MAAOtJ,EAAK,aAAc8J,KAAM,YAAaqmB,QAASA,IAAMkvB,EAAmB,CAAEt+C,GAAIJ,EAAKI,MAC5F,CAAEuI,MAAOtJ,EAAK,WAAY8J,KAAM,UAAWqmB,QAASA,IAAMkvB,EAAmB,CAAEt+C,GAAIJ,EAAKI,MAGtFo/C,EADYz3B,IAAiBxnB,KAASU,EAAAA,EAAAA,KAAcjB,KAASy/C,EAAAA,EAAAA,KAAYz/C,IAE3E,CAAE2I,MAAOtJ,EAAK,qBAAsB8J,KAAM,OAAQqmB,QAASzH,QAC3DhtB,EAEE2kD,OAA0B3kD,IAAb2pB,EAEnB,OAAO0P,EAAAA,EAAAA,IAAQ,CACbyqB,EACAK,EACAE,EACAC,EACAL,GACC/1C,GAAUk2C,GACVl2C,IAAWm1C,IAA2BsB,GAAcJ,EACrDE,EACAP,GACA,GACD,CACDj/C,EAAMO,EAAMwjB,EAAiB1kB,EAAMyoB,EAAwBjD,EAAUs5B,EAAY76B,EAAShiB,EAC1FsmB,EAAcC,EAAYE,EAAcrD,EAAUzb,EAAQm1C,EAAwBn+C,EAAeo+C,EACjGr9B,GACA,C,6DClLW,SAAS6F,EACtBvkB,EACAilB,EACA/jB,EACAm8C,EACAvlD,GAEA,MAAM,YAAEwlD,IAAgB39C,EAAAA,EAAAA,OAExBpG,EAAAA,EAAAA,KAAU,KACJzB,GACAmtB,IAAc/jB,GAChBo8C,EAAY,CAAEt9C,SAAQilB,UAAWA,EAAYo4B,iBAAkBA,GACjE,GACC,CAACvlD,EAAYkI,EAAQkB,EAAS+jB,EAAWo4B,GAC9C,C,wECWA,QAtBA,SACE72C,EACA+2C,EACA34B,GAEA,MAAM,qBAAE44B,IAAyB79C,EAAAA,EAAAA,MAE3B89C,GAAqB9kD,EAAAA,EAAAA,KAAQ,KACjC,MAAM+kD,GAAYzF,EAAAA,EAAAA,IAASuF,EAVD,KAU8C,GACxE,MAAO,KACLE,EAAU,CAAEl3C,OAAQA,EAASm3C,SAAU,CAACJ,IAAY,CACrD,GACA,CAACA,EAAS/2C,KAEbjN,EAAAA,EAAAA,KAAU,KAEJiN,GAAU+2C,KADW34B,KAAW,YAAaA,MAAS,cAAeA,KAEvE64B,GACF,GACC,CAACA,EAAoB74B,EAAO24B,EAAS/2C,GAC1C,C,2FCjBO,SAAS0qB,EAA8B9O,GAC5C,MAAMhqB,GAAcC,EAAAA,EAAAA,KAIpB,OAFAkB,EAAAA,EAAAA,KAAU,KAAMqkD,EAAAA,EAAAA,IAAsBx7B,EAAUhqB,IAAc,CAACgqB,EAAUhqB,KAElEylD,EAAAA,EAAAA,IAAcz7B,EACvB,CAEO,SAAS0K,IACd,MAAM10B,GAAcC,EAAAA,EAAAA,KAIpB,OAFAkB,EAAAA,EAAAA,KAAU,KAAMukD,EAAAA,EAAAA,IAA0B1lD,IAAc,CAACA,KAElD2lD,EAAAA,EAAAA,KACT,CAEO,SAASC,IACd,MAAM5lD,GAAcC,EAAAA,EAAAA,KAIpB,OAFAkB,EAAAA,EAAAA,KAAU,KAAM0kD,EAAAA,EAAAA,IAAsB7lD,IAAc,CAACA,KAE9C8lD,EAAAA,EAAAA,KACT,C,kDChCA,MAuCA,EAvC4Bla,CAC1BzuB,EACAzd,EACAqmD,GAAuB,EACvBC,GAAwB,MAExB7kD,EAAAA,EAAAA,KAAU,KACR,GAAIzB,EACF,OAGF,MAAMsc,EAAYmB,EAAahT,QAC/B,GAAK6R,EAqBL,OAFAA,EAAUkb,iBAAiB,QAAS+I,EAAc,CAAEW,SAAUmlB,IAEvD,KACL/pC,EAAUmb,oBAAoB,QAAS8I,EAAa,EAlBtD,SAASA,EAAa/1B,GAEpB,IAAI+7C,GAAU,EACT/7C,EAAEg8C,OAKLD,EAAW/7C,EAAEg8C,OAAS,GAA+B,IAA1BlqC,EAAWmqC,YAAsBj8C,EAAEg8C,OAAS,GAAKlqC,EAAWmqC,YAAcnqC,EAAWoqC,YAAcpqC,EAAW8C,YAAc,GAJvJmnC,EAAW/7C,EAAEy2B,OAAS,GAA+B,IAA1B3kB,EAAWmqC,YAAsBj8C,EAAEy2B,OAAS,GAAK3kB,EAAWmqC,YAAcnqC,EAAWoqC,YAAcpqC,EAAW8C,YAAc,EACvJ9C,EAAWmqC,YAAcj8C,EAAEy2B,OAAS,EAChColB,GAAsB77C,EAAEoD,kBAI1B04C,IAA0BC,GAC5B/7C,EAAEkmB,iBAEN,CAMC,GACA,CAACjT,EAAczd,EAAYqmD,GAAsB,C,4DCjCtD,MAAMM,EAAc,IAAIxjD,IAAI,CAAC,QAAS,WAAY,WAE5CyjD,GAAWC,EAAAA,EAAAA,KAGV,SAASzoB,EAAW0oB,IACzBrlD,EAAAA,EAAAA,KAAU,KACR,IAAKqlD,EACH,OAGF,MAAMC,EAAUpzC,OAAOozC,QAAQD,GAc/B,OAAOF,EAASI,aAZhB,SAAuBx8C,IAgB3B,SAAyBA,GACvB,QAAIA,EAAE2D,kBAAkB84C,eACdN,EAAY9iD,IAAI2G,EAAE2D,OAAO+4C,QAIrC,EArBWC,CAAgB38C,IAIrBu8C,EAAQztC,SAAQ,EAAE8tC,EAAQhyB,OCmDzB,SAA0BgyB,GAC/B,OAAQz5C,GAlCV,SAAuBy5C,EAAgBz5C,GACrC,MAAM,IACJ4T,EAAG,KAAE8lC,EAAI,KAAEC,EAAI,IAAEC,EAAG,MAAE7oB,EAAK,IAAE/jB,GAC3BysC,GACE,OACJI,EAAM,QAAExwB,EAAO,QAAEwH,EAAO,SAAEvH,EAAUtc,IAAK8sC,GACvC95C,EAEJ,GAAI4T,IAAQimC,EACV,OAAO,EAGT,GAAID,GACF,IAAKvwB,IAAYwH,EACf,OAAO,MAEJ,CACL,GAAI6oB,IAASrwB,EACX,OAAO,EAET,GAAIswB,IAAS9oB,EACX,OAAO,CAEX,CACA,OAAIE,IAAUzH,GAIP1zB,QAAQoX,IACT8sC,EAAWC,gBAAkB/sC,EAAI+sC,eAChC/5C,EAAMupB,KAAK9jB,QAAQ,MAAO,IAAIs0C,gBAAkB/sC,EAAI+sC,eAC7D,CAGoBC,CA1Db,SAAqBP,GAC1B,MAAMxzC,EAAOwzC,EACVM,cACAE,MAAM,KACNriD,KAAKsiD,GAASA,EAAKv0C,SAEhBw0C,EAA+B,CACnCvmC,IAAK3N,EAAK6C,SAAS,OACnB4wC,KAAMzzC,EAAK6C,SAAS,QACpB6wC,KAAM1zC,EAAK6C,SAAS,QACpB8wC,IAAK3zC,EAAK6C,SAAS,OACnBioB,MAAO9qB,EAAK6C,SAAS,UAGjBsxC,EAAe,CAAC,MAAO,OAAQ,OAAQ,QAAS,OAItD,MAAO,IACFD,EACHntC,IAJc/G,EAAKqB,MAAM0F,IAASotC,EAAatxC,SAASkE,KAM5D,CAoCkCqtC,CAAYZ,GAASz5C,EACvD,EDpDYs6C,CAAiBb,EAAjBa,CAAyBz9C,IAC3B4qB,EAAQ5qB,EACV,GAEJ,GAE0C,GACzC,CAACs8C,GACN,CAxBAvvB,SAAS2wB,gBAAgB1wB,iBAAiB,UAAWovB,EAASuB,a,kDEL/C,SAAS1P,EAA2BhuC,GACjD,MAAM29C,GAAUn+C,EAAAA,EAAAA,MACVo+C,GAAUp+C,EAAAA,EAAAA,MAQhB,OANIo+C,EAAQ59C,UAAYA,IACtB29C,EAAQ39C,QAAU49C,EAAQ59C,SAG5B49C,EAAQ59C,QAAUA,EAEX29C,EAAQ39C,OACjB,C,6DCNe,SAASm4C,EACtB0F,EACAC,GAEA,MAAMjoD,GAAcC,EAAAA,EAAAA,KACdioD,GAAav+C,EAAAA,EAAAA,IAAOq+C,GACpBlH,GAAQn3C,EAAAA,EAAAA,IAAOs+C,GAEfE,GAAWxgD,EAAAA,EAAAA,KAAayF,IAC5B0zC,EAAM32C,QAAU+9C,EAAW/9C,QAAQ22C,EAAM32C,QAASiD,GAClDpN,IACO8gD,EAAM32C,UACZ,IAEH,MAAO,CACL22C,EAAM32C,QACNg+C,EAEJ,C,uGCyBA,QAvCA,SACExoD,EACAyoD,GAAsB,GAEtB,MAAM,iBACJ39B,IACEljB,EAAAA,EAAAA,MACE8gD,GAAmB1+C,EAAAA,EAAAA,IAAO,GAE1B2+C,GAAe1kD,EAAAA,EAAAA,IAClBgb,IACC,MAAM2pC,EAAaF,EAAiBl+C,QAE9Bq+C,EAAY5pC,EAAMC,YAAYnV,OAGpC,GAFA2+C,EAAiBl+C,QAAUq+C,GAEvBC,EAAAA,EAAAA,QAAwBF,GAAcC,GAAaD,EAAY,OAEnE,MAAMvsC,EAAY4C,EAAM/Q,OAAOumC,QAAQ,gBACvC,IAAKp4B,EAAW,QAEhB0sC,EAAAA,EAAAA,IAvB4B,KAyB5B,MAAMC,EAAaH,EAAYD,GACzB,aAAE7nB,EAAY,aAAED,EAAY,UAAEZ,GAAc7jB,EACtB7K,KAAKy3C,MAAMnoB,EAAeZ,EAAYa,GACfioB,GA9BnB,GAiC9Bl+B,GACF,IAIEo+B,GAAkBC,EAAAA,EAAAA,GAAqBR,EAAc,CAACA,GArC1C,KAqCsE,IAExF/2C,EAAAA,EAAAA,GAAkB5R,EAAKkpD,GAAkBT,EAC3C,C,mFC3CA,MAAMW,EAAmB,IAEnBC,EAAsC,IAAItJ,IAEjC,SAASuJ,EAAwBjtC,EAAwBtR,EAAcstC,EAAW+Q,IAC1F5oD,EAAAA,EAAAA,MAA0BC,EAAAA,EAAAA,SAC7B43C,EAAW,GAGb,MAAMp4C,EAA0C,QAAlCoc,EAAUktC,aAAa,QAC/B,WACJ/C,EAAYt1C,YAAas4C,EAAc,YAAE/C,EAAagD,SAAS,SAAEC,IAC/DrtC,EAEJ,IAAI8E,EAAOpW,EAAOy7C,EAElB,GAAIrlC,EAAO,EAAG,CACZ,MAAMwoC,GAAiBnD,GAAcvmD,GAAS,EAAI,GAClDkhB,EAAO3P,KAAKC,IAAI0P,EAAMwoC,EACxB,MAAO,GAAIxoC,EAAO,EAAG,CACnB,MAAMwoC,EAAgBlD,GAAeD,EAAagD,GAClDroC,EAAO3P,KAAKE,IAAIyP,EAAMwoC,EACxB,CAEA,GAAa,IAATxoC,EACF,OAAOyoC,QAAQC,UAGbH,GAAYL,EAASzlD,IAAI8lD,IAC3BL,EAASxI,IAAI6I,EAAbL,GAGF,MAAMn7C,EAASs4C,EAAarlC,EAE5B,OAAO,IAAIyoC,SAAeC,KACxBx+C,EAAAA,EAAAA,KAAgB,KACd,GAAiB,IAAbgtC,EAGF,OAFAh8B,EAAUmqC,WAAat4C,OACvB27C,IAIF,IAAIC,GAAY,EAChB,MAAM/jD,EAAKyL,KAAKwN,SAAS07B,WACzBr+B,EAAUotC,QAAQC,SAAW3jD,EAC7BsjD,EAAS5I,IAAI16C,GAAI,KACf+jD,GAAY,CAAI,IAGlBztC,EAAUhY,MAAM0lD,eAAiB,OAEjC,MAAMC,EAAUvzC,KAAKC,OAErB0hC,EAAAA,EAAAA,KAAQ,KACN,GAAI0R,EAAW,OAAO,EAEtB,MAAMG,EAAIz4C,KAAKE,KAAK+E,KAAKC,MAAQszC,GAAW3R,EAAU,GAEhD6R,EAAc/oC,GAAQ,EAgBpC,SAAoB8oC,GAClB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAlBwCE,CAAWF,IAU3C,OATA5tC,EAAUmqC,WAAah1C,KAAKy3C,MAAM/6C,EAASg8C,GAEvCD,GAAK,IACP5tC,EAAUhY,MAAM0lD,eAAiB,UAC1B1tC,EAAUotC,QAAQC,SACzBL,EAASe,OAAOrkD,GAChB8jD,KAGKI,EAAI,CAAC,GACX5+C,EAAAA,GAAgB,GACnB,GAEN,C,sKChDA,IACIg/C,EACAC,EAFAC,GAAc,EAIH,SAASxV,EAAcyV,GACpCH,EAAcG,EACd,MAAMC,EAASC,EAAqBF,GAEpC,GAAIA,EAAKrV,uBACP,OAAOsV,GAGTp/C,EAAAA,EAAAA,IAAgBo/C,EAElB,CAEO,SAASE,IACTJ,KAILK,EAAAA,EAAAA,OAEAlyC,EAAAA,EAAAA,KAAe,MACbrN,EAAAA,EAAAA,IAAgBq/C,EAAqBL,GAAc,IAEvD,CAEA,SAASK,EAAqBF,GAC5B,MAAM,UACJnuC,EAAS,QACToqB,EAAO,SACP/H,EAAQ,OACRsW,EAAS,EAAC,YACVH,EAAcZ,EAAAA,IAAmB,eACjCgB,EAAc,2BACdC,GACEsV,EAEJ,IAAIK,EAAgBL,EAAKK,cAGvB5V,IAAmB6V,EAAAA,GAAeC,SAC9BvqD,EAAAA,EAAAA,MAA0BC,EAAAA,EAAAA,SAE9BoqD,EAAgB,GAGlB,MAAQ9pB,aAAciqB,GAAkBvkB,GAChCvG,UAAW+qB,EAAkBlqB,aAAcmqB,EAAe,aAAEpqB,GAAiBzkB,EAC/E8uC,GAAaC,EAAAA,EAAAA,GAAqB3kB,EAASpqB,GAAWnR,IAEtDmgD,EAAwBnW,GAA8B74B,EAAUotC,QAAQ6B,aAC1Ej0B,OAAOhb,EAAUotC,QAAQ6B,cACzBJ,EAEJ,IAAIK,EACJ,OAAQ7sB,GACN,IAAK,QACH6sB,EAAYJ,EAAanW,GAAWS,EAAAA,GAAa,EAAI,GACrD,MACF,IAAK,MACH8V,EAAYJ,EAAaH,EAAgBhW,EAAUqW,EACnD,MAEF,IAAK,UACL,IAAK,SACL,IAAK,cACHE,EAAWP,EAAgBK,EACtBF,EAAaH,EAAgB,EAAIK,EAAwB,EACzDF,EAAanW,EAItB,MAAMwW,EAwER,SACEnvC,EACAkvC,EACA1W,EAAcZ,EAAAA,IACdgB,GAEA,MAAM,UAAE/U,GAAc7jB,EAEtB,QAAuB3b,IAAnBu0C,EAA8B,CAChC,MAAMrgC,EAAS22C,EAAWrrB,EAE1B,GAAItrB,GAAUigC,EACZ,OAAO3U,GAAatrB,EAASigC,GACxB,GAAIjgC,EAASigC,EAClB,OAAO3U,GAAatrB,EAASigC,EAEjC,KAAO,IAAII,IAAmB6V,EAAAA,GAAeW,GAC3C,OAAOF,EAAW1W,EACb,GAAII,IAAmB6V,EAAAA,GAAeY,KAC3C,OAAOl6C,KAAKC,IAAI,EAAG85C,EAAW1W,EAChC,CAEA,OAAO3U,CACT,CA/FqByrB,CAAoBtvC,EAAWkvC,EAAU1W,EAAaI,GAEzE,IAAI9zB,EAAOoqC,EAAWC,EACtB,GAAIrqC,EAAO,EAAG,CACZ,MAAMwoC,GAAiB6B,EACvBrqC,EAAO3P,KAAKC,IAAI0P,EAAMwoC,EACxB,MAAO,GAAIxoC,EAAO,EAAG,CACnB,MAAMwoC,EAAgB7oB,GAAgB0qB,EAAaH,GACnDlqC,EAAO3P,KAAKE,IAAIyP,EAAMwoC,EACxB,CAEA,MAAMiC,EAAUp6C,KAAKoyB,IAAIziB,GAEzB,MAAO,KACL,GAAIyqC,EAAU,EAKZ,YAJIX,IAAqBO,IACvBnvC,EAAU6jB,UAAYsrB,IAM1B,MAAMt9C,EAASs9C,EAAarqC,EAE5B,GAAsB,IAAlB0pC,EAEF,YADAxuC,EAAU6jB,UAAYhyB,GAIxB,MAAMi8C,EAAayB,GAAWC,EAAAA,IAAuCC,EAAkBC,EACjF1T,EAAWwS,GACfmB,EAAAA,IACGJ,EAAU3X,EAAAA,KAAwBgY,EAAAA,IAAsBD,EAAAA,KAEvDhC,EAAUvzC,KAAKC,MAErB6zC,GAAc,EAEd,MAAM2B,EAA0B5B,EAChCA,GAAsBvB,EAAAA,EAAAA,SAAoBroD,GAAW,GACrDwrD,OAEAC,EAAAA,EAAAA,KAAc,KACZ,MAAMlC,EAAIz4C,KAAKE,KAAK+E,KAAKC,MAAQszC,GAAW3R,EAAU,GAChD6R,EAAc/oC,GAAQ,EAAIgpC,EAAWF,IACrC1pB,EAAe/uB,KAAKy3C,MAAM/6C,EAASg8C,GAazC,OAXA7tC,EAAU6jB,UAAYK,EAEtBgqB,EAAcN,EAAI,GAAK1pB,IAAiBryB,EAEnCq8C,IACHF,OAAc3pD,EAEd4pD,MACAA,OAAsB5pD,GAGjB6pD,CAAW,GACjBl/C,EAAAA,GAAgB,CAEvB,CAEO,SAASy9C,IACd,OAAOyB,CACT,CAEO,SAAS6B,IACd9B,IACAA,OAAsB5pD,CACxB,CA2BA,SAASorD,EAAgB7B,GACvB,OAAO,GAAM,EAAIA,IAAM,GACzB,CAEA,SAAS8B,EAAe9B,GACtB,OAAO,GAAM,EAAIA,IAAM,CACzB,C,2HC/LO,SAASoC,EAAQC,GACtB,MAAO,CACLC,SAASD,EAAME,UAAU,EAAG,GAAI,IAChCD,SAASD,EAAME,UAAU,EAAG,GAAI,IAChCD,SAASD,EAAME,UAAU,EAAG,GAAI,IAEpC,CAOO,SAASpiB,EAAQkiB,GACtB,MAAMG,EAAKH,EAAM,GAAG5R,SAAS,IACvBgS,EAAKJ,EAAM,GAAG5R,SAAS,IACvBiS,EAAKL,EAAM,GAAG5R,SAAS,IAC7B,OAAqB,GAAb+R,EAAG1rD,OAAc,IAAM0rD,EAAKA,IAAoB,GAAbC,EAAG3rD,OAAc,IAAM2rD,EAAKA,IAAoB,GAAbC,EAAG5rD,OAAc,IAAM4rD,EAAKA,EAC5G,CAaO,SAASC,GAAShqC,EAAGiqC,EAAGjxB,IAC7BhZ,GAAK,IACLiqC,GAAK,IACLjxB,GAAK,IAEL,IACIkxB,EAAYC,EADZt7C,EAAMD,KAAKC,IAAImR,EAAGiqC,EAAGjxB,GAAIlqB,EAAMF,KAAKE,IAAIkR,EAAGiqC,EAAGjxB,GACvBoxB,EAAYv7C,EAEnCQ,EAAIR,EAAMC,EAGd,GAFAq7C,EAAW,GAAPt7C,EAAW,EAAIQ,EAAIR,EAEnBA,GAAOC,EACTo7C,EAAI,MACC,CACL,OAAQr7C,GACN,KAAKmR,EACHkqC,GAAKD,EAAIjxB,GAAK3pB,GAAK46C,EAAIjxB,EAAI,EAAI,GAC/B,MACF,KAAKixB,EACHC,GAAKlxB,EAAIhZ,GAAK3Q,EAAI,EAClB,MACF,KAAK2pB,EACHkxB,GAAKlqC,EAAIiqC,GAAK56C,EAAI,EAItB66C,GAAK,CACP,CAEA,MAAO,CAACA,EAAGC,EAAGC,EAChB,CAaO,SAASC,GAASH,EAAGC,EAAGC,IAC7B,IAAIpqC,EAAYiqC,EAAYjxB,EAExB36B,EAAIuQ,KAAK+M,MAAU,EAAJuuC,GACfI,EAAQ,EAAJJ,EAAQ7rD,EACZksD,EAAIH,GAAK,EAAID,GACbK,EAAIJ,GAAK,EAAIE,EAAIH,GACjB9C,EAAI+C,GAAK,GAAK,EAAIE,GAAKH,GAE3B,OAAQ9rD,EAAI,GACV,KAAK,EACH2hB,EAAIoqC,EACJH,EAAI5C,EACJruB,EAAIuxB,EACJ,MACF,KAAK,EACHvqC,EAAIwqC,EACJP,EAAIG,EACJpxB,EAAIuxB,EACJ,MACF,KAAK,EACHvqC,EAAIuqC,EACJN,EAAIG,EACJpxB,EAAIquB,EACJ,MACF,KAAK,EACHrnC,EAAIuqC,EACJN,EAAIO,EACJxxB,EAAIoxB,EACJ,MACF,KAAK,EACHpqC,EAAIqnC,EACJ4C,EAAIM,EACJvxB,EAAIoxB,EACJ,MACF,KAAK,EACHpqC,EAAIoqC,EACJH,EAAIM,EACJvxB,EAAIwxB,EAIR,MAAO,CACL57C,KAAKy3C,MAAU,IAAJrmC,GACXpR,KAAKy3C,MAAU,IAAJ4D,GACXr7C,KAAKy3C,MAAU,IAAJrtB,GAEf,CAEO6M,eAAe0B,EAAgBkjB,GAEpC,MACMC,EAAuC,CAAC,EAAG,EAAG,GACpD,IAAIC,EACAzjD,EACAC,EAEAhJ,EADAE,GAAK,EAELusD,EAAgC,CAAC,EAAG,EAAG,GACvCxiB,EAAQ,EAEZ,MAAM1rB,EAASgY,SAASh2B,cAAc,UAChCmsD,EAAUnuC,EAAOE,YAAcF,EAAOE,WAAW,MACvD,IAAKiuC,EACH,OAAOH,EAGT,MAAMI,QAAczvC,EAAAA,EAAAA,IAAaovC,GACjCtjD,EAAS2jD,EAAMC,eAAiBD,EAAM3sB,cAAgB2sB,EAAM3jD,OAC5DD,EAAQ4jD,EAAME,cAAgBF,EAAMx8C,aAAew8C,EAAM5jD,MACzDwV,EAAOvV,OAASA,EAChBuV,EAAOxV,MAAQA,EAEf2jD,EAAQ5tC,UAAU6tC,EAAO,EAAG,GAE5B,IACEH,EAAOE,EAAQI,aAAa,EAAG,EAAG/jD,EAAOC,EAC3C,CAAE,MAAOQ,GACP,OAAO+iD,CACT,CAKA,IAHAvsD,EAASwsD,EAAKA,KAAKxsD,QAGXE,GAAKu6B,IAAiBz6B,GACH,IAArBwsD,EAAKA,KAAKtsD,EAAI,OAChB+pC,EACFwiB,EAAI,IAAMD,EAAKA,KAAKtsD,GACpBusD,EAAI,IAAMD,EAAKA,KAAKtsD,EAAI,GACxBusD,EAAI,IAAMD,EAAKA,KAAKtsD,EAAI,IAO1B,OAJAusD,EAAI,GAAKh8C,KAAK+M,MAAMivC,EAAI,GAAKxiB,GAC7BwiB,EAAI,GAAKh8C,KAAK+M,MAAMivC,EAAI,GAAKxiB,GAC7BwiB,EAAI,GAAKh8C,KAAK+M,MAAMivC,EAAI,GAAKxiB,GAEtBwiB,CACT,CAEO,SAASM,EAAaC,GAC3B,MAAOnrC,EAAGiqC,EAAGjxB,GAAKmyB,EAElB,MADa,MAASnrC,EAAI,MAASiqC,EAAI,MAASjxB,CAElD,CAGO,SAASoyB,EAAgBD,GAC9B,IAAKE,EAAKC,EAAYlgD,GAAS4+C,EAAQmB,GAOvC,OALAG,EAAa18C,KAAKE,IAAI,EAAGw8C,EAAa,IAAO,IAAO,EAAIA,IACxDlgD,EAAQA,EAAQ,GACZwD,KAAKC,IAAI,EAAW,IAARzD,GACZwD,KAAKC,IAAI,EAAGD,KAAKE,IAAI,EAAG,EAAY,IAAR1D,IAExB,QAAa,IAANigD,MAA2B,IAAbC,OAA8B,IAARlgD,SACrD,CAGO,MAAMmgD,EAAiBtlD,GAOpB,QALKA,GAAS,GAAM,QACbA,GAAS,EAAK,QACR,IAARA,OAHEA,GAAS,GAAM,KAKH,OAQhBulD,EAAgBvlD,GAIdilD,EAAa,CAHfjlD,GAAS,GAAM,IACfA,GAAS,EAAK,IACP,IAARA,IAxNW,IA0NU,QAAU,O,+DCjOpC,MAAMwlD,EAAwC,CACnDx1B,cAAc,EACd/qB,KAAM,UACN2wC,SAAU,iBACVC,YAAa,qBACb5lB,WAAY,OACZ5oB,gBAAgB,EAChB0uC,qBAAqB,GAGV0P,EAAsD,CACjE,CACEz1B,cAAc,EACd/qB,KAAM,WACN2wC,SAAU,iBACV3lB,WAAY,OACZ5oB,gBAAgB,EAChByuC,YAAa,GAEf,CACE9lB,cAAc,EACd/qB,KAAM,cACN2wC,SAAU,oBACV3lB,WAAY,eACZ5oB,gBAAgB,EAChByuC,YAAa,GAEf,CACE9lB,cAAc,EACd/qB,KAAM,SACN2wC,SAAU,eACV3lB,WAAY,QACZ5oB,gBAAgB,EAChByuC,YAAa,GAEf,CACE9lB,cAAc,EACd/qB,KAAM,WACN2wC,SAAU,iBACV3lB,WAAY,UACZ5oB,gBAAgB,EAChByuC,YAAa,GAEf,CACE9lB,cAAc,EACd/qB,KAAM,OACN2wC,SAAU,aACV3lB,WAAY,OACZ5oB,gBAAgB,EAChByuC,YAAa,IAIJ4P,EAAsD,CACjE,CACE11B,cAAc,EACd/qB,KAAM,eACN2wC,SAAU,cACV3lB,WAAY,OACZ5oB,gBAAgB,EAChByuC,YAAa,GAEf,CACE9lB,cAAc,EACd/qB,KAAM,cACN2wC,SAAU,aACV3lB,WAAY,YACZ5oB,gBAAgB,EAChByuC,YAAa,GAEf,CACE9lB,cAAc,EACd/qB,KAAM,kBACN2wC,SAAU,iBACV3lB,WAAY,UACZ5oB,gBAAgB,EAChByuC,YAAa,IAIJ6P,EAAiD,CAC5D31B,cAAc,EACd/qB,KAAM,SACN2wC,SAAU,yBACV3lB,WAAY,gBACZ6lB,YAAa,E,kBCvFA,SAASyM,EAAqB3kB,EAAsBpqB,GACjE,IAAIoO,EAAY,EACZgkC,EAAa,EAEbjkD,EAA8Bi8B,EAElC,KAAOj8B,GAAWA,IAAY6R,IAAc7R,EAAQkkD,SAASryC,IAC3DoO,GAAajgB,EAAQigB,UACrBgkC,GAAcjkD,EAAQikD,WAEtBjkD,EAAUA,EAAQmkD,aAGpB,MAAO,CAAEzjD,IAAKuf,EAAW1f,KAAM0jD,EACjC,C,mDCbA,SAAgB,UAAY,WAAW,OAAS,WAAW,oBAAsB,WAAW,SAAW,WAAW,WAAa,WAAW,OAAS,WAAW,UAAY,WAAW,aAAe,W,mCCApM,SAAgB,KAAO,WAAW,gBAAgB,WAAW,aAAe,WAAW,OAAS,WAAW,UAAY,WAAW,eAAiB,W,mCCAnJ,SAAgB,KAAO,WAAW,OAAS,WAAW,KAAO,WAAW,iBAAiB,WAAW,cAAgB,WAAW,IAAM,WAAW,KAAO,WAAW,YAAY,WAAW,SAAW,WAAW,YAAY,WAAW,SAAW,WAAW,WAAW,WAAW,QAAU,WAAW,QAAU,WAAW,SAAW,WAAW,YAAc,W","sources":["webpack://telegram-t/./src/components/common/AnimatedCounter.tsx","webpack://telegram-t/./src/components/common/AnimatedCounter.module.scss?3640","webpack://telegram-t/./src/components/common/AnimatedIconFromSticker.tsx","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.module.scss?eca8","webpack://telegram-t/./src/components/common/AnimatedIconWithPreview.tsx","webpack://telegram-t/./src/components/common/AvatarList.module.scss?00d4","webpack://telegram-t/./src/components/common/AvatarList.tsx","webpack://telegram-t/./src/components/common/DeleteChatModal.tsx","webpack://telegram-t/./src/components/common/DotAnimation.tsx","webpack://telegram-t/./src/components/common/LastMessageMeta.tsx","webpack://telegram-t/./src/components/common/MediaSpoiler.module.scss?4929","webpack://telegram-t/./src/components/common/MediaSpoiler.tsx","webpack://telegram-t/./src/components/common/MessageOutgoingStatus.tsx","webpack://telegram-t/./src/components/common/PasswordForm.tsx","webpack://telegram-t/./src/components/common/PeerChip.module.scss?346e","webpack://telegram-t/./src/components/common/PeerChip.tsx","webpack://telegram-t/./src/components/common/PremiumProgress.module.scss?8969","webpack://telegram-t/./src/components/common/PremiumProgress.tsx","webpack://telegram-t/./src/components/common/TopicIcon.tsx","webpack://telegram-t/./src/components/common/TypingStatus.tsx","webpack://telegram-t/./src/components/common/gift/GiftRibbon.module.scss?54c5","webpack://telegram-t/./src/components/common/gift/GiftRibbon.tsx","webpack://telegram-t/./src/components/common/helpers/gifts.ts","webpack://telegram-t/./src/components/common/helpers/sortChatIds.ts","webpack://telegram-t/./src/components/common/pickers/PeerPicker.tsx","webpack://telegram-t/./src/components/common/pickers/PickerItem.module.scss?49ce","webpack://telegram-t/./src/components/common/pickers/PickerItem.tsx","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.module.scss?0cfb","webpack://telegram-t/./src/components/common/profile/RadialPatternBackground.tsx","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.module.scss?b4fe","webpack://telegram-t/./src/components/common/reactions/CustomEmojiEffect.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionStaticEmoji.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.async.tsx","webpack://telegram-t/./src/components/left/MuteChatModal.async.tsx","webpack://telegram-t/./src/components/left/main/ChatCallStatus.module.scss?f06e","webpack://telegram-t/./src/components/left/main/ChatCallStatus.tsx","webpack://telegram-t/./src/components/left/main/Chat.tsx","webpack://telegram-t/./src/components/left/main/ChatBadge.tsx","webpack://telegram-t/./src/components/left/main/ChatFolders.tsx","webpack://telegram-t/./src/components/left/main/Archive.module.scss?6d2a","webpack://telegram-t/./src/components/left/main/Archive.tsx","webpack://telegram-t/./src/components/left/main/EmptyFolder.module.scss?0952","webpack://telegram-t/./src/components/left/main/EmptyFolder.tsx","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.module.scss?bd2b","webpack://telegram-t/./src/components/left/main/UnconfirmedSession.tsx","webpack://telegram-t/./src/components/left/main/ChatList.tsx","webpack://telegram-t/./src/hooks/scroll/useTopOverscroll.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatAnimationType.ts","webpack://telegram-t/./src/components/common/ChatForumLastMessage.module.scss?cb0b","webpack://telegram-t/./src/components/common/ChatForumLastMessage.tsx","webpack://telegram-t/./src/components/left/main/hooks/useChatListEntry.tsx","webpack://telegram-t/./src/components/left/main/hooks/useOrderDiff.ts","webpack://telegram-t/./src/components/middle/ActionMessageSuggestedAvatar.tsx","webpack://telegram-t/./src/components/middle/ActionMessageUpdatedAvatar.tsx","webpack://telegram-t/./src/components/middle/message/SimilarChannels.module.scss?86cb","webpack://telegram-t/./src/components/middle/message/SimilarChannels.tsx","webpack://telegram-t/./src/hooks/useAverageColor.ts","webpack://telegram-t/./src/components/middle/ActionMessage.tsx","webpack://telegram-t/./src/components/middle/message/ContextMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/message/hooks/useFocusMessage.ts","webpack://telegram-t/./src/components/common/reactions/PaidReactionEmoji.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.tsx","webpack://telegram-t/./src/components/middle/message/reactions/Reactions.tsx","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.module.scss?c2fd","webpack://telegram-t/./src/components/modals/prompt/PromptDialog.tsx","webpack://telegram-t/./src/components/middle/message/reactions/SavedTagButton.tsx","webpack://telegram-t/./src/global/helpers/payments.ts","webpack://telegram-t/./src/global/helpers/peers.ts","webpack://telegram-t/./src/hooks/polling/usePeerStoriesPolling.ts","webpack://telegram-t/./src/hooks/reducers/useFoldersReducer.ts","webpack://telegram-t/./src/hooks/schedulers/useTimeout.ts","webpack://telegram-t/./src/hooks/useCanvasBlur.ts","webpack://telegram-t/./src/hooks/useChatContextActions.ts","webpack://telegram-t/./src/hooks/useEnsureMessage.ts","webpack://telegram-t/./src/hooks/useEnsureStory.ts","webpack://telegram-t/./src/hooks/useFolderManager.ts","webpack://telegram-t/./src/hooks/useHorizontalScroll.ts","webpack://telegram-t/./src/hooks/useHotkeys.ts","webpack://telegram-t/./src/util/parseHotkey.ts","webpack://telegram-t/./src/hooks/usePrevious.ts","webpack://telegram-t/./src/hooks/useReducer.ts","webpack://telegram-t/./src/hooks/useResizeMessageObserver.ts","webpack://telegram-t/./src/util/animateHorizontalScroll.ts","webpack://telegram-t/./src/util/animateScroll.ts","webpack://telegram-t/./src/util/colors.ts","webpack://telegram-t/./src/util/objects/customPeer.ts","webpack://telegram-t/./src/util/visibility/getOffsetToContainer.ts","webpack://telegram-t/./src/components/common/pickers/PickerStyles.module.scss?c0e4","webpack://telegram-t/./src/components/common/reactions/ReactionAnimatedEmoji.module.scss?3a3d","webpack://telegram-t/./src/components/middle/message/reactions/ReactionButton.module.scss?4249"],"sourcesContent":["import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getGlobal } from '../../global';\n\nimport { selectCanAnimateInterface } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { throttleWithTickEnd } from '../../util/schedulers';\n\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLang from '../../hooks/useLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport styles from './AnimatedCounter.module.scss';\n\ntype OwnProps = {\n  text: string;\n  className?: string;\n  isDisabled?: boolean;\n  ref?: React.RefObject<HTMLSpanElement>;\n};\n\nconst ANIMATION_TIME = 200;\nconst MAX_SIMULTANEOUS_ANIMATIONS = 10;\n\nlet scheduledAnimationsCounter = 0;\n\nconst resetCounterOnTickEnd = throttleWithTickEnd(() => {\n  scheduledAnimationsCounter = 0;\n});\n\nconst AnimatedCounter: FC<OwnProps> = ({\n  text,\n  className,\n  isDisabled,\n  ref,\n}) => {\n  const { isRtl } = useLang();\n\n  const prevText = usePreviousDeprecated(text);\n  const forceUpdate = useForceUpdate();\n\n  const shouldAnimate = scheduleAnimation(\n    !isDisabled && selectCanAnimateInterface(getGlobal()) && prevText !== undefined && prevText !== text,\n  );\n\n  const characters = useMemo(() => {\n    return shouldAnimate ? renderAnimatedCharacters(text, prevText) : text;\n  }, [shouldAnimate, prevText, text]);\n\n  useEffect(() => {\n    if (!shouldAnimate) return undefined;\n\n    const timeoutId = window.setTimeout(() => {\n      forceUpdate();\n    }, ANIMATION_TIME);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [shouldAnimate, text]);\n\n  return (\n    <span ref={ref} className={buildClassName(className, !isDisabled && styles.root)} dir={isRtl ? 'rtl' : undefined}>\n      {characters}\n    </span>\n  );\n};\n\nexport default memo(AnimatedCounter);\n\nfunction scheduleAnimation(condition: boolean) {\n  if (!condition || scheduledAnimationsCounter >= MAX_SIMULTANEOUS_ANIMATIONS) return false;\n\n  if (scheduledAnimationsCounter === 0) {\n    resetCounterOnTickEnd();\n  }\n\n  scheduledAnimationsCounter++;\n\n  return true;\n}\n\nfunction renderAnimatedCharacters(text: string, prevText?: string) {\n  const elements: React.ReactNode[] = [];\n  const textLength = text.length;\n  const prevTextLength = prevText?.length ?? 0;\n\n  for (let i = 0; i <= textLength; i++) {\n    const charIndex = textLength - i;\n    const prevTextCharIndex = prevTextLength - i;\n\n    if (prevText && prevTextCharIndex >= 0 && text[charIndex] !== prevText[prevTextCharIndex]) {\n      elements.unshift(\n        <div className={styles.characterContainer}>\n          <div className={styles.character}>{text[charIndex] ?? ''}</div>\n          <div className={styles.characterOld}>{prevText[prevTextCharIndex]}</div>\n          <div className={styles.characterNew}>{text[charIndex] ?? ''}</div>\n        </div>,\n      );\n    } else {\n      elements.unshift(<span>{text[charIndex] ?? ''}</span>);\n    }\n  }\n\n  return elements;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"tgKbsVmz\",\"character-container\":\"IYTzbS8o\",\"characterContainer\":\"IYTzbS8o\",\"character\":\"Jw1oQFdk\",\"character-old\":\"TZfEz3sc\",\"characterOld\":\"TZfEz3sc\",\"character-disappear\":\"ORlhAlOv\",\"characterDisappear\":\"ORlhAlOv\",\"character-new\":\"Y9ied8_t\",\"characterNew\":\"Y9ied8_t\",\"character-appear\":\"s_g6bwRZ\",\"characterAppear\":\"s_g6bwRZ\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../api/types';\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\nimport { ApiMediaFormat } from '../../api/types';\n\nimport { getStickerMediaHash } from '../../global/helpers';\n\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { sticker?: ApiSticker; noLoad?: boolean; forcePreview?: boolean };\n\nfunction AnimatedIconFromSticker(props: OwnProps) {\n  const {\n    sticker, noLoad, forcePreview, ...otherProps\n  } = props;\n\n  const thumbDataUri = sticker?.thumbnail?.dataUri;\n  const localMediaHash = sticker && getStickerMediaHash(sticker, 'full');\n  const previewBlobUrl = useMedia(\n    sticker ? getStickerMediaHash(sticker, 'preview') : undefined,\n    noLoad && !forcePreview,\n    ApiMediaFormat.BlobUrl,\n  );\n  const tgsUrl = useMedia(localMediaHash, noLoad);\n\n  return (\n    <AnimatedIconWithPreview\n      tgsUrl={tgsUrl}\n      previewUrl={previewBlobUrl}\n      thumbDataUri={thumbDataUri}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    />\n  );\n}\n\nexport default memo(AnimatedIconFromSticker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xCi2f0YH\",\"preview\":\"lM2usrZU\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { OwnProps as AnimatedIconProps } from './AnimatedIcon';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIcon from './AnimatedIcon';\n\nimport styles from './AnimatedIconWithPreview.module.scss';\n\ntype OwnProps =\n  Partial<AnimatedIconProps>\n  & { previewUrl?: string; thumbDataUri?: string; noPreviewTransition?: boolean };\n\nconst ANIMATION_DURATION = 300;\n\nconst loadedPreviewUrls = new Set();\n\nfunction AnimatedIconWithPreview(props: OwnProps) {\n  const {\n    previewUrl, thumbDataUri, className, ...otherProps\n  } = props;\n\n  const [isThumbOpen, , unmarkThumbOpen] = useFlag(Boolean(thumbDataUri));\n  const thumbClassNames = useMediaTransitionDeprecated(isThumbOpen);\n\n  const [isPreviewOpen, markPreviewOpen, unmarkPreviewOpen] = useFlag(loadedPreviewUrls.has(previewUrl));\n  const previewClassNames = useMediaTransitionDeprecated(isPreviewOpen);\n\n  const [isAnimationReady, markAnimationReady] = useFlag(false);\n\n  const handlePreviewLoad = useLastCallback(() => {\n    markPreviewOpen();\n    loadedPreviewUrls.add(previewUrl);\n  });\n\n  const handleAnimationReady = useLastCallback(() => {\n    unmarkThumbOpen();\n    unmarkPreviewOpen();\n    setTimeout(markAnimationReady, ANIMATION_DURATION);\n  });\n\n  const { size } = props;\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={buildStyle(size !== undefined && `width: ${size}px; height: ${size}px;`)}\n    >\n      {thumbDataUri && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img src={thumbDataUri} className={buildClassName(styles.preview, thumbClassNames)} draggable={false} />\n      )}\n      {previewUrl && !isAnimationReady && (\n        // eslint-disable-next-line jsx-a11y/alt-text\n        <img\n          src={previewUrl}\n          className={buildClassName(styles.preview, previewClassNames)}\n          draggable={false}\n          onLoad={handlePreviewLoad}\n        />\n      )}\n      {/* eslint-disable-next-line react/jsx-props-no-spreading */}\n      <AnimatedIcon {...otherProps} onLoad={handleAnimationReady} />\n    </div>\n  );\n}\n\nexport default memo(AnimatedIconWithPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kXs18Nmi\",\"avatar\":\"XND8fhC1\",\"badge\":\"SHyAyGFO\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { AvatarSize } from './Avatar';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar, { AVATAR_SIZES } from './Avatar';\n\nimport styles from './AvatarList.module.scss';\n\nconst DEFAULT_LIMIT = 3;\n\ntype OwnProps = {\n  size: AvatarSize;\n  peers?: ApiPeer[];\n  className?: string;\n  limit?: number;\n  badgeText?: string;\n};\n\nconst AvatarList: FC<OwnProps> = ({\n  peers,\n  size,\n  className,\n  limit = DEFAULT_LIMIT,\n  badgeText,\n}) => {\n  const lang = useOldLang();\n\n  const pxSize = typeof size === 'number' ? size : AVATAR_SIZES[size];\n\n  const renderingBadgeText = useMemo(() => {\n    if (badgeText) return badgeText;\n    if (!peers?.length || peers.length <= limit) return undefined;\n    return `+${peers.length - limit}`;\n  }, [badgeText, peers, limit]);\n\n  return (\n    <div\n      className={buildClassName(className, styles.root)}\n      style={`--_size: ${pxSize}px;`}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {peers?.slice(0, limit).map((peer) => <Avatar size={size} peer={peer} className={styles.avatar} />)}\n      {renderingBadgeText && (\n        <div className={styles.badge}>\n          {renderingBadgeText}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(AvatarList);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport {\n  getChatTitle,\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserBot,\n  isUserId,\n} from '../../global/helpers';\nimport { selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\n\nimport './DeleteChatModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chat: ApiChat;\n  isSavedDialog?: boolean;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isChatWithSelf?: boolean;\n  isBot?: boolean;\n  isPrivateChat: boolean;\n  isBasicGroup: boolean;\n  isSuperGroup: boolean;\n  currentUserId: string | undefined;\n  canDeleteForAll?: boolean;\n  contactName?: string;\n};\n\nconst DeleteChatModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isSavedDialog,\n  isChannel,\n  isPrivateChat,\n  isChatWithSelf,\n  isBot,\n  isBasicGroup,\n  isSuperGroup,\n  currentUserId,\n  canDeleteForAll,\n  contactName,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    leaveChannel,\n    deleteHistory,\n    deleteSavedHistory,\n    deleteChannel,\n    deleteChatUser,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const chatTitle = getChatTitle(lang, chat);\n\n  const handleDeleteForAll = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteAndStop = useCallback(() => {\n    deleteHistory({ chatId: chat.id, shouldDeleteForAll: true });\n    blockUser({ userId: chat.id });\n\n    onClose();\n  }, [chat.id, onClose]);\n\n  const handleDeleteChat = useCallback(() => {\n    if (isSavedDialog) {\n      deleteSavedHistory({ chatId: chat.id });\n    } else if (isPrivateChat) {\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if (isBasicGroup) {\n      deleteChatUser({ chatId: chat.id, userId: currentUserId! });\n      deleteHistory({ chatId: chat.id, shouldDeleteForAll: false });\n    } else if ((isChannel || isSuperGroup) && !chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else if ((isChannel || isSuperGroup) && chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    }\n    onClose();\n  }, [\n    isPrivateChat,\n    isBasicGroup,\n    isChannel,\n    isSuperGroup,\n    currentUserId,\n    chat.isCreator,\n    chat.id,\n    isSavedDialog,\n    onClose,\n  ]);\n\n  const handleLeaveChat = useCallback(() => {\n    if (isChannel || isSuperGroup) {\n      leaveChannel({ chatId: chat.id });\n      onClose();\n    } else {\n      handleDeleteChat();\n    }\n  }, [chat.id, handleDeleteChat, isChannel, isSuperGroup, leaveChannel, onClose]);\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar\n          size=\"tiny\"\n          peer={chat}\n          isSavedMessages={isChatWithSelf}\n        />\n        <h3 className=\"modal-title\">{lang(renderTitle())}</h3>\n      </div>\n    );\n  }\n\n  function renderTitle() {\n    if (isSavedDialog) {\n      return isChatWithSelf ? 'ClearHistoryMyNotesTitle' : 'ClearHistoryTitleSingle2';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n\n    if (isChannel && chat.isCreator) {\n      return 'ChannelDelete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return 'DeleteChatUser';\n  }\n\n  function renderContent() {\n    if (isSavedDialog) {\n      return (\n        <p>\n          {renderText(\n            isChatWithSelf ? lang('ClearHistoryMyNotesMessage') : lang('ClearHistoryMessageSingle', chatTitle),\n            ['simple_markdown', 'emoji'],\n          )}\n        </p>\n      );\n    }\n    if (isChannel && chat.isCreator) {\n      return (\n        <p>\n          {renderText(lang('ChatList.DeleteAndLeaveGroupConfirmation', chatTitle), ['simple_markdown', 'emoji'])}\n        </p>\n      );\n    }\n\n    if ((isChannel && !chat.isCreator) || isBasicGroup || isSuperGroup) {\n      return <p>{renderText(lang('ChannelLeaveAlertWithName', chatTitle), ['simple_markdown', 'emoji'])}</p>;\n    }\n\n    return <p>{renderText(lang('ChatList.DeleteChatConfirmation', contactName), ['simple_markdown', 'emoji'])}</p>;\n  }\n\n  function renderActionText() {\n    if (isSavedDialog) {\n      return 'Delete';\n    }\n\n    if (isChannel && !chat.isCreator) {\n      return 'LeaveChannel';\n    }\n    if (isChannel && chat.isCreator) {\n      return 'Chat.Input.Delete';\n    }\n\n    if (isBasicGroup || isSuperGroup) {\n      return 'Group.LeaveGroup';\n    }\n\n    return canDeleteForAll ? 'ChatList.DeleteForCurrentUser' : 'Delete';\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className=\"DeleteChatModal\"\n      header={renderHeader()}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {renderContent()}\n      <div className=\"dialog-buttons-column\">\n        {isBot && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteAndStop}>\n            {lang('DeleteAndStop')}\n          </Button>\n        )}\n        {canDeleteForAll && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteForAll}>\n            {contactName ? renderText(lang('ChatList.DeleteForEveryone', contactName)) : lang('DeleteForAll')}\n          </Button>\n        )}\n        {!isPrivateChat && chat.isCreator && !isSavedDialog && (\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteChat}>\n            {lang('DeleteForAll')}\n          </Button>\n        )}\n        <Button\n          color=\"danger\"\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={(isPrivateChat || isSavedDialog) ? handleDeleteChat : handleLeaveChat}\n        >\n          {lang(renderActionText())}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat, isSavedDialog }): StateProps => {\n    const isPrivateChat = isUserId(chat.id);\n    const isChatWithSelf = selectIsChatWithSelf(global, chat.id);\n    const user = isPrivateChat && selectUser(global, getPrivateChatUserId(chat)!);\n    const isBot = user && isUserBot(user) && !chat.isSupport;\n    const canDeleteForAll = (isPrivateChat && !isChatWithSelf && !isBot && !isSavedDialog);\n    const contactName = isPrivateChat\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isBot,\n      isChannel: isChatChannel(chat),\n      isBasicGroup: isChatBasicGroup(chat),\n      isSuperGroup: isChatSuperGroup(chat),\n      currentUserId: global.currentUserId,\n      canDeleteForAll,\n      contactName,\n    };\n  },\n)(DeleteChatModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './DotAnimation.scss';\n\ntype OwnProps = {\n  content: string;\n  className?: string;\n};\n\nconst DotAnimation: FC<OwnProps> = ({ content, className }) => {\n  const lang = useOldLang();\n  return (\n    <span className={buildClassName('DotAnimation', className)} dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {renderText(content)}\n      <span className=\"ellipsis\" />\n    </span>\n  );\n};\n\nexport default DotAnimation;\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiMessageOutgoingStatus } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\n\nimport './LastMessageMeta.scss';\n\ntype OwnProps = {\n  className?: string;\n  message: ApiMessage;\n  outgoingStatus?: ApiMessageOutgoingStatus;\n  draftDate?: number;\n};\n\nconst LastMessageMeta = ({\n  className, message, outgoingStatus, draftDate,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const shouldUseDraft = draftDate && draftDate > message.date;\n  return (\n    <div className={buildClassName('LastMessageMeta', className)}>\n      {outgoingStatus && !shouldUseDraft && (\n        <MessageOutgoingStatus status={outgoingStatus} />\n      )}\n      <span className=\"time\">\n        {formatPastTimeShort(lang, (shouldUseDraft ? draftDate : message.date) * 1000)}\n      </span>\n    </div>\n  );\n};\n\nexport default memo(LastMessageMeta);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"qF2WgYVg\",\"mask-animation\":\"pNM3cgkY\",\"maskAnimation\":\"pNM3cgkY\",\"circle-cut\":\"WiW38HGg\",\"circleCut\":\"WiW38HGg\",\"dots\":\"XBor45hE\",\"canvas\":\"eULqS2yR\",\"opacity-breath\":\"sW9ega1D\",\"opacityBreath\":\"sW9ega1D\",\"dots-animation\":\"mAAEjSPE\",\"dotsAnimation\":\"mAAEjSPE\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\n\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport styles from './MediaSpoiler.module.scss';\n\ntype OwnProps = {\n  isVisible: boolean;\n  withAnimation?: boolean;\n  thumbDataUri?: string;\n  width?: number;\n  height?: number;\n  className?: string;\n};\n\nconst BLUR_RADIUS = 25;\nconst ANIMATION_DURATION = 500;\n\nconst MediaSpoiler: FC<OwnProps> = ({\n  isVisible,\n  withAnimation,\n  thumbDataUri,\n  className,\n  width,\n  height,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(\n    isVisible, undefined, true, withAnimation ? false : undefined, undefined, ANIMATION_DURATION,\n  );\n  const canvasRef = useCanvasBlur(thumbDataUri, !shouldRender, undefined, BLUR_RADIUS, width, height);\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (!ref.current) return;\n    const el = ref.current;\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    const shiftX = x - (rect.width / 2);\n    const shiftY = y - (rect.height / 2);\n    requestMutation(() => {\n      el.setAttribute('style', `--click-shift-x: ${shiftX}px; --click-shift-y: ${shiftY}px`);\n    });\n  });\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, transitionClassNames, className, withAnimation && styles.maskAnimation)}\n      ref={ref}\n      onClick={withAnimation ? handleClick : undefined}\n    >\n      <canvas\n        ref={canvasRef}\n        className={styles.canvas}\n        width={width}\n        height={height}\n      />\n      <div className={styles.dots} />\n    </div>\n  );\n};\n\nexport default memo(MediaSpoiler);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessageOutgoingStatus } from '../../api/types';\n\nimport Transition from '../ui/Transition';\nimport Icon from './icons/Icon';\n\nimport './MessageOutgoingStatus.scss';\n\ntype OwnProps = {\n  status: ApiMessageOutgoingStatus;\n};\n\nenum Keys {\n  failed, pending, succeeded, read,\n}\n\nconst MessageOutgoingStatus: FC<OwnProps> = ({ status }) => {\n  return (\n    <div className=\"MessageOutgoingStatus\">\n      <Transition name=\"reveal\" activeKey={Keys[status]}>\n        {status === 'failed' ? (\n          <div className=\"MessageOutgoingStatus--failed\">\n            <Icon name=\"message-failed\" />\n          </div>\n        ) : <Icon name={`message-${status}`} />}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(MessageOutgoingStatus);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { MIN_PASSWORD_LENGTH } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\ntype OwnProps = {\n  submitLabel?: string;\n  error?: string;\n  hint?: string;\n  placeholder?: string;\n  description?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  shouldShowSubmit?: boolean;\n  shouldResetValue?: boolean;\n  isPasswordVisible?: boolean;\n  clearError: NoneToVoidFunction;\n  noRipple?: boolean;\n  onChangePasswordVisibility: (state: boolean) => void;\n  onInputChange?: (password: string) => void;\n  onSubmit?: (password: string) => void;\n};\n\nconst PasswordForm: FC<OwnProps> = ({\n  isLoading = false,\n  isPasswordVisible,\n  error,\n  hint,\n  placeholder = 'Password',\n  submitLabel = 'Next',\n  description,\n  shouldShowSubmit,\n  shouldResetValue,\n  shouldDisablePasswordManager = false,\n  noRipple = false,\n  clearError,\n  onChangePasswordVisibility,\n  onInputChange,\n  onSubmit,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n  const [password, setPassword] = useState('');\n  const [canSubmit, setCanSubmit] = useState(false);\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  useEffect(() => {\n    if (shouldResetValue) {\n      setPassword('');\n    }\n  }, [shouldResetValue]);\n\n  useTimeout(() => {\n    if (!IS_TOUCH_ENV) {\n      inputRef.current!.focus();\n    }\n  }, focusDelayTimeoutMs);\n\n  useEffect(() => {\n    if (error) {\n      requestMutation(() => {\n        inputRef.current!.focus();\n        inputRef.current!.select();\n      });\n    }\n  }, [error]);\n\n  function onPasswordChange(e: ChangeEvent<HTMLInputElement>) {\n    if (error) {\n      clearError();\n    }\n\n    const { target } = e;\n    setPassword(target.value);\n    setCanSubmit(target.value.length >= MIN_PASSWORD_LENGTH);\n    if (onInputChange) {\n      onInputChange(target.value);\n    }\n  }\n\n  function togglePasswordVisibility() {\n    onChangePasswordVisibility(!isPasswordVisible);\n  }\n\n  function handleSubmit(event: React.FormEvent<HTMLFormElement>) {\n    event.preventDefault();\n\n    if (isLoading) {\n      return;\n    }\n\n    if (canSubmit) {\n      onSubmit!(password);\n    }\n  }\n\n  function renderFakeInput() {\n    return (\n      <input\n        type=\"password\"\n        id=\"prevent_autofill\"\n        autoComplete=\"off\"\n        className=\"visually-hidden\"\n        tabIndex={-2}\n      />\n    );\n  }\n\n  return (\n    <form action=\"\" onSubmit={onSubmit ? handleSubmit : stopEvent} autoComplete=\"off\">\n      <div\n        className={buildClassName('input-group password-input', password && 'touched', error && 'error')}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldDisablePasswordManager && renderFakeInput()}\n        <input\n          ref={inputRef}\n          className=\"form-control\"\n          type={isPasswordVisible ? 'text' : 'password'}\n          id=\"sign-in-password\"\n          value={password || ''}\n          autoComplete={shouldDisablePasswordManager ? 'one-time-code' : 'current-password'}\n          onChange={onPasswordChange}\n          maxLength={256}\n          dir=\"auto\"\n        />\n        <label>{error || hint || placeholder}</label>\n        <div\n          className=\"div-button toggle-password\"\n          onClick={togglePasswordVisibility}\n          role=\"button\"\n          tabIndex={0}\n          title=\"Toggle password visibility\"\n          aria-label=\"Toggle password visibility\"\n        >\n          <Icon name={isPasswordVisible ? 'eye' : 'eye-closed'} />\n        </div>\n      </div>\n      {description && <p className=\"description\">{description}</p>}\n      {onSubmit && (canSubmit || shouldShowSubmit) && (\n        <Button size=\"smaller\" type=\"submit\" ripple={!noRipple} isLoading={isLoading} disabled={!canSubmit}>\n          {submitLabel}\n        </Button>\n      )}\n    </form>\n  );\n};\n\nexport default memo(PasswordForm);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_Lq6_4e5\",\"minimized\":\"UhOZvxvs\",\"closeable\":\"uvvgSFUJ\",\"remove\":\"xVPG2UTy\",\"nonDestructive\":\"fAk5yEeV\",\"notClickable\":\"P8r3OoaX\",\"avatar\":\"La8BQ9yr\",\"iconWrapper\":\"NtoGLT22\",\"icon\":\"f91Ad80i\",\"name\":\"XPVuH29G\",\"squareAvatar\":\"JIHfTUVn\"};","import type { TeactNode } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiPeer } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport { getPeerTitle } from '../../global/helpers';\nimport { isApiPeerChat } from '../../global/helpers/peers';\nimport { selectPeer, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getPeerColorClass } from './helpers/peerColor';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerChip.module.scss';\n\ntype OwnProps<T = undefined> = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  peerId?: string;\n  // eslint-disable-next-line react/no-unused-prop-types\n  forceShowSelf?: boolean;\n  customPeer?: CustomPeer;\n  mockPeer?: ApiPeer;\n  icon?: IconName;\n  title?: string;\n  isMinimized?: boolean;\n  canClose?: boolean;\n  isCloseNonDestructive?: boolean;\n  className?: string;\n  withPeerColors?: boolean;\n  withEmojiStatus?: boolean;\n  clickArg?: T;\n  onClick?: (arg: T) => void;\n  itemClassName?: string;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  isSavedMessages?: boolean;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PeerChip = <T,>({\n  icon,\n  title,\n  isMinimized,\n  canClose,\n  isCloseNonDestructive,\n  clickArg,\n  peer,\n  mockPeer,\n  customPeer,\n  className,\n  isSavedMessages,\n  withPeerColors,\n  withEmojiStatus,\n  onClick,\n  itemClassName,\n}: OwnProps<T> & StateProps) => {\n  const lang = useOldLang();\n\n  const apiPeer = mockPeer || peer;\n  const anyPeer = customPeer || apiPeer;\n\n  const chat = apiPeer && isApiPeerChat(apiPeer) ? apiPeer : undefined;\n\n  let iconElement: TeactNode | undefined;\n  let titleElement: TeactNode | undefined;\n  let titleText: string | undefined;\n\n  if (icon && title) {\n    iconElement = (\n      <div className={styles.iconWrapper}>\n        <Icon name={icon} style={styles.icon} />\n      </div>\n    );\n\n    titleElement = title;\n  } else if (anyPeer) {\n    iconElement = (\n      <Avatar\n        className={styles.avatar}\n        peer={anyPeer}\n        size=\"small\"\n        isSavedMessages={isSavedMessages}\n      />\n    );\n\n    titleText = getPeerTitle(lang, anyPeer) || title;\n    titleElement = title || (\n      <FullNameTitle peer={anyPeer} isSavedMessages={isSavedMessages} withEmojiStatus={withEmojiStatus} />\n    );\n  }\n\n  const fullClassName = buildClassName(\n    styles.root,\n    (chat?.isForum || customPeer?.isAvatarSquare) && styles.squareAvatar,\n    isMinimized && styles.minimized,\n    canClose && styles.closeable,\n    isCloseNonDestructive && styles.nonDestructive,\n    !onClick && styles.notClickable,\n    withPeerColors && getPeerColorClass(customPeer || peer),\n    className,\n  );\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={() => onClick?.(clickArg!)}\n      title={isMinimized ? titleText : undefined}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {iconElement}\n      {!isMinimized && (\n        <div className={buildClassName(styles.name, itemClassName)} dir=\"auto\">\n          {titleElement}\n        </div>\n      )}\n      {canClose && (\n        <div className={styles.remove}>\n          <Icon name=\"close\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId, forceShowSelf }): StateProps => {\n    if (!peerId) {\n      return {};\n    }\n\n    const peer = selectPeer(global, peerId);\n    const user = selectUser(global, peerId);\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n\n    return {\n      peer,\n      isSavedMessages,\n    };\n  },\n)(PeerChip)) as typeof PeerChip;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nY2ggBsF\",\"withBadge\":\"RYtVQAjM\",\"badgeContainer\":\"dhigNjAq\",\"slide-in\":\"YfcP52Ym\",\"slideIn\":\"YfcP52Ym\",\"floating-badge-wrapper\":\"cOpfCGPh\",\"floatingBadgeWrapper\":\"cOpfCGPh\",\"rotate-in\":\"AgMPRKbT\",\"rotateIn\":\"AgMPRKbT\",\"floating-badge\":\"uNwBLNOy\",\"floatingBadge\":\"uNwBLNOy\",\"floating-badge-triangle\":\"qRwO7SZm\",\"floatingBadgeTriangle\":\"qRwO7SZm\",\"floating-badge-icon\":\"MJ7MTmxi\",\"floatingBadgeIcon\":\"MJ7MTmxi\",\"floating-badge-value\":\"MwzZt3Qo\",\"floatingBadgeValue\":\"MwzZt3Qo\",\"left\":\"_b5HgBXr\",\"right\":\"P6mch4bB\",\"progress\":\"sZZV0yoe\",\"fullProgress\":\"m8ie8IxL\",\"primary\":\"Zi0w7QJ3\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\n\nimport Icon from './icons/Icon';\n\nimport styles from './PremiumProgress.module.scss';\n\ntype OwnProps = {\n  leftText?: string;\n  rightText?: string;\n  floatingBadgeIcon?: IconName;\n  floatingBadgeText?: string;\n  progress?: number;\n  isPrimary?: boolean;\n  className?: string;\n};\n\nconst PremiumProgress: FC<OwnProps> = ({\n  leftText,\n  rightText,\n  floatingBadgeText,\n  floatingBadgeIcon,\n  progress,\n  isPrimary,\n  className,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const floatingBadgeRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const parentContainerRef = useRef<HTMLDivElement>(null);\n\n  const [shiftX, setShiftX] = useState(0);\n  const [tailPosition, setTailPosition] = useState(0);\n\n  const updateBadgePosition = () => {\n    if (floatingBadgeRef.current && parentContainerRef.current && progress !== undefined) {\n      const badgeWidth = floatingBadgeRef.current.offsetWidth;\n      const parentWidth = parentContainerRef.current.offsetWidth;\n      const minShift = badgeWidth / 2;\n      const maxShift = parentWidth - badgeWidth / 2;\n      const currentShift = progress * parentWidth;\n      const safeShift = Math.max(minShift, Math.min(currentShift, maxShift));\n\n      setShiftX(safeShift / parentWidth);\n\n      let newTailPosition;\n      if (currentShift < minShift) {\n        newTailPosition = (progress * parentWidth) / (minShift * 2);\n      } else if (currentShift > maxShift) {\n        const progressMapped = (progress - (maxShift / parentWidth)) / (1 - maxShift / parentWidth);\n        newTailPosition = 0.5 + (progressMapped * 0.4);\n      } else {\n        newTailPosition = 0.5;\n      }\n      setTailPosition(newTailPosition);\n    }\n  };\n\n  useEffect(updateBadgePosition, [progress]);\n\n  useResizeObserver(parentContainerRef, updateBadgePosition);\n\n  const hasFloatingBadge = Boolean(floatingBadgeIcon || floatingBadgeText);\n  const isProgressFull = Boolean(progress) && progress > 0.99;\n\n  return (\n    <div\n      ref={parentContainerRef}\n      className={buildClassName(\n        styles.root,\n        hasFloatingBadge && styles.withBadge,\n        isPrimary && styles.primary,\n        className,\n      )}\n      style={buildStyle(\n        progress !== undefined && `--progress: ${progress}`,\n        tailPosition !== undefined && `--tail-position: ${tailPosition}`,\n        `--shift-x: ${shiftX}`,\n      )}\n    >\n      {hasFloatingBadge && (\n        <div className={styles.badgeContainer}>\n          <div className={styles.floatingBadgeWrapper}>\n            <div className={styles.floatingBadge} ref={floatingBadgeRef}>\n              {floatingBadgeIcon && <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />}\n              {floatingBadgeText && (\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {floatingBadgeText}\n                </div>\n              )}\n            </div>\n            <div className={styles.floatingBadgeTriangle}>\n              <svg width=\"28\" height=\"28\" viewBox=\"0 0 28 28\" fill=\"none\">\n                <path d=\"m 28,4 v 9 c 0.0089,7.283278 -3.302215,5.319646 -6.750951,8.589815 l -5.8284,5.82843 c -0.781,0.78105 -2.0474,0.78104 -2.8284,0 L 6.7638083,21.589815 C 2.8288652,17.959047 0.04527024,20.332086 0,13 V 4 C 0,4 0.00150581,0.97697493 3,1 5.3786658,1.018266 22.594519,0.9142007 25,1 c 2.992326,0.1067311 3,3 3,3 z\" fill=\"#7E85FF\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n      )}\n      <div className={styles.left}>\n        <span>{leftText}</span>\n      </div>\n      <div className={styles.right}>\n        <span>{rightText}</span>\n      </div>\n      <div className={buildClassName(styles.progress, isProgressFull && styles.fullProgress)}>\n        <div className={styles.left}>\n          <span>{leftText}</span>\n        </div>\n        <div className={styles.right}>\n          <span>{rightText}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumProgress);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport CustomEmoji from './CustomEmoji';\nimport TopicDefaultIcon from './TopicDefaultIcon';\n\ntype OwnProps = {\n  topic: Pick<ApiTopic, 'iconEmojiId' | 'iconColor' | 'title' | 'id'>;\n  className?: string;\n  letterClassName?: string;\n  size?: number;\n  noLoopLimit?: true;\n  observeIntersection?: ObserveFn;\n  onClick?: NoneToVoidFunction;\n};\n\nconst LOOP_LIMIT = 2;\nconst DEFAULT_ICON_ID = '0';\n\nconst TopicIcon: FC<OwnProps> = ({\n  topic,\n  className,\n  letterClassName,\n  size,\n  noLoopLimit,\n  observeIntersection,\n  onClick,\n}) => {\n  if (topic.iconEmojiId && topic.iconEmojiId !== DEFAULT_ICON_ID) {\n    return (\n      <CustomEmoji\n        documentId={topic.iconEmojiId}\n        className={className}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n        loopLimit={!noLoopLimit ? LOOP_LIMIT : undefined}\n        onClick={onClick}\n      />\n    );\n  }\n\n  return (\n    <TopicDefaultIcon\n      iconColor={topic.iconColor}\n      title={topic.title}\n      topicId={topic.id}\n      className={className}\n      letterClassName={letterClassName}\n      onClick={onClick}\n    />\n  );\n};\n\nexport default memo(TopicIcon);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiTypingStatus, ApiUser } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport DotAnimation from './DotAnimation';\n\nimport './TypingStatus.scss';\n\ntype OwnProps = {\n  typingStatus: ApiTypingStatus;\n};\n\ntype StateProps = {\n  typingUser?: ApiUser;\n};\n\nconst TypingStatus: FC<OwnProps & StateProps> = ({ typingStatus, typingUser }) => {\n  const lang = useOldLang();\n  const typingUserName = typingUser && !typingUser.isSelf && getUserFirstOrLastName(typingUser);\n  const content = lang(typingStatus.action)\n    // Fix for translation \"{user} is typing\"\n    .replace('{user}', '')\n    .replace('{emoji}', typingStatus.emoji || '').trim();\n\n  return (\n    <p className=\"typing-status\" dir={lang.isRtl ? 'rtl' : 'auto'}>\n      {typingUserName && (\n        <span className=\"sender-name\" dir=\"auto\">{renderText(typingUserName)}</span>\n      )}\n      <DotAnimation content={content} />\n    </p>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { typingStatus }): StateProps => {\n    if (!typingStatus.userId) {\n      return {};\n    }\n\n    const typingUser = selectUser(global, typingStatus.userId);\n\n    return { typingUser };\n  },\n)(TypingStatus));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AmQSvxpZ\",\"text\":\"pQW7dcwr\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useUniqueId from '../../../hooks/useUniqueId';\n\nimport styles from './GiftRibbon.module.scss';\n\nconst COLORS = {\n  red: [['#FF5B54', '#ED1C26'], ['#653633', '#532224']],\n  blue: [['#6ED2FF', '#34A4FC'], ['#344F5A', '#152E42']],\n} as const;\ntype ColorKey = keyof typeof COLORS;\n\nconst COLOR_KEYS = new Set(Object.keys(COLORS) as ColorKey[]);\n\ntype OwnProps = {\n  color: ColorKey | string;\n  text: string;\n  className?: string;\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n};\n\nconst GiftRibbon = ({\n  text, color, className, theme,\n}: OwnProps & StateProps) => {\n  const randomId = useUniqueId();\n  const validSvgRandomId = `svg-${randomId}`; // ID must start with a letter\n\n  const colorKey = COLOR_KEYS.has(color as ColorKey) ? color as ColorKey : undefined;\n\n  const isDarkTheme = theme === 'dark';\n\n  const gradientColor = colorKey ? COLORS[colorKey][isDarkTheme ? 1 : 0] : undefined;\n  const startColor = gradientColor ? gradientColor[0] : color;\n  const endColor = gradientColor ? gradientColor[1] : color;\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <svg className={styles.ribbon} width=\"56\" height=\"56\" viewBox=\"0 0 56 56\" fill=\"none\">\n        <path d=\"M52.4851 26.4853L29.5145 3.51472C27.2641 1.26428 24.2119 0 21.0293 0H2.82824C1.04643 0 0.154103 2.15429 1.41403 3.41422L52.5856 54.5858C53.8455 55.8457 55.9998 54.9534 55.9998 53.1716V34.9706C55.9998 31.788 54.7355 28.7357 52.4851 26.4853Z\" fill={`url(#${validSvgRandomId})`} />\n        <defs>\n          <linearGradient id={validSvgRandomId} x1=\"27.9998\" y1=\"1\" x2=\"27.9998\" y2=\"55\" gradientUnits=\"userSpaceOnUse\">\n            <stop stop-color={startColor} />\n            <stop offset=\"1\" stop-color={endColor} />\n          </linearGradient>\n        </defs>\n      </svg>\n      <div className={styles.text}>{text}</div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      theme: selectTheme(global),\n    };\n  },\n)(GiftRibbon));\n","import type {\n  ApiFormattedText,\n  ApiStarGift,\n  ApiStarGiftAttribute,\n  ApiStarGiftAttributeBackdrop,\n  ApiStarGiftAttributeModel,\n  ApiStarGiftAttributeOriginalDetails,\n  ApiStarGiftAttributePattern,\n  ApiSticker,\n} from '../../../api/types';\n\nexport type GiftAttributes = {\n  model?: ApiStarGiftAttributeModel;\n  originalDetails?: ApiStarGiftAttributeOriginalDetails;\n  pattern?: ApiStarGiftAttributePattern;\n  backdrop?: ApiStarGiftAttributeBackdrop;\n};\n\nexport function getStickerFromGift(gift: ApiStarGift): ApiSticker | undefined {\n  if (gift.type === 'starGift') {\n    return gift.sticker;\n  }\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model')?.sticker;\n}\n\nexport function getTotalGiftAvailability(gift: ApiStarGift): number | undefined {\n  if (gift.type === 'starGift') {\n    return gift.availabilityTotal;\n  }\n\n  return gift.totalCount;\n}\n\nexport function getGiftMessage(gift: ApiStarGift): ApiFormattedText | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return gift.attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => attr.type === 'model')?.message;\n}\n\nexport function getGiftAttributes(gift: ApiStarGift): GiftAttributes | undefined {\n  if (gift.type !== 'starGiftUnique') return undefined;\n\n  return getGiftAttributesFromList(gift.attributes);\n}\n\nexport function getGiftAttributesFromList(attributes: ApiStarGiftAttribute[]) {\n  const model = attributes.find((attr): attr is ApiStarGiftAttributeModel => attr.type === 'model');\n  const backdrop = attributes.find((attr): attr is ApiStarGiftAttributeBackdrop => attr.type === 'backdrop');\n  const pattern = attributes.find((attr): attr is ApiStarGiftAttributePattern => attr.type === 'pattern');\n  const originalDetails = attributes.find((attr): attr is ApiStarGiftAttributeOriginalDetails => (\n    attr.type === 'originalDetails'\n  ));\n\n  return {\n    model,\n    originalDetails,\n    pattern,\n    backdrop,\n  };\n}\n","import { getGlobal } from '../../../global';\n\nimport { selectChat, selectChatLastMessage } from '../../../global/selectors';\nimport { orderBy } from '../../../util/iteratees';\n\nconst VERIFIED_PRIORITY_BASE = 3e9;\nconst PINNED_PRIORITY_BASE = 3e8;\n\nexport default function sortChatIds(\n  chatIds: string[],\n  shouldPrioritizeVerified = false,\n  priorityIds?: string[],\n  currentUserId?: string,\n) {\n  // Avoid calling sort on every global change\n  const global = getGlobal();\n\n  return orderBy(chatIds, (id) => {\n    if (id === currentUserId) {\n      return Infinity;\n    }\n\n    const chat = selectChat(global, id);\n    if (!chat) {\n      return 0;\n    }\n\n    let priority = 0;\n\n    const lastMessage = selectChatLastMessage(global, id);\n    if (lastMessage) {\n      priority += lastMessage.date;\n    }\n\n    if (shouldPrioritizeVerified && chat.isVerified) {\n      priority += VERIFIED_PRIORITY_BASE; // ~100 years in seconds\n    }\n\n    if (priorityIds && priorityIds.includes(id)) {\n      priority = Date.now() + PINNED_PRIORITY_BASE + (priorityIds.length - priorityIds.indexOf(id));\n    }\n\n    return priority;\n  }, 'desc');\n}\n","import React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\n\nimport { DEBUG } from '../../../config';\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getGroupStatus, getUserStatus, isUserOnline } from '../../../global/helpers';\nimport { getPeerTypeKey, isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport PeerChip from '../PeerChip';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedId?: string;\n  selectedIds?: never; // Help TS to throw an error if this is passed\n  selectedCategory?: CustomPeerType;\n  selectedCategories?: never;\n  onSelectedCategoryChange?: (category: CustomPeerType) => void;\n  onSelectedIdChange?: (id: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedId?: never;\n  selectedIds: string[];\n  lockedSelectedIds?: string[];\n  lockedUnselectedIds?: string[];\n  selectedCategory?: never;\n  selectedCategories?: CustomPeerType[];\n  onSelectedCategoriesChange?: (categories: CustomPeerType[]) => void;\n  onSelectedIdsChange?: (Ids: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  categories?: UniqueCustomPeer[];\n  itemIds: string[];\n  lockedUnselectedSubtitle?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  categoryPlaceholderKey?: string;\n  notFoundText?: string;\n  searchInputId?: string;\n  itemClassName?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isSearchable?: boolean;\n  forceShowSelf?: boolean;\n  isViewOnly?: boolean;\n  withStatus?: boolean;\n  withPeerTypes?: boolean;\n  withDefaultPadding?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (id: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst MAX_FULL_ITEMS = 10;\nconst ALWAYS_FULL_ITEMS_COUNT = 5;\n\nconst ITEM_CLASS_NAME = 'PeerPickerItem';\n\nconst PeerPicker = ({\n  className,\n  categories,\n  itemIds,\n  categoryPlaceholderKey,\n  filterValue,\n  filterPlaceholder,\n  notFoundText,\n  searchInputId,\n  itemClassName,\n  isLoading,\n  noScrollRestore,\n  isSearchable,\n  lockedUnselectedSubtitle,\n  forceShowSelf,\n  isViewOnly,\n  itemInputType,\n  withStatus,\n  withPeerTypes,\n  withDefaultPadding,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedIds = allowMultiple ? optionalProps.lockedSelectedIds : undefined;\n  const lockedUnselectedIds = allowMultiple ? optionalProps.lockedUnselectedIds : undefined;\n  const selectedCategories = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedCategories;\n    }\n\n    return optionalProps.selectedCategory ? [optionalProps.selectedCategory] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedCategory, optionalProps.selectedCategories]);\n\n  const selectedIds = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedIds;\n    }\n\n    return optionalProps.selectedId ? [optionalProps.selectedId] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedId, optionalProps.selectedIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const shouldMinimize = selectedIds.length > MAX_FULL_ITEMS;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const lockedSelectedIdsSet = useMemo(() => new Set(lockedSelectedIds), [lockedSelectedIds]);\n  const lockedUnselectedIdsSet = useMemo(() => new Set(lockedUnselectedIds), [lockedUnselectedIds]);\n\n  const unlockedSelectedIds = useMemo(() => {\n    return selectedIds.filter((id) => !lockedSelectedIdsSet.has(id));\n  }, [lockedSelectedIdsSet, selectedIds]);\n\n  const categoriesByType = useMemo(() => {\n    if (!categories) return {};\n    return buildCollectionByKey(categories, 'type');\n  }, [categories]);\n\n  const sortedItemIds = useMemo(() => {\n    if (filterValue) {\n      return itemIds;\n    }\n\n    const lockedSelectedBucket: string[] = [];\n    const unlockedBucket: string[] = [];\n    const lockedUnselectableBucket: string[] = [];\n\n    itemIds.forEach((id) => {\n      if (lockedSelectedIdsSet.has(id)) {\n        lockedSelectedBucket.push(id);\n      } else if (lockedUnselectedIdsSet.has(id)) {\n        lockedUnselectableBucket.push(id);\n      } else {\n        unlockedBucket.push(id);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket);\n  }, [filterValue, itemIds, lockedSelectedIdsSet, lockedUnselectedIdsSet]);\n\n  const handleItemClick = useLastCallback((id: string) => {\n    if (lockedSelectedIdsSet.has(id)) {\n      onDisabledClick?.(id, true);\n      return;\n    }\n\n    if (lockedUnselectedIdsSet.has(id)) {\n      onDisabledClick?.(id, false);\n      return;\n    }\n\n    if (allowMultiple && categoriesByType[id]) {\n      const categoryType = categoriesByType[id].type;\n      const newSelectedCategories = selectedCategories?.slice() || [];\n      if (newSelectedCategories.includes(categoryType)) {\n        newSelectedCategories.splice(newSelectedCategories.indexOf(categoryType), 1);\n      } else {\n        newSelectedCategories.push(categoryType);\n      }\n      optionalProps.onSelectedCategoriesChange?.(newSelectedCategories);\n\n      return;\n    }\n\n    if (allowMultiple) {\n      const newSelectedIds = selectedIds.slice();\n      if (newSelectedIds.includes(id)) {\n        newSelectedIds.splice(newSelectedIds.indexOf(id), 1);\n      } else {\n        newSelectedIds.push(id);\n      }\n      optionalProps.onSelectedIdsChange?.(newSelectedIds);\n\n      return;\n    }\n\n    if (categoriesByType[id]) {\n      optionalProps.onSelectedCategoryChange?.(categoriesByType[id].type);\n      return;\n    }\n\n    optionalProps.onSelectedIdChange?.(id);\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemIds, Boolean(filterValue),\n  );\n\n  const renderItem = useCallback((id: string, isCategory?: boolean) => {\n    const global = getGlobal();\n    const category = isCategory ? categoriesByType[id] : undefined;\n    const peer = !isCategory ? selectPeer(global, id) : undefined;\n\n    const peerOrCategory = peer || category;\n    if (!peerOrCategory) {\n      if (DEBUG) return <div key={id}>No peer or category with ID {id}</div>;\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? (peer.isSelf && !forceShowSelf) : undefined;\n\n    const isAlwaysUnselected = lockedUnselectedIdsSet.has(id);\n    const isAlwaysSelected = lockedSelectedIdsSet.has(id);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = category ? selectedCategories?.includes(category.type) : selectedIds.includes(id);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} onlyInput />;\n      }\n      return undefined;\n    }\n\n    function getSubtitle() {\n      if (isAlwaysUnselected) return [lockedUnselectedSubtitle];\n      if (withStatus && peer) {\n        if (isApiPeerChat(peer)) {\n          return [getGroupStatus(lang, peer)];\n        }\n\n        const userStatus = selectUserStatus(global, peer.id);\n        return [\n          getUserStatus(lang, peer, userStatus),\n          buildClassName(isUserOnline(peer, userStatus, true) && styles.onlineStatus),\n        ];\n      }\n      if (withPeerTypes && peer) {\n        const langKey = getPeerTypeKey(peer);\n        return langKey && [lang(langKey)];\n      }\n      return undefined;\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={<FullNameTitle peer={peerOrCategory} />}\n        avatarElement={(\n          <Avatar\n            peer={peer || category}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        inputPosition=\"end\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(id)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(id, isAlwaysSelected))}\n      />\n    );\n  }, [\n    categoriesByType, forceShowSelf, isViewOnly, itemClassName, itemInputType, lang, lockedSelectedIdsSet,\n    lockedUnselectedIdsSet, lockedUnselectedSubtitle, onDisabledClick, selectedCategories, selectedIds,\n    withPeerTypes, withStatus,\n  ]);\n\n  const beforeChildren = useMemo(() => {\n    if (!categories?.length) return undefined;\n    return (\n      <div key=\"categories\">\n        {categoryPlaceholderKey && <div className={styles.pickerCategoryTitle}>{lang(categoryPlaceholderKey)}</div>}\n        {categories?.map((category) => renderItem(category.type, true))}\n        <div className={styles.pickerCategoryTitle}>{lang('FilterChats')}</div>\n      </div>\n    );\n  }, [categories, categoryPlaceholderKey, lang, renderItem]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          {selectedCategories?.map((category) => (\n            <PeerChip\n              className={styles.peerChip}\n              customPeer={categoriesByType[category]}\n              onClick={handleItemClick}\n              clickArg={category}\n              canClose\n            />\n          ))}\n          {lockedSelectedIds?.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={shouldMinimize && i < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT}\n              forceShowSelf={forceShowSelf}\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          {unlockedSelectedIds.map((id, i) => (\n            <PeerChip\n              className={styles.peerChip}\n              peerId={id}\n              isMinimized={\n                shouldMinimize && i + (lockedSelectedIds?.length || 0) < selectedIds.length - ALWAYS_FULL_ITEMS_COUNT\n              }\n              canClose\n              onClick={handleItemClick}\n              clickArg={id}\n            />\n          ))}\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('SelectChat')}\n          />\n        </div>\n      )}\n\n      {viewportIds?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportIds}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          beforeChildren={beforeChildren}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportIds.map((id) => renderItem(id))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportIds && !viewportIds.length ? (\n        <p className={styles.noResults}>{notFoundText || 'Sorry, nothing found.'}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(PeerPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OHkx_W75\",\"clickable\":\"VUSwo4t5\",\"separator\":\"P53DrbWA\",\"disabled\":\"tvZeVJPh\",\"title\":\"JSSC0N8V\",\"subtitle\":\"OYmzCSp2\",\"withAvatar\":\"dMT9byM6\",\"multiline\":\"neXqB2_A\",\"input\":\"kmjqObdP\",\"startInput\":\"F0Hv3EQm\",\"endInput\":\"iqGhSQGm\",\"avatarElement\":\"dnAaRPCo\"};","import React, { type TeactNode } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport RippleEffect from '../../ui/RippleEffect';\n\nimport styles from './PickerItem.module.scss';\n\ntype OwnProps = {\n  title: TeactNode;\n  subtitle?: TeactNode;\n  avatarElement?: TeactNode;\n  inputElement?: TeactNode;\n  inputPosition?: 'start' | 'end';\n  disabled?: boolean;\n  inactive?: boolean;\n  ripple?: boolean;\n  className?: string;\n  titleClassName?: string;\n  subtitleClassName?: string;\n  style?: string;\n  onClick?: NoneToVoidFunction;\n  onDisabledClick?: NoneToVoidFunction;\n};\n\nconst PickerItem = ({\n  title,\n  subtitle,\n  avatarElement,\n  inputElement,\n  inputPosition = 'start',\n  disabled,\n  inactive,\n  ripple,\n  className,\n  titleClassName,\n  subtitleClassName,\n  style,\n  onClick,\n  onDisabledClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const isClickable = !inactive && !disabled;\n  const handleClick = useLastCallback(() => {\n    if (inactive) return;\n\n    if (disabled) {\n      onDisabledClick?.();\n      return;\n    }\n\n    onClick?.();\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        subtitle && styles.multiline,\n        disabled && styles.disabled,\n        isClickable && styles.clickable,\n        avatarElement && styles.withAvatar,\n        className,\n      )}\n      onClick={handleClick}\n      style={style}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role={isClickable ? 'button' : undefined}\n      // eslint-disable-next-line jsx-a11y/no-noninteractive-tabindex\n      tabIndex={isClickable ? 0 : undefined}\n    >\n      {!disabled && !inactive && ripple && <RippleEffect />}\n      {inputElement && (\n        <div className={buildClassName(\n          styles.input,\n          inputPosition === 'end' ? styles.endInput : styles.startInput,\n        )}\n        >\n          {inputElement}\n        </div>\n      )}\n      {avatarElement && (\n        <div className={styles.avatarElement}>\n          {avatarElement}\n        </div>\n      )}\n      <div className={buildClassName(styles.title, titleClassName)}>\n        {title}\n      </div>\n      {subtitle && (\n        <div className={buildClassName(styles.subtitle, subtitleClassName)}>\n          {subtitle}\n        </div>\n      )}\n      {!inputElement && IS_IOS && (\n        <div className={styles.separator} />\n      )}\n    </div>\n  );\n};\n\nexport default PickerItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Af3tYFMg\",\"canvas\":\"GbpiDSS_\"};","import React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { preloadImage } from '../../../util/files';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport styles from './RadialPatternBackground.module.scss';\n\ntype OwnProps = {\n  backgroundColors: string[];\n  patternColor?: string;\n  patternIcon?: ApiSticker;\n  className?: string;\n  clearBottomSector?: boolean;\n};\n\nconst RINGS = 3;\nconst BASE_RING_ITEM_COUNT = 8;\nconst RING_INCREMENT = 0.5;\nconst CENTER_EMPTINESS = 0.05;\nconst MAX_RADIUS = 0.4;\nconst BASE_ICON_SIZE = 20;\n\nconst MIN_SIZE = 250;\n\nconst RadialPatternBackground = ({\n  backgroundColors,\n  patternColor,\n  patternIcon,\n  clearBottomSector,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const [getContainerSize, setContainerSize] = useSignal({ width: 0, height: 0 });\n\n  const dpr = useDevicePixelRatio();\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const previewMediaHash = patternIcon && getStickerMediaHash(patternIcon, 'preview');\n  const previewUrl = useMedia(previewMediaHash);\n\n  useEffect(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  const patternPositions = useMemo(() => {\n    const coordinates: { x: number; y: number; sizeFactor: number }[] = [];\n    for (let ring = 1; ring <= RINGS; ring++) {\n      const ringItemCount = Math.floor(BASE_RING_ITEM_COUNT * (1 + (ring - 1) * RING_INCREMENT));\n      const ringProgress = ring / RINGS;\n      const ringRadius = CENTER_EMPTINESS + (MAX_RADIUS - CENTER_EMPTINESS) * ringProgress;\n\n      const angleShift = ring % 2 === 0 ? Math.PI / ringItemCount : 0;\n\n      for (let i = 0; i < ringItemCount; i++) {\n        const angle = (i / ringItemCount) * Math.PI * 2 + angleShift;\n\n        if (clearBottomSector && angle > Math.PI * 0.45 && angle < Math.PI * 0.55) {\n          continue;\n        }\n\n        // Slightly oval\n        const xOffset = ringRadius * 1.71 * Math.cos(angle);\n        const yOffset = ringRadius * Math.sin(angle);\n\n        const x = 0.5 + xOffset;\n        const y = 0.5 + yOffset;\n\n        const sizeFactor = 1.4 - ringProgress * Math.random();\n\n        coordinates.push({\n          x, y, sizeFactor,\n        });\n      }\n    }\n    return coordinates;\n  }, [clearBottomSector]);\n\n  useResizeObserver(containerRef, (entry) => {\n    setContainerSize({\n      width: entry.contentRect.width,\n      height: entry.contentRect.height,\n    });\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (container) {\n      setContainerSize({\n        width: container.clientWidth,\n        height: container.clientHeight,\n      });\n    }\n  }, [setContainerSize]);\n\n  const draw = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage) return;\n    const ctx = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n    if (!width || !height) return;\n\n    ctx.save();\n    patternPositions.forEach(({\n      x, y, sizeFactor,\n    }) => {\n      const centerShift = (width - Math.max(width, MIN_SIZE * dpr)) / 2; // Shift coords if canvas is smaller than `MIN_SIZE`\n      const renderX = x * Math.max(width, MIN_SIZE * dpr) + centerShift;\n      const renderY = y * Math.max(height, MIN_SIZE * dpr) + centerShift;\n\n      const size = BASE_ICON_SIZE * dpr * sizeFactor * (centerShift ? 0.8 : 1);\n\n      ctx.drawImage(emojiImage, renderX - size / 2, renderY - size / 2, size, size);\n    });\n    ctx.restore();\n\n    if (patternColor) {\n      ctx.save();\n      ctx.fillStyle = patternColor;\n      ctx.globalCompositeOperation = 'source-atop';\n      ctx.fillRect(0, 0, width, height);\n      ctx.restore();\n    }\n\n    const radialGradient = ctx.createRadialGradient(width / 2, height / 2, 0, width / 2, height / 2, width / 2);\n    radialGradient.addColorStop(0, '#FFFFFF77');\n    radialGradient.addColorStop(1, '#FFFFFF');\n\n    // Alpha mask\n    ctx.save();\n    ctx.globalCompositeOperation = 'destination-out';\n    ctx.fillStyle = radialGradient;\n    ctx.fillRect(0, 0, width, height);\n    ctx.restore();\n  });\n\n  useEffect(() => {\n    draw();\n  }, [emojiImage]);\n\n  useEffect(() => {\n    const { width, height } = getContainerSize();\n    const canvas = canvasRef.current!;\n    if (!width || !height) {\n      return;\n    }\n\n    const maxSide = Math.max(width, height);\n    requestMutation(() => {\n      canvas.width = maxSide * dpr;\n      canvas.height = maxSide * dpr;\n\n      draw();\n    });\n  }, [getContainerSize, dpr]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(\n        `--_bg-1: ${backgroundColors[0]}`,\n        `--_bg-2: ${backgroundColors[1] || backgroundColors[0]}`,\n      )}\n    >\n      <canvas className={styles.canvas} ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(RadialPatternBackground);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aInga6VW\",\"particle\":\"PZAuNVZH\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiEmojiStatus, ApiReactionCustomEmoji } from '../../../api/types';\n\nimport { getStickerHashById } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useMedia from '../../../hooks/useMedia';\n\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './CustomEmojiEffect.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiEmojiStatus;\n  className?: string;\n  isLottie?: boolean;\n  particleSize?: number;\n  onEnded?: NoneToVoidFunction;\n};\n\nconst EFFECT_AMOUNT = 7;\n\nconst CustomEmojiEffect: FC<OwnProps> = ({\n  reaction,\n  isLottie,\n  className,\n  particleSize,\n  onEnded,\n}) => {\n  const stickerHash = getStickerHashById(reaction.documentId, true);\n\n  const previewMediaData = useMedia(!isLottie ? stickerHash : undefined);\n\n  const paths: string[] = useMemo(() => {\n    if (!IS_OFFSET_PATH_SUPPORTED) return [];\n    return Array.from({ length: EFFECT_AMOUNT }).map(() => generateRandomDropPath(particleSize));\n  }, [particleSize]);\n\n  if (!previewMediaData && !isLottie) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, className)}\n      style={buildStyle(Boolean(particleSize) && `--particle-size: ${particleSize}px`)}\n    >\n      {paths.map((path, i) => {\n        const style = `--offset-path: path('${path}');`;\n        if (isLottie) {\n          return (\n            <CustomEmoji\n              documentId={reaction.documentId}\n              className={styles.particle}\n              style={style}\n              withSharedAnimation\n              size={particleSize}\n              onAnimationEnd={i === 0 ? onEnded : undefined}\n            />\n          );\n        }\n\n        return (\n          <img\n            src={previewMediaData}\n            alt=\"\"\n            className={styles.particle}\n            style={style}\n            draggable={false}\n            onAnimationEnd={i === 0 ? onEnded : undefined}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiEffect);\n\nfunction generateRandomDropPath(particleSize = 20) {\n  const x = (particleSize / 2 + Math.random() * particleSize * 3) * (Math.random() > 0.5 ? 1 : -1);\n  const y = particleSize + Math.random() * particleSize * 4;\n\n  return `M 0 0 C 0 0 ${x} ${-y - particleSize} ${x} ${y}`;\n}\n","import React, {\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { getStickerHashById, isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { roundToNearestEven } from '../../../util/math';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../AnimatedSticker';\nimport CustomEmoji from '../CustomEmoji';\nimport CustomEmojiEffect from './CustomEmojiEffect';\nimport ReactionStaticEmoji from './ReactionStaticEmoji';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReaction;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  withEffectOnly?: boolean;\n  shouldPause?: boolean;\n  shouldLoop?: boolean;\n  loopLimit?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  availableReactions?: ApiAvailableReaction[];\n  genericEffects?: ApiStickerSet;\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst CENTER_ICON_MULTIPLIER = 1.9;\nconst EFFECT_SIZE = 6.5 * REM;\nconst CUSTOM_EMOJI_EFFECT_MULTIPLIER = 0.5;\nconst MIN_PARTICLE_SIZE = REM;\n\nconst ReactionAnimatedEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  availableReactions,\n  genericEffects,\n  withEffects,\n  withEffectOnly,\n  shouldPause,\n  shouldLoop,\n  loopLimit,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isCustom = reaction.type === 'custom';\n\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((r) => isSameReaction(r.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const centerIconId = availableReaction?.centerIcon?.id;\n\n  const { customEmoji } = useCustomEmoji(isCustom ? reaction.documentId : undefined);\n\n  const assignedEffectId = useMemo(() => {\n    if (!isCustom) return availableReaction?.aroundAnimation?.id;\n\n    if (!customEmoji) return undefined;\n    const assignedId = availableReactions?.find((available) => available.reaction.emoticon === customEmoji.emoji)\n      ?.aroundAnimation?.id;\n    return assignedId;\n  }, [availableReaction, availableReactions, customEmoji, isCustom]);\n\n  const effectId = useMemo(() => {\n    if (assignedEffectId) {\n      return assignedEffectId;\n    }\n\n    if (!genericEffects?.stickers) {\n      return undefined;\n    }\n\n    const { stickers } = genericEffects;\n    const randomIndex = Math.floor(Math.random() * stickers.length);\n\n    return stickers[randomIndex].id;\n  }, [assignedEffectId, genericEffects]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const mediaHashCenterIcon = centerIconId && getStickerHashById(centerIconId);\n  const mediaHashEffect = effectId && getStickerHashById(effectId);\n\n  const mediaDataCenterIcon = useMedia(mediaHashCenterIcon);\n  const mediaDataEffect = useMedia(mediaHashEffect);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction && (isCustom || mediaDataCenterIcon) && mediaDataEffect,\n  );\n  const shouldPlayCenter = isIntersecting && ((shouldPlayEffect && !withEffectOnly) || shouldLoop);\n  const {\n    shouldRender: shouldRenderEffect,\n    transitionClassNames: animationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayEffect, undefined, true, 'slow');\n  const {\n    shouldRender: shouldRenderCenter,\n    transitionClassNames: centerAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldPlayCenter, undefined, true, 'slow');\n\n  const handleEnded = useLastCallback(() => {\n    stopActiveReaction({ containerId, reaction });\n  });\n\n  const [isAnimationLoaded, markAnimationLoaded, unmarkAnimationLoaded] = useFlag();\n  const shouldShowStatic = !isCustom && (!shouldPlayCenter || !isAnimationLoaded);\n  const {\n    shouldRender: shouldRenderStatic,\n    transitionClassNames: staticClassNames,\n  } = useShowTransitionDeprecated(shouldShowStatic, undefined, true);\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    withEffectOnly && styles.withEffectOnly,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref}>\n      {!withEffectOnly && shouldRenderStatic && (\n        <ReactionStaticEmoji\n          className={staticClassNames}\n          reaction={reaction}\n          availableReactions={availableReactions}\n          size={size}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {!withEffectOnly && isCustom && (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          className={styles.customEmoji}\n          size={size}\n          noPlay={shouldPause}\n          noVideoOnMobile\n          loopLimit={loopLimit}\n          observeIntersectionForPlaying={observeIntersection}\n          forceAlways\n        />\n      )}\n      {shouldRenderCenter && !isCustom && (\n        <AnimatedSticker\n          key={`${centerIconId}-${size}`}\n          className={buildClassName(styles.animatedIcon, centerAnimationClassNames)}\n          size={roundToNearestEven(size * CENTER_ICON_MULTIPLIER)}\n          tgsUrl={mediaDataCenterIcon}\n          play={isIntersecting && !shouldPause}\n          noLoop={!shouldLoop}\n          onLoad={markAnimationLoaded}\n          onEnded={unmarkAnimationLoaded}\n          forceAlways\n        />\n      )}\n      {shouldRenderEffect && (\n        <>\n          <AnimatedSticker\n            key={`${effectId}-${effectSize}`}\n            className={buildClassName(styles.effect, animationClassNames)}\n            size={effectSize}\n            tgsUrl={mediaDataEffect}\n            play={isIntersecting}\n            noLoop\n            onEnded={handleEnded}\n            forceAlways\n          />\n          {isCustom && !assignedEffectId && isIntersecting && (\n            <CustomEmojiEffect\n              reaction={reaction}\n              className={animationClassNames}\n              particleSize={Math.max(size * CUSTOM_EMOJI_EFFECT_MULTIPLIER, MIN_PARTICLE_SIZE)}\n              onEnded={handleEnded}\n            />\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { genericEmojiEffects, reactions } = global;\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      availableReactions: reactions.availableReactions,\n      genericEffects: genericEmojiEffects,\n      withEffects,\n    };\n  },\n)(ReactionAnimatedEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport CustomEmoji from '../CustomEmoji';\nimport Icon from '../icons/Icon';\n\nimport './ReactionStaticEmoji.scss';\n\nimport blankUrl from '../../../assets/blank.png';\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  size?: number;\n  withIconHeart?: boolean;\n  observeIntersection?: ObserveFn;\n};\n\nconst ReactionStaticEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  className,\n  size,\n  withIconHeart,\n  observeIntersection,\n}) => {\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const staticIconId = availableReaction?.staticIcon?.id;\n  const mediaHash = staticIconId ? `document${staticIconId}` : undefined;\n  const mediaData = useMedia(mediaHash);\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  const shouldApplySizeFix = reaction.type === 'emoji' && reaction.emoticon === '🦄';\n  const shouldReplaceWithHeartIcon = withIconHeart && reaction.type === 'emoji' && reaction.emoticon === '❤';\n\n  if (reaction.type === 'custom') {\n    return (\n      <CustomEmoji\n        documentId={reaction.documentId}\n        className={buildClassName('ReactionStaticEmoji', className)}\n        size={size}\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    );\n  }\n\n  if (shouldReplaceWithHeartIcon) {\n    return (\n      <Icon name=\"heart\" className=\"ReactionStaticEmoji\" style={`font-size: ${size}px; width: ${size}px`} />\n    );\n  }\n\n  return (\n    <img\n      className={buildClassName(\n        'ReactionStaticEmoji',\n        shouldApplySizeFix && 'with-unicorn-fix',\n        transitionClassNames,\n        className,\n      )}\n      style={size ? `width: ${size}px; height: ${size}px` : undefined}\n      src={mediaData || blankUrl}\n      alt={availableReaction?.title}\n      draggable={false}\n    />\n  );\n};\n\nexport default memo(ReactionStaticEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatFolderModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst ChatFolderModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatFolderModal = useModuleLoader(Bundles.Extra, 'ChatFolderModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatFolderModal ? <ChatFolderModal {...props} /> : undefined;\n};\n\nexport default ChatFolderModalAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './MuteChatModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst MuteChatModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MuteChatModal = useModuleLoader(Bundles.Extra, 'MuteChatModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MuteChatModal ? <MuteChatModal {...props} /> : undefined;\n};\n\nexport default MuteChatModalAsync;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"byPckqUT\",\"indicator\":\"nl36F75B\",\"indicatorInner\":\"AA5s1Pu4\",\"selected\":\"qy2i51dM\",\"active\":\"IsUWP16T\",\"bar-animation-transform-2\":\"p_1Kbke9\",\"barAnimationTransform2\":\"p_1Kbke9\",\"bar-animation-transform-1\":\"gOCprMbJ\",\"barAnimationTransform1\":\"gOCprMbJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport styles from './ChatCallStatus.module.scss';\n\ntype OwnProps = {\n  isSelected?: boolean;\n  isActive?: boolean;\n  isMobile?: boolean;\n};\n\nconst ChatCallStatus: FC<OwnProps> = ({\n  isSelected,\n  isActive,\n  isMobile,\n}) => {\n  return (\n    <div className={buildClassName(\n      styles.root,\n      isActive && styles.active,\n      isSelected && !isMobile && styles.selected,\n    )}\n    >\n      <div className={styles.indicator}>\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n        <div className={styles.indicatorInner} />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ChatCallStatus);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiDraft,\n  ApiMessage,\n  ApiMessageOutgoingStatus,\n  ApiPeer,\n  ApiTopic,\n  ApiTypeStory,\n  ApiTypingStatus,\n  ApiUser,\n  ApiUserStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\nimport { MAIN_THREAD_ID } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport {\n  getMessageAction,\n  groupStatetefulContent,\n  isUserId,\n  isUserOnline,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatLastMessage,\n  selectChatLastMessageId,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectIsForumPanelClosed,\n  selectIsForumPanelOpen,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectOutgoingStatus,\n  selectPeer,\n  selectPeerStory,\n  selectSender,\n  selectTabState,\n  selectThreadParam,\n  selectTopicFromMessage,\n  selectTopicsInfo,\n  selectUser,\n  selectUserStatus,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useEnsureMessage from '../../../hooks/useEnsureMessage';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useChatListEntry from './hooks/useChatListEntry';\n\nimport Avatar from '../../common/Avatar';\nimport DeleteChatModal from '../../common/DeleteChatModal';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\nimport ChatCallStatus from './ChatCallStatus';\n\nimport './Chat.scss';\n\ntype OwnProps = {\n  chatId: string;\n  folderId?: number;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n  isPinned?: boolean;\n  offsetTop?: number;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n  previewMessageId?: number;\n  className?: string;\n  observeIntersection?: ObserveFn;\n  onDragEnter?: (chatId: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  lastMessageStory?: ApiTypeStory;\n  listedTopicIds?: number[];\n  topics?: Record<number, ApiTopic>;\n  isMuted?: boolean;\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  actionTargetUserIds?: string[];\n  actionTargetMessage?: ApiMessage;\n  actionTargetChatId?: string;\n  lastMessageSender?: ApiPeer;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  draft?: ApiDraft;\n  isSelected?: boolean;\n  isSelectedForum?: boolean;\n  isForumPanelOpen?: boolean;\n  canScrollDown?: boolean;\n  canChangeFolder?: boolean;\n  lastMessageTopic?: ApiTopic;\n  typingStatus?: ApiTypingStatus;\n  withInterfaceAnimations?: boolean;\n  lastMessageId?: number;\n  lastMessage?: ApiMessage;\n  currentUserId: string;\n  isSynced?: boolean;\n};\n\nconst Chat: FC<OwnProps & StateProps> = ({\n  chatId,\n  folderId,\n  orderDiff,\n  animationType,\n  isPinned,\n  listedTopicIds,\n  topics,\n  observeIntersection,\n  chat,\n  lastMessageStory,\n  isMuted,\n  user,\n  userStatus,\n  actionTargetUserIds,\n  lastMessageSender,\n  lastMessageOutgoingStatus,\n  actionTargetMessage,\n  actionTargetChatId,\n  offsetTop,\n  draft,\n  withInterfaceAnimations,\n  isSelected,\n  isSelectedForum,\n  isForumPanelOpen,\n  canScrollDown,\n  canChangeFolder,\n  lastMessageTopic,\n  typingStatus,\n  lastMessageId,\n  lastMessage,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  previewMessageId,\n  className,\n  isSynced,\n  onDragEnter,\n}) => {\n  const {\n    openChat,\n    openSavedDialog,\n    toggleChatInfo,\n    focusLastMessage,\n    focusMessage,\n    loadTopics,\n    openForumPanel,\n    closeForumPanel,\n    setShouldCloseRightColumn,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n\n  const { isForum, isForumAsMessages } = chat || {};\n\n  useEnsureMessage(isSavedDialog ? currentUserId : chatId, lastMessageId, lastMessage);\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    typingStatus,\n    draft,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageTopic,\n    lastMessageSender,\n    observeIntersection,\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n    isSavedDialog,\n    isPreview,\n    topics,\n  });\n\n  const getIsForumPanelClosed = useSelectorSignal(selectIsForumPanelClosed);\n\n  const handleClick = useLastCallback(() => {\n    const noForumTopicPanel = isMobile && isForumAsMessages;\n\n    if (isMobile) {\n      setShouldCloseRightColumn({ value: true });\n    }\n\n    if (isPreview) {\n      focusMessage({\n        chatId,\n        messageId: previewMessageId!,\n      });\n      return;\n    }\n\n    if (isSavedDialog) {\n      openSavedDialog({ chatId, noForumTopicPanel: true }, { forceOnHeavyAnimation: true });\n\n      if (isMobile) {\n        toggleChatInfo({ force: false });\n      }\n      return;\n    }\n\n    if (isForum) {\n      if (isForumPanelOpen) {\n        closeForumPanel(undefined, { forceOnHeavyAnimation: true });\n\n        return;\n      } else {\n        if (!noForumTopicPanel) {\n          openForumPanel({ chatId }, { forceOnHeavyAnimation: true });\n        }\n\n        if (!isForumAsMessages) return;\n      }\n    }\n\n    openChat({ id: chatId, noForumTopicPanel, shouldReplaceHistory: true }, { forceOnHeavyAnimation: true });\n\n    if (isSelected && canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const handleDragEnter = useLastCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.(chatId);\n  });\n\n  const handleDelete = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const handleChatFolderChange = useLastCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  });\n\n  const handleReport = useLastCallback(() => {\n    if (!chat) return;\n    reportMessages({ chatId: chat.id, messageIds: [] });\n  });\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    handleDelete,\n    handleMute,\n    handleChatFolderChange,\n    handleReport,\n    folderId,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    isSavedDialog,\n    currentUserId,\n    isPreview,\n  });\n\n  const isIntersecting = useIsIntersecting(ref, chat ? observeIntersection : undefined);\n\n  // Load the forum topics to display unread count badge\n  useEffect(() => {\n    if (isIntersecting && isForum && isSynced && listedTopicIds === undefined) {\n      loadTopics({ chatId });\n    }\n  }, [chatId, listedTopicIds, isSynced, isForum, isIntersecting]);\n\n  const isOnline = user && userStatus && isUserOnline(user, userStatus);\n  const { hasShownClass: isAvatarOnlineShown } = useShowTransitionDeprecated(isOnline);\n\n  const href = useMemo(() => {\n    if (!IS_OPEN_IN_NEW_TAB_SUPPORTED) return undefined;\n\n    if (isSavedDialog) {\n      return `#${createLocationHash(currentUserId, 'thread', chatId)}`;\n    }\n\n    return `#${createLocationHash(chatId, 'thread', MAIN_THREAD_ID)}`;\n  }, [chatId, currentUserId, isSavedDialog]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = user || chat;\n\n  const chatClassName = buildClassName(\n    'Chat chat-item-clickable',\n    isUserId(chatId) ? 'private' : 'group',\n    isForum && 'forum',\n    isSelected && 'selected',\n    isSelectedForum && 'selected-forum',\n    isPreview && 'standalone',\n    className,\n  );\n\n  return (\n    <ListItem\n      ref={ref}\n      className={chatClassName}\n      href={href}\n      style={`top: ${offsetTop}px`}\n      ripple={!isForum && !isMobile}\n      contextActions={contextActions}\n      onClick={handleClick}\n      onDragEnter={handleDragEnter}\n      withPortalForMenu\n    >\n      <div className={buildClassName('status', 'status-clickable')}>\n        <Avatar\n          peer={peer}\n          isSavedMessages={user?.isSelf}\n          isSavedDialog={isSavedDialog}\n          size={isPreview ? 'medium' : 'large'}\n          withStory={!user?.isSelf}\n          withStoryGap={isAvatarOnlineShown || Boolean(chat.subscriptionUntil)}\n          storyViewerOrigin={StoryViewerOrigin.ChatList}\n          storyViewerMode=\"single-peer\"\n        />\n        <div className=\"avatar-badge-wrapper\">\n          <div\n            className={buildClassName('avatar-online', 'avatar-badge', isAvatarOnlineShown && 'avatar-online-shown')}\n          />\n          {!isAvatarOnlineShown && Boolean(chat.subscriptionUntil) && (\n            <StarIcon type=\"gold\" className=\"avatar-badge avatar-subscription\" size=\"adaptive\" />\n          )}\n          <ChatBadge\n            chat={chat}\n            isMuted={isMuted}\n            shouldShowOnlyMostImportant\n            forceHidden={getIsForumPanelClosed}\n            topics={topics}\n            isSelected={isSelected}\n          />\n        </div>\n        {chat.isCallActive && chat.isCallNotEmpty && (\n          <ChatCallStatus isMobile={isMobile} isSelected={isSelected} isActive={withInterfaceAnimations} />\n        )}\n      </div>\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === user?.id && user?.isSelf}\n            isSavedDialog={isSavedDialog}\n            observeIntersection={observeIntersection}\n          />\n          {isMuted && !isSavedDialog && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={!isSavedDialog ? lastMessageOutgoingStatus : undefined}\n              draftDate={draft?.date}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          {!isPreview && (\n            <ChatBadge\n              chat={chat}\n              isPinned={isPinned}\n              isMuted={isMuted}\n              isSavedDialog={isSavedDialog}\n              hasMiniApp={user?.hasMainMiniApp}\n              topics={topics}\n              isSelected={isSelected}\n            />\n          )}\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <DeleteChatModal\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          chat={chat}\n          isSavedDialog={isSavedDialog}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, isSavedDialog, isPreview, previewMessageId,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    if (!chat) {\n      return {\n        currentUserId: global.currentUserId!,\n      };\n    }\n\n    const lastMessageId = previewMessageId || selectChatLastMessageId(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const lastMessage = previewMessageId\n      ? selectChatMessage(global, chatId, previewMessageId)\n      : selectChatLastMessage(global, chatId, isSavedDialog ? 'saved' : 'all');\n    const { isOutgoing, forwardInfo } = lastMessage || {};\n    const savedDialogSender = isSavedDialog && forwardInfo?.fromId ? selectPeer(global, forwardInfo.fromId) : undefined;\n    const messageSender = lastMessage ? selectSender(global, lastMessage) : undefined;\n    const lastMessageSender = savedDialogSender || messageSender;\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chat.id, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n      type: messageListType,\n    } = selectCurrentMessageList(global) || {};\n    const isSelected = !isPreview && chatId === currentChatId && (isSavedDialog\n      ? chatId === currentThreadId : currentThreadId === MAIN_THREAD_ID);\n    const isSelectedForum = (chat.isForum && chatId === currentChatId)\n      || chatId === selectTabState(global).forumPanelChatId;\n\n    const userStatus = selectUserStatus(global, chatId);\n    const lastMessageTopic = lastMessage && selectTopicFromMessage(global, lastMessage);\n\n    const typingStatus = selectThreadParam(global, chatId, MAIN_THREAD_ID, 'typingStatus');\n\n    const topicsInfo = selectTopicsInfo(global, chatId);\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      isMuted: selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global)),\n      lastMessageSender,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      draft: selectDraft(global, chatId, MAIN_THREAD_ID),\n      isSelected,\n      isSelectedForum,\n      isForumPanelOpen: selectIsForumPanelOpen(global),\n      canScrollDown: isSelected && messageListType === 'thread',\n      canChangeFolder: (global.chatFolders.orderedIds?.length || 0) > 1,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      user,\n      userStatus,\n      lastMessageTopic,\n      typingStatus,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      lastMessage,\n      lastMessageId,\n      currentUserId: global.currentUserId!,\n      listedTopicIds: topicsInfo?.listedTopicIds,\n      topics: topicsInfo?.topicsById,\n      isSynced: global.isSynced,\n      lastMessageStory,\n    };\n  },\n)(Chat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { isSignal } from '../../../util/signals';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedCounter from '../../common/AnimatedCounter';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ShowTransition from '../../ui/ShowTransition';\n\nimport './ChatBadge.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topic?: ApiTopic;\n  wasTopicOpened?: boolean;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  isSavedDialog?: boolean;\n  shouldShowOnlyMostImportant?: boolean;\n  hasMiniApp?: boolean;\n  forceHidden?: boolean | Signal<boolean>;\n  topics?: Record<number, ApiTopic>;\n  isSelected?: boolean;\n};\n\nconst ChatBadge: FC<OwnProps> = ({\n  topic,\n  topics,\n  chat,\n  isPinned,\n  isMuted,\n  shouldShowOnlyMostImportant,\n  wasTopicOpened,\n  forceHidden,\n  isSavedDialog,\n  hasMiniApp,\n  isSelected,\n}) => {\n  const { requestMainWebView } = getActions();\n\n  const oldLang = useOldLang();\n\n  const {\n    unreadMentionsCount = 0, unreadReactionsCount = 0,\n  } = !chat.isForum ? chat : {}; // TODO[forums] Unread mentions and reactions temporarily disabled for forums\n\n  const isTopicUnopened = !isPinned && topic && !wasTopicOpened;\n  const isForum = chat.isForum && !topic;\n  const topicsWithUnread = useMemo(() => (\n    isForum && topics ? Object.values(topics).filter(({ unreadCount }) => unreadCount) : undefined\n  ), [topics, isForum]);\n\n  const unreadCount = useMemo(() => (\n    isForum\n      // If we have unmuted topics, display the count of those. Otherwise, display the count of all topics.\n      ? ((isMuted && topicsWithUnread?.filter((acc) => acc.isMuted === false).length)\n        || topicsWithUnread?.length)\n      : (topic || chat).unreadCount\n  ), [chat, topic, topicsWithUnread, isForum, isMuted]);\n\n  const shouldBeMuted = useMemo(() => {\n    const hasUnmutedUnreadTopics = topics\n      && Object.values(topics).some((acc) => !acc.isMuted && acc.unreadCount);\n\n    return isMuted || (topics && !hasUnmutedUnreadTopics);\n  }, [topics, isMuted]);\n\n  const hasUnreadMark = topic ? false : chat.hasUnreadMark;\n\n  const resolvedForceHidden = useDerivedState(\n    () => (isSignal(forceHidden) ? forceHidden() : forceHidden),\n    [forceHidden],\n  );\n  const isShown = !resolvedForceHidden && Boolean(\n    unreadCount || unreadMentionsCount || hasUnreadMark || isPinned || unreadReactionsCount\n    || isTopicUnopened || hasMiniApp,\n  );\n\n  const isUnread = Boolean((unreadCount || hasUnreadMark) && !isSavedDialog);\n  const className = buildClassName(\n    'ChatBadge',\n    shouldBeMuted && 'muted',\n    !isUnread && isPinned && 'pinned',\n    isUnread && 'unread',\n  );\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chat.id,\n      peerId: chat.id,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  function renderContent() {\n    const unreadReactionsElement = unreadReactionsCount && (\n      <div className={buildClassName('ChatBadge reaction', shouldBeMuted && 'muted')}>\n        <Icon name=\"heart\" />\n      </div>\n    );\n\n    const unreadMentionsElement = unreadMentionsCount && (\n      <div className=\"ChatBadge mention\">\n        <Icon name=\"mention\" />\n      </div>\n    );\n\n    const unopenedTopicElement = isTopicUnopened && (\n      <div className={buildClassName('ChatBadge unopened', shouldBeMuted && 'muted')} />\n    );\n\n    const unreadCountElement = (hasUnreadMark || unreadCount) ? (\n      <div className={className}>\n        {!hasUnreadMark && <AnimatedCounter text={formatIntegerCompact(unreadCount!)} />}\n      </div>\n    ) : undefined;\n\n    const pinnedElement = isPinned && (\n      <div className={className}>\n        <Icon name=\"pinned-chat\" />\n      </div>\n    );\n\n    const miniAppButton = hasMiniApp && (\n      <Button\n        color={isSelected ? 'secondary' : 'primary'}\n        className=\"ChatBadge miniapp\"\n        pill\n        size=\"tiny\"\n        onClick={handleOpenApp}\n      >\n        {oldLang('BotOpen')}\n      </Button>\n    );\n\n    const visiblePinnedElement = !unreadCountElement && !unreadMentionsElement && !unreadReactionsElement\n      && pinnedElement;\n\n    const elements = [\n      unopenedTopicElement, unreadReactionsElement, unreadMentionsElement, unreadCountElement, visiblePinnedElement,\n    ].filter(Boolean);\n\n    if (isSavedDialog) return pinnedElement;\n\n    // Show only if empty or have pinned icon\n    if (hasMiniApp && (elements.length === 0 || visiblePinnedElement)) return miniAppButton;\n\n    if (elements.length === 0) return undefined;\n\n    if (elements.length === 1) return elements[0];\n\n    if (shouldShowOnlyMostImportant) {\n      const importanceOrderedElements = [\n        unreadMentionsElement, unreadCountElement, unreadReactionsElement, pinnedElement,\n      ].filter(Boolean);\n      return importanceOrderedElements[0];\n    }\n\n    return (\n      <div className=\"ChatBadge-wrapper\">\n        {elements}\n      </div>\n    );\n  }\n\n  return (\n    <ShowTransition isCustom className=\"ChatBadge-transition\" isOpen={isShown}>\n      {renderContent()}\n    </ShowTransition>\n  );\n};\n\nexport default memo(ChatBadge);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistExportedInvite, ApiSession, ApiSticker } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport { getEmojiPrefix, removeEmojiPrefix, type FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../../types';\nimport type { MenuItemContextAction } from '../../ui/ListItem';\nimport type { TabWithProperties } from '../../ui/TabList';\n\nimport { ALL_FOLDER_ID } from '../../../config';\nimport { selectCanShareFolder, selectTabState } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport { useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport StoryRibbon from '../../story/StoryRibbon';\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport ChatList from './ChatList';\nimport { IconName } from '../../../types/icons';\ntype OwnProps = {\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n  shouldHideFolderTabs?: boolean;\n  isForumPanelOpen?: boolean;\n};\n\ntype StateProps = {\n  chatFoldersById: Record<number, ApiChatFolder>;\n  folderInvitesById: Record<number, ApiChatlistExportedInvite[]>;\n  orderedFolderIds?: number[];\n  activeChatFolder: number;\n  currentUserId?: string;\n  shouldSkipHistoryAnimations?: boolean;\n  maxFolders: number;\n  maxChatLists: number;\n  maxFolderInvites: number;\n  hasArchivedChats?: boolean;\n  hasArchivedStories?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  sessions?: Record<string, ApiSession>;\n};\n\nconst SAVED_MESSAGES_HOTKEY = '0';\nconst FIRST_FOLDER_INDEX = 0;\n\nexport const FOLDER_ICONS: Record<string, IconName> = {\n  '💬': 'folder-chats',\n  '✅': 'folder-chat',\n  '👤': 'folder-user',\n  '👥': 'folder-group',\n  '⭐': 'folder-star',\n  '📢': 'folder-channel',\n  '🤖': 'folder-bot',\n  '📁': 'folder-default',\n};\n\nconst ChatFolders: FC<OwnProps & StateProps> = ({\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  chatFoldersById,\n  orderedFolderIds,\n  activeChatFolder,\n  currentUserId,\n  isForumPanelOpen,\n  shouldSkipHistoryAnimations,\n  maxFolders,\n  maxChatLists,\n  shouldHideFolderTabs,\n  folderInvitesById,\n  maxFolderInvites,\n  hasArchivedChats,\n  hasArchivedStories,\n  archiveSettings,\n  isStoryRibbonShown,\n  sessions,\n}) => {\n  const {\n    loadChatFolders,\n    setActiveChatFolder,\n    openChat,\n    openShareChatFolderModal,\n    openDeleteChatFolderModal,\n    openEditChatFolder,\n    openLimitReachedModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    loadChatFolders();\n  }, []);\n\n  const {\n    ref,\n    shouldRender: shouldRenderStoryRibbon,\n    getIsClosing: getIsStoryRibbonClosing,\n  } = useShowTransition({\n    isOpen: isStoryRibbonShown,\n    className: false,\n    withShouldRender: true,\n  });\n  const isStoryRibbonClosing = useDerivedState(getIsStoryRibbonClosing);\n\n  const allChatsFolder: ApiChatFolder = useMemo(() => {\n    return {\n      id: ALL_FOLDER_ID,\n      title: { text: orderedFolderIds?.[0] === ALL_FOLDER_ID ? lang('FilterAllChatsShort') : lang('FilterAllChats') },\n      includedChatIds: MEMO_EMPTY_ARRAY,\n      excludedChatIds: MEMO_EMPTY_ARRAY,\n    } satisfies ApiChatFolder;\n  }, [orderedFolderIds, lang]);\n\n  const displayedFolders = useMemo(() => {\n    return orderedFolderIds\n      ? orderedFolderIds.map((id) => {\n        if (id === ALL_FOLDER_ID) {\n          return allChatsFolder;\n        }\n\n        return chatFoldersById[id] || {};\n      }).filter(Boolean)\n      : undefined;\n  }, [chatFoldersById, allChatsFolder, orderedFolderIds]);\n\n  const allChatsFolderIndex = displayedFolders?.findIndex((folder) => folder.id === ALL_FOLDER_ID);\n  const isInAllChatsFolder = allChatsFolderIndex === activeChatFolder;\n  const isInFirstFolder = FIRST_FOLDER_INDEX === activeChatFolder;\n\n  const folderCountersById = useFolderManagerForUnreadCounters();\n  const folderTabs = useMemo(() => {\n    if (!displayedFolders || !displayedFolders.length) {\n      return undefined;\n    }\n\n    return displayedFolders.map((folder, i) => {\n      const { id, title } = folder;\n      const isBlocked = id !== ALL_FOLDER_ID && i > maxFolders - 1;\n      const canShareFolder = selectCanShareFolder(getGlobal(), id);\n      const contextActions: MenuItemContextAction[] = [];\n\n      if (canShareFolder) {\n        contextActions.push({\n          title: lang('FilterShare'),\n          icon: 'link',\n          handler: () => {\n            const chatListCount = Object.values(chatFoldersById).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n            if (chatListCount >= maxChatLists && !folder.isChatList) {\n              openLimitReachedModal({\n                limit: 'chatlistJoined',\n              });\n              return;\n            }\n\n            // Greater amount can be after premium downgrade\n            if (folderInvitesById[id]?.length >= maxFolderInvites) {\n              openLimitReachedModal({\n                limit: 'chatlistInvites',\n              });\n              return;\n            }\n\n            openShareChatFolderModal({\n              folderId: id,\n            });\n          },\n        });\n      }\n\n      if (id !== ALL_FOLDER_ID) {\n        contextActions.push({\n          title: lang('FilterEdit'),\n          icon: 'edit',\n          handler: () => {\n            openEditChatFolder({ folderId: id });\n          },\n        });\n\n        contextActions.push({\n          title: lang('FilterDelete'),\n          icon: 'delete',\n          destructive: true,\n          handler: () => {\n            openDeleteChatFolderModal({ folderId: id });\n          },\n        });\n      }\n\n      let customEmoji: string | undefined;\n      let text = title.text;\n      let entities = title.entities;\n      let emoji = undefined;\n      if (entities?.length && entities[0].type === 'MessageEntityCustomEmoji' && entities[0].offset === 0) {\n        customEmoji = entities[0].documentId;\n        text = text.slice(entities[0].length + 1);\n        entities = entities.slice(1);\n      } else {\n        emoji = getEmojiPrefix(text, entities || []).trim();\n        text = removeEmojiPrefix(text, entities || []);\n      }\n\n      return {\n        id,\n        title: renderTextWithEntities({\n          text,\n          entities,\n          noCustomEmojiPlayback: folder.noTitleAnimations,\n        }),\n        icon: FOLDER_ICONS[folder.emoticon!] || (emoji ? null : 'folder-default'),\n        emoji: folder.emoticon && folder.emoticon in FOLDER_ICONS ? folder.emoticon : emoji,\n        customEmoji,\n        noCustomEmojiPlayback: folder.noTitleAnimations,\n        badgeCount: folderCountersById[id]?.chatsCount,\n        isBadgeActive: Boolean(folderCountersById[id]?.notificationsCount),\n        isBlocked,\n        contextActions: contextActions?.length ? contextActions : undefined,\n      } satisfies TabWithProperties;\n    });\n  }, [\n    displayedFolders, maxFolders, folderCountersById, lang, chatFoldersById, maxChatLists, folderInvitesById,\n    maxFolderInvites,\n  ]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    setActiveChatFolder({ activeChatFolder: index }, { forceOnHeavyAnimation: true });\n  });\n\n  // Prevent `activeTab` pointing at non-existing folder after update\n  useEffect(() => {\n    if (!folderTabs?.length) {\n      return;\n    }\n\n    if (activeChatFolder >= folderTabs.length) {\n      setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX });\n    }\n  }, [activeChatFolder, folderTabs, setActiveChatFolder]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV || !folderTabs?.length || isForumPanelOpen) {\n      return undefined;\n    }\n\n    return captureEvents(transitionRef.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        if (direction === SwipeDirection.Left) {\n          setActiveChatFolder(\n            { activeChatFolder: Math.min(activeChatFolder + 1, folderTabs.length - 1) },\n            { forceOnHeavyAnimation: true },\n          );\n          return true;\n        } else if (direction === SwipeDirection.Right) {\n          setActiveChatFolder({ activeChatFolder: Math.max(0, activeChatFolder - 1) }, { forceOnHeavyAnimation: true });\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [activeChatFolder, folderTabs, isForumPanelOpen, setActiveChatFolder]);\n\n  const isNotInFirstFolderRef = useRef();\n  isNotInFirstFolderRef.current = !isInFirstFolder;\n  useEffect(() => (isNotInFirstFolderRef.current ? captureEscKeyListener(() => {\n    if (isNotInFirstFolderRef.current) {\n      setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX });\n    }\n  }) : undefined), [activeChatFolder, setActiveChatFolder]);\n\n  useHistoryBack({\n    isActive: !isInFirstFolder,\n    onBack: () => setActiveChatFolder({ activeChatFolder: FIRST_FOLDER_INDEX }, { forceOnHeavyAnimation: true }),\n  });\n\n  useEffect(() => {\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (e.ctrlKey && e.shiftKey && e.code.startsWith('Digit') && folderTabs) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit) return;\n\n        if (digit === SAVED_MESSAGES_HOTKEY) {\n          openChat({ id: currentUserId, shouldReplaceHistory: true });\n          return;\n        }\n\n        const folder = Number(digit) - 1;\n        if (folder > folderTabs.length - 1) return;\n\n        setActiveChatFolder({ activeChatFolder: folder }, { forceOnHeavyAnimation: true });\n        e.preventDefault();\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, true);\n    };\n  }, [currentUserId, folderTabs, openChat, setActiveChatFolder]);\n\n  const {\n    ref: placeholderRef,\n    shouldRender: shouldRenderPlaceholder,\n  } = useShowTransition({\n    isOpen: !orderedFolderIds,\n    noMountTransition: true,\n    withShouldRender: true,\n  });\n\n  function renderCurrentTab(isActive: boolean) {\n    const activeFolder = Object.values(chatFoldersById)\n      .find(({ id }) => id === folderTabs![activeChatFolder].id);\n    const isFolder = activeFolder && !isInAllChatsFolder;\n\n    return (\n      <ChatList\n        folderType={isFolder ? 'folder' : 'all'}\n        folderId={isFolder ? activeFolder.id : undefined}\n        isActive={isActive}\n        isForumPanelOpen={isForumPanelOpen}\n        foldersDispatch={foldersDispatch}\n        onSettingsScreenSelect={onSettingsScreenSelect}\n        onLeftColumnContentChange={onLeftColumnContentChange}\n        canDisplayArchive={(hasArchivedChats || hasArchivedStories) && !archiveSettings.isHidden}\n        archiveSettings={archiveSettings}\n        sessions={sessions}\n      />\n    );\n  }\n\n  const shouldRenderFolders = folderTabs && folderTabs.length > 1;\n  useEffect(() => {\n    document.body.classList.toggle('with-folder-tabs', shouldRenderFolders && !shouldHideFolderTabs);\n  }, [shouldRenderFolders, shouldHideFolderTabs]);\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'ChatFolders',\n        shouldRenderFolders && shouldHideFolderTabs && 'ChatFolders--tabs-hidden',\n        shouldRenderStoryRibbon && 'with-story-ribbon',\n      )}\n    >\n      {shouldRenderFolders ? (\n        <TabList\n          contextRootElementSelector=\"#LeftColumn\"\n          tabs={folderTabs}\n          activeTab={activeChatFolder}\n          onSwitchTab={handleSwitchTab}\n        />\n      ) : shouldRenderPlaceholder ? (\n        <div ref={placeholderRef} className=\"tabs-placeholder\" />\n      ) : undefined}\n      <Transition\n        ref={transitionRef}\n        name={'none'}\n        activeKey={activeChatFolder}\n        renderCount={shouldRenderFolders ? folderTabs.length : undefined}\n      >\n        {renderCurrentTab}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chatFolders: {\n        byId: chatFoldersById,\n        orderedIds: orderedFolderIds,\n        invites: folderInvitesById,\n      },\n      chats: {\n        listIds: {\n          archived,\n        },\n      },\n      stories: {\n        orderedPeerIds: {\n          archived: archivedStories,\n        },\n      },\n      activeSessions: {\n        byHash: sessions,\n      },\n      currentUserId,\n      archiveSettings,\n    } = global;\n    const { shouldSkipHistoryAnimations, activeChatFolder } = selectTabState(global);\n    const { storyViewer: { isRibbonShown: isStoryRibbonShown } } = selectTabState(global);\n\n    return {\n      chatFoldersById,\n      folderInvitesById,\n      orderedFolderIds,\n      activeChatFolder,\n      currentUserId,\n      shouldSkipHistoryAnimations,\n      hasArchivedChats: Boolean(archived?.length),\n      hasArchivedStories: Boolean(archivedStories?.length),\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n      maxFolderInvites: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      archiveSettings,\n      isStoryRibbonShown,\n      sessions,\n    };\n  },\n)(ChatFolders));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sG8AAzvK\",\"minimized\":\"lTOui0dp\",\"button\":\"bNkLqJf1\",\"title\":\"rMTpNazX\",\"unread-count\":\"O7esHjyC\",\"unreadCount\":\"O7esHjyC\",\"info\":\"OS2LWzdu\",\"name\":\"bkCtPuPQ\",\"icon\":\"f4LUPgr4\",\"avatarWrapper\":\"RMY__Znz\",\"avatar\":\"qeb0Aox1\",\"chatsPreview\":\"_1817Hwgd\",\"unread\":\"SS39xuL3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeer } from '../../../types';\n\nimport { ARCHIVED_FOLDER_ID } from '../../../config';\nimport { getChatTitle } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { compact } from '../../../util/iteratees';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport { useFolderManagerForOrderedIds, useFolderManagerForUnreadCounters } from '../../../hooks/useFolderManager';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Badge from '../../ui/Badge';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\nimport styles from './Archive.module.scss';\n\ntype OwnProps = {\n  archiveSettings: GlobalState['archiveSettings'];\n  onDragEnter?: NoneToVoidFunction;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PREVIEW_SLICE = 5;\nconst ARCHIVE_CUSTOM_PEER: CustomPeer = {\n  isCustomPeer: true,\n  title: 'Archived Chats',\n  avatarIcon: 'archive-filled',\n  customPeerAvatarColor: '#9EAAB5',\n};\n\nconst Archive: FC<OwnProps> = ({\n  archiveSettings,\n  onDragEnter,\n  onClick,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  const orderedChatIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const unreadCounters = useFolderManagerForUnreadCounters();\n  const archiveUnreadCount = unreadCounters[ARCHIVED_FOLDER_ID]?.chatsCount;\n\n  const previewItems = useMemo(() => {\n    if (!orderedChatIds?.length) return lang('Loading');\n\n    const chatsById = getGlobal().chats.byId;\n\n    return orderedChatIds.slice(0, PREVIEW_SLICE).map((chatId, i, arr) => {\n      const isLast = i === arr.length - 1;\n      const chat = chatsById[chatId];\n      if (!chat) {\n        return undefined;\n      }\n\n      const title = getChatTitle(lang, chat);\n\n      return (\n        <>\n          <span className={buildClassName(styles.chat, archiveUnreadCount && chat.unreadCount && styles.unread)}>\n            {renderText(title)}\n          </span>\n          {isLast ? '' : ', '}\n        </>\n      );\n    });\n  }, [orderedChatIds, lang, archiveUnreadCount]);\n\n  const contextActions = useMemo(() => {\n    const actionMinimize = !archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_collapse'),\n      icon: 'collapse',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionExpand = archiveSettings.isMinimized && {\n      title: lang('lng_context_archive_expand'),\n      icon: 'expand',\n      handler: () => {\n        updateArchiveSettings({ isMinimized: false });\n      },\n    } satisfies MenuItemContextAction;\n\n    const actionHide = {\n      title: lang('lng_context_archive_to_menu'),\n      icon: 'archive-to-main',\n      handler: () => {\n        updateArchiveSettings({ isHidden: true });\n      },\n    } satisfies MenuItemContextAction;\n\n    return compact([actionMinimize, actionExpand, actionHide]);\n  }, [archiveSettings.isMinimized, lang, updateArchiveSettings]);\n\n  const handleDragEnter = useCallback((e) => {\n    e.preventDefault();\n    onDragEnter?.();\n  }, [onDragEnter]);\n\n  function renderCollapsed() {\n    return (\n      <div className={buildClassName(styles.info, 'info')}>\n        <div className=\"info-row\">\n          <div className={buildClassName('title', styles.title)}>\n            <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>\n              <Icon name=\"archive-filled\" className={styles.icon} />\n              {lang('ArchivedChats')}\n            </h3>\n          </div>\n          <Badge\n            className={styles.unreadCount}\n            text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderRegular() {\n    return (\n      <>\n        <div className={buildClassName('status', styles.avatarWrapper)}>\n          <Avatar peer={ARCHIVE_CUSTOM_PEER} />\n        </div>\n        <div className={buildClassName(styles.info, 'info')}>\n          <div className=\"info-row\">\n            <div className={buildClassName('title', styles.title)}>\n              <h3 dir=\"auto\" className={buildClassName(styles.name, 'fullName')}>{lang('ArchivedChats')}</h3>\n            </div>\n          </div>\n          <div className=\"subtitle\">\n            <div className={buildClassName('status', styles.chatsPreview)}>\n              {previewItems}\n            </div>\n            <Badge\n              className={styles.unreadCount}\n              text={archiveUnreadCount ? formatIntegerCompact(archiveUnreadCount) : undefined}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <ListItem\n      onClick={onClick}\n      onDragEnter={handleDragEnter}\n      className={buildClassName(\n        styles.root,\n        archiveSettings.isMinimized && styles.minimized,\n        'chat-item-clickable',\n        'chat-item-archive',\n      )}\n      buttonClassName={styles.button}\n      contextActions={contextActions}\n      withPortalForMenu\n    >\n      {archiveSettings.isMinimized ? renderCollapsed() : renderRegular()}\n    </ListItem>\n  );\n};\n\nexport default memo(Archive);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"yftKUVDQ\",\"sticker\":\"UCBfMOiz\",\"title\":\"dB9cHelg\",\"description\":\"TJ_liZcJ\",\"is-ios\":\"z51XfrFn\",\"isIos\":\"z51XfrFn\",\"is-macos\":\"tiLqJXxs\",\"isMacos\":\"tiLqJXxs\",\"button-text\":\"aL7e0w4t\",\"buttonText\":\"aL7e0w4t\",\"centered\":\"NefQ8HbN\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatFolder, ApiSticker } from '../../../api/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectAnimatedEmoji, selectChatFolder } from '../../../global/selectors';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyFolder.module.scss';\n\ntype OwnProps = {\n  folderId?: number;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  foldersDispatch: FolderEditDispatch;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  chatFolder?: ApiChatFolder;\n  animatedEmoji?: ApiSticker;\n};\n\nconst ICON_SIZE = 96;\n\nconst EmptyFolder: FC<OwnProps & StateProps> = ({\n  chatFolder, animatedEmoji, foldersDispatch, onSettingsScreenSelect,\n}) => {\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleEditFolder = useCallback(() => {\n    foldersDispatch({ type: 'editFolder', payload: chatFolder });\n    onSettingsScreenSelect(SettingsScreens.FoldersEditFolderFromChatList);\n  }, [chatFolder, foldersDispatch, onSettingsScreenSelect]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('FilterNoChatsToDisplay')}</h3>\n      <p className={styles.description} dir=\"auto\">\n        {lang(chatFolder ? 'ChatList.EmptyChatListFilterText' : 'Chat.EmptyChat')}\n      </p>\n      {chatFolder && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          pill\n          onClick={handleEditFolder}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <Icon name=\"settings\" />\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyChatListEditFilter')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { folderId, folderType }): StateProps => {\n  const chatFolder = folderId && folderType === 'folder' ? selectChatFolder(global, folderId) : undefined;\n\n  return {\n    chatFolder,\n    animatedEmoji: selectAnimatedEmoji(global, '📂'),\n  };\n})(EmptyFolder));\n","// extracted by mini-css-extract-plugin\nexport default {\"minimized\":\"lTOui0dp\",\"root\":\"yEkGgZVL\",\"title\":\"VhAJDrnz\",\"info\":\"WmyL1NJ8\",\"buttons\":\"_40UGD1Y\",\"button\":\"pedMJD_v\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Button from '../../ui/Button';\n\nimport styles from './UnconfirmedSession.module.scss';\n\ntype OwnProps = {\n  sessions: Record<string, ApiSession>;\n  onHeightChange: (height: number) => void;\n};\n\nconst UnconfirmedSession = ({ sessions, onHeightChange } : OwnProps) => {\n  const { changeSessionSettings, terminateAuthorization, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  useResizeObserver(ref, (entry) => {\n    const height = entry.borderBoxSize?.[0]?.blockSize || entry.contentRect.height;\n    onHeightChange(height);\n  });\n\n  const firstUnconfirmed = useMemo(() => {\n    return Object.values(sessions).sort((a, b) => b.dateCreated - a.dateCreated)\n      .find((session) => session.isUnconfirmed)!;\n  }, [sessions]);\n\n  const locationString = useMemo(() => {\n    return [firstUnconfirmed.deviceModel, firstUnconfirmed.region, firstUnconfirmed.country].filter(Boolean).join(', ');\n  }, [firstUnconfirmed]);\n\n  const handleAccept = useLastCallback(() => {\n    changeSessionSettings({\n      hash: firstUnconfirmed.hash,\n      isConfirmed: true,\n    });\n  });\n\n  const handleReject = useLastCallback(() => {\n    terminateAuthorization({ hash: firstUnconfirmed.hash });\n    showNotification({\n      title: lang('UnconfirmedAuthDeniedTitle', 1),\n      message: lang('UnconfirmedAuthDeniedMessageSingle', locationString),\n    });\n  });\n\n  return (\n    <div className={styles.root} ref={ref}>\n      <h2 className={styles.title}>{lang('UnconfirmedAuthTitle')}</h2>\n      <p className={styles.info}>\n        {lang('UnconfirmedAuthSingle', locationString)}\n      </p>\n      <div className={styles.buttons}>\n        <Button fluid isText size=\"smaller\" className={styles.button} onClick={handleAccept}>\n          {lang('UnconfirmedAuthConfirm')}\n        </Button>\n        <Button fluid isText size=\"smaller\" color=\"danger\" onClick={handleReject} className={styles.button}>\n          {lang('UnconfirmedAuthDeny')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(UnconfirmedSession);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { FolderEditDispatch } from '../../../hooks/reducers/useFoldersReducer';\nimport type { SettingsScreens } from '../../../types';\nimport { LeftColumnContent } from '../../../types';\n\nimport {\n  ALL_FOLDER_ID,\n  ARCHIVE_MINIMIZED_HEIGHT,\n  ARCHIVED_FOLDER_ID,\n  CHAT_HEIGHT_PX,\n  CHAT_LIST_SLICE,\n  FRESH_AUTH_PERIOD,\n  SAVED_FOLDER_ID,\n} from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderKey, getPinnedChatsCount } from '../../../util/folderManager';\nimport { getServerTime } from '../../../util/serverTime';\nimport { IS_APP, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useTopOverscroll from '../../../hooks/scroll/useTopOverscroll';\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport { useHotkeys } from '../../../hooks/useHotkeys';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport Archive from './Archive';\nimport Chat from './Chat';\nimport EmptyFolder from './EmptyFolder';\nimport UnconfirmedSession from './UnconfirmedSession';\n\ntype OwnProps = {\n  className?: string;\n  folderType: 'all' | 'archived' | 'saved' | 'folder';\n  folderId?: number;\n  isActive: boolean;\n  canDisplayArchive?: boolean;\n  archiveSettings?: GlobalState['archiveSettings'];\n  isForumPanelOpen?: boolean;\n  sessions?: Record<string, ApiSession>;\n  foldersDispatch?: FolderEditDispatch;\n  onSettingsScreenSelect?: (screen: SettingsScreens) => void;\n  onLeftColumnContentChange?: (content: LeftColumnContent) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\nconst DRAG_ENTER_DEBOUNCE = 500;\nconst RESERVED_HOTKEYS = new Set(['9', '0']);\n\nconst ChatList: FC<OwnProps> = ({\n  className,\n  folderType,\n  folderId,\n  isActive,\n  isForumPanelOpen,\n  canDisplayArchive,\n  archiveSettings,\n  sessions,\n  foldersDispatch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n}) => {\n  const {\n    openChat,\n    openNextChat,\n    closeForumPanel,\n    toggleStoryRibbon,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldIgnoreDragRef = useRef(false);\n  const [unconfirmedSessionHeight, setUnconfirmedSessionHeight] = useState(0);\n\n  const isArchived = folderType === 'archived';\n  const isAllFolder = folderType === 'all';\n  const isSaved = folderType === 'saved';\n  const resolvedFolderId = (\n    isAllFolder ? ALL_FOLDER_ID : isArchived ? ARCHIVED_FOLDER_ID : isSaved ? SAVED_FOLDER_ID : folderId!\n  );\n\n  const shouldDisplayArchive = isAllFolder && canDisplayArchive && archiveSettings;\n\n  const orderedIds = useFolderManagerForOrderedIds(resolvedFolderId);\n  usePeerStoriesPolling(orderedIds);\n\n  const chatsHeight = (orderedIds?.length || 0) * CHAT_HEIGHT_PX;\n  const archiveHeight = shouldDisplayArchive\n    ? archiveSettings?.isMinimized ? ARCHIVE_MINIMIZED_HEIGHT : CHAT_HEIGHT_PX : 0;\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, orderedIds, undefined, CHAT_LIST_SLICE);\n\n  const shouldShowUnconfirmedSessions = useMemo(() => {\n    const sessionsArray = Object.values(sessions || {});\n    const current = sessionsArray.find((session) => session.isCurrent);\n    if (!current || getServerTime() - current.dateCreated < FRESH_AUTH_PERIOD) return false;\n\n    return isAllFolder && sessionsArray.some((session) => session.isUnconfirmed);\n  }, [isAllFolder, sessions]);\n\n  useEffect(() => {\n    if (!shouldShowUnconfirmedSessions) setUnconfirmedSessionHeight(0);\n  }, [shouldShowUnconfirmedSessions]);\n\n  // Support <Alt>+<Up/Down> to navigate between chats\n  useHotkeys(useMemo(() => (isActive && orderedIds?.length ? {\n    'Alt+ArrowUp': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: -1, orderedIds });\n    },\n    'Alt+ArrowDown': (e: KeyboardEvent) => {\n      e.preventDefault();\n      openNextChat({ targetIndexDelta: 1, orderedIds });\n    },\n  } : undefined), [isActive, orderedIds]));\n\n  // Support <Cmd>+<Digit> to navigate between chats\n  useEffect(() => {\n    if (!isActive || isSaved || !orderedIds || !IS_APP) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (((IS_MAC_OS && e.metaKey) || (!IS_MAC_OS && e.ctrlKey)) && e.code.startsWith('Digit')) {\n        const [, digit] = e.code.match(/Digit(\\d)/) || [];\n        if (!digit || RESERVED_HOTKEYS.has(digit)) return;\n\n        const isArchiveInList = shouldDisplayArchive && archiveSettings && !archiveSettings.isMinimized;\n\n        const shift = isArchiveInList ? -1 : 0;\n        const position = Number(digit) + shift - 1;\n\n        if (isArchiveInList && position === -1) {\n          onLeftColumnContentChange?.(LeftColumnContent.Archived);\n          return;\n        }\n\n        if (position > orderedIds!.length - 1) return;\n\n        openChat({ id: orderedIds![position], shouldReplaceHistory: true });\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [\n    archiveSettings, isSaved, isActive, onLeftColumnContentChange, openChat, openNextChat, orderedIds,\n    shouldDisplayArchive,\n  ]);\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleArchivedClick = useLastCallback(() => {\n    onLeftColumnContentChange!(LeftColumnContent.Archived);\n    closeForumPanel();\n  });\n\n  const handleArchivedDragEnter = useLastCallback(() => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    handleArchivedClick();\n  });\n\n  const handleDragEnter = useDebouncedCallback((chatId: string) => {\n    if (shouldIgnoreDragRef.current) {\n      shouldIgnoreDragRef.current = false;\n      return;\n    }\n    openChat({ id: chatId, shouldReplaceHistory: true });\n  }, [openChat], DRAG_ENTER_DEBOUNCE, true);\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const rect = e.currentTarget.getBoundingClientRect();\n    const x = e.clientX - rect.left;\n    const y = e.clientY - rect.top;\n    if (x < rect.width || y < rect.y) return;\n    shouldIgnoreDragRef.current = true;\n  });\n\n  const handleShowStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: true, isArchived });\n  });\n\n  const handleHideStoryRibbon = useLastCallback(() => {\n    toggleStoryRibbon({ isShown: false, isArchived });\n  });\n\n  const renderedOverflowTrigger = useTopOverscroll(containerRef, handleShowStoryRibbon, handleHideStoryRibbon, isSaved);\n\n  function renderChats() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    const pinnedCount = getPinnedChatsCount(resolvedFolderId) || 0;\n\n    return viewportIds!.map((id, i) => {\n      const isPinned = viewportOffset + i < pinnedCount;\n      const offsetTop = unconfirmedSessionHeight + archiveHeight + (viewportOffset + i) * CHAT_HEIGHT_PX;\n\n      return (\n        <Chat\n          key={id}\n          teactOrderKey={isPinned ? i : getOrderKey(id, isSaved)}\n          chatId={id}\n          isPinned={isPinned}\n          folderId={folderId}\n          isSavedDialog={isSaved}\n          animationType={getAnimationType(id)}\n          orderDiff={orderDiffById[id]}\n          offsetTop={offsetTop}\n          observeIntersection={observe}\n          onDragEnter={handleDragEnter}\n        />\n      );\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      className={buildClassName('chat-list custom-scroll', isForumPanelOpen && 'forum-panel-open', className)}\n      ref={containerRef}\n      items={viewportIds}\n      itemSelector=\".ListItem:not(.chat-item-archive)\"\n      preloadBackwards={CHAT_LIST_SLICE}\n      withAbsolutePositioning\n      beforeChildren={renderedOverflowTrigger}\n      maxHeight={chatsHeight + archiveHeight + unconfirmedSessionHeight}\n      onLoadMore={getMore}\n      onDragLeave={handleDragLeave}\n    >\n      {shouldShowUnconfirmedSessions && (\n        <UnconfirmedSession\n          key=\"unconfirmed\"\n          sessions={sessions!}\n          onHeightChange={setUnconfirmedSessionHeight}\n        />\n      )}\n      {shouldDisplayArchive && (\n        <Archive\n          key=\"archive\"\n          archiveSettings={archiveSettings}\n          onClick={handleArchivedClick}\n          onDragEnter={handleArchivedDragEnter}\n        />\n      )}\n      {viewportIds?.length ? (\n        renderChats()\n      ) : viewportIds && !viewportIds.length && !isSaved ? (\n        (\n          <EmptyFolder\n            folderId={folderId}\n            folderType={folderType}\n            foldersDispatch={foldersDispatch!}\n            onSettingsScreenSelect={onSettingsScreenSelect!}\n          />\n        )\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(ChatList);\n","import React, { useEffect, useRef } from '../../lib/teact/teact';\n\nimport { forceMutation, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { stopScrollInertia } from '../../util/resetScroll';\nimport { IS_IOS, IS_SAFARI } from '../../util/windowEnvironment';\nimport useDebouncedCallback from '../useDebouncedCallback';\nimport useLastCallback from '../useLastCallback';\n\nconst MOUSE_WHEEL_DEBOUNCE = 250;\nconst TRIGGER_HEIGHT = 1;\nconst INERTIA_THRESHOLD = 100;\n\nexport default function useTopOverscroll(\n  containerRef: React.RefObject<HTMLDivElement>,\n  onOverscroll?: AnyToVoidFunction,\n  onReset?: AnyToVoidFunction,\n  isDisabled?: boolean,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const overscrollTriggerRef = useRef<HTMLDivElement>(null);\n\n  const isTriggerJustEnabled = useRef(false);\n  const lastScrollTopRef = useRef(0);\n  const isTriggerEnabledRef = useRef(false);\n  const lastIsOnTopRef = useRef(true);\n  const lastScrollAtRef = useRef(0);\n  const isReturningOverscrollRef = useRef(false);\n\n  const enableOverscrollTrigger = useLastCallback((noScrollInertiaStop = false) => {\n    if (isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current || !containerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'block';\n    containerRef.current.scrollTop = TRIGGER_HEIGHT;\n\n    if (!IS_SAFARI && !noScrollInertiaStop) {\n      stopScrollInertia(containerRef.current);\n    }\n\n    isTriggerJustEnabled.current = true;\n    lastScrollTopRef.current = TRIGGER_HEIGHT;\n    isTriggerEnabledRef.current = true;\n    lastIsOnTopRef.current = true;\n  });\n\n  const disableOverscrollTrigger = useLastCallback(() => {\n    if (!isTriggerEnabledRef.current) return;\n    if (!overscrollTriggerRef.current) return;\n\n    overscrollTriggerRef.current.style.display = 'none';\n\n    isTriggerEnabledRef.current = false;\n  });\n\n  const handleScroll = useLastCallback(() => {\n    if (!containerRef.current) return;\n\n    if (isTriggerJustEnabled.current) {\n      isTriggerJustEnabled.current = false;\n\n      return;\n    }\n\n    const newScrollTop = containerRef.current.scrollTop;\n    const isMovingDown = newScrollTop > lastScrollTopRef.current;\n    const isMovingUp = newScrollTop < lastScrollTopRef.current;\n    const isOnTop = newScrollTop === 0;\n    const lastEventDelay = Date.now() - lastScrollAtRef.current;\n\n    if (overscrollTriggerRef.current) {\n      if (isOnTop && !isTriggerEnabledRef.current) {\n        forceMutation(enableOverscrollTrigger, [containerRef.current, overscrollTriggerRef.current]);\n        return;\n      }\n\n      forceMutation(disableOverscrollTrigger, overscrollTriggerRef.current);\n    }\n\n    if (\n      isMovingUp && (\n        (lastIsOnTopRef.current && lastEventDelay > INERTIA_THRESHOLD)\n        || (newScrollTop < 0 && isReturningOverscrollRef.current) // Overscroll repeated by the user\n      )) {\n      onOverscroll?.();\n    } else if (isMovingDown && newScrollTop > 0) {\n      onReset?.();\n    }\n\n    lastScrollTopRef.current = newScrollTop;\n    lastIsOnTopRef.current = isOnTop;\n    lastScrollAtRef.current = Date.now();\n    isReturningOverscrollRef.current = isMovingDown && newScrollTop < 0;\n  });\n\n  // Handle non-scrollable container\n  const handleWheel = useDebouncedCallback((event: WheelEvent) => {\n    if (!containerRef.current) return;\n    const container = containerRef.current;\n\n    const isScrollable = container.scrollHeight > container.offsetHeight;\n    if (isScrollable || event.deltaY === 0) return;\n\n    if (event.deltaY < 0) {\n      onOverscroll?.();\n    } else {\n      onReset?.();\n    }\n  }, [containerRef, onOverscroll, onReset], MOUSE_WHEEL_DEBOUNCE);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return undefined;\n\n    if (container.scrollTop === 0) {\n      requestMutation(() => {\n        enableOverscrollTrigger(true);\n      });\n    }\n\n    container.addEventListener('scroll', handleScroll, { passive: true });\n    container.addEventListener('wheel', handleWheel, { passive: true });\n\n    return () => {\n      container.removeEventListener('scroll', handleScroll);\n      container.removeEventListener('wheel', handleWheel);\n    };\n  }, [containerRef, handleWheel]);\n\n  return !IS_IOS && !isDisabled ? (\n    <div ref={overscrollTriggerRef} className=\"overscroll-trigger\" key=\"overscroll-trigger\" />\n  ) : undefined;\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nexport enum ChatAnimationTypes {\n  Move,\n  Opacity,\n  None,\n}\n\nexport function useChatAnimationType<T extends number | string>(orderDiffById: Record<T, number>) {\n  return useMemo(() => {\n    const orderDiffs = Object.values(orderDiffById) as number[];\n    const numberOfUp = orderDiffs.filter((diff) => diff < 0).length;\n    const numberOfDown = orderDiffs.filter((diff) => diff > 0).length;\n\n    return (chatId: T): ChatAnimationTypes => {\n      const orderDiff = orderDiffById[chatId];\n      if (orderDiff === 0) {\n        return ChatAnimationTypes.None;\n      }\n\n      if (\n        orderDiff === Infinity\n        || orderDiff === -Infinity\n        || (numberOfUp <= numberOfDown && orderDiff < 0)\n        || (numberOfDown < numberOfUp && orderDiff > 0)\n      ) {\n        return ChatAnimationTypes.Opacity;\n      }\n\n      return ChatAnimationTypes.Move;\n    };\n  }, [orderDiffById]);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ow6Ij9O5\",\"title-row\":\"CBda1UmC\",\"titleRow\":\"CBda1UmC\",\"loading\":\"L4Zk0yMN\",\"other-column\":\"d0hTIVJn\",\"otherColumn\":\"d0hTIVJn\",\"main-column\":\"lEbV6HrI\",\"mainColumn\":\"lEbV6HrI\",\"unread\":\"BhS75ocD\",\"last-message\":\"KJ16dBus\",\"lastMessage\":\"KJ16dBus\",\"after-wrapper\":\"uWo2dhui\",\"afterWrapper\":\"uWo2dhui\",\"after\":\"g3XnC73g\",\"title\":\"k3Ch25ZQ\",\"otherColumnIcon\":\"oknhG11L\",\"other-column-title\":\"ZUj3xAjs\",\"otherColumnTitle\":\"ZUj3xAjs\",\"other-columns\":\"IkuCBmvA\",\"otherColumns\":\"IkuCBmvA\",\"ellipsis\":\"_m_2xcPW\",\"reverse-corner\":\"U_yhhC0w\",\"reverseCorner\":\"U_yhhC0w\",\"overwritten-width\":\"HV0wCR4O\",\"overwrittenWidth\":\"HV0wCR4O\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChat, ApiTopic } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getOrderedTopics } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport { getIsMobile } from '../../hooks/useAppLayout';\nimport { useFastClick } from '../../hooks/useFastClick';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TopicIcon from './TopicIcon';\n\nimport styles from './ChatForumLastMessage.module.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  renderLastMessage: () => React.ReactNode;\n  observeIntersection?: ObserveFn;\n};\n\nconst NO_CORNER_THRESHOLD = Number(REM);\nconst MAX_TOPICS = 3;\n\nconst ChatForumLastMessage: FC<OwnProps> = ({\n  chat,\n  topics,\n  renderLastMessage,\n  observeIntersection,\n}) => {\n  const { openThread } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const lastMessageRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const mainColumnRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [lastActiveTopic, ...otherTopics] = useMemo(() => {\n    if (!topics) {\n      return [];\n    }\n\n    return getOrderedTopics(Object.values(topics), undefined, true).slice(0, MAX_TOPICS);\n  }, [topics]);\n\n  const [isReversedCorner, setIsReversedCorner] = useState(false);\n  const [overwrittenWidth, setOverwrittenWidth] = useState<number | undefined>(undefined);\n\n  const {\n    handleClick: handleOpenTopicClick,\n    handleMouseDown: handleOpenTopicMouseDown,\n  } = useFastClick((e: React.MouseEvent<HTMLDivElement>) => {\n    if (lastActiveTopic.unreadCount === 0 || chat.isForumAsMessages) return;\n\n    e.stopPropagation();\n    e.preventDefault();\n\n    openThread({\n      chatId: chat.id,\n      threadId: lastActiveTopic.id,\n      shouldReplaceHistory: true,\n      noForumTopicPanel: getIsMobile(),\n    });\n  });\n\n  useEffect(() => {\n    const lastMessageElement = lastMessageRef.current;\n    const mainColumnElement = mainColumnRef.current;\n    if (!lastMessageElement || !mainColumnElement) return;\n\n    const lastMessageWidth = lastMessageElement.offsetWidth;\n    const mainColumnWidth = mainColumnElement.offsetWidth;\n\n    if (Math.abs(lastMessageWidth - mainColumnWidth) < NO_CORNER_THRESHOLD) {\n      setOverwrittenWidth(Math.max(lastMessageWidth, mainColumnWidth));\n    } else {\n      setOverwrittenWidth(undefined);\n    }\n    setIsReversedCorner(lastMessageWidth > mainColumnWidth);\n  }, [lastActiveTopic, renderLastMessage]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isReversedCorner && styles.reverseCorner,\n        overwrittenWidth && styles.overwrittenWidth,\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      style={overwrittenWidth ? `--overwritten-width: ${overwrittenWidth}px` : undefined}\n    >\n      {lastActiveTopic && (\n        <div className={styles.titleRow}>\n          <div\n            className={buildClassName(\n              styles.mainColumn,\n              lastActiveTopic.unreadCount && styles.unread,\n            )}\n            ref={mainColumnRef}\n            onClick={handleOpenTopicClick}\n            onMouseDown={handleOpenTopicMouseDown}\n          >\n            <TopicIcon\n              topic={lastActiveTopic}\n              observeIntersection={observeIntersection}\n            />\n            <div className={styles.title}>{renderText(lastActiveTopic.title)}</div>\n            {!overwrittenWidth && isReversedCorner && (\n              <div className={styles.afterWrapper}>\n                <div className={styles.after} />\n              </div>\n            )}\n          </div>\n\n          <div className={styles.otherColumns}>\n            {otherTopics.map((topic) => (\n              <div\n                className={buildClassName(\n                  styles.otherColumn, topic.unreadCount && styles.unread,\n                )}\n                key={topic.id}\n              >\n                <TopicIcon\n                  topic={topic}\n                  className={styles.otherColumnIcon}\n                  observeIntersection={observeIntersection}\n                />\n                <span className={styles.otherColumnTitle}>{renderText(topic.title)}</span>\n              </div>\n            ))}\n          </div>\n\n          <div className={styles.ellipsis} />\n        </div>\n      )}\n      {!lastActiveTopic && <div className={buildClassName(styles.titleRow, styles.loading)}>{lang('Loading')}</div>}\n      <div\n        className={buildClassName(styles.lastMessage, lastActiveTopic?.unreadCount && styles.unread)}\n        ref={lastMessageRef}\n        onClick={handleOpenTopicClick}\n        onMouseDown={handleOpenTopicMouseDown}\n      >\n        {renderLastMessage()}\n        {!overwrittenWidth && !isReversedCorner && (\n          <div className={styles.afterWrapper}>\n            <div className={styles.after} />\n          </div>\n        )}\n      </div>\n\n    </div>\n  );\n};\n\nexport default memo(ChatForumLastMessage);\n","import React, {\n  useCallback, useLayoutEffect, useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiPeer, ApiTopic, ApiTypingStatus,\n  StatefulMediaContent,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { ANIMATION_END_DELAY, CHAT_HEIGHT_PX } from '../../../../config';\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport {\n  getExpiredMessageDescription,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSenderName,\n  getMessageSticker,\n  getMessageVideo,\n  isActionMessage,\n  isExpiredMessage,\n} from '../../../../global/helpers';\nimport { isApiPeerChat } from '../../../../global/helpers/peers';\nimport { getMessageReplyInfo } from '../../../../global/helpers/replies';\nimport buildClassName from '../../../../util/buildClassName';\nimport { renderActionMessageText } from '../../../common/helpers/renderActionMessageText';\nimport renderText from '../../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\nimport { ChatAnimationTypes } from './useChatAnimationType';\n\nimport useEnsureMessage from '../../../../hooks/useEnsureMessage';\nimport useEnsureStory from '../../../../hooks/useEnsureStory';\nimport useMedia from '../../../../hooks/useMedia';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ChatForumLastMessage from '../../../common/ChatForumLastMessage';\nimport Icon from '../../../common/icons/Icon';\nimport MessageSummary from '../../../common/MessageSummary';\nimport TypingStatus from '../../../common/TypingStatus';\n\nconst ANIMATION_DURATION = 200;\n\nexport default function useChatListEntry({\n  chat,\n  topics,\n  lastMessage,\n  statefulMediaContent,\n  chatId,\n  typingStatus,\n  draft,\n  actionTargetMessage,\n  actionTargetUserIds,\n  lastMessageTopic,\n  lastMessageSender,\n  actionTargetChatId,\n  observeIntersection,\n  animationType,\n  orderDiff,\n  withInterfaceAnimations,\n  isTopic,\n  isSavedDialog,\n  isPreview,\n}: {\n  chat?: ApiChat;\n  topics?: Record<number, ApiTopic>;\n  lastMessage?: ApiMessage;\n  statefulMediaContent: StatefulMediaContent | undefined;\n  chatId: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageTopic?: ApiTopic;\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  observeIntersection?: ObserveFn;\n  isTopic?: boolean;\n  isSavedDialog?: boolean;\n  isPreview?: boolean;\n\n  animationType: ChatAnimationTypes;\n  orderDiff: number;\n  withInterfaceAnimations?: boolean;\n}) {\n  const oldLang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isAction = lastMessage && isActionMessage(lastMessage);\n\n  const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n  useEnsureMessage(chatId, isAction ? replyToMessageId : undefined, actionTargetMessage);\n\n  const storyData = lastMessage?.content.storyData;\n  const shouldTryLoadingStory = statefulMediaContent && !statefulMediaContent.story;\n\n  useEnsureStory(shouldTryLoadingStory ? storyData?.peerId : undefined, storyData?.id, statefulMediaContent?.story);\n\n  const mediaContent = statefulMediaContent?.story || lastMessage;\n  const mediaHasPreview = mediaContent && !getMessageSticker(mediaContent);\n\n  const mediaThumbnail = mediaHasPreview ? getMessageMediaThumbDataUri(mediaContent) : undefined;\n  const mediaBlobUrl = useMedia(mediaHasPreview ? getMessageMediaHash(mediaContent, 'micro') : undefined);\n  const isRoundVideo = Boolean(lastMessage && getMessageRoundVideo(lastMessage));\n\n  const actionTargetUsers = useMemo(() => {\n    if (!actionTargetUserIds) {\n      return undefined;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    return actionTargetUserIds.map((userId) => usersById[userId]).filter(Boolean);\n  }, [actionTargetUserIds]);\n\n  const renderLastMessageOrTyping = useCallback(() => {\n    if (!isSavedDialog && !isPreview\n        && typingStatus && lastMessage && typingStatus.timestamp > lastMessage.date * 1000) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    const isDraftReplyToTopic = draft && draft.replyInfo?.replyToMsgId === lastMessageTopic?.id;\n    const isEmptyLocalReply = draft?.replyInfo && !draft.text && draft.isLocal;\n\n    const canDisplayDraft = !chat?.isForum && !isSavedDialog && !isPreview && draft && !isEmptyLocalReply\n      && (!isTopic || !isDraftReplyToTopic);\n\n    if (canDisplayDraft) {\n      return (\n        <p className=\"last-message\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          <span className=\"draft\">{oldLang('Draft')}</span>\n          {renderTextWithEntities({\n            text: draft.text?.text || '',\n            entities: draft.text?.entities,\n            isSimple: true,\n            withTranslucentThumbs: true,\n          })}\n        </p>\n      );\n    }\n\n    if (!lastMessage) {\n      return undefined;\n    }\n\n    if (isExpiredMessage(lastMessage)) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {getExpiredMessageDescription(oldLang, lastMessage)}\n        </p>\n      );\n    }\n\n    if (isAction) {\n      return (\n        <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n          {renderActionMessageText(\n            oldLang,\n            lastMessage,\n            lastMessageSender && !isApiPeerChat(lastMessageSender) ? lastMessageSender : undefined,\n            lastMessageSender && isApiPeerChat(lastMessageSender) ? lastMessageSender : chat,\n            actionTargetUsers,\n            actionTargetMessage,\n            actionTargetChatId,\n            lastMessageTopic,\n            { isEmbedded: true },\n            undefined,\n            undefined,\n          )}\n        </p>\n      );\n    }\n\n    const senderName = getMessageSenderName(oldLang, chatId, lastMessageSender);\n\n    return (\n      <p className=\"last-message shared-canvas-container\" dir={oldLang.isRtl ? 'auto' : 'ltr'}>\n        {senderName && (\n          <>\n            <span className=\"sender-name\">{renderText(senderName)}</span>\n            <span className=\"colon\">:</span>\n          </>\n        )}\n        {!isSavedDialog && lastMessage.forwardInfo && (<Icon name=\"share-filled\" className=\"chat-prefix-icon\" />)}\n        {lastMessage.replyInfo?.type === 'story' && (<Icon name=\"story-reply\" className=\"chat-prefix-icon\" />)}\n        {renderSummary(lastMessage, observeIntersection, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n      </p>\n    );\n  }, [\n    actionTargetChatId, actionTargetMessage, actionTargetUsers, chat, chatId, draft, isAction,\n    isRoundVideo, isTopic, oldLang, lastMessage, lastMessageSender, lastMessageTopic, mediaBlobUrl, mediaThumbnail,\n    observeIntersection, typingStatus, isSavedDialog, isPreview,\n  ]);\n\n  function renderSubtitle() {\n    if (chat?.isForum && !isTopic) {\n      return (\n        <ChatForumLastMessage\n          chat={chat}\n          renderLastMessage={renderLastMessageOrTyping}\n          observeIntersection={observeIntersection}\n          topics={topics}\n        />\n      );\n    }\n\n    return renderLastMessageOrTyping();\n  }\n\n  // Sets animation excess values when `orderDiff` changes and then resets excess values to animate\n  useLayoutEffect(() => {\n    const element = ref.current;\n\n    if (!withInterfaceAnimations || !element) {\n      return;\n    }\n\n    // TODO Refactor animation: create `useListAnimation` that owns `orderDiff` and `animationType`\n    if (animationType === ChatAnimationTypes.Opacity) {\n      element.style.opacity = '0';\n\n      requestMutation(() => {\n        element.classList.add('animate-opacity');\n        element.style.opacity = '1';\n      });\n    } else if (animationType === ChatAnimationTypes.Move) {\n      element.style.transform = `translate3d(0, ${-orderDiff * CHAT_HEIGHT_PX}px, 0)`;\n\n      requestMutation(() => {\n        element.classList.add('animate-transform');\n        element.style.transform = '';\n      });\n    } else {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMutation(() => {\n        element.classList.remove('animate-opacity', 'animate-transform');\n        element.style.opacity = '';\n        element.style.transform = '';\n      });\n    }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n  }, [withInterfaceAnimations, orderDiff, animationType]);\n\n  return {\n    renderSubtitle,\n    ref,\n  };\n}\n\nfunction renderSummary(\n  message: ApiMessage, observeIntersection?: ObserveFn, blobUrl?: string, isRoundVideo?: boolean,\n) {\n  const messageSummary = (\n    <MessageSummary\n      message={message}\n      noEmoji={Boolean(blobUrl)}\n      observeIntersectionForLoading={observeIntersection}\n      inChatList\n    />\n  );\n\n  if (!blobUrl) {\n    return messageSummary;\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {messageSummary}\n    </span>\n  );\n}\n","import { useMemo } from '../../../../lib/teact/teact';\n\nimport { mapValues } from '../../../../util/iteratees';\nimport { useChatAnimationType } from './useChatAnimationType';\n\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useOrderDiff(orderedIds: (string | number)[] | undefined, key?: string) {\n  const orderById = useMemo(() => {\n    if (!orderedIds) {\n      return undefined;\n    }\n\n    return orderedIds.reduce((acc, id, i) => {\n      acc[id] = i;\n      return acc;\n    }, {} as Record<string, number>);\n  }, [orderedIds]);\n\n  const prevOrderById = usePreviousDeprecated(orderById);\n  const prevChatId = usePreviousDeprecated(key);\n\n  const orderDiffById = useMemo(() => {\n    if (!orderById || !prevOrderById || key !== prevChatId) {\n      return {};\n    }\n\n    return mapValues(orderById, (order, id) => {\n      return prevOrderById[id] !== undefined ? order - prevOrderById[id] : -Infinity;\n    });\n  }, [key, orderById, prevChatId, prevOrderById]);\n\n  const getAnimationType = useChatAnimationType(orderDiffById);\n\n  return {\n    orderDiffById,\n    getAnimationType,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin, SettingsScreens } from '../../types';\n\nimport { getPhotoMediaHash, getVideoProfilePhotoMediaHash } from '../../global/helpers';\nimport { fetchBlob } from '../../util/files';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport CropModal from '../ui/CropModal';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageSuggestedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer, uploadProfilePhoto, showNotification,\n  } = getActions();\n\n  const { isOutgoing } = message;\n\n  const lang = useOldLang();\n  const [cropModalBlob, setCropModalBlob] = useState<Blob | undefined>();\n  const [isVideoModalOpen, openVideoModal, closeVideoModal] = useFlag(false);\n  const photo = message.content.action!.photo!;\n  const suggestedPhotoUrl = useMedia(getPhotoMediaHash(photo, 'full'));\n  const suggestedVideoUrl = useMedia(getVideoProfilePhotoMediaHash(photo));\n  const isVideo = message.content.action!.photo?.isVideo;\n\n  const showAvatarNotification = useLastCallback(() => {\n    showNotification({\n      title: lang('ApplyAvatarHintTitle'),\n      message: lang('ApplyAvatarHint'),\n      action: {\n        action: 'requestNextSettingsScreen',\n        payload: {\n          screen: SettingsScreens.Main,\n        },\n      },\n      actionText: lang('Open'),\n    });\n  });\n\n  const handleSetSuggestedAvatar = useLastCallback((file: File) => {\n    setCropModalBlob(undefined);\n    uploadProfilePhoto({ file });\n    showAvatarNotification();\n  });\n\n  const handleCloseCropModal = useLastCallback(() => {\n    setCropModalBlob(undefined);\n  });\n\n  const handleSetVideo = useLastCallback(async () => {\n    if (!suggestedVideoUrl) return;\n\n    closeVideoModal();\n    showAvatarNotification();\n\n    // TODO Once we support uploading video avatars, add crop/trim modal here\n    const blob = await fetchBlob(suggestedVideoUrl);\n    uploadProfilePhoto({\n      file: new File([blob], 'avatar.mp4'),\n      isVideo: true,\n      videoTs: photo.videoSizes?.find((l) => l.videoStartTs !== undefined)?.videoStartTs,\n    });\n  });\n\n  const handleViewSuggestedAvatar = async () => {\n    if (!isOutgoing && suggestedPhotoUrl) {\n      if (isVideo) {\n        openVideoModal();\n      } else {\n        setCropModalBlob(await fetchBlob(suggestedPhotoUrl));\n      }\n    } else {\n      openMediaViewer({\n        chatId: message.chatId,\n        messageId: message.id,\n        threadId: MAIN_THREAD_ID,\n        origin: MediaViewerOrigin.SuggestedAvatar,\n      });\n    }\n  };\n\n  return (\n    <span className=\"action-message-suggested-avatar\" tabIndex={0} role=\"button\" onClick={handleViewSuggestedAvatar}>\n      <Avatar\n        photo={message.content.action!.photo}\n        loopIndefinitely\n        withVideo={isVideo}\n        size=\"jumbo\"\n      />\n      <span>{renderContent()}</span>\n\n      <span className=\"action-message-button\">{lang(isVideo ? 'ViewVideoAction' : 'ViewPhotoAction')}</span>\n      <CropModal\n        file={cropModalBlob}\n        onClose={handleCloseCropModal}\n        onChange={handleSetSuggestedAvatar}\n      />\n      <ConfirmDialog\n        isOpen={isVideoModalOpen}\n        title={lang('SuggestedVideo')}\n        confirmHandler={handleSetVideo}\n        onClose={closeVideoModal}\n        textParts={renderContent()}\n      />\n    </span>\n  );\n};\n\nexport default memo(ActionMessageSuggestedAvatar);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { TextPart } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\ntype OwnProps = {\n  message: ApiMessage;\n  renderContent: () => TextPart | undefined;\n};\n\nconst ActionMessageUpdatedAvatar: FC<OwnProps> = ({\n  message,\n  renderContent,\n}) => {\n  const {\n    openMediaViewer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleViewUpdatedAvatar = () => {\n    openMediaViewer({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: MAIN_THREAD_ID,\n      origin: MediaViewerOrigin.SuggestedAvatar,\n    });\n  };\n\n  return (\n    <>\n      <span>{renderContent()}</span>\n      <span\n        className=\"action-message-updated-avatar\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleViewUpdatedAvatar}\n        aria-label={lang('ViewPhotoAction')}\n      >\n        <Avatar\n          photo={message.content.action!.photo}\n          loopIndefinitely\n          withVideo\n          size=\"jumbo\"\n        />\n      </span>\n    </>\n  );\n};\n\nexport default memo(ActionMessageUpdatedAvatar);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"V3RHiOJR\",\"notch\":\"tfG_BSDt\",\"notch-path\":\"HVbeGv4t\",\"notchPath\":\"HVbeGv4t\",\"join-text\":\"UHAMd4fI\",\"joinText\":\"UHAMd4fI\",\"header\":\"s7QOi22Q\",\"title\":\"JstcOhAN\",\"close\":\"meewH7t_\",\"icon\":\"d8axZxyN\",\"skeleton\":\"xKVZv7KE\",\"inner\":\"njAC8dR9\",\"is-appearing\":\"eb8rX09E\",\"isAppearing\":\"eb8rX09E\",\"channels-appear\":\"AL2cLQ4i\",\"channelsAppear\":\"AL2cLQ4i\",\"is-hiding\":\"XR6_qLCc\",\"isHiding\":\"XR6_qLCc\",\"channels-disappear\":\"TwwnoiuD\",\"channelsDisappear\":\"TwwnoiuD\",\"channel-list\":\"h4gWlNen\",\"channelList\":\"h4gWlNen\",\"item\":\"glDpC2av\",\"last-item\":\"MBChXyXk\",\"lastItem\":\"MBChXyXk\",\"avatar\":\"gqCs9fSo\",\"badge\":\"gnYhwnvf\",\"members-count\":\"HWgwnKui\",\"membersCount\":\"HWgwnKui\",\"channel-title\":\"BTNQ4KBH\",\"channelTitle\":\"BTNQ4KBH\",\"fake-avatar\":\"Xl9MVMTn\",\"fakeAvatar\":\"Xl9MVMTn\",\"fake-avatar-inner\":\"Qizai7yv\",\"fakeAvatarInner\":\"Qizai7yv\",\"last-fake-avatar\":\"JxSmtOFi\",\"lastFakeAvatar\":\"JxSmtOFi\"};","import React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectSimilarChannelIds,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useAverageColor from '../../../hooks/useAverageColor';\nimport useFlag from '../../../hooks/useFlag';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Skeleton from '../../ui/placeholder/Skeleton';\n\nimport styles from './SimilarChannels.module.scss';\n\nconst DEFAULT_BADGE_COLOR = '#3C3C4399';\nconst SHOW_CHANNELS_NUMBER = 10;\nconst MIN_SKELETON_DELAY = 300;\nconst MAX_SKELETON_DELAY = 2000;\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  similarChannelIds?: string[];\n  shouldShowInChat?: boolean;\n  count: number;\n  isCurrentUserPremium: boolean;\n};\n\nconst SimilarChannels = ({\n  chatId,\n  similarChannelIds,\n  shouldShowInChat,\n  count,\n  isCurrentUserPremium,\n}: StateProps & OwnProps) => {\n  const lang = useOldLang();\n  const { toggleChannelRecommendations, loadChannelRecommendations } = getActions();\n  const [isShowing, markShowing, markNotShowing] = useFlag(false);\n  const [isHiding, markHiding, markNotHiding] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const similarChannels = useMemo(() => {\n    if (!similarChannelIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return similarChannelIds.map((id) => selectChat(global, id)).filter(Boolean);\n  }, [similarChannelIds]);\n  // Show skeleton while loading similar channels\n  const [shoulRenderSkeleton, setShoulRenderSkeleton] = useState(!similarChannelIds);\n  const firstSimilarChannels = useMemo(() => similarChannels?.slice(0, SHOW_CHANNELS_NUMBER), [similarChannels]);\n  const areSimilarChannelsPresent = Boolean(firstSimilarChannels?.length);\n\n  useHorizontalScroll(ref, !areSimilarChannelsPresent || !shouldShowInChat || shoulRenderSkeleton, true);\n  const isAnimating = isHiding || isShowing;\n  const shouldRenderChannels = Boolean(\n    !shoulRenderSkeleton\n      && (shouldShowInChat || isAnimating)\n      && areSimilarChannelsPresent,\n  );\n\n  useEffect(() => {\n    if (!similarChannelIds) {\n      loadChannelRecommendations({ chatId });\n    }\n  }, [chatId, similarChannelIds]);\n\n  useTimeout(() => setShoulRenderSkeleton(false), MAX_SKELETON_DELAY);\n\n  useEffect(() => {\n    if (shoulRenderSkeleton && similarChannels && shouldShowInChat) {\n      const id = setTimeout(() => {\n        setShoulRenderSkeleton(false);\n      }, MIN_SKELETON_DELAY);\n\n      return () => clearTimeout(id);\n    }\n\n    return undefined;\n  }, [similarChannels, shouldShowInChat, shoulRenderSkeleton]);\n\n  const handleToggle = useLastCallback(() => {\n    toggleChannelRecommendations({ chatId });\n    if (shouldShowInChat) {\n      markNotShowing();\n      markHiding();\n    } else {\n      markShowing();\n      markNotHiding();\n    }\n  });\n\n  return (\n    <div className={buildClassName(styles.root)}>\n      <div className=\"join-text\">\n        <span\n          className={buildClassName(areSimilarChannelsPresent && styles.joinText)}\n          onClick={areSimilarChannelsPresent ? handleToggle : undefined}\n        >\n          {lang('ChannelJoined')}\n        </span>\n      </div>\n      {shoulRenderSkeleton && <Skeleton className={styles.skeleton} />}\n      {shouldRenderChannels && (\n        <div\n          className={buildClassName(\n            isShowing && styles.isAppearing,\n            isHiding && styles.isHiding,\n          )}\n        >\n          <div className={styles.notch}>\n            <svg\n              width=\"19\"\n              height=\"7\"\n              viewBox=\"0 0 19 7\"\n              fill=\"none\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path\n                className={styles.notchPath}\n                fill-rule=\"evenodd\"\n                clip-rule=\"evenodd\"\n                d=\"M19 7C16.8992 7 13.59 3.88897 11.5003 1.67424C10.7648 0.894688 10.397 0.50491 10.0434 0.385149C9.70568 0.270811 9.4225 0.270474 9.08456 0.38401C8.73059 0.50293 8.36133 0.892443 7.62279 1.67147C5.52303 3.88637 2.18302 7 0 7L19 7Z\"\n                fill=\"white\"\n              />\n            </svg>\n          </div>\n          <div className={styles.inner}>\n            <div className={styles.header}>\n              <span className={styles.title}>{lang('SimilarChannels')}</span>\n              <Button\n                className={styles.close}\n                color=\"translucent\"\n                onClick={handleToggle}\n              >\n                <Icon name=\"close\" />\n              </Button>\n            </div>\n            <div ref={ref} className={buildClassName(styles.channelList, 'no-scrollbar')}>\n              {firstSimilarChannels?.map((channel, i) => {\n                return i === SHOW_CHANNELS_NUMBER - 1 ? (\n                  <MoreChannels\n                    channel={channel}\n                    chatId={chatId}\n                    channelsCount={count - SHOW_CHANNELS_NUMBER + 1}\n                    isCurrentUserPremium={isCurrentUserPremium}\n                  />\n                ) : (\n                  <SimilarChannel channel={channel} />\n                );\n              })}\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nfunction SimilarChannel({ channel }: { channel: ApiChat }) {\n  const { openChat } = getActions();\n  const color = useAverageColor(channel, DEFAULT_BADGE_COLOR);\n\n  return (\n    <div className={styles.item} onClick={() => openChat({ id: channel.id })}>\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div style={`background: ${color}`} className={styles.badge}>\n        <Icon name=\"user-filled\" className={styles.icon} />\n        <span className={styles.membersCount}>{formatIntegerCompact(channel?.membersCount || 0)}\n        </span>\n      </div>\n      <span className={styles.channelTitle}>{channel.title}</span>\n    </div>\n  );\n}\n\nfunction MoreChannels({\n  channel,\n  chatId,\n  channelsCount,\n  isCurrentUserPremium,\n}: {\n  channel: ApiChat;\n  chatId: string;\n  channelsCount: number;\n  isCurrentUserPremium: boolean;\n}) {\n  const { openPremiumModal, openChatWithInfo } = getActions();\n  const lang = useOldLang();\n\n  const handleClickMore = () => {\n    if (isCurrentUserPremium) {\n      openChatWithInfo({\n        id: chatId, shouldReplaceHistory: true, profileTab: 'similarChannels', forceScrollProfileTab: true,\n      });\n    } else {\n      openPremiumModal();\n    }\n  };\n\n  return (\n    <div\n      className={buildClassName(styles.item, styles.lastItem)}\n      onClick={() => handleClickMore()}\n    >\n      <Avatar className={styles.avatar} key={channel.id} size=\"large\" peer={channel} />\n      <div className={styles.fakeAvatar}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={buildClassName(styles.fakeAvatar, styles.lastFakeAvatar)}>\n        <div className={styles.fakeAvatarInner} />\n      </div>\n      <div className={styles.badge}>\n        <span className={styles.membersCount}>{`+${channelsCount}`}</span>\n        {!isCurrentUserPremium && <Icon name=\"lock-badge\" className={styles.icon} />}\n      </div>\n      <span className={styles.channelTitle}>{lang('MoreSimilar')}</span>\n    </div>\n  );\n}\n\nexport default memo(\n  withGlobal<OwnProps>((global, { chatId }): StateProps => {\n    const { similarChannelIds, shouldShowInChat, count } = selectSimilarChannelIds(global, chatId) || {};\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      similarChannelIds,\n      shouldShowInChat,\n      count,\n      isCurrentUserPremium,\n    };\n  })(SimilarChannels),\n);\n","import { useEffect, useState } from '../lib/teact/teact';\n\nimport type { ApiPeer } from '../api/types';\nimport { ApiMediaFormat } from '../api/types';\n\nimport { getChatAvatarHash } from '../global/helpers';\nimport { getAverageColor, rgb2hex } from '../util/colors';\nimport useMedia from './useMedia';\n\nfunction useAverageColor(peer: ApiPeer, fallbackColor = '#00000000') {\n  const [color, setColor] = useState(fallbackColor);\n  const imgBlobUrl = useMedia(getChatAvatarHash(peer), false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    (async () => {\n      if (!imgBlobUrl) {\n        return;\n      }\n\n      const averageColor = await getAverageColor(imgBlobUrl);\n      setColor(`#${rgb2hex(averageColor)}`);\n    })();\n  }, [imgBlobUrl]);\n\n  return color;\n}\n\nexport default useAverageColor;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useUnmountCleanup,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageActionStarGift, ApiSticker, ApiTopic, ApiUser,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { FocusDirection, MessageListType, ThreadId } from '../../types';\nimport type { OnIntersectPinnedMessage } from './hooks/usePinnedMessage';\n\nimport {\n  getChatTitle, getMessageHtmlId, getPeerTitle, isJoinedChannelMessage,\n} from '../../global/helpers';\nimport { getMessageReplyInfo } from '../../global/helpers/replies';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChat,\n  selectChatMessage,\n  selectGiftStickerForDuration,\n  selectGiftStickerForStars,\n  selectIsCurrentUserPremium,\n  selectIsMessageFocused,\n  selectPeer,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatInteger, formatIntegerCompact } from '../../util/textFormat';\nimport { getGiftAttributes, getStickerFromGift } from '../common/helpers/gifts';\nimport { renderActionMessageText } from '../common/helpers/renderActionMessageText';\nimport renderText from '../common/helpers/renderText';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\nimport { preventMessageInputBlur } from './helpers/preventMessageInputBlur';\n\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useEnsureMessage from '../../hooks/useEnsureMessage';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting, useOnIntersect } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\nimport useMessageResizeObserver from '../../hooks/useResizeMessageObserver';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useFocusMessage from './message/hooks/useFocusMessage';\n\nimport AnimatedIconFromSticker from '../common/AnimatedIconFromSticker';\nimport Avatar from '../common/Avatar';\nimport GiftRibbon from '../common/gift/GiftRibbon';\nimport RadialPatternBackground from '../common/profile/RadialPatternBackground';\nimport Sparkles from '../common/Sparkles';\nimport ActionMessageSuggestedAvatar from './ActionMessageSuggestedAvatar';\nimport ActionMessageUpdatedAvatar from './ActionMessageUpdatedAvatar';\nimport ContextMenuContainer from './message/ContextMenuContainer.async';\nimport Reactions from './message/reactions/Reactions';\nimport SimilarChannels from './message/SimilarChannels';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  messageListType?: MessageListType;\n  observeIntersectionForReading?: ObserveFn;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  isEmbedded?: boolean;\n  appearanceOrder?: number;\n  isJustAdded?: boolean;\n  isLastInList?: boolean;\n  isInsideTopic?: boolean;\n  memoFirstUnreadIdRef?: { current: number | undefined };\n  onIntersectPinnedMessage?: OnIntersectPinnedMessage;\n};\n\ntype StateProps = {\n  senderUser?: ApiUser;\n  senderChat?: ApiChat;\n  targetUserIds?: string[];\n  targetMessage?: ApiMessage;\n  targetChatId?: string;\n  targetChat?: ApiChat;\n  isFocused: boolean;\n  topic?: ApiTopic;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  premiumGiftSticker?: ApiSticker;\n  starsGiftSticker?: ApiSticker;\n  canPlayAnimatedEmojis?: boolean;\n  patternColor?: string;\n  currentUserId?: string;\n  isCurrentUserPremium?: boolean;\n};\n\nconst APPEARANCE_DELAY = 10;\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst ActionMessage: FC<OwnProps & StateProps> = ({\n  message,\n  threadId,\n  isEmbedded,\n  appearanceOrder = 0,\n  isJustAdded,\n  isLastInList,\n  senderUser,\n  senderChat,\n  targetUserIds,\n  targetMessage,\n  targetChatId,\n  targetChat,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  premiumGiftSticker,\n  starsGiftSticker,\n  isInsideTopic,\n  topic,\n  memoFirstUnreadIdRef,\n  canPlayAnimatedEmojis,\n  patternColor,\n  observeIntersectionForReading,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onIntersectPinnedMessage,\n  currentUserId,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openPremiumModal,\n    requestConfetti,\n    checkGiftCode,\n    getReceipt,\n    openGiftInfoModalFromMessage,\n    openPrizeStarsTransactionFromGiveaway,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersectionForReading);\n  useEnsureMessage(\n    message.chatId,\n    message.replyInfo?.type === 'message' ? message.replyInfo.replyToMsgId : undefined,\n    targetMessage,\n  );\n  useFocusMessage({\n    elementRef: ref,\n    chatId: message.chatId,\n    isFocused,\n    focusDirection,\n    noFocusHighlight,\n    isJustAdded,\n  });\n\n  useUnmountCleanup(() => {\n    if (message.isPinned) {\n      onIntersectPinnedMessage?.({ viewportPinnedIdsToRemove: [message.id] });\n    }\n  });\n\n  const noAppearanceAnimation = appearanceOrder <= 0;\n  const [isShown, markShown] = useFlag(noAppearanceAnimation);\n  const isPremiumGift = message.content.action?.type === 'giftPremium';\n  const isGiftCode = message.content.action?.type === 'giftCode';\n  const isSuggestedAvatar = message.content.action?.type === 'suggestProfilePhoto' && message.content.action!.photo;\n  const isUpdatedAvatar = message.content.action?.type === 'updateProfilePhoto' && message.content.action!.photo;\n  const isJoinedMessage = isJoinedChannelMessage(message);\n  const isStarsGift = message.content.action?.type === 'giftStars';\n  const isStarGift = message.content.action?.type === 'starGift';\n  const isStarGiftUnique = message.content.action?.type === 'starGiftUnique';\n  const isPrizeStars = message.content.action?.type === 'prizeStars';\n\n  const withServiceReactions = Boolean(message.areReactionsPossible && message?.reactions);\n\n  useMessageResizeObserver(ref, isLastInList);\n\n  useEffect(() => {\n    if (noAppearanceAnimation) {\n      return;\n    }\n\n    setTimeout(markShown, appearanceOrder * APPEARANCE_DELAY);\n  }, [appearanceOrder, markShown, noAppearanceAnimation]);\n\n  const isVisible = useIsIntersecting(ref, observeIntersectionForPlaying);\n\n  const shouldShowConfettiRef = useRef((() => {\n    const isUnread = memoFirstUnreadIdRef?.current && message.id >= memoFirstUnreadIdRef.current;\n    return isPremiumGift && !message.isOutgoing && isUnread;\n  })());\n\n  useEffect(() => {\n    if (isVisible && shouldShowConfettiRef.current) {\n      shouldShowConfettiRef.current = false;\n      requestConfetti({ withStars: true });\n    }\n  }, [isVisible, requestConfetti]);\n\n  const { transitionClassNames } = useShowTransitionDeprecated(isShown, undefined, noAppearanceAnimation, false);\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const targetUsers = useMemo(() => {\n    return targetUserIds\n      ? targetUserIds.map((userId) => usersById?.[userId]).filter(Boolean)\n      : undefined;\n  }, [targetUserIds, usersById]);\n\n  const renderContent = useCallback(() => {\n    return renderActionMessageText(\n      oldLang,\n      message,\n      senderUser,\n      senderChat,\n      targetUsers,\n      targetMessage,\n      targetChatId,\n      topic,\n      { isEmbedded },\n      observeIntersectionForLoading,\n      observeIntersectionForPlaying,\n    );\n  }, [\n    isEmbedded, message, observeIntersectionForLoading, observeIntersectionForPlaying, oldLang,\n    senderChat, senderUser, targetChatId, targetMessage, targetUsers, topic,\n  ]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const isContextMenuShown = contextMenuAnchor !== undefined;\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    preventMessageInputBlur(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleStarGiftClick = () => {\n    const starGift = message.content.action?.starGift;\n    if (!starGift) return;\n\n    openGiftInfoModalFromMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handlePremiumGiftClick = () => {\n    openPremiumModal({\n      isGift: true,\n      fromUserId: senderUser?.id,\n      toUserId: targetUserIds?.[0],\n      monthsAmount: message.content.action?.months || 0,\n    });\n  };\n\n  const handlePrizeStarsClick = () => {\n    openPrizeStarsTransactionFromGiveaway({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  };\n\n  const handleGiftCodeClick = () => {\n    const slug = message.content.action?.slug;\n    if (!slug) return;\n    checkGiftCode({ slug, message: { chatId: message.chatId, messageId: message.id } });\n  };\n\n  const handleClick = () => {\n    if (message.content.action?.type === 'receipt') {\n      getReceipt({\n        chatId: message.chatId,\n        messageId: message.id,\n      });\n    }\n  };\n\n  // TODO Refactoring for action rendering\n  const shouldSkipRender = isInsideTopic && message.content.action?.text === 'TopicWasCreatedAction';\n  if (shouldSkipRender) {\n    return <span ref={ref} />;\n  }\n\n  if (isEmbedded) {\n    return <span ref={ref} className=\"embedded-action-message\">{renderContent()}</span>;\n  }\n\n  function renderGift() {\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePremiumGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>{oldLang('ActionGiftPremiumTitle')}</strong>\n        <span>\n          {oldLang('ActionGiftPremiumSubtitle', oldLang('Months', message.content.action?.months, 'i'))}\n        </span>\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderGiftCode() {\n    const isFromGiveaway = message.content.action?.isGiveaway;\n    const isUnclaimed = message.content.action?.isUnclaimed;\n    const giftMessage = message.content.action?.message;\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleGiftCodeClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={premiumGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(\n            oldLang(\n              isFromGiveaway ? 'BoostingReceivedGiftFrom' : isUnclaimed\n                ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize',\n              getChatTitle(oldLang, targetChat),\n            ),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(oldLang(\n            'BoostingUnclaimedPrizeDuration',\n            oldLang('Months', message.content.action?.months, 'i'),\n          ), ['simple_markdown'])}\n        </span>\n\n        {giftMessage && (\n          <div className=\"action-message-gift-subtitle\">\n            {renderTextWithEntities({ text: giftMessage.text, entities: giftMessage.entities })}\n          </div>\n        )}\n\n        <span className=\"action-message-button\">\n          {oldLang('BoostingReceivedGiftOpenBtn')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarsGift() {\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starsGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <div className=\"action-message-stars-balance\">\n          {formatInteger(message.content.action!.stars!)}\n          <strong>{oldLang('Stars')}</strong>\n        </div>\n        <span className=\"action-message-stars-subtitle\">\n          {renderText(\n            oldLang(!message.isOutgoing\n              ? 'ActionGiftStarsSubtitleYou' : 'ActionGiftStarsSubtitle', getChatTitle(oldLang, targetChat!)),\n            ['simple_markdown'],\n          )}\n        </span>\n        <span className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('ActionGiftPremiumView')}\n        </span>\n      </span>\n    );\n  }\n\n  function renderStarGiftUserCaption() {\n    const starGift = message.content.action?.starGift;\n    if (!starGift) return undefined;\n    const { fromId, peerId } = starGift;\n\n    const fromPeer = fromId ? selectPeer(getGlobal(), fromId) : undefined;\n    const targetPeer = peerId\n      ? selectPeer(getGlobal(), peerId)\n      : starGift.type === 'starGiftUnique' && !message.isOutgoing\n        ? targetChat : undefined;\n\n    if (targetPeer && targetPeer.id !== currentUserId) {\n      return (\n        <div className=\"action-message-user-caption\">\n          <span> {lang('GiftTo')} </span>\n          {starGift.type === 'starGift' && (\n            <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={targetPeer} />\n          )}\n          <span> {getPeerTitle(lang, targetPeer)} </span>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"action-message-user-caption\">\n        <span> {lang('GiftFrom')} </span>\n        {starGift.type === 'starGift' && (\n          <Avatar className=\"action-message-user-avatar\" size=\"micro\" peer={fromPeer || senderUser} />\n        )}\n        <span> {getPeerTitle(lang, fromPeer || senderUser!)} </span>\n      </div>\n    );\n  }\n\n  function renderStarGiftUserDescription() {\n    const starGift = message.content.action?.starGift as ApiMessageActionStarGift;\n    const targetChatTitle = targetChat && getPeerTitle(lang, targetChat);\n    const starGiftMessage = starGift?.message;\n    if (!starGift) return undefined;\n\n    if (starGiftMessage) {\n      return renderTextWithEntities({ text: starGiftMessage.text, entities: starGiftMessage.entities });\n    }\n    const amountToConvert = starGift?.starsToConvert;\n\n    if (starGift.isSaved) {\n      return lang(starGift.savedId ? 'ActionStarGiftChannelDisplaying' : 'ActionStarGiftDisplaying');\n    }\n\n    if (starGift.isUpgraded) {\n      return lang('ActionStarGiftUpgraded');\n    }\n\n    if (message.isOutgoing) {\n      if (amountToConvert) {\n        return lang('ActionStarGiftPeerOutDescription', {\n          peer: targetChatTitle || 'Someone',\n          count: amountToConvert,\n        }, { withNodes: true, pluralValue: amountToConvert });\n      }\n\n      if (starGift.canUpgrade) {\n        return lang('ActionStarGiftPeerOutDescriptionUpgrade', {\n          peer: targetChatTitle || 'Someone',\n        });\n      }\n    }\n\n    if (starGift.isConverted) {\n      return message.isOutgoing\n        ? lang('GiftInfoPeerDescriptionOutConverted', {\n          amount: formatInteger(amountToConvert!),\n          peer: targetChatTitle || 'Chat',\n        }, {\n          pluralValue: amountToConvert!,\n          withNodes: true,\n          withMarkdown: true,\n        })\n        : lang('GiftInfoDescriptionConverted', {\n          amount: formatInteger(amountToConvert!),\n        }, {\n          pluralValue: amountToConvert!,\n          withNodes: true,\n          withMarkdown: true,\n        });\n    }\n\n    if (amountToConvert) {\n      return lang('ActionStarGiftDescription2', {\n        count: amountToConvert,\n      }, { withNodes: true, pluralValue: amountToConvert });\n    }\n\n    if (starGift.canUpgrade) {\n      return lang('ActionStarGiftDescriptionUpgrade');\n    }\n\n    return undefined;\n  }\n\n  function renderStarGift() {\n    const starGift = message.content.action?.starGift as ApiMessageActionStarGift;\n    if (!starGift || starGift.gift.type !== 'starGift') return undefined;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handleStarGiftClick}\n      >\n\n        <AnimatedIconFromSticker\n          sticker={starGift.gift.sticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n          size={STAR_GIFT_STICKER_SIZE}\n        />\n\n        {renderStarGiftUserCaption()}\n        <div className=\"action-message-gift-subtitle\">\n          {renderStarGiftUserDescription()}\n        </div>\n\n        <div className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {starGift.alreadyPaidUpgradeStars && (!message.isOutgoing || targetUsers?.[0]?.isSelf)\n            ? lang('ActionStarGiftUnpack') : oldLang('ActionGiftPremiumView')}\n        </div>\n        {starGift.gift.availabilityTotal && (\n          <GiftRibbon\n            color={patternColor || 'blue'}\n            text={oldLang('Gift2Limited1OfRibbon', formatIntegerCompact(starGift.gift.availabilityTotal))}\n          />\n        )}\n      </span>\n    );\n  }\n\n  function renderStarGiftUnique() {\n    const starGift = message.content.action?.starGift;\n    if (!starGift || starGift.gift.type !== 'starGiftUnique') return undefined;\n\n    const sticker = getStickerFromGift(starGift.gift)!;\n    const attributes = getGiftAttributes(starGift.gift);\n    const { backdrop, pattern, model } = attributes || {};\n\n    if (!backdrop || !pattern || !model) return undefined;\n\n    const backgroundColors = [backdrop.centerColor, backdrop.edgeColor];\n\n    const adaptedPatternColor = `${backdrop.patternColor.slice(0, 7)}55`;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered action-message-unique\"\n        tabIndex={0}\n        role=\"button\"\n        style={`--pattern-color: ${adaptedPatternColor}`}\n        onClick={handleStarGiftClick}\n      >\n        <div className=\"action-message-unique-background-wrapper\">\n          <RadialPatternBackground\n            className=\"action-message-unique-background\"\n            backgroundColors={backgroundColors}\n            patternColor={backdrop.patternColor}\n            patternIcon={pattern.sticker}\n            clearBottomSector\n          />\n        </div>\n        <AnimatedIconFromSticker\n          sticker={sticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n          size={STAR_GIFT_STICKER_SIZE}\n        />\n        {renderStarGiftUserCaption()}\n        <div className=\"action-message-unique-title\" style={`color: ${backdrop.textColor}`}>\n          {starGift.gift.title} #{starGift.gift.number}\n        </div>\n        <div className=\"action-message-unique-properties\" style={`color: ${backdrop.textColor}`}>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeModel')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {model.name}\n          </div>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeBackdrop')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {backdrop.name}\n          </div>\n          <div className=\"action-message-unique-property\">\n            {oldLang('Gift2AttributeSymbol')}\n          </div>\n          <div className=\"action-message-unique-value\">\n            {pattern.name}\n          </div>\n        </div>\n\n        <div className=\"action-message-button\">\n          <Sparkles preset=\"button\" />\n          {oldLang('Gift2UniqueView')}\n        </div>\n        <GiftRibbon\n          color={adaptedPatternColor}\n          text={oldLang('ActionStarGift')}\n        />\n      </span>\n    );\n  }\n\n  function renderPrizeStars() {\n    const isUnclaimed = message.content.action?.isUnclaimed;\n\n    return (\n      <span\n        className=\"action-message-gift action-message-centered\"\n        tabIndex={0}\n        role=\"button\"\n        onClick={handlePrizeStarsClick}\n      >\n        <AnimatedIconFromSticker\n          key={message.id}\n          sticker={starsGiftSticker}\n          play={canPlayAnimatedEmojis}\n          noLoop\n          nonInteractive\n        />\n        <strong>\n          {oldLang(isUnclaimed ? 'BoostingUnclaimedPrize' : 'BoostingCongratulations')}\n        </strong>\n        <span className=\"action-message-subtitle\">\n          {targetChat && renderText(oldLang(isUnclaimed\n            ? 'BoostingReceivedPrizeFrom' : 'BoostingYouHaveUnclaimedPrize', getChatTitle(oldLang, targetChat)),\n          ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-subtitle\">\n          {renderText(lang(\n            'PrizeCredits2', {\n              count: (\n                <b>{formatInteger(message.content.action?.stars!)}</b>\n              ),\n            }, {\n              withNodes: true,\n              pluralValue: message.content.action?.stars!,\n            },\n          ), ['simple_markdown'])}\n        </span>\n        <span className=\"action-message-button\">{\n          oldLang('ActionGiftPremiumView')\n        }\n        </span>\n      </span>\n    );\n  }\n\n  const className = buildClassName(\n    'ActionMessage message-list-item',\n    isFocused && !noFocusHighlight && 'focused',\n    (isPremiumGift || isSuggestedAvatar || isUpdatedAvatar) && 'centered-action',\n    isContextMenuShown && 'has-menu-open',\n    isLastInList && 'last-in-list',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={ref}\n      id={getMessageHtmlId(message.id)}\n      className={className}\n      data-message-id={message.id}\n      data-is-pinned={message.isPinned || undefined}\n      onMouseDown={handleMouseDown}\n      onContextMenu={handleContextMenu}\n    >\n      {!isSuggestedAvatar && !isGiftCode && !isJoinedMessage && !isUpdatedAvatar && (\n        <span className=\"action-message-content\" onClick={handleClick}>{renderContent()}</span>\n      )}\n      {isPremiumGift && renderGift()}\n      {isGiftCode && renderGiftCode()}\n      {isStarsGift && renderStarsGift()}\n      {isStarGift && renderStarGift()}\n      {isStarGiftUnique && renderStarGiftUnique()}\n      {isPrizeStars && renderPrizeStars()}\n      {isSuggestedAvatar && (\n        <ActionMessageSuggestedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isUpdatedAvatar && (\n        <ActionMessageUpdatedAvatar message={message} renderContent={renderContent} />\n      )}\n      {isJoinedMessage && <SimilarChannels chatId={targetChatId!} />}\n      {contextMenuAnchor && (\n        <ContextMenuContainer\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          message={message}\n          messageListType=\"thread\"\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        />\n      )}\n      {withServiceReactions && (\n        <Reactions\n          isOutside\n          message={message!}\n          threadId={threadId}\n          observeIntersection={observeIntersectionForPlaying}\n          isCurrentUserPremium={isCurrentUserPremium}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { message, threadId }): StateProps => {\n    const {\n      chatId, senderId, content,\n    } = message;\n\n    const { targetUserIds, targetChatId } = content.action || {};\n    const targetMessageId = getMessageReplyInfo(message)?.replyToMsgId;\n    const targetMessage = targetMessageId\n      ? selectChatMessage(global, chatId, targetMessageId)\n      : undefined;\n\n    const theme = selectTheme(global);\n    const {\n      patternColor,\n    } = global.settings.themes[theme] || {};\n\n    const isFocused = threadId ? selectIsMessageFocused(global, message, threadId) : false;\n    const {\n      direction: focusDirection,\n      noHighlight: noFocusHighlight,\n    } = (isFocused && selectTabState(global).focusedMessage) || {};\n\n    const senderUser = selectUser(global, senderId || chatId);\n    const senderChat = selectChat(global, chatId);\n\n    const targetChat = targetChatId ? selectChat(global, targetChatId) : undefined;\n\n    const giftDuration = content.action?.months;\n    const premiumGiftSticker = selectGiftStickerForDuration(global, giftDuration);\n\n    const starCount = content.action?.stars;\n    const starsGiftSticker = selectGiftStickerForStars(global, starCount);\n\n    const topic = selectTopicFromMessage(global, message);\n\n    return {\n      senderUser,\n      senderChat,\n      targetChat,\n      targetChatId,\n      targetUserIds,\n      targetMessage,\n      isFocused,\n      premiumGiftSticker,\n      starsGiftSticker,\n      topic,\n      patternColor,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      ...(isFocused && {\n        focusDirection,\n        noFocusHighlight,\n      }),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      currentUserId: global.currentUserId,\n    };\n  },\n)(ActionMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ContextMenuContainer';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ContextMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ContextMenuContainer = useModuleLoader(Bundles.Extra, 'ContextMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ContextMenuContainer ? <ContextMenuContainer {...props} /> : undefined;\n};\n\nexport default ContextMenuContainerAsync;\n","import { useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { addExtraClass } from '../../../../lib/teact/teact-dom';\n\nimport type { FocusDirection, ScrollTargetPosition } from '../../../../types';\n\nimport { SCROLL_MAX_DISTANCE } from '../../../../config';\nimport {\n  requestForcedReflow, requestMeasure, requestMutation,\n} from '../../../../lib/fasterdom/fasterdom';\nimport animateScroll from '../../../../util/animateScroll';\n\n// This is used when the viewport was replaced.\nconst BOTTOM_FOCUS_OFFSET = 500;\nconst RELOCATED_FOCUS_OFFSET = SCROLL_MAX_DISTANCE;\nconst FOCUS_MARGIN = 20;\n\nexport default function useFocusMessage({\n  elementRef,\n  chatId,\n  isFocused,\n  focusDirection,\n  noFocusHighlight,\n  isResizingContainer,\n  isJustAdded,\n  isQuote,\n  scrollTargetPosition,\n}: {\n  elementRef: { current: HTMLDivElement | null };\n  chatId: string;\n  isFocused?: boolean;\n  focusDirection?: FocusDirection;\n  noFocusHighlight?: boolean;\n  isResizingContainer?: boolean;\n  isJustAdded?: boolean;\n  isQuote?: boolean;\n  scrollTargetPosition?: ScrollTargetPosition;\n}) {\n  const isRelocatedRef = useRef(!isJustAdded);\n\n  useLayoutEffect(() => {\n    const isRelocated = isRelocatedRef.current;\n    isRelocatedRef.current = false;\n\n    if (isFocused && elementRef.current) {\n      const messagesContainer = elementRef.current.closest<HTMLDivElement>('.MessageList')!;\n      // `noFocusHighlight` is always called with “scroll-to-bottom” buttons\n      const isToBottom = noFocusHighlight;\n      const scrollPosition = scrollTargetPosition || isToBottom ? 'end' : 'centerOrTop';\n\n      const exec = () => {\n        const maxDistance = focusDirection !== undefined\n          ? (isToBottom ? BOTTOM_FOCUS_OFFSET : RELOCATED_FOCUS_OFFSET) : undefined;\n\n        const result = animateScroll({\n          container: messagesContainer,\n          element: elementRef.current!,\n          position: scrollPosition,\n          margin: FOCUS_MARGIN,\n          maxDistance,\n          forceDirection: focusDirection,\n          forceNormalContainerHeight: isResizingContainer,\n          shouldReturnMutationFn: true,\n        });\n\n        if (isQuote) {\n          const firstQuote = elementRef.current!.querySelector<HTMLSpanElement>('.is-quote');\n          if (firstQuote) {\n            requestMutation(() => {\n              addExtraClass(firstQuote, 'animate');\n            });\n          }\n        }\n\n        return result;\n      };\n\n      if (isRelocated) {\n        // We need this to override scroll setting from Message List layout effect\n        requestForcedReflow(exec);\n      } else {\n        requestMeasure(() => {\n          requestMutation(exec()!);\n        });\n      }\n    }\n  }, [\n    elementRef, chatId, isFocused, focusDirection, noFocusHighlight, isResizingContainer, isQuote, scrollTargetPosition,\n  ]);\n}\n","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiReaction, ApiReactionPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { isSameReaction } from '../../../global/helpers';\nimport { selectPerformanceSettingsValue, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_ANDROID, IS_IOS } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport AnimatedIcon from '../AnimatedIcon';\nimport StarIcon from '../icons/StarIcon';\n\nimport styles from './ReactionAnimatedEmoji.module.scss';\n\ntype OwnProps = {\n  containerId: string;\n  reaction: ApiReactionPaid;\n  className?: string;\n  size?: number;\n  effectSize?: number;\n  localAmount?: number;\n  observeIntersection?: ObserveFn;\n};\n\ntype StateProps = {\n  activeReactions?: ApiReaction[];\n  withEffects?: boolean;\n};\n\nconst ICON_SIZE = 1.5 * REM;\nconst EFFECT_SIZE = 6.5 * REM;\nconst MAX_EFFECT_COUNT = (IS_IOS || IS_ANDROID) ? 2 : 5;\nconst QUALITY = (IS_IOS || IS_ANDROID) ? 2 : 3;\n\nconst PaidReactionEmoji = ({\n  containerId,\n  reaction,\n  className,\n  size = ICON_SIZE,\n  effectSize = EFFECT_SIZE,\n  activeReactions,\n  localAmount,\n  withEffects,\n  observeIntersection,\n}: OwnProps & StateProps) => {\n  const { stopActiveReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const effectRef = useRef<HTMLDivElement>(null);\n\n  const [effectsIds, setEffectsIds] = useState<number[]>([]);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const activeReaction = useMemo(() => (\n    activeReactions?.find((active) => isSameReaction(active, reaction))\n  ), [activeReactions, reaction]);\n\n  const shouldPlayEffect = Boolean(\n    withEffects && activeReaction,\n  );\n  const canAddMoreEffects = effectsIds.length < MAX_EFFECT_COUNT;\n\n  useEffectWithPrevDeps(([prevLocalAmount]) => {\n    if (!shouldPlayEffect) {\n      setEffectsIds([]);\n      return;\n    }\n\n    if (!localAmount || localAmount <= (prevLocalAmount || 0)) {\n      return;\n    }\n\n    if (canAddMoreEffects) {\n      setEffectsIds((prev) => [...prev, Date.now()]);\n    }\n  }, [localAmount, canAddMoreEffects, shouldPlayEffect]);\n\n  const {\n    shouldRender: shouldRenderEffect,\n  } = useShowTransition({\n    ref: effectRef,\n    noMountTransition: true,\n    isOpen: shouldPlayEffect,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  const handleEnded = useLastCallback(() => {\n    const newEffectsIds = effectsIds.slice(1);\n    setEffectsIds(newEffectsIds);\n    if (!newEffectsIds.length) {\n      stopActiveReaction({ containerId, reaction });\n    }\n  });\n\n  const rootClassName = buildClassName(\n    styles.root,\n    shouldRenderEffect && styles.animating,\n    className,\n  );\n\n  return (\n    <div className={rootClassName} ref={ref} teactFastList>\n      <StarIcon key=\"icon\" type=\"gold\" size=\"adaptive\" style={`width: ${size}px; height: ${size}px`} />\n      {shouldRenderEffect && effectsIds.map((id) => (\n        <AnimatedIcon\n          key={id}\n          ref={effectRef}\n          className={styles.effect}\n          size={effectSize}\n          tgsUrl={LOCAL_TGS_URLS.StarReactionEffect}\n          play={isIntersecting}\n          noLoop\n          forceAlways\n          nonInteractive\n          quality={QUALITY}\n          onEnded={handleEnded}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { containerId }) => {\n    const { activeReactions } = selectTabState(global);\n\n    const withEffects = selectPerformanceSettingsValue(global, 'reactionEffects');\n\n    return {\n      activeReactions: activeReactions?.[containerId],\n      withEffects,\n    };\n  },\n)(PaidReactionEmoji));\n","import React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiPeer, ApiReaction, ApiReactionCount,\n} from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { isReactionChosen } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../../util/textFormat';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useSelector from '../../../../hooks/data/useSelector';\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport usePrevious from '../../../../hooks/usePrevious';\nimport useShowTransition from '../../../../hooks/useShowTransition';\n\nimport AnimatedCounter from '../../../common/AnimatedCounter';\nimport AvatarList from '../../../common/AvatarList';\nimport PaidReactionEmoji from '../../../common/reactions/PaidReactionEmoji';\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport Sparkles from '../../../common/Sparkles';\nimport Button from '../../../ui/Button';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst MAX_SCALE = 3;\n\ntype OwnProps = {\n  chatId: string;\n  messageId: number;\n  reaction: ApiReactionCount;\n  containerId: string;\n  isOwnMessage?: boolean;\n  recentReactors?: ApiPeer[];\n  className?: string;\n  chosenClassName?: string;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onPaidClick?: (count: number) => void;\n};\n\nfunction selectStarsState(global: GlobalState) {\n  return global.stars;\n}\n\nconst ReactionButton = ({\n  reaction,\n  containerId,\n  isOwnMessage,\n  recentReactors,\n  className,\n  chosenClassName,\n  chatId,\n  messageId,\n  observeIntersection,\n  onClick,\n  onPaidClick,\n}: OwnProps) => {\n  const {\n    openStarsBalanceModal,\n    resetLocalPaidReactions,\n    openPaidReactionModal,\n    requestWave,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const counterRef = useRef<HTMLSpanElement>(null);\n  const animationRef = useRef<Animation>();\n\n  const isPaid = reaction.reaction.type === 'paid';\n\n  const starsState = useSelector(selectStarsState);\n  const areStarsLoaded = Boolean(starsState);\n\n  const handlePaidClick = useLastCallback((count = 1) => {\n    onPaidClick?.(count);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    if (reaction.reaction.type === 'paid') {\n      e.stopPropagation(); // Prevent default message double click behavior\n      handlePaidClick();\n\n      return;\n    }\n\n    onClick?.(reaction.reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      openPaidReactionModal({\n        chatId,\n        messageId,\n      });\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, isContextMenuOpen, chatId, messageId]);\n\n  useEffectWithPrevDeps(([prevReaction]) => {\n    const amount = reaction.localAmount;\n    const button = ref.current;\n    if (!amount || !button || amount === prevReaction?.localAmount) return;\n\n    if (areStarsLoaded && amount > starsState.balance.amount) {\n      openStarsBalanceModal({\n        originReaction: {\n          chatId,\n          messageId,\n          amount,\n        },\n      });\n      resetLocalPaidReactions({\n        chatId,\n        messageId,\n      });\n      return;\n    }\n\n    if (reaction.localAmount) {\n      const { left, top } = button.getBoundingClientRect();\n      const startX = left + button.offsetWidth / 2;\n      const startY = top + button.offsetHeight / 2;\n      requestWave({ startX, startY });\n    }\n\n    const currentScale = Number(getComputedStyle(button).scale) || 1;\n    animationRef.current?.cancel();\n    // Animate scaling by 20%, and then returning to 1\n    animationRef.current = button.animate([\n      { scale: currentScale },\n      { scale: Math.min(currentScale * 1.2, MAX_SCALE), offset: 0.2 },\n      { scale: 1 },\n    ], {\n      duration: 500 * currentScale,\n      easing: 'ease-out',\n    });\n  }, [reaction, starsState?.balance, areStarsLoaded, chatId, messageId]);\n\n  const prevAmount = usePrevious(reaction.localAmount);\n\n  const {\n    shouldRender: shouldRenderPaidCounter,\n  } = useShowTransition({\n    isOpen: Boolean(reaction.localAmount),\n    ref: counterRef,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        isOwnMessage && styles.own,\n        isPaid && styles.paid,\n        isReactionChosen(reaction) && styles.chosen,\n        isReactionChosen(reaction) && chosenClassName,\n        className,\n      )}\n      size=\"tiny\"\n      ref={ref}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      onClick={handleClick}\n    >\n      {reaction.reaction.type === 'paid' ? (\n        <>\n          <Sparkles preset=\"button\" />\n          <PaidReactionEmoji\n            className={styles.animatedEmoji}\n            containerId={containerId}\n            reaction={reaction.reaction}\n            size={REACTION_SIZE}\n            localAmount={reaction.localAmount}\n            observeIntersection={observeIntersection}\n          />\n          {shouldRenderPaidCounter && (\n            <AnimatedCounter\n              ref={counterRef}\n              text={`+${formatIntegerCompact(reaction.localAmount || prevAmount!)}`}\n              className={styles.paidCounter}\n            />\n          )}\n        </>\n      ) : (\n        <ReactionAnimatedEmoji\n          className={styles.animatedEmoji}\n          containerId={containerId}\n          reaction={reaction.reaction}\n          size={REACTION_SIZE}\n          observeIntersection={observeIntersection}\n        />\n      )}\n      {recentReactors?.length ? (\n        <AvatarList size=\"mini\" peers={recentReactors} />\n      ) : (\n        <AnimatedCounter\n          text={formatIntegerCompact(reaction.count + (reaction.localAmount || 0))}\n          className={styles.counter}\n        />\n      )}\n    </Button>\n  );\n};\n\nexport default memo(ReactionButton);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../../global';\n\nimport type {\n  ApiMessage,\n  ApiPeer,\n  ApiReaction,\n  ApiReactionKey,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\nimport type { ThreadId } from '../../../../types';\n\nimport { getReactionKey, isReactionChosen } from '../../../../global/helpers';\nimport { selectPeer } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { getMessageKey } from '../../../../util/keys/messageKey';\n\nimport useEffectOnce from '../../../../hooks/useEffectOnce';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionButton from './ReactionButton';\nimport SavedTagButton from './SavedTagButton';\n\nimport './Reactions.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  threadId?: ThreadId;\n  isOutside?: boolean;\n  maxWidth?: number;\n  metaChildren?: React.ReactNode;\n  tags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  isCurrentUserPremium?: boolean;\n  observeIntersection?: ObserveFn;\n  noRecentReactors?: boolean;\n};\n\nconst MAX_RECENT_AVATARS = 3;\nconst PAID_SEND_DELAY = 5000;\n\nconst Reactions: FC<OwnProps> = ({\n  message,\n  threadId,\n  isOutside,\n  maxWidth,\n  metaChildren,\n  observeIntersection,\n  noRecentReactors,\n  isCurrentUserPremium,\n  tags,\n}) => {\n  const {\n    toggleReaction,\n    addLocalPaidReaction,\n    updateMiddleSearch,\n    performMiddleSearch,\n    openPremiumModal,\n    resetLocalPaidReactions,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const { results, areTags, recentReactions } = message.reactions!;\n  const withServiceReactions = Boolean(message.areReactionsPossible && message.reactions);\n\n  const totalCount = useMemo(() => (\n    results.reduce((acc, reaction) => acc + reaction.count, 0)\n  ), [results]);\n\n  const recentReactorsByReactionKey = useMemo(() => {\n    const global = getGlobal();\n\n    return recentReactions?.reduce((acc, recentReaction) => {\n      const { reaction, peerId } = recentReaction;\n      const key = getReactionKey(reaction);\n      const peer = selectPeer(global, peerId);\n\n      if (!peer) return acc;\n\n      const peers = acc[key] || [];\n      peers.push(peer);\n      acc[key] = peers;\n      return acc;\n    }, {} as Record<ApiReactionKey, ApiPeer[]>);\n  }, [recentReactions]);\n\n  const props = useMemo(() => {\n    const messageKey = getMessageKey(message);\n    return results.map((reaction) => {\n      const reactionKey = getReactionKey(reaction.reaction);\n      const recentReactors = recentReactorsByReactionKey?.[reactionKey];\n      const shouldHideRecentReactors = totalCount > MAX_RECENT_AVATARS || noRecentReactors;\n      const tag = areTags ? tags?.[reactionKey] : undefined;\n\n      return {\n        reaction,\n        reactionKey,\n        messageKey,\n        recentReactors: !shouldHideRecentReactors ? recentReactors : undefined,\n        isChosen: isReactionChosen(reaction),\n        tag,\n      };\n    });\n  }, [message, noRecentReactors, recentReactorsByReactionKey, results, areTags, tags, totalCount]);\n\n  const handleClick = useLastCallback((reaction: ApiReaction) => {\n    if (areTags) {\n      if (!isCurrentUserPremium) {\n        openPremiumModal({\n          initialSection: 'saved_tags',\n        });\n        return;\n      }\n\n      updateMiddleSearch({ chatId: message.chatId, threadId, update: { savedTag: reaction } });\n      performMiddleSearch({ chatId: message.chatId, threadId });\n      return;\n    }\n\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  const paidLocalCount = useMemo(() => results.find((r) => r.reaction.type === 'paid')?.localAmount || 0, [results]);\n\n  const handlePaidClick = useLastCallback((count: number) => {\n    addLocalPaidReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      count,\n    });\n  });\n\n  useEffect(() => {\n    if (!paidLocalCount) return;\n\n    showNotification({\n      localId: getMessageKey(message),\n      title: lang('StarsSentTitle'),\n      message: lang('StarsSentText', paidLocalCount),\n      actionText: lang('StarsSentUndo'),\n      cacheBreaker: paidLocalCount.toString(),\n      action: {\n        action: 'resetLocalPaidReactions',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      dismissAction: {\n        action: 'sendPaidReaction',\n        payload: { chatId: message.chatId, messageId: message.id },\n      },\n      duration: PAID_SEND_DELAY,\n      shouldShowTimer: true,\n      disableClickDismiss: true,\n      icon: 'star',\n    });\n  }, [lang, message, paidLocalCount]);\n\n  const handleRemoveReaction = useLastCallback((reaction: ApiReaction) => {\n    toggleReaction({\n      chatId: message.chatId,\n      messageId: message.id,\n      reaction,\n    });\n  });\n\n  // Reset paid reactions on unmount\n  useEffectOnce(() => () => {\n    resetLocalPaidReactions({\n      chatId: message.chatId,\n      messageId: message.id,\n    });\n  });\n\n  return (\n    <div\n      className={buildClassName(\n        'Reactions',\n        isOutside && 'is-outside',\n        withServiceReactions && 'is-service',\n      )}\n      style={maxWidth ? `max-width: ${maxWidth}px` : undefined}\n      dir={lang.isRtl ? 'rtl' : 'ltr'}\n    >\n      {props.map(({\n        reaction, recentReactors, messageKey, reactionKey, isChosen, tag,\n      }) => (\n        areTags ? (\n          <SavedTagButton\n            key={reactionKey}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            isChosen={isChosen}\n            reaction={reaction.reaction as ApiReaction}\n            tag={tag}\n            withContextMenu={isCurrentUserPremium}\n            onClick={handleClick}\n            onRemove={handleRemoveReaction}\n            observeIntersection={observeIntersection}\n          />\n        ) : (\n          <ReactionButton\n            key={reactionKey}\n            chatId={message.chatId}\n            messageId={message.id}\n            className=\"message-reaction\"\n            chosenClassName=\"chosen\"\n            containerId={messageKey}\n            isOwnMessage={message.isOutgoing}\n            recentReactors={recentReactors}\n            reaction={reaction}\n            onClick={handleClick}\n            onPaidClick={handlePaidClick}\n            observeIntersection={observeIntersection}\n          />\n        )\n      ))}\n      {metaChildren}\n    </div>\n  );\n};\n\nexport default memo(Reactions);\n","// extracted by mini-css-extract-plugin\nexport default {\"subtitle\":\"cGrbcqD_\"};","import React, { memo, useState } from '../../../lib/teact/teact';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PromptDialog.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  title: string;\n  subtitle?: React.ReactNode;\n  placeholder: string;\n  submitText?: string;\n  maxLength?: number;\n  initialValue?: string;\n  onClose: NoneToVoidFunction;\n  onSubmit: (text: string) => void;\n};\n\nconst PromptDialog = ({\n  isOpen,\n  title,\n  subtitle,\n  placeholder,\n  submitText,\n  maxLength,\n  initialValue = '',\n  onClose,\n  onSubmit,\n}: OwnProps) => {\n  const lang = useOldLang();\n\n  const [text, setText] = useState(initialValue);\n\n  const handleTextChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setText(e.target.value);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(text);\n  });\n\n  return (\n    <Modal\n      className=\"narrow\"\n      title={title}\n      isOpen={isOpen}\n      onClose={onClose}\n      isSlim\n    >\n      {Boolean(subtitle) && (\n        <div className={styles.subtitle}>\n          {subtitle}\n        </div>\n      )}\n      <InputText\n        placeholder={placeholder}\n        value={text}\n        onChange={handleTextChange}\n        maxLength={maxLength}\n        teactExperimentControlled\n      />\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" onClick={handleSubmit}>\n          {submitText || lang('Save')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PromptDialog);\n","import React, { memo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiReaction,\n  ApiSavedReactionTag,\n} from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport ReactionAnimatedEmoji from '../../../common/reactions/ReactionAnimatedEmoji';\nimport PromptDialog from '../../../modals/prompt/PromptDialog';\nimport Button from '../../../ui/Button';\nimport Menu from '../../../ui/Menu';\nimport MenuItem from '../../../ui/MenuItem';\n\nimport styles from './ReactionButton.module.scss';\n\nconst REACTION_SIZE = 1.25 * REM;\nconst TITLE_MAX_LENGTH = 15;\nconst LOOP_LIMIT = 1;\n\ntype OwnProps = {\n  reaction: ApiReaction;\n  tag?: ApiSavedReactionTag;\n  containerId: string;\n  isChosen?: boolean;\n  isOwnMessage?: boolean;\n  withCount?: boolean;\n  className?: string;\n  chosenClassName?: string;\n  isDisabled?: boolean;\n  withContextMenu?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (reaction: ApiReaction) => void;\n  onRemove?: (reaction: ApiReaction) => void;\n};\n\nconst SavedTagButton = ({\n  reaction,\n  tag,\n  containerId,\n  isChosen,\n  isOwnMessage,\n  className,\n  chosenClassName,\n  withCount,\n  isDisabled,\n  withContextMenu,\n  observeIntersection,\n  onClick,\n  onRemove,\n}: OwnProps) => {\n  const { editSavedReactionTag } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLButtonElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isRenamePromptOpen, openRenamePrompt, closeRenamePrompt] = useFlag();\n\n  const { title, count } = tag || {};\n  const hasText = Boolean(title || (withCount && count));\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(reaction);\n  });\n\n  const handleRemoveClick = useLastCallback(() => {\n    onRemove?.(reaction);\n  });\n\n  const handleRenameTag = useLastCallback((newTitle: string) => {\n    editSavedReactionTag({\n      reaction,\n      title: newTitle,\n    });\n    closeRenamePrompt();\n  });\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, !withContextMenu, undefined, undefined, undefined, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => document.body);\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true, shouldAvoidNegativePosition: true }));\n\n  if (withCount && count === 0) {\n    return undefined;\n  }\n\n  return (\n    <Button\n      className={buildClassName(\n        styles.root,\n        styles.tag,\n        isOwnMessage && styles.own,\n        isChosen && styles.chosen,\n        isChosen && chosenClassName,\n        isDisabled && styles.disabled,\n        className,\n      )}\n      size=\"tiny\"\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n      ref={ref}\n    >\n      <ReactionAnimatedEmoji\n        className={styles.animatedEmoji}\n        containerId={containerId}\n        reaction={reaction}\n        loopLimit={LOOP_LIMIT}\n        size={REACTION_SIZE}\n        observeIntersection={observeIntersection}\n      />\n      {hasText && (\n        <span className={styles.tagText}>\n          {title && <span>{title}</span>}\n          {withCount && <span>{count}</span>}\n        </span>\n      )}\n      <svg\n        className={styles.tail}\n        width=\"15\"\n        height=\"30\"\n        viewBox=\"0 0 15 30\"\n      >\n        <path className={styles.tailFill} d=\"m 0,30 c 3.1855,0 6.1803,-1.5176 8.0641,-4.0864 l 5.835,-7.9568 c 1.2906,-1.7599 1.2906,-4.1537 0,-5.9136 L 8.0641,4.08636 C 6.1803,1.51761 3.1855,0 0,0\" />\n      </svg>\n      {withContextMenu && (\n        <PromptDialog\n          isOpen={isRenamePromptOpen}\n          maxLength={TITLE_MAX_LENGTH}\n          title={lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          subtitle={lang('SavedTagLabelTagText')}\n          placeholder={lang('SavedTagLabelPlaceholder')}\n          initialValue={tag?.title}\n          onClose={closeRenamePrompt}\n          onSubmit={handleRenameTag}\n        />\n      )}\n      {withContextMenu && contextMenuAnchor && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          autoClose\n          withPortal\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          <MenuItem icon=\"tag-filter\" onClick={handleClick}>\n            {lang('SavedTagFilterByTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-name\" onClick={openRenamePrompt}>\n            {lang(tag?.title ? 'SavedTagRenameTag' : 'SavedTagLabelTag')}\n          </MenuItem>\n          <MenuItem icon=\"tag-crossed\" destructive onClick={handleRemoveClick}>\n            {lang('SavedTagRemoveTag')}\n          </MenuItem>\n        </Menu>\n      )}\n    </Button>\n  );\n};\n\nexport default memo(SavedTagButton);\n","import type {\n  ApiInputInvoice,\n  ApiInputSavedStarGift,\n  ApiMessage,\n  ApiRequestInputInvoice,\n  ApiRequestInputSavedStarGift,\n  ApiStarsAmount,\n  ApiStarsTransaction,\n  ApiStarsTransactionPeer,\n  ApiStarsTransactionPeerPeer,\n} from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { LangFn } from '../../util/localization';\nimport type { GlobalState } from '../types';\n\nimport arePropsShallowEqual from '../../util/arePropsShallowEqual';\nimport { selectChat, selectPeer, selectUser } from '../selectors';\n\nexport function getRequestInputInvoice<T extends GlobalState>(\n  global: T, inputInvoice: ApiInputInvoice,\n): ApiRequestInputInvoice | undefined {\n  if (inputInvoice.type === 'slug') return inputInvoice;\n\n  if (inputInvoice.type === 'stargift') {\n    const {\n      peerId, shouldHideName, giftId, message, shouldUpgrade,\n    } = inputInvoice;\n    const peer = selectPeer(global, peerId);\n\n    if (!peer) return undefined;\n\n    return {\n      type: 'stargift',\n      peer,\n      shouldHideName,\n      giftId,\n      message,\n      shouldUpgrade,\n    };\n  }\n\n  if (inputInvoice.type === 'starsgift') {\n    const {\n      userId, stars, amount, currency,\n    } = inputInvoice;\n    const user = selectUser(global, userId);\n\n    if (!user) return undefined;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'starsgift',\n        user,\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stars') {\n    const {\n      stars, amount, currency,\n    } = inputInvoice;\n\n    return {\n      type: 'stars',\n      purpose: {\n        type: 'stars',\n        stars,\n        amount,\n        currency,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'chatInviteSubscription') {\n    const { hash } = inputInvoice;\n\n    return {\n      type: 'chatInviteSubscription',\n      hash,\n    };\n  }\n\n  if (inputInvoice.type === 'message') {\n    const chat = selectChat(global, inputInvoice.chatId);\n    if (!chat) {\n      return undefined;\n    }\n    return {\n      type: 'message',\n      chat,\n      messageId: inputInvoice.messageId,\n    };\n  }\n\n  if (inputInvoice.type === 'giftcode') {\n    const {\n      userIds, boostChannelId, amount, currency, option, message,\n    } = inputInvoice;\n    const users = userIds.map((id) => selectUser(global, id)).filter(Boolean);\n    const boostChannel = boostChannelId ? selectChat(global, boostChannelId) : undefined;\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giftcode',\n        amount,\n        currency,\n        users,\n        boostChannel,\n        message,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'starsgiveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription, stars, users,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'starsgiveaway',\n      purpose: {\n        type: 'starsgiveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n        stars,\n        users,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'giveaway') {\n    const {\n      chatId, additionalChannelIds, amount, currency, option, untilDate, areWinnersVisible, countries,\n      isOnlyForNewSubscribers, prizeDescription,\n    } = inputInvoice;\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return undefined;\n    }\n    const additionalChannels = additionalChannelIds?.map((id) => selectChat(global, id)).filter(Boolean);\n\n    return {\n      type: 'giveaway',\n      option,\n      purpose: {\n        type: 'giveaway',\n        amount,\n        currency,\n        chat,\n        additionalChannels,\n        untilDate,\n        areWinnersVisible,\n        countries,\n        isOnlyForNewSubscribers,\n        prizeDescription,\n      },\n    };\n  }\n\n  if (inputInvoice.type === 'stargiftUpgrade') {\n    const { inputSavedGift, shouldKeepOriginalDetails } = inputInvoice;\n    const savedGift = getRequestInputSavedStarGift(global, inputSavedGift);\n    if (!savedGift) return undefined;\n\n    return {\n      type: 'stargiftUpgrade',\n      inputSavedGift: savedGift,\n      shouldKeepOriginalDetails,\n    };\n  }\n\n  return undefined;\n}\n\nexport function getRequestInputSavedStarGift<T extends GlobalState>(\n  global: T, inputGift: ApiInputSavedStarGift,\n): ApiRequestInputSavedStarGift | undefined {\n  if (inputGift.type === 'user') return inputGift;\n\n  if (inputGift.type === 'chat') {\n    const chat = selectChat(global, inputGift.chatId);\n    if (!chat) return undefined;\n\n    return {\n      type: 'chat',\n      chat,\n      savedId: inputGift.savedId,\n    };\n  }\n\n  return undefined;\n}\n\nexport function buildStarsTransactionCustomPeer(\n  peer: Exclude<ApiStarsTransactionPeer, ApiStarsTransactionPeerPeer>,\n): CustomPeer {\n  if (peer.type === 'appStore') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.AppleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.AppleTopUp.Subtitle',\n      peerColorId: 5,\n    };\n  }\n\n  if (peer.type === 'playMarket') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.GoogleTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.GoogleTopUp.Subtitle',\n      peerColorId: 3,\n    };\n  }\n\n  if (peer.type === 'fragment') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.FragmentTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.FragmentTopUp.Subtitle',\n      customPeerAvatarColor: '#000000',\n    };\n  }\n\n  if (peer.type === 'premiumBot') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Title',\n      subtitleKey: 'Stars.Intro.Transaction.PremiumBotTopUp.Subtitle',\n      peerColorId: 1,\n      withPremiumGradient: true,\n    };\n  }\n\n  if (peer.type === 'ads') {\n    return {\n      avatarIcon: 'star',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramAds.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramAds.Subtitle',\n      peerColorId: 2,\n    };\n  }\n\n  if (peer.type === 'api') {\n    return {\n      avatarIcon: 'bots',\n      isCustomPeer: true,\n      titleKey: 'Stars.Intro.Transaction.TelegramBotApi.Title',\n      subtitleKey: 'Stars.Intro.Transaction.TelegramBotApi.Subtitle',\n      peerColorId: 4,\n    };\n  }\n\n  return {\n    avatarIcon: 'star',\n    isCustomPeer: true,\n    titleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    subtitleKey: 'Stars.Intro.Transaction.Unsupported.Title',\n    peerColorId: 0,\n  };\n}\n\nexport function formatStarsTransactionAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  const amount = starsAmount.amount + starsAmount.nanos / 1e9;\n  if (amount < 0) {\n    return `- ${lang.number(Math.abs(amount))}`;\n  }\n\n  return `+ ${lang.number(amount)}`;\n}\n\nexport function formatStarsAmount(lang: LangFn, starsAmount: ApiStarsAmount) {\n  return lang.number(starsAmount.amount + starsAmount.nanos / 1e9);\n}\n\nexport function getStarsTransactionFromGift(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'giftStars') return undefined;\n\n  const { transactionId, stars } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: message.isOutgoing ? message.chatId : (message.senderId || message.chatId),\n    },\n    date: message.date,\n    isGift: true,\n    isMyGift: message.isOutgoing || undefined,\n  };\n}\n\nexport function getPrizeStarsTransactionFromGiveaway(message: ApiMessage): ApiStarsTransaction | undefined {\n  const { action } = message.content;\n\n  if (action?.type !== 'prizeStars') return undefined;\n\n  const { transactionId, stars, targetChatId } = action;\n\n  return {\n    id: transactionId!,\n    stars: {\n      amount: stars!,\n      nanos: 0,\n    },\n    peer: {\n      type: 'peer',\n      id: targetChatId!,\n    },\n    date: message.date,\n    giveawayPostId: message.id,\n  };\n}\n\nexport function areInputSavedGiftsEqual(one: ApiInputSavedStarGift, two: ApiInputSavedStarGift) {\n  return arePropsShallowEqual(one, two);\n}\n","import type { ApiChat, ApiPeer, ApiUser } from '../../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../config';\n\nexport function isApiPeerChat(peer: ApiPeer): peer is ApiChat {\n  return 'title' in peer;\n}\n\nexport function isApiPeerUser(peer: ApiPeer): peer is ApiUser {\n  return !isApiPeerChat(peer);\n}\n\nexport function getPeerTypeKey(peer: ApiPeer) {\n  if (isApiPeerChat(peer)) {\n    if (peer.type === 'chatTypeBasicGroup' || peer.type === 'chatTypeSuperGroup') {\n      return 'ChatList.PeerTypeGroup';\n    }\n\n    if (peer.type === 'chatTypeChannel') {\n      return 'ChatList.PeerTypeChannel';\n    }\n\n    if (peer.type === 'chatTypePrivate') {\n      return 'ChatList.PeerTypeNonContact';\n    }\n\n    return undefined;\n  }\n\n  if (peer.id === SERVICE_NOTIFICATIONS_USER_ID) {\n    return 'ServiceNotifications';\n  }\n\n  if (peer.isSupport) {\n    return 'SupportStatus';\n  }\n\n  if (peer.type && peer.type === 'userTypeBot') {\n    return 'ChatList.PeerTypeBot';\n  }\n\n  if (peer.isContact) {\n    return 'ChatList.PeerTypeContact';\n  }\n\n  return 'ChatList.PeerTypeNonContactUser';\n}\n","import { useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\n\nimport { isChatChannel, isUserBot, isUserId } from '../../global/helpers';\nimport { selectPeer, selectUserStatus } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nconst POLLING_INTERVAL = 60 * 60 * 1000;\nconst PEER_LAST_POLLING_TIME = new Map<string, number>();\nlet PEER_ID_QUEUE = new Set<string>();\nconst LIMIT_PER_REQUEST = 100;\nconst REQUEST_THROTTLE = 500;\n\nconst loadFromQueue = throttle(() => {\n  const queue = Array.from(PEER_ID_QUEUE);\n  const queueToLoad = queue.slice(0, LIMIT_PER_REQUEST);\n  const otherQueue = queue.slice(LIMIT_PER_REQUEST + 1);\n\n  getActions().loadStoriesMaxIds({\n    peerIds: queueToLoad,\n  });\n\n  queueToLoad.forEach((id) => PEER_LAST_POLLING_TIME.set(id, Date.now()));\n\n  PEER_ID_QUEUE = new Set(otherQueue);\n\n  // Schedule next load\n  if (PEER_ID_QUEUE.size) {\n    loadFromQueue();\n  }\n}, REQUEST_THROTTLE);\n\nexport default function usePeerStoriesPolling(ids?: string[]) {\n  const peers = useMemo(() => {\n    const global = getGlobal();\n    return ids?.map((id) => selectPeer(global, id)).filter(Boolean);\n  }, [ids]);\n\n  const pollablePeerIds = useMemo(() => {\n    const global = getGlobal();\n    return peers?.filter((peer) => {\n      const lastPollingTime = PEER_LAST_POLLING_TIME.get(peer.id) || 0;\n      if (Date.now() - lastPollingTime < POLLING_INTERVAL) {\n        return false;\n      }\n\n      if (isUserId(peer.id)) {\n        const user = peer as ApiUser;\n        const status = selectUserStatus(global, user.id);\n        const isStatusAvailable = status && status.type !== 'userStatusEmpty';\n        return !user.isContact && !user.isSelf && !isUserBot(user) && !peer.isSupport && isStatusAvailable;\n      } else {\n        const chat = peer as ApiChat;\n        return isChatChannel(chat) && !chat.isRestricted;\n      }\n    }).map((user) => user.id);\n  }, [peers]);\n\n  useEffect(() => {\n    if (pollablePeerIds?.length) {\n      pollablePeerIds.forEach((id) => PEER_ID_QUEUE.add(id));\n      loadFromQueue();\n    }\n  }, [pollablePeerIds]);\n}\n","import { getGlobal } from '../../global';\n\nimport type { ApiChatFolder, ApiSticker, ApiMessageEntity } from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport { selectChat } from '../../global/selectors';\nimport { omit, pick } from '../../util/iteratees';\nimport useReducer from '../useReducer';\nimport EMOJI_REGEX from '../../lib/twemojiRegex';\n\nexport type FolderChatType = {\n  icon: IconName;\n  title: string;\n  key: keyof Pick<ApiChatFolder, (\n    'contacts' | 'nonContacts' | 'groups' | 'channels' | 'bots' |\n    'excludeMuted' | 'excludeArchived' | 'excludeRead'\n  )>;\n};\n\nconst INCLUDE_FILTER_FIELDS: Array<keyof FolderIncludeFilters> = [\n  'includedChatIds', 'bots', 'channels', 'groups', 'contacts', 'nonContacts',\n];\nconst EXCLUDE_FILTER_FIELDS: Array<keyof FolderExcludeFilters> = [\n  'excludedChatIds', 'excludeArchived', 'excludeMuted', 'excludeRead',\n];\n\nexport function selectChatFilters(state: FoldersState, mode: 'included' | 'excluded', selectTemp?: boolean) {\n  let selectedChatIds: string[] = [];\n  let selectedChatTypes: FolderChatType['key'][] = [];\n\n  if (mode === 'included') {\n    const {\n      includedChatIds,\n      ...includeFilters\n    } = selectTemp\n      ? state.includeFilters || {}\n      : pick(\n        state.folder,\n        INCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = includedChatIds || [];\n    selectedChatTypes = (Object.keys(includeFilters) as Array<keyof typeof includeFilters>)\n      .filter((key) => Boolean(includeFilters[key]));\n  } else {\n    const {\n      excludedChatIds,\n      ...excludeFilters\n    } = selectTemp\n      ? state.excludeFilters || {}\n      : pick(\n        state.folder,\n        EXCLUDE_FILTER_FIELDS,\n      );\n\n    selectedChatIds = excludedChatIds || [];\n    selectedChatTypes = (Object.keys(excludeFilters) as Array<keyof typeof excludeFilters>)\n      .filter((key) => Boolean(excludeFilters[key]));\n  }\n\n  const global = getGlobal();\n  const existingSelectedChatIds = selectedChatIds.filter((id) => selectChat(global, id));\n\n  return {\n    selectedChatIds: existingSelectedChatIds,\n    selectedChatTypes,\n  };\n}\n\nfunction getSuggestedFolderName(includeFilters?: FolderIncludeFilters) {\n  if (includeFilters) {\n    const {\n      includedChatIds,\n      ...filters\n    } = includeFilters;\n\n    if (\n      Object.values(filters).filter(Boolean).length > 1\n      || (includedChatIds?.length)\n    ) {\n      return '';\n    }\n\n    if (filters.bots) {\n      return 'Bots';\n    } else if (filters.groups) {\n      return 'Groups';\n    } else if (filters.channels) {\n      return 'Channels';\n    } else if (filters.contacts) {\n      return 'Contacts';\n    } else if (filters.nonContacts) {\n      return 'Non-Contacts';\n    }\n  }\n\n  return '';\n}\n\ntype FolderIncludeFilters = Pick<ApiChatFolder, (\n  'includedChatIds' | 'bots' | 'channels' | 'groups' | 'contacts' | 'nonContacts'\n)>;\ntype FolderExcludeFilters = Pick<ApiChatFolder, 'excludedChatIds' | 'excludeArchived' | 'excludeMuted' | 'excludeRead'>;\n\nexport type FoldersState = {\n  mode: 'create' | 'edit';\n  isLoading?: boolean;\n  isTouched?: boolean;\n  error?: string;\n  folderId?: number;\n  chatFilter: string;\n  folder: Omit<ApiChatFolder, 'id' | 'description'>;\n  includeFilters?: FolderIncludeFilters;\n  excludeFilters?: FolderExcludeFilters;\n};\nexport type FoldersActions = (\n  'setTitle' | 'saveFilters' | 'editFolder' | 'reset' | 'setChatFilter' | 'setIsLoading' | 'setError' |\n  'editIncludeFilters' | 'editExcludeFilters' | 'setIncludeFilters' | 'setExcludeFilters' | 'setIsTouched' |\n  'setFolderId' | 'setIsChatlist' | 'setEmoticon' | 'setEmoji' |'setCustomEmoji'\n  );\nexport type FolderEditDispatch = Dispatch<FoldersState, FoldersActions>;\n\nconst INITIAL_STATE: FoldersState = {\n  mode: 'create',\n  chatFilter: '',\n  folder: {\n    title: { text: '' },\n    includedChatIds: [],\n    excludedChatIds: [],\n  },\n};\n\nexport function getEmojiPrefix(text: string, entities: ApiMessageEntity[]) {\n  if (entities?.length && entities[0].type === 'MessageEntityCustomEmoji' && entities[0].offset === 0) {\n    return text.slice(entities[0].length + 1);\n  }\n  EMOJI_REGEX.lastIndex = 0;\n  const match = EMOJI_REGEX.exec(text);\n  if (match && match.index === 0) {\n    return match[0] + ' ';\n  }\n  return '';\n}\n\nexport function removeEmojiPrefix(text: string, entities: ApiMessageEntity[]) {\n  if (entities?.length && entities[0].type === 'MessageEntityCustomEmoji' && entities[0].offset === 0) {\n    return text.slice(entities[0].length + 1);\n  }\n  EMOJI_REGEX.lastIndex = 0;\n  const match = EMOJI_REGEX.exec(text);\n  if (match && match.index === 0) {\n    return text.slice(match[0].length + 1);\n  }\n  return text;\n}\n\nconst foldersReducer: StateReducer<FoldersState, FoldersActions> = (\n  state,\n  action,\n): FoldersState => {\n  switch (action.type) {\n    case 'setTitle': {\n      const prefix = getEmojiPrefix(state.folder.title.text, state.folder.title.entities || []);\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: {\n            ...state.folder.title,\n            text: prefix + action.payload,\n          },\n        },\n        isTouched: true,\n      };\n    }\n    case 'setEmoticon': {\n      const text = removeEmojiPrefix(state.folder.title.text, state.folder.title.entities || []);\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: {\n            text,\n            entities: [],\n          },\n          emoticon: action.payload,\n        },\n        isTouched: true,\n      };\n    }\n    case 'setEmoji': {\n      const emoji = action.payload;\n      const text = removeEmojiPrefix(state.folder.title.text, state.folder.title.entities || []);\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: {\n            text: emoji + ' ' + text,\n            entities: [],\n          },\n          emoticon: '',\n        },\n        isTouched: true,\n      };\n    }\n    case 'setCustomEmoji': {\n      const emoji: ApiSticker = action.payload;\n      let text = state.folder.title.text;\n      if (state.folder.title.entities?.length &&\n        state.folder.title.entities[0].type === 'MessageEntityCustomEmoji' &&\n        state.folder.title.entities[0].offset === 0) {\n        text = state.folder.title.text.slice(state.folder.title.entities[0].length + 1);\n      }\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          title: {\n            text: emoji.emoji + ' ' + text,\n            entities: [{\n              type: 'MessageEntityCustomEmoji',\n              offset: 0,\n              length: (emoji.emoji || '').length,\n              documentId: emoji.id,\n            } as ApiMessageEntity],\n          },\n          emoticon: '',\n        },\n        isTouched: true,\n      };\n    }\n    case 'setFolderId':\n      return {\n        ...state,\n        folderId: action.payload,\n        mode: 'edit',\n      };\n    case 'editIncludeFilters':\n      return {\n        ...state,\n        includeFilters: pick(\n          state.folder,\n          INCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'editExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: pick(\n          state.folder,\n          EXCLUDE_FILTER_FIELDS,\n        ),\n      };\n    case 'setIncludeFilters':\n      return {\n        ...state,\n        includeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'setExcludeFilters':\n      return {\n        ...state,\n        excludeFilters: action.payload,\n        chatFilter: '',\n      };\n    case 'saveFilters':\n      if (state.includeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, INCLUDE_FILTER_FIELDS),\n            title: state.folder.title ? state.folder.title : { text: getSuggestedFolderName(state.includeFilters) },\n            ...state.includeFilters,\n          },\n          includeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else if (state.excludeFilters) {\n        return {\n          ...state,\n          folder: {\n            ...omit(state.folder, EXCLUDE_FILTER_FIELDS),\n            ...state.excludeFilters,\n          },\n          excludeFilters: undefined,\n          chatFilter: '',\n          isTouched: true,\n        };\n      } else {\n        return state;\n      }\n    case 'editFolder': {\n      const { id: folderId, description, ...folder } = action.payload;\n\n      return {\n        mode: 'edit',\n        folderId,\n        folder,\n        chatFilter: '',\n      };\n    }\n    case 'setChatFilter': {\n      return {\n        ...state,\n        chatFilter: action.payload,\n      };\n    }\n    case 'setIsTouched': {\n      return {\n        ...state,\n        isTouched: action.payload,\n      };\n    }\n    case 'setIsLoading': {\n      return {\n        ...state,\n        isLoading: action.payload,\n      };\n    }\n    case 'setError': {\n      return {\n        ...state,\n        isLoading: false,\n        error: action.payload,\n      };\n    }\n    case 'setIsChatlist':\n      return {\n        ...state,\n        folder: {\n          ...state.folder,\n          isChatList: action.payload,\n        },\n      };\n    case 'reset':\n      return INITIAL_STATE;\n    default:\n      return state;\n  }\n};\n\nconst useFoldersReducer = () => {\n  return useReducer(foldersReducer, INITIAL_STATE);\n};\n\nexport default useFoldersReducer;\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nfunction useTimeout(callback: NoneToVoidFunction, delay?: number) {\n  const savedCallback = useLastCallback(callback);\n\n  useEffect(() => {\n    if (typeof delay !== 'number') {\n      return undefined;\n    }\n\n    const id = setTimeout(() => savedCallback(), delay);\n    return () => clearTimeout(id);\n  }, [delay]);\n}\n\nexport default useTimeout;\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../util/windowEnvironment';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useCanvasBlur(\n  dataUri?: string,\n  isDisabled = false,\n  withRaf?: boolean,\n  radius = RADIUS,\n  preferredWidth?: number,\n  preferredHeight?: number,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const isStarted = useRef();\n\n  useSyncEffect(() => {\n    if (!isDisabled) {\n      isStarted.current = false;\n    }\n  }, [dataUri, isDisabled]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!dataUri || !canvas || isDisabled || isStarted.current) {\n      return;\n    }\n\n    isStarted.current = true;\n\n    const img = new Image();\n\n    const processBlur = () => {\n      const width = preferredWidth || img.width;\n      const height = preferredHeight || img.height;\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${radius}px)`;\n        }\n\n        ctx.drawImage(img, -radius * 2, -radius * 2, width + radius * 4, height + radius * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, radius, ITERATIONS);\n        }\n      });\n    };\n\n    img.onload = () => {\n      if (withRaf) {\n        requestMeasure(processBlur);\n      } else {\n        processBlur();\n      }\n    };\n\n    img.src = dataUri;\n  }, [dataUri, isDisabled, preferredHeight, preferredWidth, radius, withRaf]);\n\n  return canvasRef;\n}\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { MenuItemContextAction } from '../components/ui/ListItem';\nimport { type ApiChat, type ApiUser } from '../api/types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../config';\nimport {\n  getCanDeleteChat, isChatArchived, isChatChannel, isChatGroup,\n  isUserId,\n} from '../global/helpers';\nimport { compact } from '../util/iteratees';\nimport { IS_ELECTRON, IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../util/windowEnvironment';\nimport useOldLang from './useOldLang';\n\nconst useChatContextActions = ({\n  chat,\n  user,\n  folderId,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  isSavedDialog,\n  currentUserId,\n  isPreview,\n  handleDelete,\n  handleMute,\n  handleChatFolderChange,\n  handleReport,\n}: {\n  chat: ApiChat | undefined;\n  user: ApiUser | undefined;\n  folderId?: number;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n  isSavedDialog?: boolean;\n  currentUserId?: string;\n  isPreview?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n  handleChatFolderChange: NoneToVoidFunction;\n  handleReport?: NoneToVoidFunction;\n}, isInSearch = false) => {\n  const lang = useOldLang();\n\n  const { isSelf } = user || {};\n  const isServiceNotifications = user?.id === SERVICE_NOTIFICATIONS_USER_ID;\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (isSavedDialog) {\n      return lang('Delete');\n    }\n\n    if (isUserId(chat.id)) {\n      return lang('DeleteChatUser');\n    }\n\n    if (getCanDeleteChat(chat)) {\n      return lang('DeleteChat');\n    }\n\n    if (isChatChannel(chat)) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [chat, isSavedDialog, lang]);\n\n  return useMemo(() => {\n    if (!chat || isPreview) {\n      return undefined;\n    }\n\n    const {\n      toggleChatPinned,\n      toggleSavedDialogPinned,\n      updateChatMutedState,\n      toggleChatArchived,\n      toggleChatUnread,\n      openChatInNewTab,\n    } = getActions();\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: IS_ELECTRON ? 'Open in new window' : 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        if (isSavedDialog) {\n          openChatInNewTab({ chatId: currentUserId!, threadId: chat.id });\n        } else {\n          openChatInNewTab({ chatId: chat.id });\n        }\n      },\n    };\n\n    const togglePinned = () => {\n      if (isSavedDialog) {\n        toggleSavedDialogPinned({ id: chat.id });\n      } else {\n        toggleChatPinned({ id: chat.id, folderId: folderId! });\n      }\n    };\n\n    const actionPin = isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: togglePinned,\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: togglePinned,\n      };\n\n    const actionDelete = {\n      title: deleteTitle,\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    };\n\n    if (isSavedDialog) {\n      return compact([actionOpenInNewTab, actionPin, actionDelete]) as MenuItemContextAction[];\n    }\n\n    const actionAddToFolder = canChangeFolder ? {\n      title: lang('ChatList.Filter.AddToFolder'),\n      icon: 'folder',\n      handler: handleChatFolderChange,\n    } : undefined;\n\n    const actionMute = isMuted\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateChatMutedState({ chatId: chat.id, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    if (isInSearch) {\n      return compact([actionOpenInNewTab, actionPin, actionAddToFolder, actionMute]) as MenuItemContextAction[];\n    }\n\n    const actionMaskAsRead = (chat.unreadCount || chat.hasUnreadMark)\n      ? { title: lang('MarkAsRead'), icon: 'readchats', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n    const actionMarkAsUnread = !(chat.unreadCount || chat.hasUnreadMark) && !chat.isForum\n      ? { title: lang('MarkAsUnread'), icon: 'unread', handler: () => toggleChatUnread({ id: chat.id }) }\n      : undefined;\n\n    const actionArchive = isChatArchived(chat)\n      ? { title: lang('Unarchive'), icon: 'unarchive', handler: () => toggleChatArchived({ id: chat.id }) }\n      : { title: lang('Archive'), icon: 'archive', handler: () => toggleChatArchived({ id: chat.id }) };\n\n    const canReport = handleReport && !user && (isChatChannel(chat) || isChatGroup(chat));\n    const actionReport = canReport\n      ? { title: lang('ReportPeer.Report'), icon: 'flag', handler: handleReport }\n      : undefined;\n\n    const isInFolder = folderId !== undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionAddToFolder,\n      actionMaskAsRead,\n      actionMarkAsUnread,\n      actionPin,\n      !isSelf && actionMute,\n      !isSelf && !isServiceNotifications && !isInFolder && actionArchive,\n      actionReport,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [\n    chat, user, canChangeFolder, lang, handleChatFolderChange, isPinned, isInSearch, isMuted, currentUserId,\n    handleDelete, handleMute, handleReport, folderId, isSelf, isServiceNotifications, isSavedDialog, deleteTitle,\n    isPreview,\n  ]);\n};\n\nexport default useChatContextActions;\n","import { useEffect } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiMessage } from '../api/types';\n\nexport default function useEnsureMessage(\n  chatId: string,\n  messageId?: number,\n  message?: ApiMessage,\n  replyOriginForId?: number,\n  isDisabled?: boolean,\n) {\n  const { loadMessage } = getActions();\n\n  useEffect(() => {\n    if (isDisabled) return;\n    if (messageId && !message) {\n      loadMessage({ chatId, messageId: messageId!, replyOriginForId: replyOriginForId! });\n    }\n  }, [isDisabled, chatId, message, messageId, replyOriginForId]);\n}\n","import { useEffect, useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiTypeStory } from '../api/types';\n\nimport { throttle } from '../util/schedulers';\n\nconst THROTTLE_THRESHOLD_MS = 200;\n\nfunction useEnsureStory(\n  peerId?: string,\n  storyId?: number,\n  story?: ApiTypeStory,\n) {\n  const { loadPeerStoriesByIds } = getActions();\n\n  const loadStoryThrottled = useMemo(() => {\n    const throttled = throttle(loadPeerStoriesByIds, THROTTLE_THRESHOLD_MS, true);\n    return () => {\n      throttled({ peerId: peerId!, storyIds: [storyId!] });\n    };\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    const shouldLoadStory = !story || !('content' in story || 'isDeleted' in story);\n    if (peerId && storyId && shouldLoadStory) {\n      loadStoryThrottled();\n    }\n  }, [loadStoryThrottled, story, storyId, peerId]);\n}\n\nexport default useEnsureStory;\n","import { useEffect } from '../lib/teact/teact';\n\nimport {\n  addChatsCountCallback,\n  addOrderedIdsCallback,\n  addUnreadCountersCallback,\n  getChatsCount,\n  getOrderedIds,\n  getUnreadCounters,\n} from '../util/folderManager';\nimport useForceUpdate from './useForceUpdate';\n\nexport function useFolderManagerForOrderedIds(folderId: number) {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addOrderedIdsCallback(folderId, forceUpdate), [folderId, forceUpdate]);\n\n  return getOrderedIds(folderId);\n}\n\nexport function useFolderManagerForUnreadCounters() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addUnreadCountersCallback(forceUpdate), [forceUpdate]);\n\n  return getUnreadCounters();\n}\n\nexport function useFolderManagerForChatsCount() {\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => addChatsCountCallback(forceUpdate), [forceUpdate]);\n\n  return getChatsCount();\n}\n","import { useEffect } from '../lib/teact/teact';\n\nconst useHorizontalScroll = (\n  containerRef: React.RefObject<HTMLDivElement>,\n  isDisabled?: boolean,\n  shouldPreventDefault = false,\n  shouldStopPropagation = false,\n) => {\n  useEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    const container = containerRef.current;\n    if (!container) {\n      return undefined;\n    }\n\n    function handleScroll(e: WheelEvent) {\n      // Ignore horizontal scroll and let it work natively (e.g. on touchpad)\n      let isStuck = false;\n      if (!e.deltaX) {\n        isStuck = (e.deltaY < 0 && container!.scrollLeft === 0) || (e.deltaY > 0 && container!.scrollLeft >= container!.scrollWidth - container!.clientWidth - 1);\n        container!.scrollLeft += e.deltaY / 4;\n        if (shouldPreventDefault) e.preventDefault();\n      } else {\n        isStuck = (e.deltaX < 0 && container!.scrollLeft === 0) || (e.deltaX > 0 && container!.scrollLeft >= container!.scrollWidth - container!.clientWidth - 1);\n      }\n      if (shouldStopPropagation && !isStuck) {\n        e.stopPropagation();\n      }\n    }\n\n    container.addEventListener('wheel', handleScroll, { passive: !shouldPreventDefault });\n\n    return () => {\n      container.removeEventListener('wheel', handleScroll);\n    };\n  }, [containerRef, isDisabled, shouldPreventDefault]);\n};\n\nexport default useHorizontalScroll;\n","import { useEffect } from '../lib/teact/teact';\n\nimport { createCallbackManager } from '../util/callbacks';\nimport { getHotkeyMatcher } from '../util/parseHotkey';\n\nconst IGNORE_TAGS = new Set(['INPUT', 'TEXTAREA', 'SELECT']);\n\nconst handlers = createCallbackManager();\ndocument.documentElement.addEventListener('keydown', handlers.runCallbacks);\n\nexport function useHotkeys(hotkeys?: Record<string, (e: KeyboardEvent) => void>) {\n  useEffect(() => {\n    if (!hotkeys) {\n      return undefined;\n    }\n\n    const entries = Object.entries(hotkeys);\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (!shouldFireEvent(e)) {\n        return;\n      }\n\n      entries.forEach(([hotkey, handler]) => {\n        if (getHotkeyMatcher(hotkey)(e)) {\n          handler(e);\n        }\n      });\n    }\n\n    return handlers.addCallback(handleKeyDown);\n  }, [hotkeys]);\n}\n\nfunction shouldFireEvent(e: KeyboardEvent) {\n  if (e.target instanceof HTMLElement) {\n    return !IGNORE_TAGS.has(e.target.tagName);\n  }\n\n  return true;\n}\n","// Original source from Mantine\n// https://github.com/mantinedev/mantine/blob/master/src/mantine-hooks/src/use-hotkeys/parse-hotkey.ts\n\nexport type KeyboardModifiers = {\n  alt: boolean;\n  ctrl: boolean;\n  meta: boolean;\n  mod: boolean;\n  shift: boolean;\n};\n\nexport type Hotkey = KeyboardModifiers & {\n  key?: string;\n};\n\ntype CheckHotkeyMatch = (event: KeyboardEvent) => boolean;\n\nexport function parseHotkey(hotkey: string): Hotkey {\n  const keys = hotkey\n    .toLowerCase()\n    .split('+')\n    .map((part) => part.trim());\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    ctrl: keys.includes('ctrl'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n    shift: keys.includes('shift'),\n  };\n\n  const reservedKeys = ['alt', 'ctrl', 'meta', 'shift', 'mod'];\n\n  const freeKey = keys.find((key) => !reservedKeys.includes(key));\n\n  return {\n    ...modifiers,\n    key: freeKey,\n  };\n}\n\nfunction isExactHotkey(hotkey: Hotkey, event: KeyboardEvent): boolean {\n  const {\n    alt, ctrl, meta, mod, shift, key,\n  } = hotkey;\n  const {\n    altKey, ctrlKey, metaKey, shiftKey, key: pressedKey,\n  } = event;\n\n  if (alt !== altKey) {\n    return false;\n  }\n\n  if (mod) {\n    if (!ctrlKey && !metaKey) {\n      return false;\n    }\n  } else {\n    if (ctrl !== ctrlKey) {\n      return false;\n    }\n    if (meta !== metaKey) {\n      return false;\n    }\n  }\n  if (shift !== shiftKey) {\n    return false;\n  }\n\n  return Boolean(key\n    && (pressedKey.toLowerCase() === key.toLowerCase()\n      || event.code.replace('Key', '').toLowerCase() === key.toLowerCase()));\n}\n\nexport function getHotkeyMatcher(hotkey: string): CheckHotkeyMatch {\n  return (event) => isExactHotkey(parseHotkey(hotkey), event);\n}\n","import { useRef } from '../lib/teact/teact';\n\n// This is not render-dependent and will never allow previous to match current\nexport default function usePrevious<T extends any>(current: T) {\n  const prevRef = useRef<T>();\n  const lastRef = useRef<T>();\n\n  if (lastRef.current !== current) {\n    prevRef.current = lastRef.current;\n  }\n\n  lastRef.current = current;\n\n  return prevRef.current;\n}\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\n\nexport type ReducerAction<Actions> = { type: Actions; payload?: any };\nexport type StateReducer<State, Actions> = (state: State, action: ReducerAction<Actions>) => State;\nexport type Dispatch<State, Actions> = (action: ReducerAction<Actions>) => State;\n\nexport default function useReducer<State, Actions>(\n  reducer: StateReducer<State, Actions>,\n  initialState: State,\n) {\n  const forceUpdate = useForceUpdate();\n  const reducerRef = useRef(reducer);\n  const state = useRef(initialState);\n\n  const dispatch = useCallback((action: ReducerAction<Actions>) => {\n    state.current = reducerRef.current(state.current, action);\n    forceUpdate();\n    return state.current;\n  }, []);\n\n  return [\n    state.current,\n    dispatch,\n  ] as [State, Dispatch<State, Actions>];\n}\n","import { beginHeavyAnimation, useRef } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport { isAnimatingScroll } from '../util/animateScroll';\nimport useLastCallback from './useLastCallback';\nimport useResizeObserver from './useResizeObserver';\nimport useThrottledCallback from './useThrottledCallback';\n\nconst BOTTOM_FOCUS_SCROLL_THRESHOLD = 5;\nconst THROTTLE_MS = 300;\nconst RESIZE_ANIMATION_DURATION = 400;\n\nfunction useMessageResizeObserver(\n  ref: React.RefObject<HTMLElement> | undefined,\n  shouldFocusOnResize = false,\n) {\n  const {\n    focusLastMessage,\n  } = getActions();\n  const messageHeightRef = useRef(0);\n\n  const handleResize = useLastCallback(\n    (entry) => {\n      const lastHeight = messageHeightRef.current;\n\n      const newHeight = entry.contentRect.height;\n      messageHeightRef.current = newHeight;\n\n      if (isAnimatingScroll() || !lastHeight || newHeight <= lastHeight) return;\n\n      const container = entry.target.closest('.MessageList');\n      if (!container) return;\n\n      beginHeavyAnimation(RESIZE_ANIMATION_DURATION);\n\n      const resizeDiff = newHeight - lastHeight;\n      const { offsetHeight, scrollHeight, scrollTop } = container;\n      const currentScrollBottom = Math.round(scrollHeight - scrollTop - offsetHeight);\n      const previousScrollBottom = currentScrollBottom - resizeDiff;\n\n      if (previousScrollBottom <= BOTTOM_FOCUS_SCROLL_THRESHOLD) {\n        focusLastMessage();\n      }\n    },\n  );\n\n  const throttledResize = useThrottledCallback(handleResize, [handleResize], THROTTLE_MS, false);\n\n  useResizeObserver(ref, throttledResize, !shouldFocusOnResize);\n}\n\nexport default useMessageResizeObserver;\n","import { getGlobal } from '../global';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport { animate } from './animation';\n\nconst DEFAULT_DURATION = 300;\n\nconst stopById: Map<string, VoidFunction> = new Map();\n\nexport default function animateHorizontalScroll(container: HTMLElement, left: number, duration = DEFAULT_DURATION) {\n  if (!selectCanAnimateInterface(getGlobal())) {\n    duration = 0;\n  }\n\n  const isRtl = container.getAttribute('dir') === 'rtl';\n  const {\n    scrollLeft, offsetWidth: containerWidth, scrollWidth, dataset: { scrollId },\n  } = container;\n\n  let path = left - scrollLeft;\n\n  if (path < 0) {\n    const remainingPath = -scrollLeft * (isRtl ? -1 : 1);\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollWidth - (scrollLeft + containerWidth);\n    path = Math.min(path, remainingPath);\n  }\n\n  if (path === 0) {\n    return Promise.resolve();\n  }\n\n  if (scrollId && stopById.has(scrollId)) {\n    stopById.get(scrollId)!();\n  }\n\n  const target = scrollLeft + path;\n\n  return new Promise<void>((resolve) => {\n    requestMutation(() => {\n      if (duration === 0) {\n        container.scrollLeft = target;\n        resolve();\n        return;\n      }\n\n      let isStopped = false;\n      const id = Math.random().toString();\n      container.dataset.scrollId = id;\n      stopById.set(id, () => {\n        isStopped = true;\n      });\n\n      container.style.scrollSnapType = 'none';\n\n      const startAt = Date.now();\n\n      animate(() => {\n        if (isStopped) return false;\n\n        const t = Math.min((Date.now() - startAt) / duration, 1);\n\n        const currentPath = path * (1 - transition(t));\n        container.scrollLeft = Math.round(target - currentPath);\n\n        if (t >= 1) {\n          container.style.scrollSnapType = '';\n          delete container.dataset.scrollId;\n          stopById.delete(id);\n          resolve();\n        }\n\n        return t < 1;\n      }, requestMutation);\n    });\n  });\n}\n\nfunction transition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n","import { beginHeavyAnimation } from '../lib/teact/teact';\nimport { getGlobal } from '../global';\n\nimport type { ScrollTargetPosition } from '../types';\nimport { FocusDirection } from '../types';\n\nimport {\n  SCROLL_MAX_DISTANCE,\n  SCROLL_MAX_DURATION,\n  SCROLL_MIN_DURATION,\n  SCROLL_SHORT_TRANSITION_MAX_DISTANCE,\n} from '../config';\nimport { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCanAnimateInterface } from '../global/selectors';\nimport getOffsetToContainer from './visibility/getOffsetToContainer';\nimport { animateSingle, cancelSingleAnimation } from './animation';\nimport { IS_ANDROID } from './windowEnvironment';\n\nexport type AnimateScrollArgs = {\n  container: HTMLElement;\n  element: HTMLElement;\n  position: ScrollTargetPosition;\n  margin?: number;\n  maxDistance?: number;\n  forceDirection?: FocusDirection;\n  forceDuration?: number;\n  forceNormalContainerHeight?: boolean;\n  shouldReturnMutationFn?: boolean;\n};\n\nlet isAnimating = false;\nlet currentArgs: AnimateScrollArgs | undefined;\nlet onHeavyAnimationEnd: NoneToVoidFunction | undefined;\n\nexport default function animateScroll(args: AnimateScrollArgs) {\n  currentArgs = args;\n  const mutate = createMutateFunction(args);\n\n  if (args.shouldReturnMutationFn) {\n    return mutate;\n  }\n\n  requestMutation(mutate);\n  return undefined;\n}\n\nexport function restartCurrentScrollAnimation() {\n  if (!isAnimating) {\n    return;\n  }\n\n  cancelSingleAnimation();\n\n  requestMeasure(() => {\n    requestMutation(createMutateFunction(currentArgs!));\n  });\n}\n\nfunction createMutateFunction(args: AnimateScrollArgs) {\n  const {\n    container,\n    element,\n    position,\n    margin = 0,\n    maxDistance = SCROLL_MAX_DISTANCE,\n    forceDirection,\n    forceNormalContainerHeight,\n  } = args;\n\n  let forceDuration = args.forceDuration;\n\n  if (\n    forceDirection === FocusDirection.Static\n    || !selectCanAnimateInterface(getGlobal())\n  ) {\n    forceDuration = 0;\n  }\n\n  const { offsetHeight: elementHeight } = element;\n  const { scrollTop: currentScrollTop, offsetHeight: containerHeight, scrollHeight } = container;\n  const elementTop = getOffsetToContainer(element, container).top;\n\n  const targetContainerHeight = forceNormalContainerHeight && container.dataset.normalHeight\n    ? Number(container.dataset.normalHeight)\n    : containerHeight;\n\n  let scrollTo!: number;\n  switch (position) {\n    case 'start':\n      scrollTo = (elementTop - margin) + (IS_ANDROID ? 1 : 0);\n      break;\n    case 'end':\n      scrollTo = (elementTop + elementHeight + margin) - targetContainerHeight;\n      break;\n    // 'nearest' is not supported yet\n    case 'nearest':\n    case 'center':\n    case 'centerOrTop':\n      scrollTo = elementHeight < targetContainerHeight\n        ? (elementTop + elementHeight / 2 - targetContainerHeight / 2)\n        : (elementTop - margin);\n      break;\n  }\n\n  const scrollFrom = calculateScrollFrom(container, scrollTo, maxDistance, forceDirection);\n\n  let path = scrollTo - scrollFrom;\n  if (path < 0) {\n    const remainingPath = -scrollFrom;\n    path = Math.max(path, remainingPath);\n  } else if (path > 0) {\n    const remainingPath = scrollHeight - (scrollFrom + targetContainerHeight);\n    path = Math.min(path, remainingPath);\n  }\n\n  const absPath = Math.abs(path);\n\n  return () => {\n    if (absPath < 1) {\n      if (currentScrollTop !== scrollFrom) {\n        container.scrollTop = scrollFrom;\n      }\n\n      return;\n    }\n\n    const target = scrollFrom + path;\n\n    if (forceDuration === 0) {\n      container.scrollTop = target;\n      return;\n    }\n\n    const transition = absPath <= SCROLL_SHORT_TRANSITION_MAX_DISTANCE ? shortTransition : longTransition;\n    const duration = forceDuration || (\n      SCROLL_MIN_DURATION\n      + (absPath / SCROLL_MAX_DISTANCE) * (SCROLL_MAX_DURATION - SCROLL_MIN_DURATION)\n    );\n    const startAt = Date.now();\n\n    isAnimating = true;\n\n    const prevOnHeavyAnimationEnd = onHeavyAnimationEnd;\n    onHeavyAnimationEnd = beginHeavyAnimation(undefined, true);\n    prevOnHeavyAnimationEnd?.();\n\n    animateSingle(() => {\n      const t = Math.min((Date.now() - startAt) / duration, 1);\n      const currentPath = path * (1 - transition(t));\n      const newScrollTop = Math.round(target - currentPath);\n\n      container.scrollTop = newScrollTop;\n\n      isAnimating = t < 1 && newScrollTop !== target;\n\n      if (!isAnimating) {\n        currentArgs = undefined;\n\n        onHeavyAnimationEnd?.();\n        onHeavyAnimationEnd = undefined;\n      }\n\n      return isAnimating;\n    }, requestMutation);\n  };\n}\n\nexport function isAnimatingScroll() {\n  return isAnimating;\n}\n\nexport function cancelScrollBlockingAnimation() {\n  onHeavyAnimationEnd!();\n  onHeavyAnimationEnd = undefined;\n}\n\nfunction calculateScrollFrom(\n  container: HTMLElement,\n  scrollTo: number,\n  maxDistance = SCROLL_MAX_DISTANCE,\n  forceDirection?: FocusDirection,\n) {\n  const { scrollTop } = container;\n\n  if (forceDirection === undefined) {\n    const offset = scrollTo - scrollTop;\n\n    if (offset < -maxDistance) {\n      return scrollTop + (offset + maxDistance);\n    } else if (offset > maxDistance) {\n      return scrollTop + (offset - maxDistance);\n    }\n  } else if (forceDirection === FocusDirection.Up) {\n    return scrollTo + maxDistance;\n  } else if (forceDirection === FocusDirection.Down) {\n    return Math.max(0, scrollTo - maxDistance);\n  }\n\n  return scrollTop;\n}\n\nfunction shortTransition(t: number) {\n  return 1 - ((1 - t) ** 3.5);\n}\n\nfunction longTransition(t: number) {\n  return 1 - ((1 - t) ** 6);\n}\n","/* eslint-disable eqeqeq */\n/* eslint-disable prefer-template */\n/* eslint-disable prefer-const */\n/* eslint-disable prefer-destructuring */\n/* eslint-disable one-var */\n/* eslint-disable one-var-declaration-per-line */\n\nimport { preloadImage } from './files';\n\nconst LUMA_THRESHOLD = 128;\n\n/**\n * HEX > RGB\n * input: 'xxxxxx' (ex. 'ed15fa') case-insensitive\n * output: [r, g, b] ([0-255, 0-255, 0-255])\n */\nexport function hex2rgb(param: string): [number, number, number] {\n  return [\n    parseInt(param.substring(0, 2), 16),\n    parseInt(param.substring(2, 4), 16),\n    parseInt(param.substring(4, 6), 16),\n  ];\n}\n\n/**\n * RGB > HEX\n * input: [r, g, b] ([0-255, 0-255, 0-255])\n * output: 'xxxxxx' (ex. 'ff0000')\n */\nexport function rgb2hex(param: [number, number, number]) {\n  const p0 = param[0].toString(16);\n  const p1 = param[1].toString(16);\n  const p2 = param[2].toString(16);\n  return (p0.length == 1 ? '0' + p0 : p0) + (p1.length == 1 ? '0' + p1 : p1) + (p2.length == 1 ? '0' + p2 : p2);\n}\n\n/**\n * Converts an RGB color value to HSV. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes r, g, and b are contained in the set [0, 255] and\n * returns h, s, and v in the set [0, 1].\n *\n * @param   Number  r       The red color value\n * @param   Number  g       The green color value\n * @param   Number  b       The blue color value\n * @return  Array           The HSV representation\n */\nexport function rgb2hsb([r, g, b]: [number, number, number]): [number, number, number] {\n  r /= 255;\n  g /= 255;\n  b /= 255;\n\n  let max = Math.max(r, g, b), min = Math.min(r, g, b);\n  let h!: number, s: number, v: number = max;\n\n  let d = max - min;\n  s = max == 0 ? 0 : d / max;\n\n  if (max == min) {\n    h = 0; // achromatic\n  } else {\n    switch (max) {\n      case r:\n        h = (g - b) / d + (g < b ? 6 : 0);\n        break;\n      case g:\n        h = (b - r) / d + 2;\n        break;\n      case b:\n        h = (r - g) / d + 4;\n        break;\n    }\n\n    h /= 6;\n  }\n\n  return [h, s, v];\n}\n\n/**\n * Converts an HSV color value to RGB. Conversion formula\n * adapted from http://en.wikipedia.org/wiki/HSV_color_space.\n * Assumes h, s, and v are contained in the set [0, 1] and\n * returns r, g, and b in the set [0, 255].\n *\n * @param   Number  h       The hue\n * @param   Number  s       The saturation\n * @param   Number  v       The value\n * @return  Array           The RGB representation\n */\nexport function hsb2rgb([h, s, v]: [number, number, number]): [number, number, number] {\n  let r!: number, g!: number, b!: number;\n\n  let i = Math.floor(h * 6);\n  let f = h * 6 - i;\n  let p = v * (1 - s);\n  let q = v * (1 - f * s);\n  let t = v * (1 - (1 - f) * s);\n\n  switch (i % 6) {\n    case 0:\n      r = v;\n      g = t;\n      b = p;\n      break;\n    case 1:\n      r = q;\n      g = v;\n      b = p;\n      break;\n    case 2:\n      r = p;\n      g = v;\n      b = t;\n      break;\n    case 3:\n      r = p;\n      g = q;\n      b = v;\n      break;\n    case 4:\n      r = t;\n      g = p;\n      b = v;\n      break;\n    case 5:\n      r = v;\n      g = p;\n      b = q;\n      break;\n  }\n\n  return [\n    Math.round(r * 255),\n    Math.round(g * 255),\n    Math.round(b * 255),\n  ];\n}\n\nexport async function getAverageColor(url: string): Promise<[number, number, number]> {\n  // Only visit every 5 pixels\n  const blockSize = 5;\n  const defaultRGB: [number, number, number] = [0, 0, 0];\n  let data;\n  let width;\n  let height;\n  let i = -4;\n  let length;\n  let rgb: [number, number, number] = [0, 0, 0];\n  let count = 0;\n\n  const canvas = document.createElement('canvas');\n  const context = canvas.getContext && canvas.getContext('2d');\n  if (!context) {\n    return defaultRGB;\n  }\n\n  const image = await preloadImage(url);\n  height = image.naturalHeight || image.offsetHeight || image.height;\n  width = image.naturalWidth || image.offsetWidth || image.width;\n  canvas.height = height;\n  canvas.width = width;\n\n  context.drawImage(image, 0, 0);\n\n  try {\n    data = context.getImageData(0, 0, width, height);\n  } catch (e) {\n    return defaultRGB;\n  }\n\n  length = data.data.length;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((i += blockSize * 4) < length) {\n    if (data.data[i + 3] === 0) continue; // Ignore fully transparent pixels\n    ++count;\n    rgb[0] += data.data[i];\n    rgb[1] += data.data[i + 1];\n    rgb[2] += data.data[i + 2];\n  }\n\n  rgb[0] = Math.floor(rgb[0] / count);\n  rgb[1] = Math.floor(rgb[1] / count);\n  rgb[2] = Math.floor(rgb[2] / count);\n\n  return rgb;\n}\n\nexport function getColorLuma(rgbColor: [number, number, number]) {\n  const [r, g, b] = rgbColor;\n  const luma = 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  return luma;\n}\n\n// Function was adapted from https://github.com/telegramdesktop/tdesktop/blob/35ff621b5b52f7e3553fb0f990ea13ade7101b8e/Telegram/SourceFiles/data/data_wall_paper.cpp#L518\nexport function getPatternColor(rgbColor: [number, number, number]) {\n  let [hue, saturation, value] = rgb2hsb(rgbColor);\n\n  saturation = Math.min(1, saturation + 0.05 + 0.1 * (1 - saturation));\n  value = value > 0.5\n    ? Math.max(0, value * 0.65)\n    : Math.max(0, Math.min(1, 1 - value * 0.65));\n\n  return `hsla(${hue * 360}, ${saturation * 100}%, ${value * 100}%, .4)`;\n}\n\n/* eslint-disable no-bitwise */\nexport const convertToRGBA = (color: number): string => {\n  const alpha = (color >> 24) & 0xff;\n  const red = (color >> 16) & 0xff;\n  const green = (color >> 8) & 0xff;\n  const blue = color & 0xff;\n\n  const alphaFloat = alpha / 255;\n  return `rgba(${red}, ${green}, ${blue}, ${alphaFloat})`;\n};\n\nexport const numberToHexColor = (color: number): string => {\n  return `#${color.toString(16).padStart(6, '0')}`;\n};\n\nexport const getTextColor = (color: number): string => {\n  const r = (color >> 16) & 0xff;\n  const g = (color >> 8) & 0xff;\n  const b = color & 0xff;\n  const luma = getColorLuma([r, g, b]);\n  return luma > LUMA_THRESHOLD ? 'black' : 'white';\n};\n","import type { UniqueCustomPeer } from '../../types';\n\nexport const CUSTOM_PEER_PREMIUM: UniqueCustomPeer = {\n  isCustomPeer: true,\n  type: 'premium',\n  titleKey: 'PrivacyPremium',\n  subtitleKey: 'PrivacyPremiumText',\n  avatarIcon: 'star',\n  isAvatarSquare: true,\n  withPremiumGradient: true,\n};\n\nexport const CUSTOM_PEER_INCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'contacts',\n    titleKey: 'FilterContacts',\n    avatarIcon: 'user',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n  {\n    isCustomPeer: true,\n    type: 'nonContacts',\n    titleKey: 'FilterNonContacts',\n    avatarIcon: 'non-contacts',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'groups',\n    titleKey: 'FilterGroups',\n    avatarIcon: 'group',\n    isAvatarSquare: true,\n    peerColorId: 3,\n  },\n  {\n    isCustomPeer: true,\n    type: 'channels',\n    titleKey: 'FilterChannels',\n    avatarIcon: 'channel',\n    isAvatarSquare: true,\n    peerColorId: 1,\n  },\n  {\n    isCustomPeer: true,\n    type: 'bots',\n    titleKey: 'FilterBots',\n    avatarIcon: 'bots',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n];\n\nexport const CUSTOM_PEER_EXCLUDED_CHAT_TYPES: UniqueCustomPeer[] = [\n  {\n    isCustomPeer: true,\n    type: 'excludeMuted',\n    titleKey: 'FilterMuted',\n    avatarIcon: 'mute',\n    isAvatarSquare: true,\n    peerColorId: 6,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeRead',\n    titleKey: 'FilterRead',\n    avatarIcon: 'readchats',\n    isAvatarSquare: true,\n    peerColorId: 4,\n  },\n  {\n    isCustomPeer: true,\n    type: 'excludeArchived',\n    titleKey: 'FilterArchived',\n    avatarIcon: 'archive',\n    isAvatarSquare: true,\n    peerColorId: 5,\n  },\n];\n\nexport const CUSTOM_PEER_HIDDEN: UniqueCustomPeer<'hidden'> = {\n  isCustomPeer: true,\n  type: 'hidden',\n  titleKey: 'StarsTransactionHidden',\n  avatarIcon: 'author-hidden',\n  peerColorId: 4,\n};\n","export default function getOffsetToContainer(element: HTMLElement, container: HTMLElement) {\n  let offsetTop = 0;\n  let offsetLeft = 0;\n\n  let current: HTMLElement | null = element;\n\n  while (current && current !== container && !current.contains(container)) {\n    offsetTop += current.offsetTop;\n    offsetLeft += current.offsetLeft;\n\n    current = current.offsetParent as HTMLElement;\n  }\n\n  return { top: offsetTop, left: offsetLeft };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"YmM5biTv\",\"header\":\"S7WFT2bv\",\"pickerCategoryTitle\":\"YK1300x2\",\"peerChip\":\"gsKPBPoK\",\"pickerList\":\"yLCbiItq\",\"padded\":\"bXzIGw8s\",\"noResults\":\"dXWKD0ve\",\"onlineStatus\":\"d5GDOYh9\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O9uCTt5C\",\"animated-icon\":\"HiI6SMxF\",\"animatedIcon\":\"HiI6SMxF\",\"effect\":\"NhFcTGja\",\"animating\":\"ikfZ6Igz\",\"withEffectOnly\":\"jjRJmHCg\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"gXO57D98\",\"chosen\":\"VXSJn0Sm\",\"paid\":\"N3lcrsh8\",\"animated-emoji\":\"lFjoRm_p\",\"animatedEmoji\":\"lFjoRm_p\",\"tag\":\"Dr889Kzc\",\"tail\":\"cUfY1b26\",\"is-safari\":\"rxxUijuG\",\"isSafari\":\"rxxUijuG\",\"tail-fill\":\"y591o4fN\",\"tailFill\":\"y591o4fN\",\"tag-text\":\"ly7cruxF\",\"tagText\":\"ly7cruxF\",\"counter\":\"P2FqNJAi\",\"disabled\":\"NRtGofbf\",\"paidCounter\":\"CW4UO1n3\"};"],"names":["scheduledAnimationsCounter","resetCounterOnTickEnd","throttleWithTickEnd","memo","AnimatedCounter","text","className","isDisabled","ref","isRtl","useLang","prevText","usePreviousDeprecated","forceUpdate","useForceUpdate","shouldAnimate","selectCanAnimateInterface","getGlobal","undefined","characters","useMemo","elements","textLength","length","prevTextLength","i","charIndex","prevTextCharIndex","unshift","React","createElement","renderAnimatedCharacters","useEffect","timeoutId","window","setTimeout","clearTimeout","buildClassName","dir","props","sticker","noLoad","forcePreview","otherProps","thumbDataUri","thumbnail","dataUri","localMediaHash","getStickerMediaHash","previewBlobUrl","useMedia","ApiMediaFormat","BlobUrl","tgsUrl","AnimatedIconWithPreview","_extends","previewUrl","loadedPreviewUrls","Set","isThumbOpen","unmarkThumbOpen","useFlag","Boolean","thumbClassNames","useMediaTransitionDeprecated","isPreviewOpen","markPreviewOpen","unmarkPreviewOpen","has","previewClassNames","isAnimationReady","markAnimationReady","handlePreviewLoad","useLastCallback","add","handleAnimationReady","size","style","buildStyle","src","styles","draggable","onLoad","AnimatedIcon","AvatarList","peers","limit","badgeText","lang","useOldLang","pxSize","AVATAR_SIZES","renderingBadgeText","slice","map","peer","Avatar","withGlobal","global","chat","isSavedDialog","isPrivateChat","isUserId","id","isChatWithSelf","selectIsChatWithSelf","user","selectUser","getPrivateChatUserId","isBot","isUserBot","isSupport","canDeleteForAll","contactName","getUserFirstOrLastName","isChannel","isChatChannel","isBasicGroup","isChatBasicGroup","isSuperGroup","isChatSuperGroup","currentUserId","DeleteChatModal","isOpen","onClose","onCloseAnimationEnd","leaveChannel","deleteHistory","deleteSavedHistory","deleteChannel","deleteChatUser","blockUser","getActions","chatTitle","getChatTitle","handleDeleteForAll","useCallback","chatId","shouldDeleteForAll","handleDeleteAndStop","userId","handleDeleteChat","isCreator","handleLeaveChat","Modal","header","isSavedMessages","renderText","Button","color","isText","onClick","DotAnimation","content","LastMessageMeta","message","outgoingStatus","draftDate","shouldUseDraft","date","MessageOutgoingStatus","status","formatPastTimeShort","MediaSpoiler","isVisible","withAnimation","width","height","useRef","shouldRender","transitionClassNames","useShowTransitionDeprecated","canvasRef","useCanvasBlur","handleClick","e","current","el","rect","currentTarget","getBoundingClientRect","x","clientX","left","y","clientY","top","shiftX","shiftY","requestMutation","setAttribute","Keys","Transition","name","activeKey","Icon","PasswordForm","isLoading","isPasswordVisible","error","hint","placeholder","submitLabel","description","shouldShowSubmit","shouldResetValue","shouldDisablePasswordManager","noRipple","clearError","onChangePasswordVisibility","onInputChange","onSubmit","inputRef","isMobile","useAppLayout","password","setPassword","useState","canSubmit","setCanSubmit","focusDelayTimeoutMs","useTimeout","IS_TOUCH_ENV","focus","select","action","event","preventDefault","stopEvent","autoComplete","type","tabIndex","value","onChange","target","MIN_PASSWORD_LENGTH","maxLength","role","title","ripple","disabled","peerId","forceShowSelf","selectPeer","isSelf","PeerChip","icon","isMinimized","canClose","isCloseNonDestructive","clickArg","mockPeer","customPeer","withPeerColors","withEmojiStatus","itemClassName","apiPeer","anyPeer","isApiPeerChat","iconElement","titleElement","titleText","getPeerTitle","FullNameTitle","fullClassName","isForum","isAvatarSquare","getPeerColorClass","PremiumProgress","leftText","rightText","floatingBadgeText","floatingBadgeIcon","progress","isPrimary","floatingBadgeRef","parentContainerRef","setShiftX","tailPosition","setTailPosition","updateBadgePosition","badgeWidth","offsetWidth","parentWidth","minShift","maxShift","currentShift","safeShift","Math","max","min","newTailPosition","useResizeObserver","hasFloatingBadge","isProgressFull","viewBox","fill","d","TopicIcon","topic","letterClassName","noLoopLimit","observeIntersection","iconEmojiId","CustomEmoji","documentId","observeIntersectionForPlaying","loopLimit","TopicDefaultIcon","iconColor","topicId","typingStatus","typingUser","TypingStatus","typingUserName","replace","emoji","trim","COLORS","red","blue","COLOR_KEYS","Object","keys","theme","selectTheme","GiftRibbon","validSvgRandomId","useUniqueId","colorKey","gradientColor","startColor","endColor","root","ribbon","x1","y1","x2","y2","gradientUnits","offset","getStickerFromGift","gift","attributes","find","attr","getTotalGiftAvailability","availabilityTotal","totalCount","getGiftAttributes","model","backdrop","pattern","originalDetails","getGiftAttributesFromList","VERIFIED_PRIORITY_BASE","PINNED_PRIORITY_BASE","sortChatIds","chatIds","shouldPrioritizeVerified","priorityIds","orderBy","Infinity","selectChat","priority","lastMessage","selectChatLastMessage","isVerified","includes","Date","now","indexOf","ITEM_CLASS_NAME","PeerPicker","categories","itemIds","categoryPlaceholderKey","filterValue","filterPlaceholder","notFoundText","searchInputId","noScrollRestore","isSearchable","lockedUnselectedSubtitle","isViewOnly","itemInputType","withStatus","withPeerTypes","withDefaultPadding","onFilterChange","onDisabledClick","onLoadMore","optionalProps","allowMultiple","lockedSelectedIds","lockedUnselectedIds","selectedCategories","selectedCategory","MEMO_EMPTY_ARRAY","selectedIds","selectedId","shouldMinimize","requestMeasure","lockedSelectedIdsSet","lockedUnselectedIdsSet","unlockedSelectedIds","filter","categoriesByType","buildCollectionByKey","sortedItemIds","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","forEach","push","concat","handleItemClick","categoryType","newSelectedCategories","splice","onSelectedCategoriesChange","newSelectedIds","onSelectedIdsChange","onSelectedCategoryChange","onSelectedIdChange","handleFilterChange","viewportIds","getMore","useInfiniteScroll","renderItem","isCategory","category","peerOrCategory","DEBUG","key","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","subtitle","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","onlineStatus","langKey","getPeerTypeKey","getSubtitle","PickerItem","avatarElement","inactive","inputElement","Radio","checked","onlyInput","Checkbox","inputPosition","beforeChildren","pickerCategoryTitle","container","peerChip","InputText","InfiniteScroll","pickerList","padded","items","itemSelector","Loading","noResults","titleClassName","isClickable","RippleEffect","IS_IOS","RadialPatternBackground","backgroundColors","patternColor","patternIcon","clearBottomSector","containerRef","getContainerSize","setContainerSize","useSignal","dpr","useDevicePixelRatio","emojiImage","setEmojiImage","previewMediaHash","preloadImage","then","patternPositions","coordinates","ring","ringItemCount","floor","ringProgress","ringRadius","angleShift","PI","angle","cos","sin","sizeFactor","random","entry","contentRect","clientWidth","clientHeight","draw","canvas","ctx","getContext","save","centerShift","renderX","renderY","drawImage","restore","fillStyle","globalCompositeOperation","fillRect","radialGradient","createRadialGradient","addColorStop","maxSide","CustomEmojiEffect","reaction","isLottie","particleSize","onEnded","stickerHash","getStickerHashById","previewMediaData","paths","IS_OFFSET_PATH_SUPPORTED","Array","from","generateRandomDropPath","path","withSharedAnimation","onAnimationEnd","alt","ICON_SIZE","REM","EFFECT_SIZE","MIN_PARTICLE_SIZE","containerId","genericEmojiEffects","reactions","activeReactions","selectTabState","withEffects","selectPerformanceSettingsValue","availableReactions","genericEffects","ReactionAnimatedEmoji","effectSize","withEffectOnly","shouldPause","shouldLoop","stopActiveReaction","isCustom","availableReaction","r","isSameReaction","centerIconId","centerIcon","customEmoji","useCustomEmoji","assignedEffectId","aroundAnimation","assignedId","available","emoticon","effectId","stickers","isIntersecting","useIsIntersecting","mediaHashCenterIcon","mediaHashEffect","mediaDataCenterIcon","mediaDataEffect","activeReaction","active","shouldPlayEffect","shouldPlayCenter","shouldRenderEffect","animationClassNames","shouldRenderCenter","centerAnimationClassNames","handleEnded","isAnimationLoaded","markAnimationLoaded","unmarkAnimationLoaded","shouldShowStatic","shouldRenderStatic","staticClassNames","rootClassName","animating","ReactionStaticEmoji","noPlay","noVideoOnMobile","forceAlways","AnimatedSticker","animatedIcon","roundToNearestEven","play","noLoop","Fragment","effect","withIconHeart","staticIconId","staticIcon","mediaHash","mediaData","shouldApplySizeFix","shouldReplaceWithHeartIcon","blankUrl","ChatFolderModal","useModuleLoader","Bundles","Extra","MuteChatModal","ChatCallStatus","isSelected","isActive","isPreview","previewMessageId","lastMessageId","selectChatLastMessageId","selectChatMessage","isOutgoing","forwardInfo","savedDialogSender","fromId","messageSender","selectSender","lastMessageSender","replyToMessageId","getMessageReplyInfo","replyToMsgId","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","currentChatId","threadId","currentThreadId","messageListType","selectCurrentMessageList","MAIN_THREAD_ID","isSelectedForum","forumPanelChatId","lastMessageTopic","selectTopicFromMessage","selectThreadParam","topicsInfo","selectTopicsInfo","storyData","lastMessageStory","selectPeerStory","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","draft","selectDraft","isForumPanelOpen","selectIsForumPanelOpen","canScrollDown","canChangeFolder","chatFolders","orderedIds","lastMessageOutgoingStatus","selectOutgoingStatus","withInterfaceAnimations","listedTopicIds","topics","topicsById","isSynced","Chat","folderId","orderDiff","animationType","isPinned","offsetTop","onDragEnter","openChat","openSavedDialog","toggleChatInfo","focusLastMessage","focusMessage","loadTopics","openForumPanel","closeForumPanel","setShouldCloseRightColumn","reportMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","isForumAsMessages","useEnsureMessage","renderSubtitle","useChatListEntry","statefulMediaContent","groupStatetefulContent","story","getIsForumPanelClosed","useSelectorSignal","selectIsForumPanelClosed","noForumTopicPanel","messageId","forceOnHeavyAnimation","force","shouldReplaceHistory","handleDragEnter","handleDelete","handleMute","handleChatFolderChange","handleReport","messageIds","contextActions","useChatContextActions","isOnline","hasShownClass","isAvatarOnlineShown","href","IS_OPEN_IN_NEW_TAB_SUPPORTED","createLocationHash","chatClassName","ListItem","withPortalForMenu","withStory","withStoryGap","subscriptionUntil","storyViewerOrigin","StoryViewerOrigin","ChatList","storyViewerMode","StarIcon","ChatBadge","shouldShowOnlyMostImportant","forceHidden","isCallActive","isCallNotEmpty","hasMiniApp","hasMainMiniApp","wasTopicOpened","requestMainWebView","oldLang","unreadMentionsCount","unreadReactionsCount","isTopicUnopened","topicsWithUnread","values","unreadCount","acc","shouldBeMuted","hasUnmutedUnreadTopics","some","hasUnreadMark","isShown","useDerivedState","isSignal","isUnread","handleOpenApp","stopPropagation","extractCurrentThemeParams","botId","shouldMarkBotTrusted","ShowTransition","unreadReactionsElement","unreadMentionsElement","unopenedTopicElement","unreadCountElement","formatIntegerCompact","pinnedElement","miniAppButton","pill","visiblePinnedElement","renderContent","FOLDER_ICONS","byId","chatFoldersById","orderedFolderIds","invites","folderInvitesById","chats","listIds","archived","stories","orderedPeerIds","archivedStories","activeSessions","byHash","sessions","archiveSettings","shouldSkipHistoryAnimations","activeChatFolder","storyViewer","isRibbonShown","isStoryRibbonShown","hasArchivedChats","hasArchivedStories","maxFolders","selectCurrentLimit","maxFolderInvites","maxChatLists","ChatFolders","foldersDispatch","onSettingsScreenSelect","onLeftColumnContentChange","shouldHideFolderTabs","loadChatFolders","setActiveChatFolder","openShareChatFolderModal","openDeleteChatFolderModal","openEditChatFolder","openLimitReachedModal","transitionRef","shouldRenderStoryRibbon","getIsClosing","getIsStoryRibbonClosing","useShowTransition","withShouldRender","allChatsFolder","ALL_FOLDER_ID","includedChatIds","excludedChatIds","displayedFolders","allChatsFolderIndex","findIndex","folder","isInAllChatsFolder","isInFirstFolder","folderCountersById","useFolderManagerForUnreadCounters","folderTabs","isBlocked","selectCanShareFolder","handler","reduce","isChatList","destructive","entities","getEmojiPrefix","removeEmojiPrefix","renderTextWithEntities","noCustomEmojiPlayback","noTitleAnimations","badgeCount","chatsCount","isBadgeActive","notificationsCount","handleSwitchTab","index","captureEvents","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Left","Right","isNotInFirstFolderRef","captureEscKeyListener","useHistoryBack","onBack","handleKeyDown","ctrlKey","shiftKey","code","startsWith","digit","match","Number","document","addEventListener","removeEventListener","placeholderRef","shouldRenderPlaceholder","noMountTransition","renderCurrentTab","activeFolder","isFolder","folderType","canDisplayArchive","isHidden","shouldRenderFolders","body","classList","toggle","TabList","contextRootElementSelector","tabs","activeTab","onSwitchTab","renderCount","ARCHIVE_CUSTOM_PEER","isCustomPeer","avatarIcon","customPeerAvatarColor","Archive","updateArchiveSettings","orderedChatIds","useFolderManagerForOrderedIds","ARCHIVED_FOLDER_ID","unreadCounters","archiveUnreadCount","previewItems","chatsById","arr","isLast","unread","actionMinimize","actionExpand","actionHide","compact","minimized","buttonClassName","button","info","Badge","avatarWrapper","chatsPreview","chatFolder","selectChatFolder","animatedEmoji","selectAnimatedEmoji","EmptyFolder","handleEditFolder","payload","SettingsScreens","FoldersEditFolderFromChatList","AnimatedIconFromSticker","fluid","UnconfirmedSession","onHeightChange","changeSessionSettings","terminateAuthorization","showNotification","borderBoxSize","blockSize","firstUnconfirmed","sort","a","b","dateCreated","session","isUnconfirmed","locationString","deviceModel","region","country","join","handleAccept","hash","isConfirmed","handleReject","RESERVED_HOTKEYS","openNextChat","toggleStoryRibbon","shouldIgnoreDragRef","unconfirmedSessionHeight","setUnconfirmedSessionHeight","isArchived","isAllFolder","isSaved","resolvedFolderId","SAVED_FOLDER_ID","shouldDisplayArchive","usePeerStoriesPolling","chatsHeight","CHAT_HEIGHT_PX","archiveHeight","ARCHIVE_MINIMIZED_HEIGHT","orderDiffById","getAnimationType","useOrderDiff","CHAT_LIST_SLICE","shouldShowUnconfirmedSessions","sessionsArray","isCurrent","getServerTime","FRESH_AUTH_PERIOD","useHotkeys","targetIndexDelta","IS_APP","IS_MAC_OS","metaKey","isArchiveInList","shift","position","LeftColumnContent","Archived","observe","useIntersectionObserver","rootRef","throttleMs","handleArchivedClick","handleArchivedDragEnter","useDebouncedCallback","handleDragLeave","renderedOverflowTrigger","onOverscroll","onReset","overscrollTriggerRef","isTriggerJustEnabled","lastScrollTopRef","isTriggerEnabledRef","lastIsOnTopRef","lastScrollAtRef","isReturningOverscrollRef","enableOverscrollTrigger","noScrollInertiaStop","display","scrollTop","IS_SAFARI","stopScrollInertia","disableOverscrollTrigger","handleScroll","newScrollTop","isMovingDown","isMovingUp","isOnTop","lastEventDelay","forceMutation","handleWheel","scrollHeight","offsetHeight","deltaY","passive","useTopOverscroll","preloadBackwards","withAbsolutePositioning","maxHeight","onDragLeave","viewportOffset","pinnedCount","getPinnedChatsCount","teactOrderKey","getOrderKey","renderChats","ChatAnimationTypes","useChatAnimationType","orderDiffs","numberOfUp","diff","numberOfDown","None","Opacity","Move","NO_CORNER_THRESHOLD","ChatForumLastMessage","renderLastMessage","openThread","lastMessageRef","mainColumnRef","lastActiveTopic","otherTopics","getOrderedTopics","isReversedCorner","setIsReversedCorner","overwrittenWidth","setOverwrittenWidth","handleOpenTopicClick","handleMouseDown","handleOpenTopicMouseDown","useFastClick","getIsMobile","lastMessageElement","mainColumnElement","lastMessageWidth","mainColumnWidth","abs","onMouseDown","ANIMATION_DURATION","isTopic","isAction","isActionMessage","shouldTryLoadingStory","useEnsureStory","mediaContent","mediaHasPreview","getMessageSticker","mediaThumbnail","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","actionTargetUsers","usersById","users","renderLastMessageOrTyping","timestamp","isDraftReplyToTopic","replyInfo","isEmptyLocalReply","isLocal","isSimple","withTranslucentThumbs","isExpiredMessage","getExpiredMessageDescription","renderActionMessageText","isEmbedded","senderName","getMessageSenderName","blobUrl","messageSummary","MessageSummary","noEmoji","observeIntersectionForLoading","inChatList","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","useLayoutEffect","element","opacity","transform","remove","ANIMATION_END_DELAY","orderById","prevOrderById","prevChatId","mapValues","order","ActionMessageSuggestedAvatar","openMediaViewer","uploadProfilePhoto","cropModalBlob","setCropModalBlob","isVideoModalOpen","openVideoModal","closeVideoModal","photo","suggestedPhotoUrl","getPhotoMediaHash","suggestedVideoUrl","getVideoProfilePhotoMediaHash","isVideo","showAvatarNotification","screen","Main","actionText","handleSetSuggestedAvatar","file","handleCloseCropModal","handleSetVideo","async","blob","fetchBlob","File","videoTs","videoSizes","l","videoStartTs","origin","MediaViewerOrigin","SuggestedAvatar","loopIndefinitely","withVideo","CropModal","ConfirmDialog","confirmHandler","textParts","ActionMessageUpdatedAvatar","handleViewUpdatedAvatar","SimilarChannel","channel","fallbackColor","setColor","imgBlobUrl","getChatAvatarHash","averageColor","getAverageColor","rgb2hex","useAverageColor","membersCount","MoreChannels","channelsCount","isCurrentUserPremium","openPremiumModal","openChatWithInfo","profileTab","forceScrollProfileTab","similarChannelIds","shouldShowInChat","count","selectSimilarChannelIds","selectIsCurrentUserPremium","SimilarChannels","toggleChannelRecommendations","loadChannelRecommendations","isShowing","markShowing","markNotShowing","isHiding","markHiding","markNotHiding","similarChannels","shoulRenderSkeleton","setShoulRenderSkeleton","firstSimilarChannels","areSimilarChannelsPresent","useHorizontalScroll","shouldRenderChannels","handleToggle","Skeleton","xmlns","SHOW_CHANNELS_NUMBER","senderId","targetMessageId","targetMessage","settings","themes","isFocused","selectIsMessageFocused","focusDirection","noHighlight","noFocusHighlight","focusedMessage","senderUser","senderChat","targetChat","giftDuration","months","premiumGiftSticker","selectGiftStickerForDuration","starCount","stars","starsGiftSticker","selectGiftStickerForStars","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","ActionMessage","appearanceOrder","isJustAdded","isLastInList","isInsideTopic","memoFirstUnreadIdRef","observeIntersectionForReading","onIntersectPinnedMessage","requestConfetti","checkGiftCode","getReceipt","openGiftInfoModalFromMessage","openPrizeStarsTransactionFromGiveaway","useOnIntersect","useFocusMessage","elementRef","useUnmountCleanup","viewportPinnedIdsToRemove","noAppearanceAnimation","markShown","isPremiumGift","isGiftCode","isSuggestedAvatar","isUpdatedAvatar","isJoinedMessage","isJoinedChannelMessage","isStarsGift","isStarGift","isStarGiftUnique","isPrizeStars","withServiceReactions","areReactionsPossible","useMessageResizeObserver","shouldShowConfettiRef","withStars","targetUsers","isContextMenuOpen","contextMenuAnchor","handleBeforeContextMenu","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isContextMenuShown","handleStarGiftClick","starGift","handlePremiumGiftClick","isGift","fromUserId","toUserId","monthsAmount","handlePrizeStarsClick","handleGiftCodeClick","slug","renderStarGiftUserCaption","fromPeer","targetPeer","getMessageHtmlId","preventMessageInputBlur","onContextMenu","giftMessage","nonInteractive","Sparkles","preset","renderGift","isFromGiveaway","isGiveaway","isUnclaimed","renderGiftCode","formatInteger","targetChatTitle","starGiftMessage","amountToConvert","starsToConvert","savedId","isUpgraded","withNodes","pluralValue","canUpgrade","isConverted","amount","withMarkdown","renderStarGiftUserDescription","alreadyPaidUpgradeStars","renderStarGift","centerColor","edgeColor","adaptedPatternColor","textColor","number","renderStarGiftUnique","renderPrizeStars","ContextMenuContainer","anchor","Reactions","isOutside","BOTTOM_FOCUS_OFFSET","RELOCATED_FOCUS_OFFSET","SCROLL_MAX_DISTANCE","FOCUS_MARGIN","isResizingContainer","isQuote","scrollTargetPosition","isRelocatedRef","isRelocated","messagesContainer","closest","isToBottom","scrollPosition","exec","maxDistance","result","animateScroll","margin","forceDirection","forceNormalContainerHeight","shouldReturnMutationFn","firstQuote","querySelector","addExtraClass","requestForcedReflow","MAX_EFFECT_COUNT","IS_ANDROID","QUALITY","PaidReactionEmoji","localAmount","effectRef","effectsIds","setEffectsIds","canAddMoreEffects","useEffectWithPrevDeps","prevLocalAmount","prev","newEffectsIds","teactFastList","LOCAL_TGS_URLS","StarReactionEffect","quality","REACTION_SIZE","selectStarsState","ReactionButton","isOwnMessage","recentReactors","chosenClassName","onPaidClick","openStarsBalanceModal","resetLocalPaidReactions","openPaidReactionModal","requestWave","counterRef","animationRef","isPaid","starsState","useSelector","areStarsLoaded","handlePaidClick","prevReaction","balance","originReaction","startX","startY","currentScale","getComputedStyle","scale","cancel","animate","duration","easing","prevAmount","usePrevious","shouldRenderPaidCounter","own","paid","isReactionChosen","chosen","paidCounter","counter","maxWidth","metaChildren","noRecentReactors","tags","toggleReaction","addLocalPaidReaction","updateMiddleSearch","performMiddleSearch","results","areTags","recentReactions","recentReactorsByReactionKey","recentReaction","getReactionKey","messageKey","getMessageKey","reactionKey","shouldHideRecentReactors","tag","isChosen","update","savedTag","initialSection","paidLocalCount","localId","cacheBreaker","toString","dismissAction","shouldShowTimer","disableClickDismiss","handleRemoveReaction","useEffectOnce","SavedTagButton","withContextMenu","onRemove","PromptDialog","submitText","initialValue","setText","handleTextChange","handleSubmit","isSlim","teactExperimentControlled","withCount","editSavedReactionTag","menuRef","isRenamePromptOpen","openRenamePrompt","closeRenamePrompt","hasText","handleRemoveClick","handleRenameTag","newTitle","getTriggerElement","getRootElement","getMenuElement","getLayout","withPortal","shouldAvoidNegativePosition","tagText","tail","tailFill","Menu","autoClose","MenuItem","getRequestInputInvoice","inputInvoice","shouldHideName","giftId","shouldUpgrade","currency","purpose","userIds","boostChannelId","option","boostChannel","additionalChannelIds","untilDate","areWinnersVisible","countries","isOnlyForNewSubscribers","prizeDescription","additionalChannels","inputSavedGift","shouldKeepOriginalDetails","savedGift","getRequestInputSavedStarGift","inputGift","buildStarsTransactionCustomPeer","titleKey","subtitleKey","peerColorId","withPremiumGradient","formatStarsTransactionAmount","starsAmount","nanos","formatStarsAmount","getStarsTransactionFromGift","transactionId","isMyGift","getPrizeStarsTransactionFromGiveaway","giveawayPostId","areInputSavedGiftsEqual","one","two","arePropsShallowEqual","isApiPeerUser","SERVICE_NOTIFICATIONS_USER_ID","isContact","POLLING_INTERVAL","PEER_LAST_POLLING_TIME","Map","PEER_ID_QUEUE","loadFromQueue","throttle","queue","queueToLoad","otherQueue","LIMIT_PER_REQUEST","loadStoriesMaxIds","peerIds","set","ids","pollablePeerIds","lastPollingTime","get","isStatusAvailable","isRestricted","INCLUDE_FILTER_FIELDS","EXCLUDE_FILTER_FIELDS","selectChatFilters","state","mode","selectTemp","selectedChatIds","selectedChatTypes","includeFilters","pick","excludeFilters","getSuggestedFolderName","filters","bots","groups","channels","contacts","nonContacts","INITIAL_STATE","chatFilter","EMOJI_REGEX","lastIndex","foldersReducer","prefix","isTouched","omit","useFoldersReducer","useReducer","callback","delay","savedCallback","RADIUS","ITERATIONS","withRaf","radius","preferredWidth","preferredHeight","isStarted","useSyncEffect","img","Image","processBlur","alpha","IS_CANVAS_FILTER_SUPPORTED","fastBlur","onload","isInSearch","isServiceNotifications","deleteTitle","getCanDeleteChat","toggleChatPinned","toggleSavedDialogPinned","updateChatMutedState","toggleChatArchived","toggleChatUnread","openChatInNewTab","actionOpenInNewTab","IS_ELECTRON","togglePinned","actionPin","actionDelete","actionAddToFolder","actionMute","actionMaskAsRead","actionMarkAsUnread","actionArchive","isChatArchived","actionReport","isChatGroup","isInFolder","replyOriginForId","loadMessage","storyId","loadPeerStoriesByIds","loadStoryThrottled","throttled","storyIds","addOrderedIdsCallback","getOrderedIds","addUnreadCountersCallback","getUnreadCounters","useFolderManagerForChatsCount","addChatsCountCallback","getChatsCount","shouldPreventDefault","shouldStopPropagation","isStuck","deltaX","scrollLeft","scrollWidth","IGNORE_TAGS","handlers","createCallbackManager","hotkeys","entries","addCallback","HTMLElement","tagName","shouldFireEvent","hotkey","ctrl","meta","mod","altKey","pressedKey","toLowerCase","isExactHotkey","split","part","modifiers","reservedKeys","parseHotkey","getHotkeyMatcher","documentElement","runCallbacks","prevRef","lastRef","reducer","initialState","reducerRef","dispatch","shouldFocusOnResize","messageHeightRef","handleResize","lastHeight","newHeight","isAnimatingScroll","beginHeavyAnimation","resizeDiff","round","throttledResize","useThrottledCallback","DEFAULT_DURATION","stopById","animateHorizontalScroll","getAttribute","containerWidth","dataset","scrollId","remainingPath","Promise","resolve","isStopped","scrollSnapType","startAt","t","currentPath","transition","delete","currentArgs","onHeavyAnimationEnd","isAnimating","args","mutate","createMutateFunction","restartCurrentScrollAnimation","cancelSingleAnimation","forceDuration","FocusDirection","Static","elementHeight","currentScrollTop","containerHeight","elementTop","getOffsetToContainer","targetContainerHeight","normalHeight","scrollTo","scrollFrom","Up","Down","calculateScrollFrom","absPath","SCROLL_SHORT_TRANSITION_MAX_DISTANCE","shortTransition","longTransition","SCROLL_MIN_DURATION","SCROLL_MAX_DURATION","prevOnHeavyAnimationEnd","animateSingle","cancelScrollBlockingAnimation","hex2rgb","param","parseInt","substring","p0","p1","p2","rgb2hsb","g","h","s","v","hsb2rgb","f","p","q","url","defaultRGB","data","rgb","context","image","naturalHeight","naturalWidth","getImageData","getColorLuma","rgbColor","getPatternColor","hue","saturation","convertToRGBA","getTextColor","CUSTOM_PEER_PREMIUM","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","CUSTOM_PEER_HIDDEN","offsetLeft","contains","offsetParent"],"sourceRoot":""}