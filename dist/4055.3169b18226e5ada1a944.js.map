{"version":3,"file":"4055.3169b18226e5ada1a944.js","mappings":"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AwB04B,EAAAA,IAClEC,cAAcF,EAAAA,EAAAA,GAAmBz4B,EAAQ,iBACzCsqB,uBACA2J,wBACApF,mBAAoB7uB,EAAO6uB,mBAC3BsF,WACAJ,qBACA6E,sBAAsBC,EAAAA,EAAAA,KAA2B74B,GACjD84B,eAAgBxO,KAAyByO,EAAAA,EAAAA,KAA+B/4B,GACxEg5B,uBAAuBC,EAAAA,EAAAA,KAA4Bj5B,GACnDk5B,qBAAsB3P,GAAkBoI,IAAmBD,IAAkBuD,EAC7ExT,uBAAwBzhB,EAAOuyB,SAASC,MAAM/Q,uBAC9CgT,oBACA0E,YAAan5B,EAAOo5B,QAAQD,YAC5BvE,eACAyE,mBAAoBr5B,EAAOs5B,aAAaC,aACxCD,aAAct5B,EAAOs5B,aAAap3B,KAClCgzB,sBACAvG,YACAI,gBAAgBxuB,EAAAA,EAAAA,KAAeP,GAAQ+uB,eACvCyK,wBAAyB3H,GAAc2H,wBACvC9D,UACAE,mBACAT,sBACAE,gBACAE,oBACAO,oBACD,GAvJe/1B,EAxvDwB05B,EAC1C9b,OACAwY,gBACAuD,gBACAzE,oBACAoB,yBACAsD,UACAxyB,WACAyyB,aACAC,UACAC,SACA/X,iBACA9hB,UACA6gB,YACAwQ,WACAyC,sBACAtM,mBACAkB,SACAzoB,QACA6xB,gBACA6C,gBACAZ,2BACA1J,wBACA2J,yBACAvC,iBACAnI,kBACAgN,aACAiC,iBACAhC,sBACAE,sBACAkC,wBACAnQ,gBACAuO,aACApE,wBACAkE,0BACAiD,oBACAnD,uBACAK,oBACAG,uBACAE,mBACA7M,iBACAqI,eACA6F,gBACAlB,wBACArF,yBACAC,4BACAI,qBACAC,iBACAgF,gBACAE,cACAE,sBACAE,eACA1E,cACAC,cACAN,YACAmB,gBACAZ,kBACAE,uBACAyE,iBACA7W,cACAgX,sBACAzJ,sBACAlqB,SACAwvB,YACA7B,+BACA0H,4BACAC,mBACAC,WACA/4B,aACA80B,sBACAC,gBACA4C,iBACAE,yBACAvX,0BACAgT,qBACA0E,eACAD,uBACAG,sBACAC,gBACApE,uBACAiF,aACApL,kBACAJ,aACA6K,2BACA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","sources":["webpack://telegram-t/./src/components/calls/group/GroupCallTopPane.tsx","webpack://telegram-t/./src/components/common/Audio.tsx","webpack://telegram-t/./src/components/common/helpers/waveform.ts","webpack://telegram-t/./src/util/waveform.ts","webpack://telegram-t/./src/components/middle/composer/helpers/applyIosAutoCapitalizationFix.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useChatCommandTooltip.ts","webpack://telegram-t/./src/lib/cleanDocsHtml.ts","webpack://telegram-t/./src/components/middle/composer/helpers/cleanHtml.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useClipboardPaste.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useDraft.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEditing.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInlineBotTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useStickerTooltip.ts","webpack://telegram-t/./src/util/voiceRecording.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/AttachMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/BotKeyboardMenu.tsx","webpack://telegram-t/./src/components/middle/composer/BotMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/ComposerEmbeddedMessage.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.async.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.async.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/WebPagePreview.tsx","webpack://telegram-t/./src/components/common/Composer.tsx","webpack://telegram-t/./src/components/middle/composer/hooks/useAttachmentModal.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useVoiceRecording.ts","webpack://telegram-t/./src/util/deleteLastCharacterOutsideSelection.ts","webpack://telegram-t/./src/components/common/Document.tsx","webpack://telegram-t/./src/components/common/File.tsx","webpack://telegram-t/./src/components/common/GradientWallpaper.tsx","webpack://telegram-t/./src/components/common/GroupChatInfo.tsx","webpack://telegram-t/./src/components/common/LinkField.module.scss?fa18","webpack://telegram-t/./src/components/common/LinkField.tsx","webpack://telegram-t/./src/components/common/Media.tsx","webpack://telegram-t/./src/components/common/NothingFound.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.tsx","webpack://telegram-t/./src/components/common/PeerColorWrapper.module.scss?b340","webpack://telegram-t/./src/components/common/PrivateChatInfo.tsx","webpack://telegram-t/./src/components/common/ProfilePhoto.tsx","webpack://telegram-t/./src/components/common/ProfileInfo.module.scss?701a","webpack://telegram-t/./src/components/common/ProfileInfo.tsx","webpack://telegram-t/./src/components/common/hooks/usePhotosPreload.ts","webpack://telegram-t/./src/components/common/WebLink.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedMessage.tsx","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.module.scss?aa76","webpack://telegram-t/./src/components/common/embedded/EmojiIconBackground.tsx","webpack://telegram-t/./src/components/common/helpers/boostInfo.ts","webpack://telegram-t/./src/components/common/helpers/formatUsername.ts","webpack://telegram-t/./src/components/common/helpers/renderMessageText.ts","webpack://telegram-t/./src/util/dates/workHours.ts","webpack://telegram-t/./src/components/common/profile/BusinessHours.module.scss?06fd","webpack://telegram-t/./src/components/common/profile/BusinessHours.tsx","webpack://telegram-t/./src/components/common/profile/UserBirthday.module.scss?dc99","webpack://telegram-t/./src/components/common/profile/UserBirthday.tsx","webpack://telegram-t/./src/components/common/profile/ChatExtra.module.scss?9412","webpack://telegram-t/./src/components/common/profile/ChatExtra.tsx","webpack://telegram-t/./src/components/left/main/EmptyForum.module.scss?0a02","webpack://telegram-t/./src/components/left/main/EmptyForum.tsx","webpack://telegram-t/./src/components/left/main/Topic.module.scss?d97e","webpack://telegram-t/./src/components/left/main/Topic.tsx","webpack://telegram-t/./src/components/left/main/hooks/useTopicContextActions.ts","webpack://telegram-t/./src/components/left/main/ForumPanel.tsx","webpack://telegram-t/./src/components/left/main/ForumPanel.module.scss?d1a9","webpack://telegram-t/./src/components/left/main/hooks/useLeftHeaderButtonRtlForumTransition.ts","webpack://telegram-t/./src/components/left/search/helpers/getSenderName.ts","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.module.scss?fa7b","webpack://telegram-t/./src/components/main/visualEffects/SnapEffectContainer.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.async.tsx","webpack://telegram-t/./src/components/middle/HeaderActions.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.module.scss?7e9f","webpack://telegram-t/./src/components/middle/composer/AttachBotIcon.tsx","webpack://telegram-t/./src/components/middle/composer/AttachBotItem.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.async.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/DropTarget.tsx","webpack://telegram-t/./src/components/middle/composer/DropArea.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.async.tsx","webpack://telegram-t/./src/util/AbsoluteVideo.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useInputCustomEmojis.ts","webpack://telegram-t/./src/components/middle/composer/TextFormatter.async.tsx","webpack://telegram-t/./src/components/middle/composer/MessageInput.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.async.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuButton.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/buildAttachment.ts","webpack://telegram-t/./src/util/audio.ts","webpack://telegram-t/./src/components/middle/composer/helpers/getFilesFromDataTransferItems.ts","webpack://telegram-t/./src/components/middle/composer/helpers/prepareForRegExp.ts","webpack://telegram-t/./src/components/middle/composer/helpers/renderKeyboardButtonText.tsx","webpack://telegram-t/./src/components/middle/composer/helpers/selection.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useCustomEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useEmojiTooltip.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useMentionTooltip.ts","webpack://telegram-t/./src/components/middle/hooks/useHeaderPane.tsx","webpack://telegram-t/./src/components/middle/message/BaseStory.module.scss?d118","webpack://telegram-t/./src/components/middle/message/BaseStory.tsx","webpack://telegram-t/./src/components/middle/message/MessageEffect.module.scss?d23f","webpack://telegram-t/./src/components/middle/message/MessageEffect.tsx","webpack://telegram-t/./src/components/middle/message/Photo.tsx","webpack://telegram-t/./src/components/middle/message/RoundVideo.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenu.tsx","webpack://telegram-t/./src/components/middle/message/SponsoredMessageContextMenuContainer.tsx","webpack://telegram-t/./src/components/middle/message/Video.tsx","webpack://telegram-t/./src/components/middle/message/WebPage.tsx","webpack://telegram-t/./src/components/middle/message/helpers/webpageType.ts","webpack://telegram-t/./src/components/middle/message/helpers/getCustomAppendixBg.ts","webpack://telegram-t/./src/components/middle/message/helpers/mediaDimensions.ts","webpack://telegram-t/./src/hooks/useOffscreenCanvasBlur.ts","webpack://telegram-t/./src/components/middle/message/hooks/useBlurredMediaThumbRef.ts","webpack://telegram-t/./src/components/middle/message/hooks/useMessageTranslation.ts","webpack://telegram-t/./src/components/middle/message/hooks/useOverlayPosition.ts","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.module.scss?c7b9","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorCustomReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelectorReaction.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionSelector.tsx","webpack://telegram-t/./src/components/right/DeleteMemberModal.tsx","webpack://telegram-t/./src/components/right/hooks/useAsyncRendering.ts","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.module.scss?5334","webpack://telegram-t/./src/components/right/statistics/StatisticsOverview.tsx","webpack://telegram-t/./src/components/story/StoryToggler.tsx","webpack://telegram-t/./src/components/story/helpers/ribbonAnimation.ts","webpack://telegram-t/./src/components/story/helpers/videoFormats.ts","webpack://telegram-t/./src/components/story/hooks/useStoryPreloader.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaArea.module.scss?fe60","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaSuggestedReaction.tsx","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaWeather.tsx","webpack://telegram-t/./src/util/formatTemperature.ts","webpack://telegram-t/./src/components/story/mediaArea/MediaAreaOverlay.tsx","webpack://telegram-t/./src/global/selectors/calls.ts","webpack://telegram-t/./src/hooks/media/useUnsupportedMedia.ts","webpack://telegram-t/./src/hooks/schedulers/useIntervalForceUpdate.ts","webpack://telegram-t/./src/hooks/useAsyncResolvers.ts","webpack://telegram-t/./src/hooks/useAudioPlayer.ts","webpack://telegram-t/./src/hooks/useForumPanelRender.ts","webpack://telegram-t/./src/hooks/useGetSelectionRange.ts","webpack://telegram-t/./src/hooks/useInputFocusOnOpen.ts","webpack://telegram-t/./src/hooks/useLongPress.ts","webpack://telegram-t/./src/hooks/useMediaWithLoadProgress.ts","webpack://telegram-t/./src/hooks/useMouseInside.ts","webpack://telegram-t/./src/hooks/usePrevDuringAnimation.ts","webpack://telegram-t/./src/hooks/useRunDebounced.ts","webpack://telegram-t/./src/components/common/CalendarModal.async.tsx","webpack://telegram-t/./src/hooks/useSchedule.tsx","webpack://telegram-t/./src/hooks/useSendMessageAction.ts","webpack://telegram-t/./src/hooks/useStreaming.ts","webpack://telegram-t/./src/hooks/window/useBeforeUnload.ts","webpack://telegram-t/./src/hooks/window/useFullscreen.ts","webpack://telegram-t/./src/types/electron.ts","webpack://telegram-t/./src/util/PostMessageConnector.ts","webpack://telegram-t/./src/util/audioPlayer.ts","webpack://telegram-t/./src/util/cycleRestrict.ts","webpack://telegram-t/./src/util/download.ts","webpack://telegram-t/./src/util/focusEditableElement.ts","webpack://telegram-t/./src/util/getMessageIdsForSelectedText.ts","webpack://telegram-t/./src/util/imageResize.ts","webpack://telegram-t/./src/util/launchMediaWorkers.ts","webpack://telegram-t/./src/util/map.ts","webpack://telegram-t/./src/util/mediaSession.ts","webpack://telegram-t/./src/util/memoized.ts","webpack://telegram-t/./src/util/parseHtmlAsFormattedText.ts","webpack://telegram-t/./src/util/progressiveLoader.ts","webpack://telegram-t/./src/util/selection.ts","webpack://telegram-t/./src/util/systemFilesDialog.ts","webpack://telegram-t/./src/util/visibility/isElementInViewport.ts","webpack://telegram-t/./src/components/story/StoryRibbon.module.scss?8966","webpack://telegram-t/./src/components/story/StoryToggler.module.scss?58fa"],"sourcesContent":["import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiGroupCall } from '../../../api/types';\n\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { selectChatGroupCall } from '../../../global/selectors/calls';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useHeaderPane, { type PaneState } from '../../middle/hooks/useHeaderPane';\n\nimport AvatarList from '../../common/AvatarList';\nimport Button from '../../ui/Button';\n\nimport './GroupCallTopPane.scss';\n\ntype OwnProps = {\n  chatId: string;\n  className?: string;\n  onPaneStateChange?: (state: PaneState) => void;\n};\n\ntype StateProps = {\n  groupCall?: ApiGroupCall;\n  isActive: boolean;\n};\n\nconst PREVIEW_AVATARS_COUNT = 3;\n\nconst GroupCallTopPane: FC<OwnProps & StateProps> = ({\n  chatId,\n  isActive,\n  className,\n  groupCall,\n  onPaneStateChange,\n}) => {\n  const {\n    requestMasterAndJoinGroupCall,\n    subscribeToGroupCallUpdates,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleJoinGroupCall = useCallback(() => {\n    requestMasterAndJoinGroupCall({\n      chatId,\n    });\n  }, [requestMasterAndJoinGroupCall, chatId]);\n\n  const participants = groupCall?.participants;\n\n  const fetchedParticipants = useMemo(() => {\n    if (!participants) {\n      return [];\n    }\n\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const chatsById = getGlobal().chats.byId;\n\n    return Object.values(participants)\n      .slice(0, PREVIEW_AVATARS_COUNT)\n      .map(({ id }) => usersById[id] || chatsById[id])\n      .filter(Boolean);\n  }, [participants]);\n\n  useEffect(() => {\n    if (!groupCall?.id) return undefined;\n    if (!isActive && groupCall.isLoaded) return undefined;\n\n    subscribeToGroupCallUpdates({\n      id: groupCall.id,\n      subscribed: true,\n    });\n\n    return () => {\n      subscribeToGroupCallUpdates({\n        id: groupCall.id,\n        subscribed: false,\n      });\n    };\n  }, [groupCall?.id, groupCall?.isLoaded, isActive, subscribeToGroupCallUpdates]);\n\n  const renderingParticipantCount = useCurrentOrPrev(groupCall?.participantsCount, true);\n  const renderingFetchedParticipants = useCurrentOrPrev(fetchedParticipants, true);\n\n  const isRendering = Boolean(groupCall && isActive);\n\n  const { ref, shouldRender } = useHeaderPane({\n    isOpen: isRendering,\n    onStateChange: onPaneStateChange,\n  });\n\n  if (!shouldRender) return undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'GroupCallTopPane',\n        className,\n      )}\n      onClick={handleJoinGroupCall}\n    >\n      <div className=\"info\">\n        <span className=\"title\">{lang('VoipGroupVoiceChat')}</span>\n        <span className=\"participants\">{lang('Participants', renderingParticipantCount ?? 0, 'i')}</span>\n      </div>\n      {Boolean(renderingFetchedParticipants?.length) && (\n        <AvatarList size=\"small\" peers={renderingFetchedParticipants} className=\"avatars\" />\n      )}\n      <Button round className=\"join\">\n        {lang('VoipChatJoin')}\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const groupCall = selectChatGroupCall(global, chatId);\n    const activeGroupCallId = selectTabState(global).isMasterTab ? global.groupCalls.activeGroupCallId : undefined;\n\n    return {\n      groupCall,\n      isActive: activeGroupCallId !== groupCall?.id && Boolean(\n        groupCall\n          ? groupCall.participantsCount > 0 && groupCall.isLoaded\n          : chat && chat.isCallNotEmpty && chat.isCallActive,\n      ),\n    };\n  },\n)(GroupCallTopPane));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiAudio, ApiMessage, ApiVideo, ApiVoice,\n} from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { OldLangFn } from '../../hooks/useOldLang';\nimport type { ISettings } from '../../types';\nimport { ApiMediaFormat } from '../../api/types';\nimport { AudioOrigin } from '../../types';\n\nimport {\n  getMediaDuration,\n  getMediaFormat,\n  getMediaHash,\n  getMediaTransferState,\n  getMessageWebPageAudio,\n  hasMessageTtl,\n  isMessageLocal,\n  isOwnMessage,\n} from '../../global/helpers';\nimport { makeTrackId } from '../../util/audioPlayer';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDateTime, formatMediaDuration, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { decodeWaveform, interpolateArray } from '../../util/waveform';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport { getFileSizeString } from './helpers/documentInfo';\nimport renderText from './helpers/renderText';\nimport { MAX_EMPTY_WAVEFORM_POINTS, renderWaveform } from './helpers/waveform';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useAudioPlayer from '../../hooks/useAudioPlayer';\nimport useBuffering from '../../hooks/useBuffering';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Button from '../ui/Button';\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport AnimatedIcon from './AnimatedIcon';\nimport Icon from './icons/Icon';\n\nimport './Audio.scss';\n\ntype OwnProps = {\n  theme: ISettings['theme'];\n  message: ApiMessage;\n  senderTitle?: string;\n  uploadProgress?: number;\n  origin: AudioOrigin;\n  date?: number;\n  noAvatars?: boolean;\n  className?: string;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  isDownloading?: boolean;\n  isTranscribing?: boolean;\n  isTranscribed?: boolean;\n  canDownload?: boolean;\n  canTranscribe?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscriptionError?: boolean;\n  autoPlay?: boolean;\n  onHideTranscription?: (isHidden: boolean) => void;\n  onPlay?: (messageId: number, chatId: string) => void;\n  onPause?: NoneToVoidFunction;\n  onReadMedia?: () => void;\n  onCancelUpload?: () => void;\n  onDateClick?: (arg: ApiMessage) => void;\n};\n\nexport const TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 375px)');\nexport const WITH_AVATAR_TINY_SCREEN_WIDTH_MQL = window.matchMedia('(max-width: 410px)');\nconst AVG_VOICE_DURATION = 10;\n// This is needed for browsers requiring user interaction before playing.\nconst PRELOAD = true;\n\nconst Audio: FC<OwnProps> = ({\n  theme,\n  message,\n  senderTitle,\n  uploadProgress,\n  origin,\n  date,\n  noAvatars,\n  className,\n  isSelectable,\n  isSelected,\n  isDownloading,\n  isTranscribing,\n  isTranscriptionHidden,\n  isTranscribed,\n  isTranscriptionError,\n  canDownload,\n  canTranscribe,\n  autoPlay,\n  onHideTranscription,\n  onPlay,\n  onPause,\n  onReadMedia,\n  onCancelUpload,\n  onDateClick,\n}) => {\n  const {\n    cancelMediaDownload, downloadMedia, transcribeAudio, openOneTimeMediaModal,\n  } = getActions();\n\n  const {\n    content: {\n      audio: contentAudio, voice, video,\n    }, isMediaUnread,\n  } = message;\n  const audio = contentAudio || getMessageWebPageAudio(message);\n  const media = (voice || video || audio)!;\n  const mediaSource = (voice || video);\n  const isVoice = Boolean(voice || video);\n  const isSeeking = useRef<boolean>(false);\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const { isRtl } = lang;\n\n  const { isMobile } = useAppLayout();\n  const [isActivated, setIsActivated] = useState(false);\n  const shouldLoad = isActivated || PRELOAD;\n  const coverHash = getMediaHash(media, 'pictogram');\n  const coverBlobUrl = useMedia(coverHash, false, ApiMediaFormat.BlobUrl);\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === AudioOrigin.OneTimeModal;\n  const trackType = isVoice ? (hasTtl ? 'oneTimeVoice' : 'voice') : 'audio';\n\n  const mediaData = useMedia(\n    getMediaHash(media, 'inline'),\n    !shouldLoad,\n    getMediaFormat(media, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getMediaHash(media, 'download'),\n    !isDownloading,\n    getMediaFormat(media, 'download'),\n  );\n\n  const handleForcePlay = useLastCallback(() => {\n    setIsActivated(true);\n    onPlay?.(message.id, message.chatId);\n  });\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsActivated(false);\n  });\n\n  const {\n    isBuffered, bufferedRanges, bufferingHandlers, checkBuffering,\n  } = useBuffering();\n\n  const noReset = isInOneTimeModal;\n  const {\n    isPlaying, playProgress, playPause, setCurrentTime, duration,\n  } = useAudioPlayer(\n    makeTrackId(message),\n    getMediaDuration(message)!,\n    trackType,\n    mediaData,\n    bufferingHandlers,\n    undefined,\n    checkBuffering,\n    Boolean(isActivated || autoPlay),\n    handleForcePlay,\n    handleTrackChange,\n    isMessageLocal(message) || hasTtl,\n    undefined,\n    onPause,\n    noReset,\n    hasTtl && !isInOneTimeModal,\n  );\n\n  const reversePlayProgress = 1 - playProgress;\n  const isOwn = isOwnMessage(message);\n  const isReverse = hasTtl && isInOneTimeModal;\n\n  const waveformCanvasRef = useWaveformCanvas(\n    theme,\n    mediaSource,\n    (isMediaUnread && !isOwn && !isReverse) ? 1 : playProgress,\n    isOwn,\n    !noAvatars,\n    isMobile,\n    isReverse,\n  );\n\n  const withSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n\n  useEffect(() => {\n    setIsActivated(isPlaying);\n  }, [isPlaying]);\n\n  const isLoadingForPlaying = isActivated && !isBuffered;\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    isLoadingForPlaying || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring);\n\n  const shouldRenderCross = shouldRenderSpinner && (isLoadingForPlaying || isUploading);\n\n  const handleButtonClick = useLastCallback(() => {\n    if (isUploading) {\n      onCancelUpload?.();\n      return;\n    }\n\n    if (hasTtl) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    if (!isPlaying) {\n      onPlay?.(message.id, message.chatId);\n    }\n\n    getActions().setAudioPlayerOrigin({ origin });\n    setIsActivated(!isActivated);\n    playPause();\n  });\n\n  useEffect(() => {\n    if (onReadMedia && isMediaUnread && (isPlaying || isDownloading)) {\n      onReadMedia();\n    }\n  }, [isPlaying, isMediaUnread, onReadMedia, isDownloading]);\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (isSeeking.current && seekerRef.current) {\n      const { width, left } = seekerRef.current.getBoundingClientRect();\n      const clientX = e instanceof MouseEvent ? e.clientX : e.targetTouches[0].clientX;\n      e.stopPropagation(); // Prevent Slide-to-Reply activation\n      // Prevent track skipping while seeking near end\n      setCurrentTime(Math.max(Math.min(duration * ((clientX - left) / width), duration - 0.1), 0.001));\n    }\n  });\n\n  const handleStartSeek = useLastCallback((e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent && e.button === 2) return;\n    isSeeking.current = true;\n    handleSeek(e);\n  });\n\n  const handleStopSeek = useLastCallback(() => {\n    isSeeking.current = false;\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick!(message);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  useEffect(() => {\n    if (!seekerRef.current || !withSeekline || isInOneTimeModal) return undefined;\n    return captureEvents(seekerRef.current, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n  }, [withSeekline, handleStartSeek, handleSeek, handleStopSeek, isInOneTimeModal]);\n\n  function renderFirstLine() {\n    if (isVoice) {\n      return senderTitle || 'Voice';\n    }\n\n    const { title, fileName } = audio!;\n\n    return title || fileName;\n  }\n\n  function renderSecondLine() {\n    if (isVoice) {\n      return (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {formatMediaDuration((voice || video)!.duration)}\n        </div>\n      );\n    }\n\n    const { performer } = audio!;\n\n    return (\n      <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n        {formatMediaDuration(duration)}\n        <span className=\"bullet\">&bull;</span>\n        {performer && <span className=\"performer\" title={performer}>{renderText(performer)}</span>}\n        {performer && senderTitle && <span className=\"bullet\">&bull;</span>}\n        {senderTitle && <span title={senderTitle}>{renderText(senderTitle)}</span>}\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'Audio',\n    className,\n    isInOneTimeModal && 'non-interactive',\n    origin === AudioOrigin.Inline && 'inline',\n    isOwn && origin === AudioOrigin.Inline && 'own',\n    (origin === AudioOrigin.Search || origin === AudioOrigin.SharedMedia) && 'bigger',\n    isSelected && 'audio-is-selected',\n  );\n\n  const buttonClassNames = ['toogle-play-wrapper'];\n  if (shouldRenderCross) {\n    buttonClassNames.push('loading');\n  } else {\n    buttonClassNames.push(isPlaying ? 'pause' : 'play');\n  }\n\n  const contentClassName = buildClassName('content', withSeekline && 'with-seekline');\n\n  function renderWithTitle() {\n    return (\n      <div className={contentClassName}>\n        <div className=\"content-row\">\n          <p className=\"title\" dir=\"auto\" title={renderFirstLine()}>{renderText(renderFirstLine())}</p>\n\n          <div className=\"message-date\">\n            {Boolean(date) && (\n              <Link\n                className=\"date\"\n                onClick={handleDateClick}\n              >\n                {formatPastTimeShort(lang, date * 1000)}\n              </Link>\n            )}\n          </div>\n        </div>\n\n        {withSeekline && (\n          <div className=\"meta search-result\" dir={isRtl ? 'rtl' : undefined}>\n            <span className=\"duration with-seekline\" dir=\"auto\">\n              {playProgress < 1 && `${formatMediaDuration(duration * playProgress, duration)}`}\n            </span>\n            {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n          </div>\n        )}\n        {!withSeekline && renderSecondLine()}\n      </div>\n    );\n  }\n\n  function renderTooglePlayWrapper() {\n    return (\n      <div className={buildClassName(...buttonClassNames)}>\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"smaller\"\n          className=\"toggle-play\"\n          color={coverBlobUrl ? 'translucent-white' : 'primary'}\n          ariaLabel={isPlaying ? 'Pause audio' : 'Play audio'}\n          onClick={handleButtonClick}\n          isRtl={lang.isRtl}\n          backgroundImage={coverBlobUrl}\n          nonInteractive={isInOneTimeModal}\n        >\n          {!isInOneTimeModal && <Icon name=\"play\" />}\n          {!isInOneTimeModal && <Icon name=\"pause\" />}\n          {isInOneTimeModal && (\n            <AnimatedIcon\n              className=\"flame\"\n              tgsUrl={LOCAL_TGS_URLS.Flame}\n              nonInteractive\n              noLoop={false}\n              size={40}\n            />\n          )}\n        </Button>\n        {hasTtl && !isInOneTimeModal && (\n          <Icon name=\"view-once\" />\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div className={fullClassName} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      {renderTooglePlayWrapper()}\n      {shouldRenderSpinner && (\n        <div className={buildClassName('media-loading', spinnerClassNames, shouldRenderCross && 'interactive')}>\n          <ProgressSpinner\n            progress={transferProgress}\n            transparent\n            withColor\n            size=\"m\"\n            onClick={shouldRenderCross ? handleButtonClick : undefined}\n            noCross={!shouldRenderCross}\n          />\n        </div>\n      )}\n      {isInOneTimeModal && !shouldRenderSpinner && (\n        <div className={buildClassName('media-loading')}>\n          <ProgressSpinner\n            progress={playProgress}\n            transparent\n            size=\"m\"\n            noCross\n            rotationOffset={3 / 4}\n          />\n        </div>\n      )}\n      {audio && canDownload && !isUploading && (\n        <Button\n          round\n          size=\"tiny\"\n          className=\"download-button\"\n          ariaLabel={isDownloading ? 'Cancel download' : 'Download'}\n          onClick={handleDownloadClick}\n        >\n          <Icon name={isDownloading ? 'close' : 'arrow-down'} />\n        </Button>\n      )}\n      {origin === AudioOrigin.Search && renderWithTitle()}\n      {origin !== AudioOrigin.Search && audio && renderAudio(\n        lang,\n        audio,\n        duration,\n        isPlaying,\n        playProgress,\n        bufferedRanges,\n        seekerRef,\n        (isDownloading || isUploading),\n        date,\n        transferProgress,\n        onDateClick ? handleDateClick : undefined,\n      )}\n      {origin === AudioOrigin.SharedMedia && mediaSource && renderWithTitle()}\n      {(origin === AudioOrigin.Inline || isInOneTimeModal || isTranscribed) && mediaSource && (\n        renderVoice(\n          mediaSource,\n          seekerRef,\n          waveformCanvasRef,\n          hasTtl ? reversePlayProgress : playProgress,\n          isMediaUnread,\n          isTranscribing,\n          isTranscriptionHidden,\n          isTranscribed,\n          isTranscriptionError,\n          canTranscribe ? handleTranscribe : undefined,\n          onHideTranscription,\n          origin,\n        )\n      )}\n    </div>\n  );\n};\n\nfunction getSeeklineSpikeAmounts(isMobile?: boolean, withAvatar?: boolean) {\n  return {\n    MIN_SPIKES: isMobile ? (TINY_SCREEN_WIDTH_MQL.matches ? 16 : 20) : 25,\n    MAX_SPIKES: isMobile\n      ? (TINY_SCREEN_WIDTH_MQL.matches\n        ? 35\n        : (withAvatar && WITH_AVATAR_TINY_SCREEN_WIDTH_MQL.matches ? 40 : 45))\n      : 75,\n  };\n}\n\nfunction renderAudio(\n  lang: OldLangFn,\n  audio: ApiAudio,\n  duration: number,\n  isPlaying: boolean,\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n  showProgress?: boolean,\n  date?: number,\n  progress?: number,\n  handleDateClick?: NoneToVoidFunction,\n) {\n  const {\n    title, performer, fileName,\n  } = audio;\n  const showSeekline = isPlaying || (playProgress > 0 && playProgress < 1);\n  const { isRtl } = lang;\n\n  return (\n    <div className=\"content\">\n      <p className=\"title\" dir=\"auto\" title={title}>{renderText(title || fileName)}</p>\n      {showSeekline && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration with-seekline\" dir=\"auto\">\n            {formatMediaDuration(duration * playProgress, duration)}\n          </span>\n          {renderSeekline(playProgress, bufferedRanges, seekerRef)}\n        </div>\n      )}\n      {!showSeekline && showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          {progress ? `${getFileSizeString(audio!.size * progress)} / ` : undefined}{getFileSizeString(audio!.size)}\n        </div>\n      )}\n      {!showSeekline && !showProgress && (\n        <div className=\"meta\" dir={isRtl ? 'rtl' : undefined}>\n          <span className=\"duration\" dir=\"auto\">{formatMediaDuration(duration)}</span>\n          {performer && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <span className=\"performer\" dir=\"auto\" title={performer}>{renderText(performer)}</span>\n            </>\n          )}\n          {Boolean(date) && (\n            <>\n              <span className=\"bullet\">&bull;</span>\n              <Link className=\"date\" onClick={handleDateClick}>\n                {formatMediaDateTime(lang, date * 1000, true)}\n              </Link>\n            </>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction renderVoice(\n  media: ApiVoice | ApiVideo,\n  seekerRef: React.Ref<HTMLDivElement>,\n  waveformCanvasRef: React.Ref<HTMLCanvasElement>,\n  playProgress: number,\n  isMediaUnread?: boolean,\n  isTranscribing?: boolean,\n  isTranscriptionHidden?: boolean,\n  isTranscribed?: boolean,\n  isTranscriptionError?: boolean,\n  onClickTranscribe?: VoidFunction,\n  onHideTranscription?: (isHidden: boolean) => void,\n  origin?: AudioOrigin,\n) {\n  return (\n    <div className=\"content\">\n      <div className=\"waveform-wrapper\">\n        <div\n          className=\"waveform\"\n          draggable={false}\n          ref={seekerRef}\n        >\n          <canvas ref={waveformCanvasRef} />\n        </div>\n        {onClickTranscribe && (\n          // eslint-disable-next-line react/jsx-no-bind\n          <Button onClick={() => {\n            if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n              onHideTranscription(!isTranscriptionHidden);\n            } else if (!isTranscribing) {\n              onClickTranscribe();\n            }\n          }}\n          >\n            <Icon\n              name={(isTranscribed || isTranscriptionError) ? 'down' : 'transcribe'}\n              className={buildClassName(\n                'transcribe-icon',\n                (isTranscribed || isTranscriptionError) && !isTranscriptionHidden && 'transcribe-shown',\n              )}\n            />\n            {isTranscribing && (\n              <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n                <rect\n                  className=\"loading-rect\"\n                  fill=\"transparent\"\n                  width=\"32\"\n                  height=\"24\"\n                  stroke-width=\"3\"\n                  stroke-linejoin=\"round\"\n                  rx=\"6\"\n                  ry=\"6\"\n                  stroke=\"white\"\n                  stroke-dashoffset=\"1\"\n                  stroke-dasharray=\"32,68\"\n                />\n              </svg>\n            )}\n          </Button>\n        )}\n      </div>\n      <p\n        className={buildClassName('voice-duration', origin !== AudioOrigin.OneTimeModal && isMediaUnread && 'unread')}\n        dir=\"auto\"\n      >\n        {playProgress === 0 || playProgress === 1\n          ? formatMediaDuration(media!.duration) : formatMediaDuration(media!.duration * playProgress)}\n      </p>\n    </div>\n  );\n}\n\nfunction useWaveformCanvas(\n  theme: ISettings['theme'],\n  media?: ApiVoice | ApiVideo,\n  playProgress = 0,\n  isOwn = false,\n  withAvatar = false,\n  isMobile = false,\n  isReverse = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const { data: spikes, peak } = useMemo(() => {\n    if (!media) {\n      return undefined;\n    }\n\n    const { waveform, duration } = media;\n    if (!waveform) {\n      return {\n        data: new Array(Math.min(duration, MAX_EMPTY_WAVEFORM_POINTS)).fill(0),\n        peak: 0,\n      };\n    }\n\n    const { MIN_SPIKES, MAX_SPIKES } = getSeeklineSpikeAmounts(isMobile, withAvatar);\n    const durationFactor = Math.min(duration / AVG_VOICE_DURATION, 1);\n    const spikesCount = Math.round(MIN_SPIKES + (MAX_SPIKES - MIN_SPIKES) * durationFactor);\n    const decodedWaveform = decodeWaveform(new Uint8Array(waveform));\n\n    return interpolateArray(decodedWaveform, spikesCount);\n  }, [isMobile, media, withAvatar]) || {};\n\n  useLayoutEffect(() => {\n    const canvas = canvasRef.current;\n\n    if (!canvas || !spikes || peak === undefined) {\n      return;\n    }\n\n    const fillColor = theme === 'dark' ? '#494A78' : '#ADD3F7';\n    const fillOwnColor = theme === 'dark' ? '#B7ABED' : '#AEDFA4';\n    const progressFillColor = theme === 'dark' ? '#8774E1' : '#3390EC';\n    const progressFillOwnColor = theme === 'dark' ? '#FFFFFF' : '#4FAE4E';\n\n    const fillStyle = isOwn ? fillOwnColor : fillColor;\n    const progressFillStyle = isOwn ? progressFillOwnColor : progressFillColor;\n\n    renderWaveform(canvas, spikes, isReverse ? 1 - playProgress : playProgress, {\n      peak,\n      fillStyle,\n      progressFillStyle,\n    });\n  }, [isOwn, peak, playProgress, spikes, theme, isReverse]);\n\n  return canvasRef;\n}\n\nfunction renderSeekline(\n  playProgress: number,\n  bufferedRanges: BufferedRange[],\n  seekerRef: React.Ref<HTMLElement>,\n) {\n  return (\n    <div\n      className=\"seekline\"\n      ref={seekerRef as React.Ref<HTMLDivElement>}\n    >\n      {bufferedRanges.map(({ start, end }) => (\n        <div\n          className=\"seekline-buffered-progress\"\n          style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n        />\n      ))}\n      <span className=\"seekline-play-progress\">\n        <i\n          className=\"seekline-play-progress-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n      <span className=\"seekline-thumb\">\n        <i\n          className=\"seekline-thumb-inner\"\n          style={`transform: translateX(${playProgress * 100}%)`}\n        />\n      </span>\n    </div>\n  );\n}\n\nexport default memo(Audio);\n","type IWaveformProps = {\n  peak: number;\n  fillStyle: string;\n  progressFillStyle: string;\n};\n\nexport const MAX_EMPTY_WAVEFORM_POINTS = 30;\nconst SPIKE_WIDTH = 2;\nconst SPIKE_STEP = 4;\nconst SPIKE_RADIUS = 1;\nconst HEIGHT = 23;\n\nexport function renderWaveform(\n  canvas: HTMLCanvasElement,\n  spikes: number[],\n  progress: number,\n  {\n    peak, fillStyle, progressFillStyle,\n  }: IWaveformProps,\n) {\n  const width = spikes.length * SPIKE_STEP;\n  const height = HEIGHT;\n\n  canvas.width = width * 2;\n  canvas.height = height * 2;\n  canvas.style.width = `${width}px`;\n  canvas.style.height = `${height}px`;\n\n  const ctx = canvas.getContext('2d')!;\n  ctx.scale(2, 2);\n\n  spikes.forEach((item, i) => {\n    ctx.globalAlpha = (i / spikes.length >= progress) ? 0.5 : 1;\n    ctx.fillStyle = progress > i / spikes.length ? progressFillStyle : fillStyle;\n    const spikeHeight = Math.max(2, HEIGHT * (item / Math.max(1, peak)));\n    roundedRectangle(ctx, i * SPIKE_STEP, (height + spikeHeight) / 2, SPIKE_WIDTH, spikeHeight, SPIKE_RADIUS);\n    ctx.fill();\n  });\n}\n\nfunction roundedRectangle(\n  ctx: CanvasRenderingContext2D, x: number, y: number, width: number, height: number, radius: number,\n) {\n  if (width < 2 * radius) {\n    radius = width / 2;\n  }\n  if (height < 2 * radius) {\n    radius = height / 2;\n  }\n\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.arcTo(x + width, y, x + width, y - height, radius);\n  ctx.arcTo(x + width, y - height, x, y - height, radius);\n  ctx.arcTo(x, y - height, x, y, radius);\n  ctx.arcTo(x, y, x + width, y, radius);\n  ctx.closePath();\n}\n","/* eslint-disable no-bitwise */\n\n// Ref: https://github.com/telegramdesktop/tdesktop/blob/0743e71ab6b928d2ee5bae1aed991849b1e2b291/Telegram/SourceFiles/data/data_document.cpp#L1018\nexport function decodeWaveform(encoded5bit: Uint8Array) {\n  const bitsCount = encoded5bit.length * 8;\n  const valuesCount = Math.floor(bitsCount / 5);\n  if (!valuesCount) {\n    return [];\n  }\n\n  // Read each 5 bit of encoded5bit as 0-31 unsigned char.\n  // We count the index of the byte in which the desired 5-bit sequence starts.\n  // And then we read a uint16 starting from that byte to guarantee to get all of those 5 bits.\n  //\n  // BUT! if it is the last byte we have, we're not allowed to read a uint16 starting with it.\n  // Because it will be an overflow (we'll access one byte after the available memory).\n  // We see, that only the last 5 bits could start in the last available byte and be problematic.\n  // So we read in a general way all the entries in a general way except the last one.\n  const result = Array(valuesCount);\n  const bitsData = encoded5bit;\n  for (let i = 0, l = valuesCount - 1; i !== l; ++i) {\n    const byteIndex = Math.floor((i * 5) / 8);\n    const bitShift = Math.floor((i * 5) % 8);\n    const value = bitsData[byteIndex] + (bitsData[byteIndex + 1] << 8);\n    result[i] = ((value >> bitShift) & 0x1F);\n  }\n  const lastByteIndex = Math.floor(((valuesCount - 1) * 5) / 8);\n  const lastBitShift = Math.floor(((valuesCount - 1) * 5) % 8);\n  const lastValue = bitsData[lastByteIndex] + (bitsData[lastByteIndex + 1] << 8);\n  result[valuesCount - 1] = (lastValue >> lastBitShift) & 0x1F;\n\n  return result;\n}\n\nexport function interpolateArray(data: number[], fitCount: number) {\n  let peak = 0;\n  const newData = new Array(fitCount);\n  const springFactor = data.length / fitCount;\n  const leftFiller = data[0];\n  const rightFiller = data[data.length - 1];\n  for (let i = 0; i < fitCount; i++) {\n    const idx = Math.floor(i * springFactor);\n    const val = ((data[idx - 1] ?? leftFiller) + (data[idx] ?? leftFiller) + (data[idx + 1] ?? rightFiller)) / 3;\n    newData[i] = val;\n    if (peak < val) {\n      peak = val;\n    }\n  }\n  return { data: newData, peak };\n}\n","import { IS_IOS } from '../../../../util/windowEnvironment';\n\nlet resetInput: HTMLInputElement;\n\nif (IS_IOS) {\n  resetInput = document.createElement('input');\n  resetInput.classList.add('for-ios-autocapitalization-fix');\n  document.body.appendChild(resetInput);\n}\n\n// https://stackoverflow.com/a/55652503\nexport default function applyIosAutoCapitalizationFix(inputEl: HTMLElement) {\n  resetInput.focus();\n  inputEl.focus();\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport type { ApiBotCommand, ApiQuickReply } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst RE_COMMAND = /^\\/([\\w@]{1,32})?$/i;\n\nconst THROTTLE = 300;\n\nexport default function useChatCommandTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  botCommands?: ApiBotCommand[] | false,\n  chatBotCommands?: ApiBotCommand[],\n  quickReplies?: Record<number, ApiQuickReply>,\n) {\n  const [filteredBotCommands, setFilteredBotCommands] = useState<ApiBotCommand[] | undefined>();\n  const [filteredQuickReplies, setFilteredQuickReplies] = useState<ApiQuickReply[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const detectCommandThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('/') ? prepareForRegExp(html).match(RE_COMMAND)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getCommand = useDerivedSignal(\n    detectCommandThrottled, [detectCommandThrottled, getHtml], true,\n  );\n\n  useEffect(() => {\n    const command = getCommand();\n    const commands = botCommands || chatBotCommands;\n    if (!command || (!commands && !quickReplies)) {\n      setFilteredBotCommands(undefined);\n      setFilteredQuickReplies(undefined);\n      return;\n    }\n\n    const filter = command.substring(1);\n    const nextFilteredBotCommands = commands?.filter((c) => !filter || c.command.startsWith(filter));\n\n    setFilteredBotCommands(\n      nextFilteredBotCommands?.length ? nextFilteredBotCommands : undefined,\n    );\n\n    const newFilteredQuickReplies = Object.values(quickReplies || {}).filter((quickReply) => (\n      !filter || quickReply.shortcut.startsWith(filter)\n    ));\n\n    setFilteredQuickReplies(\n      newFilteredQuickReplies?.length ? newFilteredQuickReplies : undefined,\n    );\n  }, [getCommand, botCommands, chatBotCommands, quickReplies]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isOpen: Boolean((filteredBotCommands?.length || filteredQuickReplies?.length) && !isManuallyClosed),\n    close: markManuallyClosed,\n    filteredBotCommands,\n    filteredQuickReplies,\n  };\n}\n","// Utility for cleaning html code from Google Docs.\n// Original source from DocsSoap:\n// https://www.npmjs.com/package/docs-soap\n\nconst GDOCS_ELEMENT_ID_REGEXP = /id=\"docs-internal-guid/i;\n\nconst GDOCS_STYLES = {\n  BOLD: '700',\n  ITALIC: 'italic',\n  UNDERLINE: 'underline',\n  STRIKETHROUGH: 'line-through',\n  SUPERSCRIPT: 'super',\n  SUBSCRIPT: 'sub',\n};\n\nconst ELEMENTS = {\n  ANCHOR: 'a',\n  BOLD: 'strong',\n  ITALIC: 'em',\n  UNDERLINE: 'u',\n  BLOCKQUOTE: 'blockquote',\n  STRIKETHROUGH: 'del',\n  SUPERSCRIPT: 'sup',\n  SUBSCRIPT: 'sub',\n};\n\nconst headers = [\n  'H1',\n  'H2',\n  'H3',\n  'H4',\n  'H5',\n  'H6',\n];\n\nfunction parseHtml(html: string): HTMLElement {\n  const parser = new DOMParser();\n  const doc = parser.parseFromString(html, 'text/html');\n\n  return doc.body;\n}\n\nfunction wrapNodeAnchor(node: Node, href: string): HTMLAnchorElement {\n  const anchor = document.createElement(ELEMENTS.ANCHOR) as HTMLAnchorElement;\n  anchor.href = href;\n  anchor.appendChild(node.cloneNode(true));\n\n  return anchor;\n}\n\nfunction wrapNodeInline(node: Node, style: string): Node {\n  const el = document.createElement(style);\n  el.appendChild(node.cloneNode(true));\n\n  return el;\n}\n\nfunction wrapNode(inner: HTMLElement, result: Node): Node {\n  let newNode = result.cloneNode(true);\n  if (!inner) {\n    return newNode;\n  }\n  if (inner.style && inner.style.fontWeight === GDOCS_STYLES.BOLD) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.BOLD);\n  }\n  if (inner.style && inner.style.fontStyle === GDOCS_STYLES.ITALIC) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.ITALIC);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.UNDERLINE) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.UNDERLINE);\n  }\n  if (inner.style && inner.style.textDecoration === GDOCS_STYLES.STRIKETHROUGH) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.STRIKETHROUGH);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUPERSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUPERSCRIPT);\n  }\n  if (inner.style && inner.style.verticalAlign === GDOCS_STYLES.SUBSCRIPT) {\n    newNode = wrapNodeInline(newNode, ELEMENTS.SUBSCRIPT);\n  }\n\n  return newNode;\n}\n\nfunction applyBlockStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = document.createTextNode('') as Node;\n  if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n    styledNode = node.childNodes[0];\n  }\n  if (node.childNodes[0] && node.childNodes[0].nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode.cloneNode(true), (node.childNodes[0] as HTMLAnchorElement).href);\n    styledNode = node.childNodes[0].childNodes[0];\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction applyInlineStyles(dirty: Node): Node {\n  const node = dirty.cloneNode(true);\n  let newNode = document.createTextNode(node.textContent || '') as Node;\n  let styledNode = node;\n  if (node.nodeName === 'A') {\n    newNode = wrapNodeAnchor(newNode, (node as HTMLAnchorElement).href);\n    if ('style' in node.childNodes[0] && Boolean(node.childNodes[0].style)) {\n      styledNode = node.childNodes[0];\n    }\n  }\n  newNode = wrapNode(styledNode as HTMLElement, newNode);\n  return newNode;\n}\n\nfunction getCleanNode(node: Node): Node[] {\n  if (node.childNodes && (node.childNodes.length <= 1 || node.nodeName === 'OL' || node.nodeName === 'UL')) {\n    let newWrapper: Node | undefined;\n    let newNode = document.createTextNode(node.textContent || '') as Node;\n    if (node.nodeName === 'UL' || node.nodeName === 'OL' || node.nodeName === 'LI') {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = document.createDocumentFragment();\n      const items = [];\n      for (let i = 0; i < node.childNodes.length; i++) {\n        items.push(...getCleanNode(node.childNodes[i]));\n      }\n      items.map((i: Node): Node => newNode.appendChild(i));\n    } else if (headers.indexOf(node.nodeName) !== -1) {\n      newWrapper = document.createElement(node.nodeName);\n      newNode = applyInlineStyles(node.childNodes[0]);\n    } else if (node.nodeName === 'P') {\n      newWrapper = document.createElement('p');\n      newNode = applyBlockStyles(node);\n    } else if (node.nodeName === 'BR') {\n      newNode = node;\n    } else {\n      newWrapper = document.createElement('span');\n      newNode = applyInlineStyles(node);\n    }\n    if (newWrapper) {\n      newWrapper.appendChild(newNode);\n      return [newWrapper];\n    }\n\n    return [node.cloneNode(true)];\n  }\n\n  if (node.childNodes) {\n    const nodes = [];\n    for (let i = 0; i < node.childNodes.length; i++) {\n      nodes.push(...getCleanNode(node.childNodes[i]));\n    }\n    return nodes;\n  }\n\n  return [node];\n}\n\nfunction filterNode(node: Node): boolean {\n  return node.nodeType !== 8; // Node.COMMENT_NODE = 8\n}\n\nfunction getCleanDocument(dirty: HTMLElement): HTMLElement {\n  const body = document.createElement('body');\n  const nodes = dirty.childNodes;\n  const filteredNodes = Array.from(nodes).filter(filterNode);\n  const cleanNodes = [];\n\n  for (const node of filteredNodes) {\n    cleanNodes.push(...getCleanNode(node));\n  }\n\n  for (let i = 0; i < cleanNodes.length; i++) {\n    body.appendChild(cleanNodes[i].cloneNode(true));\n  }\n\n  return body;\n}\n\nexport default function cleanDocsHtml(clipboardContent: string): string {\n  if (!clipboardContent.match(GDOCS_ELEMENT_ID_REGEXP)) {\n    return parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, '')).innerHTML;\n  }\n\n  return getCleanDocument(parseHtml(clipboardContent.replace(/(\\r\\n|\\n|\\r)/, ''))).innerHTML;\n}\n","import { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DEBUG } from '../../../../config';\nimport cleanDocsHtml from '../../../../lib/cleanDocsHtml';\nimport { ENTITY_CLASS_BY_NODE_NAME } from '../../../../util/parseHtmlAsFormattedText';\n\nconst STYLE_TAG_REGEX = /<style>(.*?)<\\/style>/gs;\n\nexport function preparePastedHtml(html: string) {\n  let fragment = document.createElement('div');\n  try {\n    html = cleanDocsHtml(html);\n  } catch (err) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  }\n  fragment.innerHTML = html.replace(/\\u00a0/g, ' ').replace(STYLE_TAG_REGEX, ''); // Strip &nbsp and styles\n\n  const textContents = fragment.querySelectorAll<HTMLDivElement>('.text-content');\n  if (textContents.length) {\n    fragment = textContents[textContents.length - 1]; // Replace with the last copied message\n  }\n\n  Array.from(fragment.getElementsByTagName('*')).forEach((node) => {\n    if (!(node instanceof HTMLElement)) {\n      node.remove();\n      return;\n    }\n    node.removeAttribute('style');\n\n    // Fix newlines\n    if (node.tagName === 'BR') node.replaceWith('\\n');\n    if (node.tagName === 'P') node.appendChild(document.createTextNode('\\n'));\n    if (node.tagName === 'IMG' && !node.dataset.entityType) node.replaceWith(node.getAttribute('alt') || '');\n    // We do not intercept copy logic, so we remove some nodes here\n    if (node.dataset.ignoreOnPaste) node.remove();\n\n    if (ENTITY_CLASS_BY_NODE_NAME[node.tagName]) {\n      node.setAttribute('data-entity-type', ENTITY_CLASS_BY_NODE_NAME[node.tagName]);\n    }\n    // Strip non-entity tags\n    if (!node.dataset.entityType && node.textContent === node.innerText) node.replaceWith(node.textContent);\n    // Append entity parameters for parsing\n    if (node.dataset.alt) node.setAttribute('alt', node.dataset.alt);\n    switch (node.dataset.entityType) {\n      case ApiMessageEntityTypes.MentionName:\n        node.replaceWith(node.textContent || '');\n        break;\n      case ApiMessageEntityTypes.CustomEmoji:\n        node.textContent = node.dataset.alt || '';\n        break;\n    }\n  });\n\n  return fragment.innerHTML.trimEnd();\n}\n\nexport function escapeHtml(html: string) {\n  const fragment = document.createElement('div');\n  const text = document.createTextNode(html);\n  fragment.appendChild(text);\n  return fragment.innerHTML;\n}\n","import type { StateHookSetter } from '../../../../lib/teact/teact';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiFormattedText, ApiMessage } from '../../../../api/types';\n\nimport {\n  EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID,\n} from '../../../../config';\nimport { canReplaceMessageMedia, isUploadingFileSticker } from '../../../../global/helpers';\nimport { containsCustomEmoji, stripCustomEmoji } from '../../../../global/helpers/symbols';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport buildAttachment from '../helpers/buildAttachment';\nimport { preparePastedHtml } from '../helpers/cleanHtml';\nimport getFilesFromDataTransferItems from '../helpers/getFilesFromDataTransferItems';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nconst TYPE_HTML = 'text/html';\nconst DOCUMENT_TYPE_WORD = 'urn:schemas-microsoft-com:office:word';\nconst NAMESPACE_PREFIX_WORD = 'xmlns:w';\n\nconst VALID_TARGET_IDS = new Set([EDITABLE_INPUT_ID, EDITABLE_INPUT_MODAL_ID, EDITABLE_STORY_INPUT_ID]);\nconst CLOSEST_CONTENT_EDITABLE_SELECTOR = 'div[contenteditable]';\n\nconst useClipboardPaste = (\n  isActive: boolean,\n  insertTextAndUpdateCursor: (text: ApiFormattedText, inputId?: string) => void,\n  setAttachments: StateHookSetter<ApiAttachment[]>,\n  setNextText: StateHookSetter<ApiFormattedText | undefined>,\n  editedMessage: ApiMessage | undefined,\n  shouldStripCustomEmoji?: boolean,\n  onCustomEmojiStripped?: VoidFunction,\n) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!isActive) {\n      return undefined;\n    }\n\n    async function handlePaste(e: ClipboardEvent) {\n      if (!e.clipboardData) {\n        return;\n      }\n\n      const input = (e.target as HTMLElement)?.closest(CLOSEST_CONTENT_EDITABLE_SELECTOR);\n      if (!input || !VALID_TARGET_IDS.has(input.id)) {\n        return;\n      }\n\n      e.preventDefault();\n\n      // Some extensions can trigger paste into their panels without focus\n      if (document.activeElement !== input) {\n        return;\n      }\n\n      const pastedText = e.clipboardData.getData('text');\n      const html = e.clipboardData.getData('text/html');\n\n      let pastedFormattedText = html ? parseHtmlAsFormattedText(\n        preparePastedHtml(html), undefined, true,\n      ) : undefined;\n\n      if (pastedFormattedText && containsCustomEmoji(pastedFormattedText) && shouldStripCustomEmoji) {\n        pastedFormattedText = stripCustomEmoji(pastedFormattedText);\n        onCustomEmojiStripped?.();\n      }\n\n      const { items } = e.clipboardData;\n      let files: File[] | undefined = [];\n\n      if (items.length > 0) {\n        files = await getFilesFromDataTransferItems(items);\n        if (editedMessage) {\n          files = files?.slice(0, 1);\n        }\n      }\n\n      if (!files?.length && !pastedText) {\n        return;\n      }\n\n      const textToPaste = pastedFormattedText?.entities?.length ? pastedFormattedText : { text: pastedText };\n\n      let isWordDocument = false;\n      try {\n        const parser = new DOMParser();\n        const parsedDocument = parser.parseFromString(html, TYPE_HTML);\n        isWordDocument = parsedDocument.documentElement\n          .getAttribute(NAMESPACE_PREFIX_WORD) === DOCUMENT_TYPE_WORD;\n      } catch (err: any) {\n        // Ignore\n      }\n\n      const hasText = textToPaste && textToPaste.text;\n      let shouldSetAttachments = files?.length && !isWordDocument;\n\n      const newAttachments = files ? await Promise.all(files.map((file) => buildAttachment(file.name, file))) : [];\n      const canReplace = (editedMessage && newAttachments?.length\n        && canReplaceMessageMedia(editedMessage, newAttachments[0])) || Boolean(hasText);\n      const isUploadingDocumentSticker = isUploadingFileSticker(newAttachments[0]);\n      const isInAlbum = editedMessage && editedMessage?.groupedId;\n\n      if (editedMessage && isUploadingDocumentSticker) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n\n      if (isInAlbum) {\n        shouldSetAttachments = canReplace;\n        if (!shouldSetAttachments) {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n          return;\n        }\n      }\n\n      if (shouldSetAttachments) {\n        setAttachments(editedMessage ? newAttachments : (attachments) => attachments.concat(newAttachments));\n      }\n\n      if (hasText) {\n        if (shouldSetAttachments) {\n          setNextText(textToPaste);\n        } else {\n          insertTextAndUpdateCursor(textToPaste, input?.id);\n        }\n      }\n    }\n\n    document.addEventListener('paste', handlePaste, false);\n\n    return () => {\n      document.removeEventListener('paste', handlePaste, false);\n    };\n  }, [\n    insertTextAndUpdateCursor, editedMessage, setAttachments, isActive, shouldStripCustomEmoji,\n    onCustomEmojiStripped, setNextText, lang,\n  ]);\n};\n\nexport default useClipboardPaste;\n","import { useEffect, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiMessage } from '../../../../api/types';\nimport type { ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { DRAFT_DEBOUNCE } from '../../../../config';\nimport {\n  requestMeasure,\n} from '../../../../lib/fasterdom/fasterdom';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../../hooks/useLayoutEffectWithPrevDeps';\nimport useRunDebounced from '../../../../hooks/useRunDebounced';\nimport { useStateRef } from '../../../../hooks/useStateRef';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nlet isFrozen = false;\n\nfunction freeze() {\n  isFrozen = true;\n\n  requestMeasure(() => {\n    isFrozen = false;\n  });\n}\n\nconst useDraft = ({\n  draft,\n  chatId,\n  threadId,\n  getHtml,\n  setHtml,\n  editedMessage,\n  isDisabled,\n} : {\n  draft?: ApiDraft;\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  setHtml: (html: string) => void;\n  editedMessage?: ApiMessage;\n  isDisabled?: boolean;\n}) => {\n  const { saveDraft, clearDraft, loadCustomEmojis } = getActions();\n\n  const isTouchedRef = useRef(false);\n\n  useEffect(() => {\n    const html = getHtml();\n    const isLocalDraft = draft?.isLocal !== undefined;\n    if (getTextWithEntitiesAsHtml(draft?.text) === html && !isLocalDraft) {\n      isTouchedRef.current = false;\n    } else {\n      isTouchedRef.current = true;\n    }\n  }, [draft, getHtml]);\n  useEffect(() => {\n    isTouchedRef.current = false;\n  }, [chatId, threadId]);\n\n  const isEditing = Boolean(editedMessage);\n\n  const updateDraft = useLastCallback((prevState: { chatId?: string; threadId?: ThreadId } = {}) => {\n    if (isDisabled || isEditing || !isTouchedRef.current) return;\n\n    const html = getHtml();\n\n    if (html) {\n      requestMeasure(() => {\n        saveDraft({\n          chatId: prevState.chatId ?? chatId,\n          threadId: prevState.threadId ?? threadId,\n          text: parseHtmlAsFormattedText(html),\n        });\n      });\n    } else {\n      clearDraft({\n        chatId: prevState.chatId ?? chatId,\n        threadId: prevState.threadId ?? threadId,\n        shouldKeepReply: true,\n      });\n    }\n  });\n\n  const runDebouncedForSaveDraft = useRunDebounced(DRAFT_DEBOUNCE, true, undefined, [chatId, threadId]);\n\n  // Restore draft on chat change\n  useLayoutEffectWithPrevDeps(([prevChatId, prevThreadId, prevDraft]) => {\n    if (isDisabled) {\n      return;\n    }\n    const isTouched = isTouchedRef.current;\n\n    if (chatId === prevChatId && threadId === prevThreadId) {\n      if (isTouched && !draft) return; // Prevent reset from other client if we have local edits\n      if (!draft && prevDraft) {\n        setHtml('');\n      }\n\n      if (isTouched) return;\n    }\n\n    if (editedMessage || !draft) {\n      return;\n    }\n\n    setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n    const customEmojiIds = draft.text?.entities\n      ?.map((entity) => entity.type === ApiMessageEntityTypes.CustomEmoji && entity.documentId)\n      .filter(Boolean) || [];\n    if (customEmojiIds.length) loadCustomEmojis({ ids: customEmojiIds });\n  }, [chatId, threadId, draft, getHtml, setHtml, editedMessage, isDisabled]);\n\n  // Save draft on chat change. Should be layout effect to read correct html on cleanup\n  useLayoutEffect(() => {\n    if (isDisabled) {\n      return undefined;\n    }\n\n    return () => {\n      if (!isEditing) {\n        updateDraft({ chatId, threadId });\n      }\n\n      freeze();\n    };\n  }, [chatId, threadId, isEditing, updateDraft, isDisabled]);\n\n  const chatIdRef = useStateRef(chatId);\n  const threadIdRef = useStateRef(threadId);\n  useEffect(() => {\n    if (isDisabled || isFrozen) {\n      return;\n    }\n\n    if (!getHtml()) {\n      updateDraft();\n\n      return;\n    }\n\n    const scopedСhatId = chatIdRef.current;\n    const scopedThreadId = threadIdRef.current;\n\n    runDebouncedForSaveDraft(() => {\n      if (chatIdRef.current === scopedСhatId && threadIdRef.current === scopedThreadId) {\n        updateDraft();\n      }\n    });\n  }, [chatIdRef, getHtml, isDisabled, runDebouncedForSaveDraft, threadIdRef, updateDraft]);\n\n  useBackgroundMode(updateDraft);\n  useBeforeUnload(updateDraft);\n};\n\nexport default useDraft;\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiDraft, ApiFormattedText, ApiMessage } from '../../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR } from '../../../../config';\nimport { requestMeasure, requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { hasMessageMedia } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { getTextWithEntitiesAsHtml } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useDebouncedResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useBeforeUnload from '../../../../hooks/window/useBeforeUnload';\n\nconst URL_ENTITIES = new Set<string>([ApiMessageEntityTypes.TextUrl, ApiMessageEntityTypes.Url]);\nconst DEBOUNCE_MS = 300;\n\nconst useEditing = (\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  editedMessage: ApiMessage | undefined,\n  resetComposer: (shouldPreserveInput?: boolean) => void,\n  chatId: string,\n  threadId: ThreadId,\n  type: MessageListType,\n  draft?: ApiDraft,\n  editingDraft?: ApiFormattedText,\n): [VoidFunction, VoidFunction, boolean] => {\n  const {\n    editMessage, setEditingDraft, toggleMessageWebPage, openDeleteMessageModal,\n  } = getActions();\n  const [shouldForceShowEditing, setShouldForceShowEditing] = useState(false);\n\n  const replyingToId = draft?.replyInfo?.replyToMsgId;\n\n  useEffectWithPrevDeps(([prevEditedMessage, prevReplyingToId]) => {\n    if (!editedMessage) {\n      return;\n    }\n\n    if (replyingToId && prevReplyingToId !== replyingToId) {\n      setHtml('');\n      setShouldForceShowEditing(false);\n      return;\n    }\n\n    if (prevEditedMessage?.id === editedMessage.id && replyingToId === prevReplyingToId) {\n      return;\n    }\n\n    const text = !prevEditedMessage && editingDraft?.text.length ? editingDraft : editedMessage.content.text;\n    const html = getTextWithEntitiesAsHtml(text);\n\n    setHtml(html);\n    setShouldForceShowEditing(true);\n\n    requestNextMutation(() => {\n      const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n      if (messageInput) {\n        focusEditableElement(messageInput, true);\n      }\n    });\n  }, [editedMessage, replyingToId, editingDraft, setHtml]);\n\n  useEffect(() => {\n    if (!editedMessage) {\n      return;\n    }\n\n    const shouldSetNoWebPage = !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type));\n\n    toggleMessageWebPage({\n      chatId,\n      threadId,\n      noWebPage: shouldSetNoWebPage,\n    });\n  }, [chatId, threadId, editedMessage]);\n\n  useEffect(() => {\n    if (!editedMessage) return undefined;\n    return () => {\n      const edited = parseHtmlAsFormattedText(getHtml());\n      const update = edited.text.length ? edited : undefined;\n\n      setEditingDraft({\n        chatId, threadId, type, text: update,\n      });\n    };\n  }, [chatId, editedMessage, getHtml, setEditingDraft, threadId, type]);\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    if (!editedMessage) return false;\n\n    const edited = parseHtmlAsFormattedText(getHtml());\n    return !('webPage' in editedMessage.content)\n      && editedMessage.content.text?.entities?.some((entity) => URL_ENTITIES.has(entity.type))\n      && !(edited.entities?.some((entity) => URL_ENTITIES.has(entity.type)));\n  }, [editedMessage, getHtml], DEBOUNCE_MS, true);\n\n  const getShouldResetNoWebPageDebounced = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffectWithPrevDeps(([prevEditedMessage]) => {\n    if (!editedMessage || prevEditedMessage?.id !== editedMessage.id) {\n      return;\n    }\n\n    if (getShouldResetNoWebPageDebounced()) {\n      toggleMessageWebPage({\n        chatId,\n        threadId,\n        noWebPage: false,\n      });\n    }\n  }, [editedMessage, chatId, getHtml, threadId, getShouldResetNoWebPageDebounced]);\n\n  const restoreNewDraftAfterEditing = useLastCallback(() => {\n    if (!draft) return;\n\n    // Run one frame after editing draft reset\n    requestMeasure(() => {\n      setHtml(getTextWithEntitiesAsHtml(draft.text));\n\n      // Wait one more frame until new HTML is rendered\n      requestNextMutation(() => {\n        const messageInput = document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR);\n        if (messageInput) {\n          focusEditableElement(messageInput, true);\n        }\n      });\n    });\n  });\n\n  const handleEditCancel = useLastCallback(() => {\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleEditComplete = useLastCallback(() => {\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (!editedMessage) {\n      return;\n    }\n\n    if (!text && !hasMessageMedia(editedMessage)) {\n      openDeleteMessageModal({ isSchedule: type === 'scheduled', message: editedMessage });\n      return;\n    }\n\n    editMessage({\n      messageList: { chatId, threadId, type },\n      text,\n      entities,\n    });\n\n    resetComposer();\n    restoreNewDraftAfterEditing();\n  });\n\n  const handleBlur = useLastCallback(() => {\n    if (!editedMessage) return;\n    const edited = parseHtmlAsFormattedText(getHtml());\n    const update = edited.text.length ? edited : undefined;\n\n    setEditingDraft({\n      chatId, threadId, type, text: update,\n    });\n  });\n\n  useBackgroundMode(handleBlur);\n  useBeforeUnload(handleBlur);\n\n  return [handleEditComplete, handleEditCancel, shouldForceShowEditing];\n};\n\nexport default useEditing;\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { InlineBotSettings } from '../../../../types';\nimport type { Signal } from '../../../../util/signals';\n\nimport memoized from '../../../../util/memoized';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../../hooks/useSyncEffect';\n\nconst THROTTLE = 300;\nconst INLINE_BOT_QUERY_REGEXP = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+(.*)/is;\nconst HAS_NEW_LINE = /^@([a-z0-9_]{1,32})[\\u00A0\\u0020]+\\n{2,}/i;\nconst MEMO_NO_RESULT = {\n  username: '',\n  query: '',\n  canShowHelp: false,\n  usernameLowered: '',\n};\n\nconst tempEl = document.createElement('div');\n\nexport default function useInlineBotTooltip(\n  isEnabled: boolean,\n  chatId: string,\n  getHtml: Signal<string>,\n  inlineBots?: Record<string, false | InlineBotSettings>,\n) {\n  const { queryInlineBot, resetInlineBot, resetAllInlineBots } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractBotQueryThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.startsWith('@') ? parseBotQuery(html) : MEMO_NO_RESULT;\n  }, [getHtml, isEnabled], THROTTLE);\n  const {\n    username, query, canShowHelp, usernameLowered,\n  } = useDerivedState(extractBotQueryThrottled, [extractBotQueryThrottled, getHtml], true);\n\n  useSyncEffect(([prevUsername]) => {\n    if (prevUsername) {\n      resetInlineBot({ username: prevUsername });\n    }\n  }, [username, resetInlineBot]);\n\n  useEffect(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query,\n    });\n  }, [chatId, query, queryInlineBot, usernameLowered]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  const {\n    id: botId,\n    switchPm,\n    switchWebview,\n    offset,\n    results,\n    isGallery,\n    help,\n  } = (usernameLowered && inlineBots?.[usernameLowered]) || {};\n\n  const isOpen = Boolean((results?.length || switchPm) && !isManuallyClosed);\n\n  useEffect(() => {\n    if (!isOpen && !username) {\n      resetAllInlineBots();\n    }\n  }, [isOpen, resetAllInlineBots, username]);\n\n  const loadMore = useLastCallback(() => {\n    if (!usernameLowered) return;\n\n    queryInlineBot({\n      chatId, username: usernameLowered, query, offset,\n    });\n  });\n\n  return {\n    isOpen,\n    botId,\n    isGallery,\n    switchPm,\n    switchWebview,\n    results,\n    closeTooltip: markManuallyClosed,\n    help: canShowHelp && help ? `@${username} ${help}` : undefined,\n    loadMore,\n  };\n}\n\nconst buildQueryStateMemo = memoized((username: string, query: string, canShowHelp: boolean) => ({\n  username,\n  query,\n  canShowHelp,\n  usernameLowered: username.toLowerCase(),\n}));\n\nfunction parseBotQuery(html: string) {\n  if (!html.startsWith('@')) {\n    return MEMO_NO_RESULT;\n  }\n\n  const text = getPlainText(html);\n  const result = text.match(INLINE_BOT_QUERY_REGEXP);\n  if (!result) {\n    return MEMO_NO_RESULT;\n  }\n\n  return buildQueryStateMemo(result[1], result[2], result[2] === '' && !text.match(HAS_NEW_LINE));\n}\n\nfunction getPlainText(html: string) {\n  tempEl.innerHTML = html.replace(/<br>/g, '\\n');\n\n  tempEl.querySelectorAll<HTMLElement>('[alt]').forEach((el) => {\n    if (!el.innerText) {\n      el.innerText = el.getAttribute('alt')!;\n    }\n  });\n\n  return tempEl.innerText;\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport parseEmojiOnlyString from '../../../../util/emoji/parseEmojiOnlyString';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\n\nconst MAX_LENGTH = 8;\nconst STARTS_ENDS_ON_EMOJI_IMG_REGEX = new RegExp(`^${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useStickerTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  stickers?: ApiSticker[],\n) {\n  const { loadStickersForEmoji, clearStickersForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const getSingleEmoji = useDerivedSignal(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || (IS_EMOJI_SUPPORTED && html.length > MAX_LENGTH)) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const cleanHtml = prepareForRegExp(html);\n    const isSingleEmoji = cleanHtml && (\n      (IS_EMOJI_SUPPORTED && parseEmojiOnlyString(cleanHtml) === 1)\n      || (!IS_EMOJI_SUPPORTED && Boolean(html.match(STARTS_ENDS_ON_EMOJI_IMG_REGEX)))\n    );\n\n    return isSingleEmoji\n      ? (IS_EMOJI_SUPPORTED ? cleanHtml : cleanHtml.match(/alt=\"(.+)\"/)?.[1]!)\n      : undefined;\n  }, [getHtml, isEnabled]);\n\n  const isActive = useDerivedState(() => Boolean(getSingleEmoji()), [getSingleEmoji]);\n  const hasStickers = Boolean(stickers?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const singleEmoji = getSingleEmoji();\n    if (singleEmoji) {\n      if (!hasStickers) {\n        loadStickersForEmoji({ emoji: singleEmoji });\n      }\n    } else {\n      clearStickersForEmoji();\n    }\n  }, [isEnabled, isActive, getSingleEmoji, hasStickers, loadStickersForEmoji, clearStickersForEmoji]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isStickerTooltipOpen: Boolean(isActive && hasStickers && !isManuallyClosed),\n    closeStickerTooltip: markManuallyClosed,\n  };\n}\n","import type { IOpusRecorder } from 'opus-recorder';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\n\nexport type Result = { blob: Blob; duration: number; waveform: number[] };\n\nconst encoderPath = new URL('opus-recorder/dist/encoderWorker.min', import.meta.url).href;\nconst MIN_RECORDING_TIME = 1000;\nconst POLYFILL_OPTIONS = { encoderPath, reuseWorker: true };\nconst BLOB_PARAMS = { type: 'audio/ogg' };\nconst FFT_SIZE = 64;\nconst MIN_VOLUME = 0.1;\n\nlet opusRecorderPromise: Promise<{ default: IOpusRecorder }>;\nlet OpusRecorder: IOpusRecorder;\nlet mediaRecorder: IOpusRecorder;\n\nexport async function init() {\n  if (!opusRecorderPromise) {\n    opusRecorderPromise = import('opus-recorder');\n    OpusRecorder = (await opusRecorderPromise).default;\n    mediaRecorder = new OpusRecorder(POLYFILL_OPTIONS);\n  }\n\n  return opusRecorderPromise;\n}\n\nexport async function start(analyzerCallback: Function) {\n  await startMediaRecorder();\n\n  const startedAt = Date.now();\n  let pausedAt: number;\n  const chunks: Uint8Array[] = [];\n  const waveform: number[] = [];\n\n  mediaRecorder.ondataavailable = (typedArray) => {\n    chunks.push(typedArray);\n  };\n\n  const releaseAnalyzer = subscribeToAnalyzer(mediaRecorder, (volume: number) => {\n    waveform.push(volume * 255);\n    analyzerCallback(volume);\n  });\n\n  return {\n    stop: () => new Promise<Result>((resolve, reject) => {\n      mediaRecorder.onstop = () => {\n        resolve({\n          blob: new Blob(chunks, BLOB_PARAMS),\n          duration: Math.round(((pausedAt || Date.now()) - startedAt) / 1000),\n          waveform,\n        });\n      };\n      mediaRecorder.onerror = reject;\n\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.stop();\n        releaseAnalyzer();\n      }, delayStop);\n    }),\n    pause: () => {\n      const delayStop = Math.max(0, startedAt + MIN_RECORDING_TIME - Date.now());\n      setTimeout(() => {\n        mediaRecorder.pause();\n        pausedAt = Date.now();\n        releaseAnalyzer();\n      }, delayStop);\n    },\n  };\n}\n\nasync function startMediaRecorder() {\n  await init();\n  await mediaRecorder.start();\n}\n\nfunction subscribeToAnalyzer(recorder: IOpusRecorder, cb: Function) {\n  const source = recorder.sourceNode;\n  const analyser = source.context.createAnalyser();\n  analyser.fftSize = FFT_SIZE;\n  source.connect(analyser);\n\n  const dataLength = analyser.frequencyBinCount;\n  const dataArray = new Uint8Array(dataLength);\n  let isDestroyed = false;\n\n  function tick() {\n    if (isDestroyed) {\n      return;\n    }\n\n    analyser.getByteFrequencyData(dataArray);\n\n    const sum = dataArray.reduce((acc, current) => acc + current, 0);\n    const mean = (sum / dataLength);\n    const volume = mean / 255;\n\n    cb(volume < MIN_VOLUME ? 0 : volume);\n\n    requestMeasure(tick);\n  }\n\n  tick();\n\n  return () => {\n    isDestroyed = true;\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './AttachmentModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst AttachmentModalAsync: FC<OwnProps> = (props) => {\n  const { attachments } = props;\n  const AttachmentModal = useModuleLoader(Bundles.Extra, 'AttachmentModal', !attachments.length);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return AttachmentModal ? <AttachmentModal {...props} /> : undefined;\n};\n\nexport default AttachmentModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAttachMenuPeerType, ApiMessage } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId } from '../../../types';\n\nimport {\n  CONTENT_TYPES_WITH_PREVIEW, DEBUG_LOG_FILENAME, SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport {\n  getMessageAudio, getMessageDocument,\n  getMessagePhoto,\n  getMessageVideo, getMessageVoice,\n  getMessageWebPagePhoto,\n  getMessageWebPageVideo,\n} from '../../../global/helpers';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport { validateFiles } from '../../../util/files';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport AttachBotItem from './AttachBotItem';\n\nimport './AttachMenu.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isButtonVisible: boolean;\n  canAttachMedia: boolean;\n  canAttachPolls: boolean;\n  canSendPhotos: boolean;\n  canSendVideos: boolean;\n  canSendDocuments: boolean;\n  canSendAudios: boolean;\n  isScheduled?: boolean;\n  attachBots?: GlobalState['attachMenu']['bots'];\n  peerType?: ApiAttachMenuPeerType;\n  shouldCollectDebugLogs?: boolean;\n  theme: ISettings['theme'];\n  onFileSelect: (files: File[], shouldSuggestCompression?: boolean) => void;\n  onPollCreate: NoneToVoidFunction;\n  onMenuOpen: NoneToVoidFunction;\n  onMenuClose: NoneToVoidFunction;\n  canEditMedia?: boolean;\n  editingMessage?: ApiMessage;\n};\n\nconst AttachMenu: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isButtonVisible,\n  canAttachMedia,\n  canAttachPolls,\n  canSendPhotos,\n  canSendVideos,\n  canSendDocuments,\n  canSendAudios,\n  attachBots,\n  peerType,\n  isScheduled,\n  theme,\n  shouldCollectDebugLogs,\n  onFileSelect,\n  onMenuOpen,\n  onMenuClose,\n  onPollCreate,\n  canEditMedia,\n  editingMessage,\n}) => {\n  const [isAttachMenuOpen, openAttachMenu, closeAttachMenu] = useFlag();\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isAttachMenuOpen, closeAttachMenu);\n\n  const canSendVideoAndPhoto = canSendPhotos && canSendVideos;\n  const canSendVideoOrPhoto = canSendPhotos || canSendVideos;\n\n  const [isAttachmentBotMenuOpen, markAttachmentBotMenuOpen, unmarkAttachmentBotMenuOpen] = useFlag();\n  const isMenuOpen = isAttachMenuOpen || isAttachmentBotMenuOpen;\n\n  const isPhotoOrVideo = editingMessage && editingMessage?.groupedId\n    && Boolean(getMessagePhoto(editingMessage) || getMessageWebPagePhoto(editingMessage)\n      || Boolean(getMessageVideo(editingMessage) || getMessageWebPageVideo(editingMessage)));\n  const isFile = editingMessage && editingMessage?.groupedId && Boolean(getMessageAudio(editingMessage)\n    || getMessageVoice(editingMessage) || getMessageDocument(editingMessage));\n\n  useEffect(() => {\n    if (isAttachMenuOpen) {\n      markMouseInside();\n    }\n  }, [isAttachMenuOpen, markMouseInside]);\n\n  useEffect(() => {\n    if (isMenuOpen) {\n      onMenuOpen();\n    } else {\n      onMenuClose();\n    }\n  }, [isMenuOpen, onMenuClose, onMenuOpen]);\n\n  const handleToggleAttachMenu = useLastCallback(() => {\n    if (isAttachMenuOpen) {\n      closeAttachMenu();\n    } else {\n      openAttachMenu();\n    }\n  });\n\n  const handleFileSelect = useLastCallback((e: Event, shouldSuggestCompression?: boolean) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileSelect(validatedFiles, shouldSuggestCompression);\n    }\n  });\n\n  const handleQuickSelect = useLastCallback(() => {\n    openSystemFilesDialog(\n      Array.from(canSendVideoAndPhoto ? CONTENT_TYPES_WITH_PREVIEW : (\n        canSendPhotos ? SUPPORTED_PHOTO_CONTENT_TYPES : SUPPORTED_VIDEO_CONTENT_TYPES\n      )).join(','),\n      (e) => handleFileSelect(e, true),\n    );\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog(!canSendDocuments && canSendAudios\n      ? Array.from(SUPPORTED_AUDIO_CONTENT_TYPES).join(',') : (\n        '*'\n      ), (e) => handleFileSelect(e, false));\n  });\n\n  const handleSendLogs = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    onFileSelect([file]);\n  });\n\n  const bots = useMemo(() => {\n    return attachBots\n      ? Object.values(attachBots).filter((bot) => {\n        if (!peerType || !bot.isForAttachMenu) return false;\n        if (peerType === 'bots' && bot.id === chatId && bot.attachMenuPeerTypes.includes('self')) {\n          return true;\n        }\n        return bot.attachMenuPeerTypes!.includes(peerType);\n      })\n      : undefined;\n  }, [attachBots, chatId, peerType]);\n\n  const lang = useOldLang();\n\n  if (!isButtonVisible) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"AttachMenu\">\n      {\n        editingMessage && canEditMedia ? (\n          <ResponsiveHoverButton\n            id=\"replace-menu-button\"\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Replace an attachment\"\n            ariaControls=\"replace-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"replace\" />\n          </ResponsiveHoverButton>\n        ) : (\n          <ResponsiveHoverButton\n            id=\"attach-menu-button\"\n            disabled={Boolean(editingMessage)}\n            className={isAttachMenuOpen ? 'AttachMenu--button activated' : 'AttachMenu--button'}\n            round\n            color=\"translucent\"\n            onActivate={handleToggleAttachMenu}\n            ariaLabel=\"Add an attachment\"\n            ariaControls=\"attach-menu-controls\"\n            hasPopup\n          >\n            <Icon name=\"attach\" />\n          </ResponsiveHoverButton>\n        )\n      }\n      <Menu\n        id=\"attach-menu-controls\"\n        isOpen={isMenuOpen}\n        autoClose\n        positionX=\"right\"\n        positionY=\"bottom\"\n        onClose={closeAttachMenu}\n        className=\"AttachMenu--menu fluid\"\n        onCloseAnimationEnd={closeAttachMenu}\n        onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n        onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n        noCloseOnBackdrop={!IS_TOUCH_ENV}\n        ariaLabelledBy=\"attach-menu-button\"\n      >\n        {/*\n       ** Using ternary operator here causes some attributes from first clause\n       ** transferring to the fragment content in the second clause\n       */}\n        {!canAttachMedia && (\n          <MenuItem className=\"media-disabled\" disabled>Posting media content is not allowed in this group.</MenuItem>\n        )}\n        {canAttachMedia && (\n          <>\n            {canSendVideoOrPhoto && !isFile && (\n              <MenuItem icon=\"photo\" onClick={handleQuickSelect}>\n                {lang(canSendVideoAndPhoto ? 'AttachmentMenu.PhotoOrVideo'\n                  : (canSendPhotos ? 'InputAttach.Popover.Photo' : 'InputAttach.Popover.Video'))}\n              </MenuItem>\n            )}\n            {((canSendDocuments || canSendAudios) && !isPhotoOrVideo)\n              && (\n                <MenuItem icon=\"document\" onClick={handleDocumentSelect}>\n                  {lang(!canSendDocuments && canSendAudios ? 'InputAttach.Popover.Music' : 'AttachDocument')}\n                </MenuItem>\n              )}\n            {canSendDocuments && shouldCollectDebugLogs && (\n              <MenuItem icon=\"bug\" onClick={handleSendLogs}>\n                {lang('DebugSendLogs')}\n              </MenuItem>\n            )}\n          </>\n        )}\n        {canAttachPolls && !editingMessage && (\n          <MenuItem icon=\"poll\" onClick={onPollCreate}>{lang('Poll')}</MenuItem>\n        )}\n\n        {!editingMessage && !canEditMedia && !isScheduled && bots?.map((bot) => (\n          <AttachBotItem\n            bot={bot}\n            chatId={chatId}\n            threadId={threadId}\n            theme={theme}\n            onMenuOpened={markAttachmentBotMenuOpen}\n            onMenuClosed={unmarkAttachmentBotMenuOpen}\n          />\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nexport default memo(AttachMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './BotCommandMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst BotCommandMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const BotCommandMenu = useModuleLoader(Bundles.Extra, 'BotCommandMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return BotCommandMenu ? <BotCommandMenu {...props} /> : undefined;\n};\n\nexport default BotCommandMenuAsync;\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { selectChatMessage, selectCurrentMessageList } from '../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport renderKeyboardButtonText from './helpers/renderKeyboardButtonText';\n\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\n\nimport './BotKeyboardMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  messageId: number;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  message?: ApiMessage;\n};\n\nconst BotKeyboardMenu: FC<OwnProps & StateProps> = ({\n  isOpen, message, onClose,\n}) => {\n  const { clickBotInlineButton } = getActions();\n\n  const lang = useOldLang();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const { isKeyboardSingleUse } = message || {};\n\n  const buttonTexts = useMemo(() => {\n    const texts: TeactNode[][] = [];\n    message?.keyboardButtons!.forEach((row) => {\n      texts.push(row.map((button) => renderKeyboardButtonText(lang, button)));\n    });\n\n    return texts;\n  }, [lang, message?.keyboardButtons]);\n\n  if (!message || !message.keyboardButtons) {\n    return undefined;\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose={isKeyboardSingleUse}\n      positionX=\"right\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotKeyboardMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCompact\n    >\n      <div className=\"content custom-scroll\">\n        {message.keyboardButtons.map((row, i) => (\n          <div className=\"row\">\n            {row.map((button, j) => (\n              <Button\n                ripple\n                disabled={button.type === 'unsupported'}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => clickBotInlineButton({ chatId: message.chatId, messageId: message.id, button })}\n              >\n                {buttonTexts?.[i][j]}\n              </Button>\n            ))}\n          </div>\n        ))}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { messageId }): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    if (!chatId) {\n      return {};\n    }\n\n    return { message: selectChatMessage(global, chatId, messageId) };\n  },\n)(BotKeyboardMenu));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  onClick: VoidFunction;\n  text: string;\n  isDisabled?: boolean;\n};\n\nconst BotMenuButton: FC<OwnProps> = ({\n  isOpen,\n  onClick,\n  text,\n  isDisabled,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLSpanElement>(null);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return;\n\n    const width = textEl.scrollWidth + 1; // Make width slightly bigger prevent ellipsis in some cases\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n    composerEl.style.setProperty('--bot-menu-text-width', `${width}px`);\n  }, [isOpen, text]);\n\n  useEffect(() => {\n    const textEl = textRef.current;\n    if (!textEl) return undefined;\n\n    const composerEl = textEl.closest('.Composer') as HTMLElement;\n\n    return () => {\n      composerEl.style.removeProperty('--bot-menu-text-width');\n    };\n  }, []);\n\n  return (\n    <Button\n      className={buildClassName('bot-menu', isOpen && 'open')}\n      round\n      color=\"translucent\"\n      disabled={isDisabled}\n      onClick={onClick}\n      ariaLabel=\"Open bot command keyboard\"\n    >\n      <Icon name=\"webapp\" className={buildClassName('bot-menu-icon', isOpen && 'open')} />\n      <span ref={textRef} className=\"bot-menu-text\">{renderText(text)}</span>\n    </Button>\n  );\n};\n\nexport default memo(BotMenuButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './ChatCommandTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst ChatCommandTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const ChatCommandTooltip = useModuleLoader(Bundles.Extra, 'ChatCommandTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return ChatCommandTooltip ? <ChatCommandTooltip {...props} /> : undefined;\n};\n\nexport default ChatCommandTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiInputMessageReplyInfo, ApiMessage, ApiPeer,\n} from '../../../api/types';\nimport type { MessageListType, ThreadId } from '../../../types/index';\n\nimport { isChatChannel, stripCustomEmoji } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectChatMessage,\n  selectDraft,\n  selectEditingId,\n  selectEditingMessage,\n  selectEditingScheduledId,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getPeerColorClass } from '../../common/helpers/peerColor';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport { ClosableEmbeddedMessage } from '../../common/embedded/EmbeddedMessage';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './ComposerEmbeddedMessage.scss';\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  editingId?: number;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  shouldAnimate?: boolean;\n  forwardedMessagesCount?: number;\n  noAuthors?: boolean;\n  noCaptions?: boolean;\n  forwardsHaveCaptions?: boolean;\n  isCurrentUserPremium?: boolean;\n  isContextMenuDisabled?: boolean;\n  isReplyToDiscussion?: boolean;\n  isInChangingRecipientMode?: boolean;\n  shouldPreventComposerAnimation?: boolean;\n  senderChat?: ApiChat;\n  isSenderChannel?: boolean;\n  currentUserId?: string;\n};\n\ntype OwnProps = {\n  onClear?: () => void;\n  shouldForceShowEditing?: boolean;\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n};\n\nconst CLOSE_DURATION = 350;\n\nconst ComposerEmbeddedMessage: FC<OwnProps & StateProps> = ({\n  replyInfo,\n  editingId,\n  message,\n  sender,\n  shouldAnimate,\n  forwardedMessagesCount,\n  noAuthors,\n  noCaptions,\n  forwardsHaveCaptions,\n  shouldForceShowEditing,\n  isCurrentUserPremium,\n  isContextMenuDisabled,\n  isReplyToDiscussion,\n  onClear,\n  isInChangingRecipientMode,\n  shouldPreventComposerAnimation,\n  senderChat,\n  chatId,\n  currentUserId,\n  isSenderChannel,\n}) => {\n  const {\n    resetDraftReplyInfo,\n    updateDraftReplyInfo,\n    setEditingId,\n    focusMessage,\n    changeRecipient,\n    openChatOrTopicWithReplyInDraft,\n    setForwardNoAuthors,\n    setForwardNoCaptions,\n    exitForwardMode,\n    setShouldPreventComposerAnimation,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const isReplyToTopicStart = message?.content.action?.type === 'topicCreate';\n  const isShowingReply = replyInfo && !shouldForceShowEditing;\n  const isReplyWithQuote = Boolean(replyInfo?.quoteText);\n\n  const isForwarding = Boolean(forwardedMessagesCount);\n\n  const isShown = (() => {\n    if (isInChangingRecipientMode) return false;\n    if (message && (replyInfo || editingId)) return true;\n    if (sender && isForwarding) return true;\n    return false;\n  })();\n\n  const {\n    shouldRender, transitionClassNames,\n  } = useShowTransitionDeprecated(\n    isShown && !isReplyToTopicStart && !isReplyToDiscussion,\n    undefined,\n    !shouldAnimate,\n    undefined,\n    !shouldAnimate,\n    CLOSE_DURATION,\n    !shouldAnimate,\n  );\n  useEffect(() => {\n    if (shouldPreventComposerAnimation) {\n      setShouldPreventComposerAnimation({ shouldPreventComposerAnimation: false });\n    }\n  });\n\n  const clearEmbedded = useLastCallback(() => {\n    if (editingId) {\n      setEditingId({ messageId: undefined });\n    } else if (forwardedMessagesCount) {\n      exitForwardMode();\n    } else if (replyInfo && !shouldForceShowEditing) {\n      resetDraftReplyInfo();\n    }\n    onClear?.();\n  });\n\n  useEffect(() => (isShown ? captureEscKeyListener(clearEmbedded) : undefined), [isShown, clearEmbedded]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const focusMessageFromDraft = () => {\n    focusMessage({ chatId: message!.chatId, messageId: message!.id, noForumTopicPanel: true });\n  };\n  const handleMessageClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const handleClearClick = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\n    e.stopPropagation();\n    clearEmbedded();\n    handleContextMenuHide();\n  });\n  const buildAutoCloseMenuItemHandler = (action: NoneToVoidFunction) => {\n    return () => {\n      handleContextMenuClose();\n      action();\n    };\n  };\n  const handleForwardToAnotherChatClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleShowMessageClick = useLastCallback(buildAutoCloseMenuItemHandler(focusMessageFromDraft));\n  const handleRemoveQuoteClick = useLastCallback(buildAutoCloseMenuItemHandler(\n    () => updateDraftReplyInfo({ quoteText: undefined }),\n  ));\n  const handleChangeReplyRecipientClick = useLastCallback(buildAutoCloseMenuItemHandler(changeRecipient));\n  const handleReplyInSenderChat = useLastCallback(() => {\n    handleContextMenuClose();\n    if (!sender) return;\n    openChatOrTopicWithReplyInDraft({ chatId: sender.id });\n  });\n  const handleDoNotReplyClick = useLastCallback(buildAutoCloseMenuItemHandler(clearEmbedded));\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.forward-context-menu .bubble'));\n\n  useEffect(() => {\n    if (!shouldRender) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender]);\n\n  const className = buildClassName('ComposerEmbeddedMessage', transitionClassNames);\n  const renderingSender = useCurrentOrPrev(sender, true);\n  const innerClassName = buildClassName(\n    'ComposerEmbeddedMessage_inner',\n    getPeerColorClass(renderingSender),\n  );\n\n  const leftIcon = useMemo(() => {\n    if (editingId) {\n      return 'edit';\n    }\n    if (isForwarding) {\n      return 'forward';\n    }\n    if (isShowingReply) {\n      return 'reply';\n    }\n\n    return undefined;\n  }, [editingId, isForwarding, isShowingReply]);\n\n  const customText = forwardedMessagesCount && forwardedMessagesCount > 1\n    ? oldLang('ForwardedMessageCount', forwardedMessagesCount)\n    : undefined;\n\n  const strippedMessage = useMemo(() => {\n    if (!message || !isForwarding || !message.content.text || !noAuthors || isCurrentUserPremium) return message;\n\n    const strippedText = stripCustomEmoji(message.content.text);\n    return {\n      ...message,\n      content: {\n        ...message.content,\n        text: strippedText,\n      },\n    };\n  }, [isCurrentUserPremium, isForwarding, message, noAuthors]);\n\n  const renderingLeftIcon = useCurrentOrPrev(leftIcon, true);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const canReplyInSenderChat = sender && !isSenderChannel && chatId !== sender.id && sender.id !== currentUserId;\n\n  return (\n    <div className={className} ref={ref} onContextMenu={handleContextMenu}>\n      <div className={innerClassName}>\n        <div className=\"embedded-left-icon\" onClick={handleContextMenu}>\n          {renderingLeftIcon && <Icon name={renderingLeftIcon} />}\n          {Boolean(replyInfo?.quoteText) && (\n            <Icon name=\"quote\" className=\"quote-reply\" />\n          )}\n        </div>\n        <ClosableEmbeddedMessage\n          isOpen={isShown}\n          className=\"inside-input\"\n          replyInfo={replyInfo}\n          isInComposer\n          message={strippedMessage}\n          sender={!noAuthors ? sender : undefined}\n          customText={customText}\n          title={(editingId && !isShowingReply) ? oldLang('EditMessage')\n            : noAuthors ? oldLang('HiddenSendersNameDescription') : undefined}\n          onClick={handleMessageClick}\n          senderChat={senderChat}\n        />\n        <Button\n          className=\"embedded-cancel\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={oldLang('Cancel')}\n          onClick={handleClearClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {(isShowingReply || isForwarding) && !isContextMenuDisabled && (\n          <Menu\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            getTriggerElement={getTriggerElement}\n            getRootElement={getRootElement}\n            getMenuElement={getMenuElement}\n            className=\"forward-context-menu\"\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          >\n            {isForwarding && (\n              <>\n                <MenuItem\n                  icon={!noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: false,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'ShowSenderNames' : 'ShowSendersName')}\n                </MenuItem>\n                <MenuItem\n                  icon={noAuthors ? 'message-succeeded' : undefined}\n                  customIcon={!noAuthors ? <Icon name=\"placeholder\" /> : undefined}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => setForwardNoAuthors({\n                    noAuthors: true,\n                  })}\n                >\n                  {oldLang(forwardedMessagesCount > 1 ? 'HideSenderNames' : 'HideSendersName')}\n                </MenuItem>\n                {forwardsHaveCaptions && (\n                  <>\n                    <MenuSeparator />\n                    <MenuItem\n                      icon={!noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: false,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.ShowCaption' : 'ShowCaption')}\n                    </MenuItem>\n                    <MenuItem\n                      icon={noCaptions ? 'message-succeeded' : undefined}\n                      customIcon={!noCaptions ? <Icon name=\"placeholder\" /> : undefined}\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => setForwardNoCaptions({\n                        noCaptions: true,\n                      })}\n                    >\n                      {oldLang(forwardedMessagesCount > 1 ? 'Conversation.ForwardOptions.HideCaption' : 'HideCaption')}\n                    </MenuItem>\n                  </>\n                )}\n                <MenuSeparator />\n                <MenuItem icon=\"replace\" onClick={handleForwardToAnotherChatClick}>\n                  {oldLang('ForwardAnotherChat')}\n                </MenuItem>\n              </>\n            )}\n            {isShowingReply && (\n              <>\n                <MenuItem\n                  icon=\"show-message\"\n                  onClick={handleShowMessageClick}\n                >\n                  {oldLang('Message.Context.Goto')}\n                </MenuItem>\n                {isReplyWithQuote && (\n                  <MenuItem\n                    icon=\"remove-quote\"\n                    onClick={handleRemoveQuoteClick}\n                  >\n                    {oldLang('RemoveQuote')}\n                  </MenuItem>\n                )}\n                {canReplyInSenderChat && (\n                  <MenuItem icon=\"user\" onClick={handleReplyInSenderChat}>\n                    {lang('ReplyInPrivateMessage')}\n                  </MenuItem>\n                )}\n                <MenuItem icon=\"replace\" onClick={handleChangeReplyRecipientClick}>\n                  {oldLang('ReplyToAnotherChat')}\n                </MenuItem>\n                <MenuItem icon=\"delete\" onClick={handleDoNotReplyClick}>\n                  {oldLang('DoNotReply')}\n                </MenuItem>\n              </>\n            )}\n          </Menu>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    shouldForceShowEditing, chatId, threadId, messageListType,\n  }): StateProps => {\n    const {\n      forwardMessages: {\n        fromChatId, toChatId, messageIds: forwardMessageIds, noAuthors, noCaptions,\n      },\n      isShareMessageModalShown: isModalShown,\n      shouldPreventComposerAnimation,\n    } = selectTabState(global);\n\n    const editingId = messageListType === 'scheduled'\n      ? selectEditingScheduledId(global, chatId)\n      : selectEditingId(global, chatId, threadId);\n    const shouldAnimate = selectCanAnimateInterface(global) && !shouldPreventComposerAnimation;\n    const isForwarding = toChatId === chatId;\n    const forwardedMessages = forwardMessageIds?.map((id) => selectChatMessage(global, fromChatId!, id)!);\n\n    const draft = selectDraft(global, chatId, threadId);\n    const replyInfo = draft?.replyInfo;\n    const replyToPeerId = replyInfo?.replyToPeerId;\n    const senderChat = replyToPeerId ? selectChat(global, replyToPeerId) : undefined;\n\n    let message: ApiMessage | undefined;\n    if (editingId) {\n      message = selectEditingMessage(global, chatId, threadId, messageListType);\n    } else if (isForwarding && forwardMessageIds!.length === 1) {\n      message = forwardedMessages?.[0];\n    } else if (replyInfo && !shouldForceShowEditing) {\n      message = selectChatMessage(global, replyInfo.replyToPeerId || chatId, replyInfo.replyToMsgId);\n    }\n\n    let sender: ApiPeer | undefined;\n\n    if (editingId && message) {\n      sender = selectSender(global, message);\n    } else if (isForwarding) {\n      if (message) {\n        sender = selectForwardedSender(global, message);\n        if (!sender) {\n          sender = selectSender(global, message);\n        }\n      }\n      if (!sender) {\n        sender = selectPeer(global, fromChatId!);\n      }\n    } else if (replyInfo && message && !shouldForceShowEditing) {\n      const { forwardInfo } = message;\n      const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n      if (forwardInfo && (forwardInfo.isChannelPost || isChatWithSelf)) {\n        sender = selectForwardedSender(global, message);\n      }\n\n      if (!sender && (!forwardInfo?.hiddenUserName || Boolean(replyInfo.quoteText))) {\n        sender = selectSender(global, message);\n      }\n    }\n\n    const chat = sender && selectChat(global, sender.id);\n    const isSenderChannel = chat && isChatChannel(chat);\n\n    const forwardsHaveCaptions = forwardedMessages?.some((forward) => (\n      forward?.content.text && Object.keys(forward.content).length > 1\n    ));\n\n    const isContextMenuDisabled = isForwarding && forwardMessageIds!.length === 1\n      && Boolean(message?.content.storyData);\n\n    const isReplyToDiscussion = replyInfo?.replyToMsgId === threadId && !replyInfo.replyToPeerId;\n\n    return {\n      replyInfo,\n      editingId,\n      message,\n      sender,\n      shouldAnimate,\n      forwardedMessagesCount: isForwarding ? forwardMessageIds!.length : undefined,\n      noAuthors,\n      noCaptions,\n      forwardsHaveCaptions,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isContextMenuDisabled,\n      isReplyToDiscussion,\n      isInChangingRecipientMode: isModalShown,\n      shouldPreventComposerAnimation,\n      senderChat,\n      currentUserId: global.currentUserId,\n      isSenderChannel,\n    };\n  },\n)(ComposerEmbeddedMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './DropArea';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst DropAreaAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const DropArea = useModuleLoader(Bundles.Extra, 'DropArea', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return DropArea ? <DropArea {...props} /> : undefined;\n};\n\nexport default DropAreaAsync;\nexport { DropAreaState } from './DropArea';\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './InlineBotTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst InlineBotTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const InlineBotTooltip = useModuleLoader(Bundles.Extra, 'InlineBotTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return InlineBotTooltip ? <InlineBotTooltip {...props} /> : undefined;\n};\n\nexport default InlineBotTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './MentionTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst MentionTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const MentionTooltip = useModuleLoader(Bundles.Extra, 'MentionTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return MentionTooltip ? <MentionTooltip {...props} /> : undefined;\n};\n\nexport default MentionTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './PollModal';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst PollModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const PollModal = useModuleLoader(Bundles.Extra, 'PollModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return PollModal ? <PollModal {...props} /> : undefined;\n};\n\nexport default PollModalAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SendAsMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SendAsMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SendAsMenu = useModuleLoader(Bundles.Extra, 'SendAsMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SendAsMenu ? <SendAsMenu {...props} /> : undefined;\n};\n\nexport default SendAsMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './StickerTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst StickerTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const StickerTooltip = useModuleLoader(Bundles.Extra, 'StickerTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return StickerTooltip ? <StickerTooltip {...props} /> : undefined;\n};\n\nexport default StickerTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiFormattedText, ApiMessage, ApiMessageEntityTextUrl, ApiWebPage,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ISettings, ThreadId, WebPageMediaSize } from '../../../types';\nimport type { Signal } from '../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../../../config';\nimport { selectNoWebPage, selectTabState, selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport { useDebouncedResolver } from '../../../hooks/useAsyncResolvers';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport WebPage from '../message/WebPage';\n\nimport './WebPagePreview.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  getHtml: Signal<string>;\n  isEditing: boolean;\n  isDisabled?: boolean;\n};\n\ntype StateProps = {\n  webPagePreview?: ApiWebPage;\n  noWebPage?: boolean;\n  theme: ISettings['theme'];\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst DEBOUNCE_MS = 300;\nconst RE_LINK = new RegExp(RE_LINK_TEMPLATE, 'i');\n\nconst WebPagePreview: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  getHtml,\n  isDisabled,\n  webPagePreview,\n  noWebPage,\n  theme,\n  attachmentSettings,\n  isEditing,\n}) => {\n  const {\n    loadWebPagePreview,\n    clearWebPagePreview,\n    toggleMessageWebPage,\n    updateAttachmentSettings,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const formattedTextWithLinkRef = useRef<ApiFormattedText>();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n  const isSmallerMedia = attachmentSettings.webPageMediaSize === 'small';\n\n  const detectLinkDebounced = useDebouncedResolver(() => {\n    const formattedText = parseHtmlAsFormattedText(getHtml());\n    const linkEntity = formattedText.entities?.find((entity): entity is ApiMessageEntityTextUrl => (\n      entity.type === ApiMessageEntityTypes.TextUrl\n    ));\n\n    formattedTextWithLinkRef.current = formattedText;\n\n    return linkEntity?.url || formattedText.text.match(RE_LINK)?.[0];\n  }, [getHtml], DEBOUNCE_MS, true);\n\n  const getLink = useDerivedSignal(detectLinkDebounced, [detectLinkDebounced, getHtml], true);\n\n  useEffect(() => {\n    const link = getLink();\n    const formattedText = formattedTextWithLinkRef.current;\n\n    if (link) {\n      loadWebPagePreview({ text: formattedText! });\n    } else {\n      clearWebPagePreview();\n      toggleMessageWebPage({ chatId, threadId });\n    }\n  }, [getLink, chatId, threadId]);\n\n  useSyncEffect(() => {\n    clearWebPagePreview();\n    toggleMessageWebPage({ chatId, threadId });\n  }, [chatId, clearWebPagePreview, threadId, toggleMessageWebPage]);\n\n  const isShown = useDerivedState(() => {\n    return Boolean(webPagePreview && getHtml() && !noWebPage && !isDisabled);\n  }, [isDisabled, getHtml, noWebPage, webPagePreview]);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isShown);\n\n  const hasMediaSizeOptions = webPagePreview?.hasLargeMedia;\n\n  const renderingWebPage = useCurrentOrPrev(webPagePreview, true);\n\n  const handleClearWebpagePreview = useLastCallback(() => {\n    toggleMessageWebPage({ chatId, threadId, noWebPage: true });\n  });\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref, isEditing, true);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(\n    () => ref.current!.querySelector('.web-page-preview-context-menu .bubble'),\n  );\n\n  const handlePreviewClick = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (!shouldRender || !renderingWebPage) {\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, handleContextMenuHide, shouldRender, renderingWebPage]);\n\n  function updateIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  function updateIsLargerMedia(value?: WebPageMediaSize) {\n    updateAttachmentSettings({ webPageMediaSize: value });\n  }\n\n  if (!shouldRender || !renderingWebPage) {\n    return undefined;\n  }\n\n  // TODO Refactor so `WebPage` can be used without message\n  const { photo, ...webPageWithoutPhoto } = renderingWebPage;\n  const messageStub = {\n    content: {\n      webPage: webPageWithoutPhoto,\n    },\n  } as ApiMessage;\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"web-page-preview-context-menu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          {\n            isInvertedMedia ? (\n              // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-up\" onClick={() => updateIsInvertedMedia(undefined)}>\n                {lang('PreviewSender.MoveTextUp')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"move-caption-down\" onClick={() => updateIsInvertedMedia(true)}>\n                {lang(('PreviewSender.MoveTextDown'))}\n              </MenuItem>\n            )\n          }\n          {hasMediaSizeOptions && (\n            isSmallerMedia ? (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"expand\" onClick={() => updateIsLargerMedia('large')}>\n                {lang('ChatInput.EditLink.LargerMedia')}\n              </MenuItem>\n            ) : (\n            // eslint-disable-next-line react/jsx-no-bind\n              <MenuItem icon=\"collapse\" onClick={() => updateIsLargerMedia('small')}>\n                {lang(('ChatInput.EditLink.SmallerMedia'))}\n              </MenuItem>\n            )\n          )}\n          <MenuItem\n            icon=\"delete\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClearWebpagePreview}\n          >\n            {lang('ChatInput.EditLink.RemovePreview')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  return (\n    <div className={buildClassName('WebPagePreview', transitionClassNames)} ref={ref}>\n      <div className=\"WebPagePreview_inner\">\n        <div className=\"WebPagePreview-left-icon\" onClick={handlePreviewClick}>\n          <Icon name=\"link\" />\n        </div>\n        <WebPage\n          message={messageStub}\n          inPreview\n          theme={theme}\n          onContainerClick={handlePreviewClick}\n          isEditing={isEditing}\n        />\n        <Button\n          className=\"WebPagePreview-clear\"\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel=\"Clear Webpage Preview\"\n          onClick={handleClearWebpagePreview}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        {!isEditing && renderContextMenu()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n    const {\n      attachmentSettings,\n    } = global;\n    return {\n      theme: selectTheme(global),\n      webPagePreview: selectTabState(global).webPagePreview,\n      noWebPage,\n      attachmentSettings,\n    };\n  },\n)(WebPagePreview));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAttachment,\n  ApiAttachMenuPeerType,\n  ApiAvailableEffect,\n  ApiAvailableReaction,\n  ApiBotCommand,\n  ApiBotInlineMediaResult,\n  ApiBotInlineResult,\n  ApiBotMenuButton,\n  ApiChat,\n  ApiChatFullInfo,\n  ApiDraft,\n  ApiFormattedText,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiNewPoll,\n  ApiQuickReply,\n  ApiReaction,\n  ApiStealthMode,\n  ApiSticker,\n  ApiTopic,\n  ApiUser,\n  ApiVideo,\n  ApiWebPage,\n} from '../../api/types';\nimport type {\n  GlobalState, TabState,\n} from '../../global/types';\nimport type {\n  IAnchorPosition,\n  InlineBotSettings,\n  ISettings,\n  MessageList,\n  MessageListType,\n  ThreadId,\n} from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  DEFAULT_MAX_MESSAGE_LENGTH,\n  EDITABLE_INPUT_MODAL_ID,\n  HEART_REACTION,\n  MAX_UPLOAD_FILEPART_SIZE,\n  ONE_TIME_MEDIA_TTL_SECONDS,\n  SCHEDULED_WHEN_ONLINE,\n  SEND_MESSAGE_ACTION_INTERVAL,\n  SERVICE_NOTIFICATIONS_USER_ID,\n} from '../../config';\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  canEditMedia,\n  getAllowedAttachmentOptions,\n  getReactionKey,\n  getStoryKey,\n  isChatAdmin,\n  isChatChannel,\n  isChatSuperGroup,\n  isSameReaction,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanPlayAnimatedEmojis,\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectChatType,\n  selectCurrentMessageList,\n  selectDraft,\n  selectEditingDraft,\n  selectEditingMessage,\n  selectEditingScheduledDraft,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectIsInSelectMode,\n  selectIsPremiumPurchaseBlocked,\n  selectIsReactionPickerOpen,\n  selectIsRightColumnShown,\n  selectNewestMessageWithBotKeyboardButtons,\n  selectNoWebPage,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectRequestedDraft,\n  selectRequestedDraftFiles,\n  selectTabState,\n  selectTheme,\n  selectTopicFromMessage,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { selectCurrentLimit } from '../../global/selectors/limits';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration, formatVoiceRecordDuration } from '../../util/dates/dateFormat';\nimport { processDeepLink } from '../../util/deeplink';\nimport { tryParseDeepLink } from '../../util/deepLinkParser';\nimport deleteLastCharacterOutsideSelection from '../../util/deleteLastCharacterOutsideSelection';\nimport { processMessageInputForCustomEmoji } from '../../util/emoji/customEmojiManager';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport parseHtmlAsFormattedText from '../../util/parseHtmlAsFormattedText';\nimport { insertHtmlInSelection } from '../../util/selection';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_IOS, IS_VOICE_RECORDING_SUPPORTED } from '../../util/windowEnvironment';\nimport windowSize from '../../util/windowSize';\nimport applyIosAutoCapitalizationFix from '../middle/composer/helpers/applyIosAutoCapitalizationFix';\nimport buildAttachment, { prepareAttachmentsToSend } from '../middle/composer/helpers/buildAttachment';\nimport { buildCustomEmojiHtml } from '../middle/composer/helpers/customEmoji';\nimport { isSelectionInsideInput } from '../middle/composer/helpers/selection';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\nimport { getTextWithEntitiesAsHtml } from './helpers/renderTextWithEntities';\n\nimport useInterval from '../../hooks/schedulers/useInterval';\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useGetSelectionRange from '../../hooks/useGetSelectionRange';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useSendMessageAction from '../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStateRef } from '../../hooks/useStateRef';\nimport useSyncEffect from '../../hooks/useSyncEffect';\nimport useAttachmentModal from '../middle/composer/hooks/useAttachmentModal';\nimport useChatCommandTooltip from '../middle/composer/hooks/useChatCommandTooltip';\nimport useClipboardPaste from '../middle/composer/hooks/useClipboardPaste';\nimport useCustomEmojiTooltip from '../middle/composer/hooks/useCustomEmojiTooltip';\nimport useDraft from '../middle/composer/hooks/useDraft';\nimport useEditing from '../middle/composer/hooks/useEditing';\nimport useEmojiTooltip from '../middle/composer/hooks/useEmojiTooltip';\nimport useInlineBotTooltip from '../middle/composer/hooks/useInlineBotTooltip';\nimport useMentionTooltip from '../middle/composer/hooks/useMentionTooltip';\nimport useStickerTooltip from '../middle/composer/hooks/useStickerTooltip';\nimport useVoiceRecording from '../middle/composer/hooks/useVoiceRecording';\n\nimport AttachmentModal from '../middle/composer/AttachmentModal.async';\nimport AttachMenu from '../middle/composer/AttachMenu';\nimport BotCommandMenu from '../middle/composer/BotCommandMenu.async';\nimport BotKeyboardMenu from '../middle/composer/BotKeyboardMenu';\nimport BotMenuButton from '../middle/composer/BotMenuButton';\nimport ChatCommandTooltip from '../middle/composer/ChatCommandTooltip.async';\nimport ComposerEmbeddedMessage from '../middle/composer/ComposerEmbeddedMessage';\nimport CustomEmojiTooltip from '../middle/composer/CustomEmojiTooltip.async';\nimport CustomSendMenu from '../middle/composer/CustomSendMenu.async';\nimport DropArea, { DropAreaState } from '../middle/composer/DropArea.async';\nimport EmojiTooltip from '../middle/composer/EmojiTooltip.async';\nimport InlineBotTooltip from '../middle/composer/InlineBotTooltip.async';\nimport MentionTooltip from '../middle/composer/MentionTooltip.async';\nimport MessageInput from '../middle/composer/MessageInput';\nimport PollModal from '../middle/composer/PollModal.async';\nimport SendAsMenu from '../middle/composer/SendAsMenu.async';\nimport StickerTooltip from '../middle/composer/StickerTooltip.async';\nimport SymbolMenuButton from '../middle/composer/SymbolMenuButton';\nimport WebPagePreview from '../middle/composer/WebPagePreview';\nimport MessageEffect from '../middle/message/MessageEffect';\nimport ReactionSelector from '../middle/message/reactions/ReactionSelector';\nimport Button from '../ui/Button';\nimport ResponsiveHoverButton from '../ui/ResponsiveHoverButton';\nimport Spinner from '../ui/Spinner';\nimport Avatar from './Avatar';\nimport Icon from './icons/Icon';\nimport ReactionAnimatedEmoji from './reactions/ReactionAnimatedEmoji';\n\nimport './Composer.scss';\n\ntype ComposerType = 'messageList' | 'story';\n\ntype OwnProps = {\n  type: ComposerType;\n  chatId: string;\n  threadId: ThreadId;\n  storyId?: number;\n  messageListType: MessageListType;\n  dropAreaState?: string;\n  isReady: boolean;\n  isMobile?: boolean;\n  inputId: string;\n  editableInputCssSelector: string;\n  editableInputId: string;\n  className?: string;\n  inputPlaceholder?: string;\n  onDropHide?: NoneToVoidFunction;\n  onForward?: NoneToVoidFunction;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    isOnActiveTab: boolean;\n    editingMessage?: ApiMessage;\n    chat?: ApiChat;\n    chatFullInfo?: ApiChatFullInfo;\n    draft?: ApiDraft;\n    replyToTopic?: ApiTopic;\n    currentMessageList?: MessageList;\n    isChatWithBot?: boolean;\n    isChatWithSelf?: boolean;\n    isChannel?: boolean;\n    isForCurrentMessageList: boolean;\n    isRightColumnShown?: boolean;\n    isSelectModeActive?: boolean;\n    isReactionPickerOpen?: boolean;\n    isForwarding?: boolean;\n    pollModal: TabState['pollModal'];\n    botKeyboardMessageId?: number;\n    botKeyboardPlaceholder?: string;\n    withScheduledButton?: boolean;\n    isInScheduledList?: boolean;\n    canScheduleUntilOnline?: boolean;\n    stickersForEmoji?: ApiSticker[];\n    customEmojiForEmoji?: ApiSticker[];\n    currentUserId?: string;\n    currentUser?: ApiUser;\n    recentEmojis: string[];\n    contentToBeScheduled?: TabState['contentToBeScheduled'];\n    shouldSuggestStickers?: boolean;\n    shouldSuggestCustomEmoji?: boolean;\n    baseEmojiKeywords?: Record<string, string[]>;\n    emojiKeywords?: Record<string, string[]>;\n    topInlineBotIds?: string[];\n    isInlineBotLoading: boolean;\n    inlineBots?: Record<string, false | InlineBotSettings>;\n    botCommands?: ApiBotCommand[] | false;\n    botMenuButton?: ApiBotMenuButton;\n    sendAsUser?: ApiUser;\n    sendAsChat?: ApiChat;\n    sendAsId?: string;\n    editingDraft?: ApiFormattedText;\n    requestedDraft?: ApiFormattedText;\n    requestedDraftFiles?: File[];\n    attachBots: GlobalState['attachMenu']['bots'];\n    attachMenuPeerType?: ApiAttachMenuPeerType;\n    theme: ISettings['theme'];\n    fileSizeLimit: number;\n    captionLimit: number;\n    isCurrentUserPremium?: boolean;\n    canSendVoiceByPrivacy?: boolean;\n    attachmentSettings: GlobalState['attachmentSettings'];\n    slowMode?: ApiChatFullInfo['slowMode'];\n    shouldUpdateStickerSetOrder?: boolean;\n    availableReactions?: ApiAvailableReaction[];\n    topReactions?: ApiReaction[];\n    canPlayAnimatedEmojis?: boolean;\n    canBuyPremium?: boolean;\n    shouldCollectDebugLogs?: boolean;\n    sentStoryReaction?: ApiReaction;\n    stealthMode?: ApiStealthMode;\n    canSendOneTimeMedia?: boolean;\n    quickReplyMessages?: Record<number, ApiMessage>;\n    quickReplies?: Record<number, ApiQuickReply>;\n    canSendQuickReplies?: boolean;\n    webPagePreview?: ApiWebPage;\n    noWebPage?: boolean;\n    isContactRequirePremium?: boolean;\n    effect?: ApiAvailableEffect;\n    effectReactions?: ApiReaction[];\n    areEffectsSupported?: boolean;\n    canPlayEffect?: boolean;\n    shouldPlayEffect?: boolean;\n    maxMessageLength: number;\n  };\n\nenum MainButtonState {\n  Send = 'send',\n  Record = 'record',\n  Edit = 'edit',\n  Schedule = 'schedule',\n  Forward = 'forward',\n  SendOneTime = 'sendOneTime',\n}\n\ntype ScheduledMessageArgs = TabState['contentToBeScheduled'] | {\n  id: string; queryId: string; isSilent?: boolean;\n};\n\nconst VOICE_RECORDING_FILENAME = 'wonderful-voice-message.ogg';\n// When voice recording is active, composer placeholder will hide to prevent overlapping\nconst SCREEN_WIDTH_TO_HIDE_PLACEHOLDER = 600; // px\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\nconst SELECT_MODE_TRANSITION_MS = 200;\nconst SENDING_ANIMATION_DURATION = 350;\nconst MOUNT_ANIMATION_DURATION = 430;\n\nconst Composer: FC<OwnProps & StateProps> = ({\n  type,\n  isOnActiveTab,\n  dropAreaState,\n  isInScheduledList,\n  canScheduleUntilOnline,\n  isReady,\n  isMobile,\n  onDropHide,\n  onFocus,\n  onBlur,\n  editingMessage,\n  chatId,\n  threadId,\n  storyId,\n  currentMessageList,\n  messageListType,\n  draft,\n  chat,\n  chatFullInfo,\n  replyToTopic,\n  isForCurrentMessageList,\n  isCurrentUserPremium,\n  canSendVoiceByPrivacy,\n  isChatWithBot,\n  isChatWithSelf,\n  isChannel,\n  fileSizeLimit,\n  isRightColumnShown,\n  isSelectModeActive,\n  isReactionPickerOpen,\n  isForwarding,\n  pollModal,\n  botKeyboardMessageId,\n  botKeyboardPlaceholder,\n  inputPlaceholder,\n  withScheduledButton,\n  stickersForEmoji,\n  customEmojiForEmoji,\n  topInlineBotIds,\n  currentUserId,\n  currentUser,\n  captionLimit,\n  contentToBeScheduled,\n  shouldSuggestStickers,\n  shouldSuggestCustomEmoji,\n  baseEmojiKeywords,\n  emojiKeywords,\n  recentEmojis,\n  inlineBots,\n  isInlineBotLoading,\n  botCommands,\n  sendAsUser,\n  sendAsChat,\n  sendAsId,\n  editingDraft,\n  requestedDraft,\n  requestedDraftFiles,\n  botMenuButton,\n  attachBots,\n  attachMenuPeerType,\n  attachmentSettings,\n  theme,\n  slowMode,\n  shouldUpdateStickerSetOrder,\n  editableInputCssSelector,\n  editableInputId,\n  inputId,\n  className,\n  availableReactions,\n  topReactions,\n  canBuyPremium,\n  canPlayAnimatedEmojis,\n  shouldCollectDebugLogs,\n  sentStoryReaction,\n  stealthMode,\n  canSendOneTimeMedia,\n  quickReplyMessages,\n  quickReplies,\n  canSendQuickReplies,\n  onForward,\n  webPagePreview,\n  noWebPage,\n  isContactRequirePremium,\n  effect,\n  effectReactions,\n  areEffectsSupported,\n  canPlayEffect,\n  shouldPlayEffect,\n  maxMessageLength,\n}) => {\n  const {\n    sendMessage,\n    clearDraft,\n    showDialog,\n    forwardMessages,\n    openPollModal,\n    closePollModal,\n    loadScheduledHistory,\n    openThread,\n    addRecentEmoji,\n    sendInlineBotResult,\n    loadSendAs,\n    resetOpenChatWithDraft,\n    callAttachBot,\n    addRecentCustomEmoji,\n    showNotification,\n    showAllowedMessageTypesNotification,\n    openStoryReactionPicker,\n    closeReactionPicker,\n    sendStoryReaction,\n    editMessage,\n    updateAttachmentSettings,\n    saveEffectInDraft,\n    setReactionEffect,\n    hideEffectInComposer,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const storyReactionRef = useRef<HTMLButtonElement>(null);\n\n  const [getHtml, setHtml] = useSignal('');\n  const [isMounted, setIsMounted] = useState(false);\n  const getSelectionRange = useGetSelectionRange(editableInputCssSelector);\n  const lastMessageSendTimeSeconds = useRef<number>();\n  const prevDropAreaState = usePreviousDeprecated(dropAreaState);\n  const { width: windowWidth } = windowSize.get();\n\n  const isInMessageList = type === 'messageList';\n  const isInStoryViewer = type === 'story';\n  const sendAsPeerIds = isInMessageList ? chat?.sendAsPeerIds : undefined;\n  const canShowSendAs = sendAsPeerIds\n    && (sendAsPeerIds.length > 1 || !sendAsPeerIds.some((peer) => peer.id === currentUserId!));\n  // Prevent Symbol Menu from closing when calendar is open\n  const [isSymbolMenuForced, forceShowSymbolMenu, cancelForceShowSymbolMenu] = useFlag();\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n  const [isInputHasFocus, markInputHasFocus, unmarkInputHasFocus] = useFlag();\n  const [isAttachMenuOpen, onAttachMenuOpen, onAttachMenuClose] = useFlag();\n\n  const canMediaBeReplaced = editingMessage && canEditMedia(editingMessage);\n\n  const { emojiSet, members: groupChatMembers, botCommands: chatBotCommands } = chatFullInfo || {};\n  const chatEmojiSetId = emojiSet?.id;\n\n  const isSentStoryReactionHeart = sentStoryReaction && isSameReaction(sentStoryReaction, HEART_REACTION);\n\n  useEffect(processMessageInputForCustomEmoji, [getHtml]);\n\n  const customEmojiNotificationNumber = useRef(0);\n\n  const [requestCalendar, calendar] = useSchedule(\n    isInMessageList && canScheduleUntilOnline,\n    cancelForceShowSymbolMenu,\n  );\n\n  useTimeout(() => {\n    setIsMounted(true);\n  }, MOUNT_ANIMATION_DURATION);\n\n  useEffect(() => {\n    if (isInMessageList) return;\n\n    closeReactionPicker();\n  }, [isInMessageList, storyId]);\n\n  useEffect(() => {\n    lastMessageSendTimeSeconds.current = undefined;\n  }, [chatId]);\n\n  useEffect(() => {\n    if (chatId && isReady && !isInStoryViewer) {\n      loadScheduledHistory({ chatId });\n    }\n  }, [isReady, chatId, threadId, isInStoryViewer]);\n\n  useEffect(() => {\n    const isChannelWithProfiles = isChannel && chat?.areProfilesShown;\n    if (chatId && chat && !sendAsPeerIds && isReady && (isChatSuperGroup(chat) || isChannelWithProfiles)) {\n      loadSendAs({ chatId });\n    }\n  }, [chat, chatId, isChannel, isReady, loadSendAs, sendAsPeerIds]);\n\n  const shouldAnimateSendAsButtonRef = useRef(false);\n  useSyncEffect(([prevChatId, prevSendAsPeerIds]) => {\n    // We only animate send-as button if `sendAsPeerIds` was missing when opening the chat\n    shouldAnimateSendAsButtonRef.current = Boolean(chatId === prevChatId && sendAsPeerIds && !prevSendAsPeerIds);\n  }, [chatId, sendAsPeerIds]);\n\n  const [attachments, setAttachments] = useState<ApiAttachment[]>([]);\n  const hasAttachments = Boolean(attachments.length);\n  const [nextText, setNextText] = useState<ApiFormattedText | undefined>(undefined);\n\n  const {\n    canSendStickers, canSendGifs, canAttachMedia, canAttachPolls, canAttachEmbedLinks,\n    canSendVoices, canSendPlainText, canSendAudios, canSendVideos, canSendPhotos, canSendDocuments,\n  } = useMemo(\n    () => getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot, isInStoryViewer),\n    [chat, chatFullInfo, isChatWithBot, isInStoryViewer],\n  );\n\n  const isNeedPremium = isContactRequirePremium && isInStoryViewer;\n  const isSendTextBlocked = isNeedPremium || !canSendPlainText;\n\n  const hasWebPagePreview = !hasAttachments && canAttachEmbedLinks && !noWebPage && Boolean(webPagePreview);\n  const isComposerBlocked = isSendTextBlocked && !editingMessage;\n\n  useEffect(() => {\n    if (!hasWebPagePreview) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [hasWebPagePreview]);\n\n  const insertHtmlAndUpdateCursor = useLastCallback((newHtml: string, inInputId: string = editableInputId) => {\n    if (inInputId === editableInputId && isComposerBlocked) return;\n    \n    const messageInput = inInputId === editableInputId\n      ? document.querySelector<HTMLDivElement>(editableInputCssSelector)\n      : document.getElementById(inInputId) as HTMLDivElement;\n\n    if (!messageInput) return;\n\n    messageInput.focus();\n    \n    if (document.queryCommandSupported('insertHTML')) {\n      document.execCommand('insertHTML', false, newHtml);\n    } else {\n      const selection = window.getSelection()!;\n      if (selection.rangeCount) {\n        const range = selection.getRangeAt(0);\n        if (isSelectionInsideInput(range, inInputId)) {\n          const fragment = range.createContextualFragment(newHtml);\n          range.deleteContents();\n          range.insertNode(fragment);\n        } else {\n          messageInput.innerHTML += newHtml;\n        }\n      } else {\n        messageInput.innerHTML += newHtml;\n      }\n    }\n\n    messageInput.dispatchEvent(new Event('input', { bubbles: true }));\n  });\n\n  const insertTextAndUpdateCursor = useLastCallback((\n    text: string, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = renderText(text, ['escape_html', 'emoji_html', 'br_html'])\n      .join('')\n      .replace(/\\u200b+/g, '\\u200b');\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertFormattedTextAndUpdateCursor = useLastCallback((\n    text: ApiFormattedText, inInputId: string = editableInputId,\n  ) => {\n    const newHtml = getTextWithEntitiesAsHtml(text);\n    insertHtmlAndUpdateCursor(newHtml, inInputId);\n  });\n\n  const insertCustomEmojiAndUpdateCursor = useLastCallback((emoji: ApiSticker, inInputId: string = editableInputId) => {\n    insertHtmlAndUpdateCursor(buildCustomEmojiHtml(emoji), inInputId);\n  });\n\n  const insertNextText = useLastCallback(() => {\n    if (!nextText) return;\n    insertFormattedTextAndUpdateCursor(nextText, editableInputId);\n    setNextText(undefined);\n  });\n\n  const {\n    shouldSuggestCompression,\n    shouldForceCompression,\n    shouldForceAsFile,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate,\n    handleClearAttachments,\n    handleSetAttachments,\n  } = useAttachmentModal({\n    attachments,\n    setHtml,\n    setAttachments,\n    fileSizeLimit,\n    chatId,\n    canSendAudios,\n    canSendVideos,\n    canSendPhotos,\n    canSendDocuments,\n    insertNextText,\n    editedMessage: editingMessage,\n  });\n\n  const [isBotKeyboardOpen, openBotKeyboard, closeBotKeyboard] = useFlag();\n  const [isBotCommandMenuOpen, openBotCommandMenu, closeBotCommandMenu] = useFlag();\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n  const [isSendAsMenuOpen, openSendAsMenu, closeSendAsMenu] = useFlag();\n  const [isHoverDisabled, disableHover, enableHover] = useFlag();\n\n  const {\n    startRecordingVoice,\n    stopRecordingVoice,\n    pauseRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef: mainButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  } = useVoiceRecording();\n\n  const shouldSendRecordingStatus = isForCurrentMessageList && !isInStoryViewer;\n  useInterval(() => {\n    sendMessageAction({ type: 'recordAudio' });\n  }, shouldSendRecordingStatus ? activeVoiceRecording && SEND_MESSAGE_ACTION_INTERVAL : undefined);\n\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (!activeVoiceRecording) {\n      sendMessageAction({ type: 'cancel' });\n    }\n  }, [activeVoiceRecording, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isEditingRef = useStateRef(Boolean(editingMessage));\n  useEffect(() => {\n    if (!isForCurrentMessageList || isInStoryViewer) return;\n    if (getHtml() && !isEditingRef.current) {\n      sendMessageAction({ type: 'typing' });\n    }\n  }, [getHtml, isEditingRef, isForCurrentMessageList, isInStoryViewer, sendMessageAction]);\n\n  const isAdmin = chat && isChatAdmin(chat);\n\n  const {\n    isEmojiTooltipOpen,\n    closeEmojiTooltip,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  } = useEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers && !hasAttachments),\n    getHtml,\n    setHtml,\n    undefined,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    closeCustomEmojiTooltip,\n    insertCustomEmoji,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && isOnActiveTab && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestCustomEmoji && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isStickerTooltipOpen,\n    closeStickerTooltip,\n  } = useStickerTooltip(\n    Boolean(isReady\n      && isOnActiveTab\n      && (isInStoryViewer || isForCurrentMessageList)\n      && shouldSuggestStickers\n      && canSendStickers\n      && !hasAttachments),\n    getHtml,\n    stickersForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    getHtml,\n    setHtml,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    topInlineBotIds,\n    currentUserId,\n  );\n\n  const {\n    isOpen: isInlineBotTooltipOpen,\n    botId: inlineBotId,\n    isGallery: isInlineBotTooltipGallery,\n    switchPm: inlineBotSwitchPm,\n    switchWebview: inlineBotSwitchWebview,\n    results: inlineBotResults,\n    closeTooltip: closeInlineBotTooltip,\n    help: inlineBotHelp,\n    loadMore: loadMoreForInlineBot,\n  } = useInlineBotTooltip(\n    Boolean(isInMessageList && isReady && isForCurrentMessageList && !hasAttachments),\n    chatId,\n    getHtml,\n    inlineBots,\n  );\n\n  const hasQuickReplies = Boolean(quickReplies && Object.keys(quickReplies).length);\n\n  const {\n    isOpen: isChatCommandTooltipOpen,\n    close: closeChatCommandTooltip,\n    filteredBotCommands: botTooltipCommands,\n    filteredQuickReplies: quickReplyCommands,\n  } = useChatCommandTooltip(\n    Boolean(isInMessageList\n      && isReady\n      && isForCurrentMessageList\n      && ((botCommands && botCommands?.length) || chatBotCommands?.length || (hasQuickReplies && canSendQuickReplies))),\n    getHtml,\n    botCommands,\n    chatBotCommands,\n    canSendQuickReplies ? quickReplies : undefined,\n  );\n\n  useDraft({\n    draft,\n    chatId,\n    threadId,\n    getHtml,\n    setHtml,\n    editedMessage: editingMessage,\n    isDisabled: isInStoryViewer || Boolean(requestedDraft),\n  });\n\n  const resetComposer = useLastCallback((shouldPreserveInput = false) => {\n    if (!shouldPreserveInput) {\n      setHtml('');\n    }\n\n    setAttachments(MEMO_EMPTY_ARRAY);\n    setNextText(undefined);\n\n    closeEmojiTooltip();\n    closeCustomEmojiTooltip();\n    closeStickerTooltip();\n    closeMentionTooltip();\n\n    if (isMobile) {\n      // @optimization\n      setTimeout(() => closeSymbolMenu(), SENDING_ANIMATION_DURATION);\n    } else {\n      closeSymbolMenu();\n    }\n  });\n\n  const [handleEditComplete, handleEditCancel, shouldForceShowEditing] = useEditing(\n    getHtml,\n    setHtml,\n    editingMessage,\n    resetComposer,\n    chatId,\n    threadId,\n    messageListType,\n    draft,\n    editingDraft,\n  );\n\n  // Handle chat change (should be placed after `useDraft` and `useEditing`)\n  const resetComposerRef = useStateRef(resetComposer);\n  const stopRecordingVoiceRef = useStateRef(stopRecordingVoice);\n  useEffect(() => {\n    return () => {\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      stopRecordingVoiceRef.current();\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      resetComposerRef.current();\n    };\n  }, [chatId, threadId, resetComposerRef, stopRecordingVoiceRef]);\n\n  const showCustomEmojiPremiumNotification = useLastCallback(() => {\n    const notificationNumber = customEmojiNotificationNumber.current;\n    if (!notificationNumber) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n    } else {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint2'),\n        action: {\n          action: 'openChat',\n          payload: { id: currentUserId, shouldReplaceHistory: true },\n        },\n        actionText: lang('Open'),\n      });\n    }\n    customEmojiNotificationNumber.current = Number(!notificationNumber);\n  });\n\n  const mainButtonState = useDerivedState(() => {\n    if (!isInputHasFocus && onForward && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Forward;\n    }\n\n    if (editingMessage && shouldForceShowEditing) {\n      return MainButtonState.Edit;\n    }\n\n    if (IS_VOICE_RECORDING_SUPPORTED && !activeVoiceRecording && !isForwarding && !(getHtml() && !hasAttachments)) {\n      return MainButtonState.Record;\n    }\n\n    if (isInScheduledList) {\n      return MainButtonState.Schedule;\n    }\n\n    return MainButtonState.Send;\n  }, [\n    activeVoiceRecording, editingMessage, getHtml, hasAttachments, isForwarding, isInputHasFocus, onForward,\n    shouldForceShowEditing, isInScheduledList,\n  ]);\n  const canShowCustomSendMenu = !isInScheduledList;\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !(mainButtonState === MainButtonState.Send && canShowCustomSendMenu));\n\n  const {\n    contextMenuAnchor: storyReactionPickerAnchor,\n    handleContextMenu: handleStoryPickerContextMenu,\n    handleBeforeContextMenu: handleBeforeStoryPickerContextMenu,\n    handleContextMenuHide: handleStoryPickerContextMenuHide,\n  } = useContextMenuHandlers(storyReactionRef, !isInStoryViewer);\n\n  useEffect(() => {\n    if (isReactionPickerOpen) return;\n\n    if (storyReactionPickerAnchor) {\n      openStoryReactionPicker({\n        peerId: chatId,\n        storyId: storyId!,\n        position: storyReactionPickerAnchor,\n      });\n      handleStoryPickerContextMenuHide();\n    }\n  }, [chatId, handleStoryPickerContextMenuHide, isReactionPickerOpen, storyId, storyReactionPickerAnchor]);\n\n  useClipboardPaste(\n    isForCurrentMessageList || isInStoryViewer,\n    insertFormattedTextAndUpdateCursor,\n    handleSetAttachments,\n    setNextText,\n    editingMessage,\n    !isCurrentUserPremium && !isChatWithSelf,\n    showCustomEmojiPremiumNotification,\n  );\n\n  const handleEmbeddedClear = useLastCallback(() => {\n    if (editingMessage) {\n      handleEditCancel();\n    }\n  });\n\n  const validateTextLength = useLastCallback((text: string, isAttachmentModal?: boolean) => {\n    const maxLength = isAttachmentModal ? captionLimit : maxMessageLength;\n    if (text?.length > maxLength) {\n      const extraLength = text.length - maxLength;\n      showDialog({\n        data: {\n          message: 'MESSAGE_TOO_LONG_PLEASE_REMOVE_CHARACTERS',\n          textParams: {\n            '{EXTRA_CHARS_COUNT}': extraLength.toString(),\n            '{PLURAL_S}': extraLength > 1 ? 's' : '',\n          },\n          hasErrorKey: true,\n        },\n      });\n\n      return false;\n    }\n    return true;\n  });\n\n  const checkSlowMode = useLastCallback(() => {\n    if (slowMode && !isAdmin) {\n      const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n      const nowSeconds = getServerTime();\n      const secondsSinceLastMessage = lastMessageSendTimeSeconds.current\n        && Math.floor(nowSeconds - lastMessageSendTimeSeconds.current);\n      const nextSendDateNotReached = slowMode.nextSendDate && slowMode.nextSendDate > nowSeconds;\n\n      if (\n        (secondsSinceLastMessage && secondsSinceLastMessage < slowMode.seconds)\n        || nextSendDateNotReached\n      ) {\n        const secondsRemaining = nextSendDateNotReached\n          ? slowMode.nextSendDate! - nowSeconds\n          : slowMode.seconds - secondsSinceLastMessage!;\n        showDialog({\n          data: {\n            message: lang('SlowModeHint', formatMediaDuration(secondsRemaining)),\n            isSlowMode: true,\n            hasErrorKey: false,\n          },\n        });\n\n        messageInput?.blur();\n\n        return false;\n      }\n    }\n    return true;\n  });\n\n  const sendAttachments = useLastCallback(({\n    attachments: attachmentsToSend,\n    sendCompressed = attachmentSettings.shouldCompress,\n    sendGrouped = attachmentSettings.shouldSendGrouped,\n    isSilent,\n    scheduledAt,\n    isInvertedMedia,\n  }: {\n    attachments: ApiAttachment[];\n    sendCompressed?: boolean;\n    sendGrouped?: boolean;\n    isSilent?: boolean;\n    scheduledAt?: number;\n    isInvertedMedia?: true;\n  }) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n    if (!text && !attachmentsToSend.length) {\n      return;\n    }\n    if (!validateTextLength(text, true)) return;\n    if (!checkSlowMode()) return;\n\n    isInvertedMedia = text && sendCompressed && sendGrouped ? isInvertedMedia : undefined;\n\n    if (editingMessage) {\n      editMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        attachments: prepareAttachmentsToSend(attachmentsToSend, sendCompressed),\n        shouldGroupMessages: sendGrouped,\n        isInvertedMedia,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n\n    clearDraft({ chatId, isLocalOnly: true });\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleSendAttachmentsFromModal = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSendAttachments = useLastCallback((\n    sendCompressed: boolean,\n    sendGrouped: boolean,\n    isSilent?: boolean,\n    scheduledAt?: number,\n    isInvertedMedia?: true,\n  ) => {\n    sendAttachments({\n      attachments,\n      sendCompressed,\n      sendGrouped,\n      isSilent,\n      scheduledAt,\n      isInvertedMedia,\n    });\n  });\n\n  const handleSend = useLastCallback(async (isSilent = false, scheduledAt?: number) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    let currentAttachments = attachments;\n\n    if (activeVoiceRecording) {\n      const record = await stopRecordingVoice();\n      const ttlSeconds = isViewOnceEnabled ? ONE_TIME_MEDIA_TTL_SECONDS : undefined;\n      if (record) {\n        const { blob, duration, waveform } = record;\n        currentAttachments = [await buildAttachment(\n          VOICE_RECORDING_FILENAME,\n          blob,\n          { voice: { duration, waveform }, ttlSeconds },\n        )];\n      }\n    }\n\n    const { text, entities } = parseHtmlAsFormattedText(getHtml());\n\n    if (currentAttachments.length) {\n      sendAttachments({\n        attachments: currentAttachments,\n        scheduledAt,\n        isSilent,\n      });\n      return;\n    }\n\n    if (!text && !isForwarding) {\n      return;\n    }\n\n    if (!validateTextLength(text)) return;\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    const effectId = effect?.id;\n\n    if (text) {\n      if (!checkSlowMode()) return;\n\n      const isInvertedMedia = hasWebPagePreview ? attachmentSettings.isInvertedMedia : undefined;\n\n      if (areEffectsSupported) saveEffectInDraft({ chatId, threadId, effectId: undefined });\n\n      sendMessage({\n        messageList: currentMessageList,\n        text,\n        entities,\n        scheduledAt,\n        isSilent,\n        shouldUpdateStickerSetOrder,\n        isInvertedMedia,\n        effectId,\n        webPageMediaSize: attachmentSettings.webPageMediaSize,\n        webPageUrl: hasWebPagePreview ? webPagePreview!.url : undefined,\n      });\n    }\n\n    if (isForwarding) {\n      forwardMessages({\n        scheduledAt,\n        isSilent,\n      });\n    }\n\n    lastMessageSendTimeSeconds.current = getServerTime();\n    clearDraft({\n      chatId, threadId, isLocalOnly: true, shouldKeepReply: isForwarding,\n    });\n\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    // Wait until message animation starts\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleClickBotMenu = useLastCallback(() => {\n    if (botMenuButton?.type !== 'webApp') {\n      return;\n    }\n\n    const parsedLink = tryParseDeepLink(botMenuButton.url);\n\n    if (parsedLink?.type === 'publicUsernameOrBotLink' && parsedLink.appName) {\n      processDeepLink(botMenuButton.url);\n    } else {\n      callAttachBot({\n        chatId, url: botMenuButton.url, threadId,\n      });\n    }\n  });\n\n  const handleActivateBotCommandMenu = useLastCallback(() => {\n    closeSymbolMenu();\n    openBotCommandMenu();\n  });\n\n  const handleMessageSchedule = useLastCallback((\n    args: ScheduledMessageArgs, scheduledAt: number, messageList: MessageList, effectId?: string,\n  ) => {\n    if (args && 'queryId' in args) {\n      const { id, queryId, isSilent } = args;\n      sendInlineBotResult({\n        id,\n        queryId,\n        scheduledAt,\n        isSilent,\n        messageList,\n      });\n      return;\n    }\n\n    const { isSilent, ...restArgs } = args || {};\n\n    if (!args || Object.keys(restArgs).length === 0) {\n      void handleSend(Boolean(isSilent), scheduledAt);\n    } else if (args.sendCompressed !== undefined || args.sendGrouped !== undefined) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = args;\n      void handleSendAttachments(sendCompressed, sendGrouped, isSilent, scheduledAt, isInvertedMedia);\n    } else {\n      sendMessage({\n        ...args,\n        messageList,\n        scheduledAt,\n        effectId,\n      });\n    }\n  });\n\n  useEffectWithPrevDeps(([prevContentToBeScheduled]) => {\n    if (currentMessageList && contentToBeScheduled && contentToBeScheduled !== prevContentToBeScheduled) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule(contentToBeScheduled, scheduledAt, currentMessageList);\n      });\n    }\n  }, [contentToBeScheduled, currentMessageList, handleMessageSchedule, requestCalendar]);\n\n  useEffect(() => {\n    if (requestedDraft) {\n      insertFormattedTextAndUpdateCursor(requestedDraft);\n      resetOpenChatWithDraft();\n\n      requestNextMutation(() => {\n        const messageInput = document.getElementById(editableInputId)!;\n        focusEditableElement(messageInput, true);\n      });\n    }\n  }, [editableInputId, requestedDraft, resetOpenChatWithDraft, setHtml]);\n\n  useEffect(() => {\n    if (requestedDraftFiles?.length) {\n      void handleFileSelect(requestedDraftFiles);\n      resetOpenChatWithDraft();\n    }\n  }, [handleFileSelect, requestedDraftFiles, resetOpenChatWithDraft]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker, inInputId?: string) => {\n    const emojiSetId = 'id' in emoji.stickerSetInfo && emoji.stickerSetInfo.id;\n    if (!emoji.isFree && !isCurrentUserPremium && !isChatWithSelf && emojiSetId !== chatEmojiSetId) {\n      showCustomEmojiPremiumNotification();\n      return;\n    }\n\n    insertCustomEmojiAndUpdateCursor(emoji, inInputId);\n  });\n\n  const handleCustomEmojiSelectAttachmentModal = useLastCallback((emoji: ApiSticker) => {\n    handleCustomEmojiSelect(emoji, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleGifSelect = useLastCallback((gif: ApiVideo, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ gif, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(true);\n        });\n      });\n    } else {\n      sendMessage({ messageList: currentMessageList, gif, isSilent });\n      requestMeasure(() => {\n        resetComposer(true);\n      });\n    }\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    isScheduleRequested?: boolean,\n    shouldPreserveInput = false,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (isInScheduledList || isScheduleRequested) {\n      forceShowSymbolMenu();\n      requestCalendar((scheduledAt) => {\n        cancelForceShowSymbolMenu();\n        handleMessageSchedule({ sticker, isSilent }, scheduledAt, currentMessageList!);\n        requestMeasure(() => {\n          resetComposer(shouldPreserveInput);\n        });\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && canUpdateStickerSetsOrder,\n      });\n      clearDraft({ chatId, threadId, isLocalOnly: true });\n\n      requestMeasure(() => {\n        resetComposer(shouldPreserveInput);\n      });\n    }\n  });\n\n  const handleInlineBotSelect = useLastCallback((\n    inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult, isSilent?: boolean, isScheduleRequested?: boolean,\n  ) => {\n    if (!currentMessageList && !storyId) {\n      return;\n    }\n\n    if (isInScheduledList || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({\n          id: inlineResult.id,\n          queryId: inlineResult.queryId,\n          isSilent,\n        }, scheduledAt, currentMessageList!);\n      });\n    } else {\n      sendInlineBotResult({\n        id: inlineResult.id,\n        queryId: inlineResult.queryId,\n        isSilent,\n        messageList: currentMessageList!,\n      });\n    }\n\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n    if (IS_IOS && messageInput && messageInput === document.activeElement) {\n      applyIosAutoCapitalizationFix(messageInput);\n    }\n\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handleBotCommandSelect = useLastCallback(() => {\n    clearDraft({ chatId, isLocalOnly: true });\n    requestMeasure(() => {\n      resetComposer();\n    });\n  });\n\n  const handlePollSend = useLastCallback((poll: ApiNewPoll) => {\n    if (!currentMessageList) {\n      return;\n    }\n\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ poll }, scheduledAt, currentMessageList);\n      });\n      closePollModal();\n    } else {\n      sendMessage({ messageList: currentMessageList, poll });\n      closePollModal();\n    }\n  });\n\n  const sendSilent = useLastCallback((additionalArgs?: ScheduledMessageArgs) => {\n    if (isInScheduledList) {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ ...additionalArgs, isSilent: true }, scheduledAt, currentMessageList!);\n      });\n    } else if (additionalArgs && ('sendCompressed' in additionalArgs || 'sendGrouped' in additionalArgs)) {\n      const { sendCompressed = false, sendGrouped = false, isInvertedMedia } = additionalArgs;\n      void handleSendAttachments(sendCompressed, sendGrouped, true, undefined, isInvertedMedia);\n    } else {\n      void handleSend(true);\n    }\n  });\n\n  const handleSendAsMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(editableInputCssSelector);\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu();\n      closeSymbolMenu();\n      openSendAsMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  useEffect(() => {\n    if (!isComposerBlocked) return;\n\n    setHtml('');\n  }, [isComposerBlocked, setHtml, attachments]);\n\n  const insertTextAndUpdateCursorAttachmentModal = useLastCallback((text: string) => {\n    insertTextAndUpdateCursor(text, EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const removeSymbol = useLastCallback((inInputId = editableInputId) => {\n    const selection = window.getSelection()!;\n\n    if (selection.rangeCount) {\n      const selectionRange = selection.getRangeAt(0);\n      if (isSelectionInsideInput(selectionRange, inInputId)) {\n        document.execCommand('delete', false);\n        return;\n      }\n    }\n\n    //setHtml(deleteLastCharacterOutsideSelection(getHtml()));\n    deleteLastCharacterOutsideSelection(inInputId);\n  });\n\n  const removeSymbolAttachmentModal = useLastCallback(() => {\n    removeSymbol(EDITABLE_INPUT_MODAL_ID);\n  });\n\n  const handleAllScheduledClick = useLastCallback(() => {\n    openThread({\n      chatId, threadId, type: 'scheduled', noForumTopicPanel: true,\n    });\n  });\n\n  useEffect(() => {\n    if (isRightColumnShown && isMobile) {\n      closeSymbolMenu();\n    }\n  }, [isRightColumnShown, closeSymbolMenu, isMobile]);\n\n  useEffect(() => {\n    if (!isReady) return;\n\n    if (isSelectModeActive) {\n      disableHover();\n    } else {\n      setTimeout(() => {\n        enableHover();\n      }, SELECT_MODE_TRANSITION_MS);\n    }\n  }, [isSelectModeActive, enableHover, disableHover, isReady]);\n\n  const withBotMenuButton = isChatWithBot && botMenuButton?.type === 'webApp' && !editingMessage;\n  const isBotMenuButtonOpen = useDerivedState(() => {\n    return withBotMenuButton && !getHtml() && !activeVoiceRecording;\n  }, [withBotMenuButton, getHtml, activeVoiceRecording]);\n\n  const [timedPlaceholderLangKey, timedPlaceholderDate] = useMemo(() => {\n    if (slowMode?.nextSendDate) {\n      return ['SlowModeWait', slowMode.nextSendDate];\n    }\n\n    if (stealthMode?.activeUntil && isInStoryViewer) {\n      return ['StealthModeActiveHint', stealthMode.activeUntil];\n    }\n\n    return [];\n  }, [isInStoryViewer, slowMode?.nextSendDate, stealthMode?.activeUntil]);\n\n  const isComposerHasFocus = isBotKeyboardOpen || isSymbolMenuOpen || isEmojiTooltipOpen || isSendAsMenuOpen\n    || isMentionTooltipOpen || isInlineBotTooltipOpen || isBotCommandMenuOpen || isAttachMenuOpen\n    || isStickerTooltipOpen || isChatCommandTooltipOpen || isCustomEmojiTooltipOpen || isBotMenuButtonOpen\n  || isCustomSendMenuOpen || Boolean(activeVoiceRecording) || attachments.length > 0 || isInputHasFocus;\n  const isReactionSelectorOpen = isComposerHasFocus && !isReactionPickerOpen && isInStoryViewer && !isAttachMenuOpen\n    && !isSymbolMenuOpen;\n  const placeholderForForumAsMessages = chat?.isForum && chat?.isForumAsMessages && threadId === MAIN_THREAD_ID\n    ? (replyToTopic\n      ? lang('Chat.InputPlaceholderReplyInTopic', replyToTopic.title)\n      : lang('Message.Placeholder.MessageInGeneral'))\n    : undefined;\n\n  useEffect(() => {\n    if (isComposerHasFocus) {\n      onFocus?.();\n    } else {\n      onBlur?.();\n    }\n  }, [isComposerHasFocus, onBlur, onFocus]);\n\n  const {\n    shouldRender: shouldRenderReactionSelector,\n    transitionClassNames: reactionSelectorTransitonClassNames,\n  } = useShowTransitionDeprecated(isReactionSelectorOpen);\n  const areVoiceMessagesNotAllowed = mainButtonState === MainButtonState.Record\n    && (!canAttachMedia || !canSendVoiceByPrivacy || !canSendVoices);\n\n  const mainButtonHandler = useLastCallback(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Forward:\n        onForward?.();\n        break;\n      case MainButtonState.Send:\n        void handleSend();\n        break;\n      case MainButtonState.Record: {\n        if (areVoiceMessagesNotAllowed) {\n          if (!canSendVoiceByPrivacy) {\n            showNotification({\n              message: lang('VoiceMessagesRestrictedByPrivacy', chat?.title),\n            });\n          } else if (!canSendVoices) {\n            showAllowedMessageTypesNotification({ chatId });\n          }\n        } else {\n          setIsViewOnceEnabled(false);\n          void startRecordingVoice();\n        }\n        break;\n      }\n      case MainButtonState.Edit:\n        handleEditComplete();\n        break;\n      case MainButtonState.Schedule:\n        if (activeVoiceRecording) {\n          pauseRecordingVoice();\n        }\n        if (!currentMessageList) {\n          return;\n        }\n        requestCalendar((scheduledAt) => {\n          handleMessageSchedule({}, scheduledAt, currentMessageList, effect?.id);\n        });\n        break;\n      default:\n        break;\n    }\n  });\n\n  const scheduledDefaultDate = new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  let sendButtonAriaLabel = 'SendMessage';\n  switch (mainButtonState) {\n    case MainButtonState.Forward:\n      sendButtonAriaLabel = 'Forward';\n      break;\n    case MainButtonState.Edit:\n      sendButtonAriaLabel = 'Save edited message';\n      break;\n    case MainButtonState.Record:\n      sendButtonAriaLabel = !canAttachMedia\n        ? 'Conversation.DefaultRestrictedMedia'\n        : 'AccDescrVoiceMessage';\n  }\n\n  const fullClassName = buildClassName(\n    'Composer',\n    !isSelectModeActive && 'shown',\n    isHoverDisabled && 'hover-disabled',\n    isMounted && 'mounted',\n    className,\n  );\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReaction) => {\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if (reaction.type === 'emoji') {\n      text = reaction.emoticon;\n    }\n\n    if (reaction.type === 'custom') {\n      const sticker = getGlobal().customEmojis.byId[reaction.documentId];\n      if (!sticker) {\n        return;\n      }\n\n      if (!sticker.isFree && !isCurrentUserPremium && !isChatWithSelf) {\n        showCustomEmojiPremiumNotification();\n        return;\n      }\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleToggleEffectReaction = useLastCallback((reaction: ApiReaction) => {\n    setReactionEffect({ chatId, threadId, reaction });\n\n    closeReactionPicker();\n  });\n\n  const handleReactionPickerOpen = useLastCallback((position: IAnchorPosition) => {\n    openStoryReactionPicker({\n      peerId: chatId,\n      storyId: storyId!,\n      position,\n      sendAsMessage: true,\n    });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentStoryReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId: chatId,\n      storyId: storyId!,\n      containerId: getStoryKey(chatId, storyId!),\n      reaction,\n    });\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    requestCalendar((scheduledAt) => {\n      handleMessageSchedule({}, scheduledAt, currentMessageList!);\n    });\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendSilent();\n  });\n\n  const handleSendWhenOnline = useLastCallback(() => {\n    handleMessageSchedule({}, SCHEDULED_WHEN_ONLINE, currentMessageList!, effect?.id);\n  });\n\n  const handleSendScheduledAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      requestCalendar((scheduledAt) => {\n        handleMessageSchedule({ sendCompressed, sendGrouped, isInvertedMedia }, scheduledAt, currentMessageList!);\n      });\n    },\n  );\n\n  const handleSendSilentAttachments = useLastCallback(\n    (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => {\n      sendSilent({ sendCompressed, sendGrouped, isInvertedMedia });\n    },\n  );\n\n  const handleRemoveEffect = useLastCallback(() => { saveEffectInDraft({ chatId, threadId, effectId: undefined }); });\n\n  const handleStopEffect = useLastCallback(() => { hideEffectInComposer({ }); });\n\n  const onSend = useMemo(() => {\n    switch (mainButtonState) {\n      case MainButtonState.Edit:\n        return handleEditComplete;\n      case MainButtonState.Schedule:\n        return handleSendScheduled;\n      default:\n        return handleSend;\n    }\n  }, [mainButtonState, handleEditComplete]);\n\n  const withBotCommands = isChatWithBot && botMenuButton?.type === 'commands' && !editingMessage\n    && botCommands !== false && !activeVoiceRecording;\n\n  const effectEmoji = areEffectsSupported && effect?.emoticon;\n\n  return (\n    <div className={fullClassName}>\n      {isInMessageList && canAttachMedia && isReady && (\n        <DropArea\n          isOpen={dropAreaState !== DropAreaState.None}\n          withQuick={dropAreaState === DropAreaState.QuickFile || prevDropAreaState === DropAreaState.QuickFile}\n          onHide={onDropHide!}\n          onFileSelect={handleFileSelect}\n          editingMessage={editingMessage}\n        />\n      )}\n      {shouldRenderReactionSelector && !isNeedPremium && (\n        <ReactionSelector\n          topReactions={topReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleReaction}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleReactionPickerOpen}\n          className={reactionSelectorTransitonClassNames}\n        />\n      )}\n      <AttachmentModal\n        chatId={chatId}\n        threadId={threadId}\n        canShowCustomSendMenu={canShowCustomSendMenu}\n        attachments={attachments}\n        getHtml={getHtml}\n        isReady={isReady}\n        shouldSuggestCompression={shouldSuggestCompression}\n        shouldForceCompression={shouldForceCompression}\n        shouldForceAsFile={shouldForceAsFile}\n        isForCurrentMessageList={isForCurrentMessageList}\n        isForMessage={isInMessageList}\n        shouldSchedule={isInScheduledList}\n        forceDarkTheme={isInStoryViewer}\n        onCaptionUpdate={onCaptionUpdate}\n        onSendSilent={handleSendSilentAttachments}\n        onSend={handleSendAttachmentsFromModal}\n        onSendScheduled={handleSendScheduledAttachments}\n        onFileAppend={handleAppendFiles}\n        onClear={handleClearAttachments}\n        onAttachmentsUpdate={handleSetAttachments}\n        onCustomEmojiSelect={handleCustomEmojiSelectAttachmentModal}\n        onRemoveSymbol={removeSymbolAttachmentModal}\n        onEmojiSelect={insertTextAndUpdateCursorAttachmentModal}\n        editingMessage={editingMessage}\n        onSendWhenOnline={handleSendWhenOnline}\n        canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n      />\n      <PollModal\n        isOpen={pollModal.isOpen}\n        isQuiz={pollModal.isQuiz}\n        shouldBeAnonymous={isChannel}\n        onClear={closePollModal}\n        onSend={handlePollSend}\n      />\n      <SendAsMenu\n        isOpen={isSendAsMenuOpen}\n        onClose={closeSendAsMenu}\n        chatId={chatId}\n        selectedSendAsId={sendAsId}\n        sendAsPeerIds={sendAsPeerIds}\n        isCurrentUserPremium={isCurrentUserPremium}\n      />\n      <MentionTooltip\n        isOpen={isMentionTooltipOpen}\n        filteredUsers={mentionFilteredUsers}\n        onInsertUserName={insertMention}\n        onClose={closeMentionTooltip}\n      />\n      <ChatCommandTooltip\n        isOpen={isChatCommandTooltipOpen}\n        chatId={chatId}\n        withUsername={Boolean(chatBotCommands)}\n        botCommands={botTooltipCommands}\n        quickReplies={quickReplyCommands}\n        getHtml={getHtml}\n        self={currentUser!}\n        quickReplyMessages={quickReplyMessages}\n        onClick={handleBotCommandSelect}\n        onClose={closeChatCommandTooltip}\n      />\n      <div className={\n        buildClassName('composer-wrapper', isInStoryViewer && 'with-story-tweaks', isNeedPremium && 'is-need-premium')\n      }\n      >\n        {!isNeedPremium && (\n          <svg className=\"svg-appendix\" width=\"9\" height=\"20\">\n            <defs>\n              <filter\n                x=\"-50%\"\n                y=\"-14.7%\"\n                width=\"200%\"\n                height=\"141.2%\"\n                filterUnits=\"objectBoundingBox\"\n                id=\"composerAppendix\"\n              >\n                <feOffset dy=\"1\" in=\"SourceAlpha\" result=\"shadowOffsetOuter1\" />\n                <feGaussianBlur stdDeviation=\"1\" in=\"shadowOffsetOuter1\" result=\"shadowBlurOuter1\" />\n                <feColorMatrix\n                  values=\"0 0 0 0 0.0621962482 0 0 0 0 0.138574144 0 0 0 0 0.185037364 0 0 0 0.15 0\"\n                  in=\"shadowBlurOuter1\"\n                />\n              </filter>\n            </defs>\n            <g fill=\"none\" fill-rule=\"evenodd\">\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#000\" filter=\"url(#composerAppendix)\" />\n              <path d=\"M6 17H0V0c.193 2.84.876 5.767 2.05 8.782.904 2.325 2.446 4.485 4.625 6.48A1 1 0 016 17z\" fill=\"#FFF\" className=\"corner\" />\n            </g>\n          </svg>\n        )}\n        {isInMessageList && (\n          <>\n            <InlineBotTooltip\n              isOpen={isInlineBotTooltipOpen}\n              botId={inlineBotId}\n              isGallery={isInlineBotTooltipGallery}\n              inlineBotResults={inlineBotResults}\n              switchPm={inlineBotSwitchPm}\n              switchWebview={inlineBotSwitchWebview}\n              loadMore={loadMoreForInlineBot}\n              isSavedMessages={isChatWithSelf}\n              canSendGifs={canSendGifs}\n              isCurrentUserPremium={isCurrentUserPremium}\n              onSelectResult={handleInlineBotSelect}\n              onClose={closeInlineBotTooltip}\n            />\n            <ComposerEmbeddedMessage\n              onClear={handleEmbeddedClear}\n              shouldForceShowEditing={Boolean(shouldForceShowEditing && editingMessage)}\n              chatId={chatId}\n              threadId={threadId}\n              messageListType={messageListType}\n            />\n            <WebPagePreview\n              chatId={chatId}\n              threadId={threadId}\n              getHtml={getHtml}\n              isDisabled={!canAttachEmbedLinks || hasAttachments}\n              isEditing={Boolean(editingMessage)}\n            />\n          </>\n        )}\n        <div className={buildClassName('message-input-wrapper', getPeerColorClass(currentUser))}>\n          {isInMessageList && (\n            <>\n              {withBotMenuButton && (\n                <BotMenuButton\n                  isOpen={isBotMenuButtonOpen}\n                  text={botMenuButton.text}\n                  isDisabled={Boolean(activeVoiceRecording)}\n                  onClick={handleClickBotMenu}\n                />\n              )}\n              {withBotCommands && (\n                <ResponsiveHoverButton\n                  className={buildClassName('bot-commands', isBotCommandMenuOpen && 'activated')}\n                  round\n                  disabled={botCommands === undefined}\n                  color=\"translucent\"\n                  onActivate={handleActivateBotCommandMenu}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-commands-filled\" />\n                </ResponsiveHoverButton>\n              )}\n              {canShowSendAs && (sendAsUser || sendAsChat) && (\n                <Button\n                  round\n                  color=\"translucent\"\n                  onClick={isSendAsMenuOpen ? closeSendAsMenu : handleSendAsMenuOpen}\n                  ariaLabel={lang('SendMessageAsTitle')}\n                  className={buildClassName(\n                    'send-as-button',\n                    shouldAnimateSendAsButtonRef.current && 'appear-animation',\n                  )}\n                >\n                  <Avatar\n                    peer={sendAsUser || sendAsChat}\n                    size=\"tiny\"\n                  />\n                </Button>\n              )}\n            </>\n          )}\n          {((!isComposerBlocked || canSendGifs || canSendStickers) && !isNeedPremium) && (\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              canSendStickers={canSendStickers}\n              canSendGifs={canSendGifs}\n              isMessageComposer={isInMessageList}\n              onGifSelect={handleGifSelect}\n              onStickerSelect={handleStickerSelect}\n              onCustomEmojiSelect={handleCustomEmojiSelect}\n              onRemoveSymbol={() => removeSymbol()}\n              onEmojiSelect={insertTextAndUpdateCursor}\n              closeBotCommandMenu={closeBotCommandMenu}\n              closeSendAsMenu={closeSendAsMenu}\n              isSymbolMenuForced={isSymbolMenuForced}\n              canSendPlainText={!isComposerBlocked}\n              inputCssSelector={editableInputCssSelector}\n              idPrefix={type}\n              forceDarkTheme={isInStoryViewer}\n            />\n          )}\n          <MessageInput\n            ref={inputRef}\n            id={inputId}\n            editableInputId={editableInputId}\n            customEmojiPrefix={type}\n            isStoryInput={isInStoryViewer}\n            chatId={chatId}\n            canSendPlainText={!isComposerBlocked}\n            threadId={threadId}\n            isReady={isReady}\n            isActive={!hasAttachments}\n            getHtml={getHtml}\n            placeholder={\n              activeVoiceRecording && windowWidth <= SCREEN_WIDTH_TO_HIDE_PLACEHOLDER\n                ? ''\n                : (!isComposerBlocked\n                  ? (botKeyboardPlaceholder || inputPlaceholder || lang(placeholderForForumAsMessages || 'Message'))\n                  : isInStoryViewer ? lang('StoryRepliesLocked') : lang('Chat.PlaceholderTextNotAllowed'))\n            }\n            timedPlaceholderDate={timedPlaceholderDate}\n            timedPlaceholderLangKey={timedPlaceholderLangKey}\n            forcedPlaceholder={inlineBotHelp}\n            canAutoFocus={isReady && isForCurrentMessageList && !hasAttachments && isInMessageList}\n            noFocusInterception={hasAttachments}\n            shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n            shouldSuppressTextFormatter={isEmojiTooltipOpen || isMentionTooltipOpen || isInlineBotTooltipOpen}\n            onUpdate={setHtml}\n            onSend={onSend}\n            onSuppressedFocus={closeSymbolMenu}\n            onFocus={markInputHasFocus}\n            onBlur={unmarkInputHasFocus}\n            isNeedPremium={isNeedPremium}\n          />\n          {isInMessageList && (\n            <>\n              {isInlineBotLoading && Boolean(inlineBotId) && (\n                <Spinner color=\"gray\" />\n              )}\n              {withScheduledButton && (\n                <Button\n                  round\n                  faded\n                  className=\"scheduled-button\"\n                  color=\"translucent\"\n                  onClick={handleAllScheduledClick}\n                  ariaLabel=\"Open scheduled messages\"\n                >\n                  <Icon name=\"schedule\" />\n                </Button>\n              )}\n              {Boolean(botKeyboardMessageId) && !activeVoiceRecording && !editingMessage && (\n                <ResponsiveHoverButton\n                  className={isBotKeyboardOpen ? 'activated' : ''}\n                  round\n                  color=\"translucent\"\n                  onActivate={openBotKeyboard}\n                  ariaLabel=\"Open bot command keyboard\"\n                >\n                  <Icon name=\"bot-command\" />\n                </ResponsiveHoverButton>\n              )}\n            </>\n          )}\n          {activeVoiceRecording && Boolean(currentRecordTime) && (\n            <span className=\"recording-state\">\n              {formatVoiceRecordDuration(currentRecordTime - startRecordTimeRef.current!)}\n            </span>\n          )}\n          {!isNeedPremium && (\n            <AttachMenu\n              chatId={chatId}\n              threadId={threadId}\n              editingMessage={editingMessage}\n              canEditMedia={canMediaBeReplaced}\n              isButtonVisible={!activeVoiceRecording}\n              canAttachMedia={canAttachMedia}\n              canAttachPolls={canAttachPolls}\n              canSendPhotos={canSendPhotos}\n              canSendVideos={canSendVideos}\n              canSendDocuments={canSendDocuments}\n              canSendAudios={canSendAudios}\n              onFileSelect={handleFileSelect}\n              onPollCreate={openPollModal}\n              isScheduled={isInScheduledList}\n              attachBots={isInMessageList ? attachBots : undefined}\n              peerType={attachMenuPeerType}\n              shouldCollectDebugLogs={shouldCollectDebugLogs}\n              theme={theme}\n              onMenuOpen={onAttachMenuOpen}\n              onMenuClose={onAttachMenuClose}\n            />\n          )}\n          {isInMessageList && Boolean(botKeyboardMessageId) && (\n            <BotKeyboardMenu\n              messageId={botKeyboardMessageId}\n              isOpen={isBotKeyboardOpen}\n              onClose={closeBotKeyboard}\n            />\n          )}\n          {isInMessageList && botCommands && (\n            <BotCommandMenu\n              isOpen={isBotCommandMenuOpen}\n              botCommands={botCommands}\n              onClose={closeBotCommandMenu}\n            />\n          )}\n          <CustomEmojiTooltip\n            key={`custom-emoji-tooltip-${editableInputId}`}\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            onCustomEmojiSelect={insertCustomEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <StickerTooltip\n            key={`sticker-tooltip-${editableInputId}`}\n            chatId={chatId}\n            threadId={threadId}\n            isOpen={isStickerTooltipOpen}\n            onStickerSelect={handleStickerSelect}\n            onClose={closeStickerTooltip}\n          />\n          <EmojiTooltip\n            key={`emoji-tooltip-${editableInputId}`}\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n        </div>\n      </div>\n      {canSendOneTimeMedia && activeVoiceRecording && (\n        <Button\n          className={buildClassName('view-once', isViewOnceEnabled && 'active')}\n          round\n          color=\"secondary\"\n          ariaLabel={lang('Chat.PlayOnceVoiceMessageTooltip')}\n          onClick={toogleViewOnceEnabled}\n        >\n          <Icon name=\"view-once\" />\n          <Icon name=\"one-filled\" />\n        </Button>\n      )}\n      {activeVoiceRecording && (\n        <Button\n          round\n          color=\"danger\"\n          className=\"cancel\"\n          onClick={stopRecordingVoice}\n          ariaLabel=\"Cancel voice recording\"\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      {isInStoryViewer && !activeVoiceRecording && (\n        <Button\n          round\n          className=\"story-reaction-button\"\n          color=\"secondary\"\n          onClick={handleLikeStory}\n          onContextMenu={handleStoryPickerContextMenu}\n          onMouseDown={handleBeforeStoryPickerContextMenu}\n          ariaLabel={lang('AccDescrLike')}\n          ref={storyReactionRef}\n        >\n          {sentStoryReaction && (\n            <ReactionAnimatedEmoji\n              key={getReactionKey(sentStoryReaction)}\n              containerId={getStoryKey(chatId, storyId!)}\n              reaction={sentStoryReaction}\n              withEffectOnly={isSentStoryReactionHeart}\n            />\n          )}\n          {(!sentStoryReaction || isSentStoryReactionHeart) && (\n            <Icon name=\"heart\" className={buildClassName(isSentStoryReactionHeart && 'story-reaction-heart')} />\n          )}\n        </Button>\n      )}\n      <Button\n        ref={mainButtonRef}\n        round\n        color=\"secondary\"\n        className={buildClassName(\n          mainButtonState,\n          'main-button',\n          !isReady && 'not-ready',\n          activeVoiceRecording && 'recording',\n        )}\n        disabled={areVoiceMessagesNotAllowed}\n        allowDisabledClick\n        noFastClick\n        ariaLabel={lang(sendButtonAriaLabel)}\n        onClick={mainButtonHandler}\n        onContextMenu={\n          mainButtonState === MainButtonState.Send && canShowCustomSendMenu ? handleContextMenu : undefined\n        }\n      >\n        <Icon name=\"send\" />\n        <Icon name=\"microphone-alt\" />\n        {onForward && <Icon name=\"forward\" />}\n        {isInMessageList && <Icon name=\"schedule\" />}\n        {isInMessageList && <Icon name=\"check\" />}\n      </Button>\n      {effectEmoji && (\n        <span className=\"effect-icon\" onClick={handleRemoveEffect}>\n          {renderText(effectEmoji)}\n        </span>\n      )}\n      {effect && canPlayEffect && (\n        <MessageEffect\n          shouldPlay={shouldPlayEffect}\n          effect={effect}\n          onStop={handleStopEffect}\n        />\n      )}\n      {canShowCustomSendMenu && (\n        <CustomSendMenu\n          isOpen={isCustomSendMenuOpen}\n          canSchedule={isInMessageList && !isViewOnceEnabled}\n          canScheduleUntilOnline={canScheduleUntilOnline && !isViewOnceEnabled}\n          onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n          onSendSchedule={!isInScheduledList ? handleSendScheduled : undefined}\n          onSendWhenOnline={handleSendWhenOnline}\n          onRemoveEffect={handleRemoveEffect}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n          isSavedMessages={isChatWithSelf}\n          chatId={chatId}\n          withEffects={areEffectsSupported}\n          hasCurrentEffect={Boolean(effect)}\n          effectReactions={effectReactions}\n          allAvailableReactions={availableReactions}\n          onToggleReaction={handleToggleEffectReaction}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isChatWithSelf}\n          isInStoryViewer={isInStoryViewer}\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n        />\n      )}\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, storyId, messageListType, isMobile, type,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const isChatWithBot = Boolean(chatBot);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isChatWithUser = isUserId(chatId);\n    const userFullInfo = isChatWithUser ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isChatWithUser ? selectChatFullInfo(global, chatId) : undefined;\n    const messageWithActualBotKeyboard = (isChatWithBot || !isChatWithUser)\n      && selectNewestMessageWithBotKeyboardButtons(global, chatId, threadId);\n    const {\n      language, shouldSuggestStickers, shouldSuggestCustomEmoji, shouldUpdateStickerSetOrder,\n    } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n    const botKeyboardMessageId = messageWithActualBotKeyboard ? messageWithActualBotKeyboard.id : undefined;\n    const keyboardMessage = botKeyboardMessageId ? selectChatMessage(global, chatId, botKeyboardMessageId) : undefined;\n    const { currentUserId } = global;\n    const currentUser = selectUser(global, currentUserId!)!;\n    const defaultSendAsId = chatFullInfo ? chatFullInfo?.sendAsId || currentUserId : undefined;\n    const sendAsId = chat?.sendAsPeerIds && defaultSendAsId && (\n      chat.sendAsPeerIds.some((peer) => peer.id === defaultSendAsId)\n        ? defaultSendAsId\n        : (chat?.adminRights?.anonymous ? chat?.id : undefined)\n    );\n    const sendAsUser = sendAsId ? selectUser(global, sendAsId) : undefined;\n    const sendAsChat = !sendAsUser && sendAsId ? selectChat(global, sendAsId) : undefined;\n    const requestedDraft = selectRequestedDraft(global, chatId);\n    const requestedDraftFiles = selectRequestedDraftFiles(global, chatId);\n\n    const tabState = selectTabState(global);\n    const isStoryViewerOpen = Boolean(tabState.storyViewer.storyId);\n\n    const currentMessageList = selectCurrentMessageList(global);\n    const isForCurrentMessageList = chatId === currentMessageList?.chatId\n      && threadId === currentMessageList?.threadId\n      && messageListType === currentMessageList?.type\n      && !isStoryViewerOpen;\n    const user = selectUser(global, chatId);\n    const canSendVoiceByPrivacy = (user && !userFullInfo?.noVoiceMessages) ?? true;\n    const slowMode = chatFullInfo?.slowMode;\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    const editingDraft = messageListType === 'scheduled'\n      ? selectEditingScheduledDraft(global, chatId)\n      : selectEditingDraft(global, chatId, threadId);\n\n    const story = storyId && selectPeerStory(global, chatId, storyId);\n    const sentStoryReaction = story && 'sentReaction' in story ? story.sentReaction : undefined;\n    const draft = selectDraft(global, chatId, threadId);\n    const replyToMessage = draft?.replyInfo\n      ? selectChatMessage(global, chatId, draft.replyInfo.replyToMsgId)\n      : undefined;\n    const replyToTopic = chat?.isForum && chat.isForumAsMessages && threadId === MAIN_THREAD_ID && replyToMessage\n      ? selectTopicFromMessage(global, replyToMessage)\n      : undefined;\n    const isInScheduledList = messageListType === 'scheduled';\n\n    const canSendQuickReplies = isChatWithUser && !isChatWithBot && !isInScheduledList && !isChatWithSelf;\n\n    const noWebPage = selectNoWebPage(global, chatId, threadId);\n\n    const areEffectsSupported = isChatWithUser && !isChatWithBot\n    && !isInScheduledList && !isChatWithSelf && type !== 'story' && chatId !== SERVICE_NOTIFICATIONS_USER_ID;\n    const canPlayEffect = selectPerformanceSettingsValue(global, 'stickerEffects');\n    const shouldPlayEffect = tabState.shouldPlayEffectInComposer;\n    const effectId = areEffectsSupported && draft?.effectId;\n    const effect = effectId ? global.availableEffectById[effectId] : undefined;\n    const effectReactions = global.reactions.effectReactions;\n\n    const maxMessageLength = global.config?.maxMessageLength || DEFAULT_MAX_MESSAGE_LENGTH;\n\n    return {\n      availableReactions: global.reactions.availableReactions,\n      topReactions: type === 'story' ? global.reactions.topReactions : undefined,\n      isOnActiveTab: !tabState.isBlurred,\n      editingMessage: selectEditingMessage(global, chatId, threadId, messageListType),\n      draft,\n      chat,\n      isChatWithBot,\n      isChatWithSelf,\n      isForCurrentMessageList,\n      canScheduleUntilOnline: selectCanScheduleUntilOnline(global, chatId),\n      isChannel: chat ? isChatChannel(chat) : undefined,\n      isRightColumnShown: selectIsRightColumnShown(global, isMobile),\n      isSelectModeActive: selectIsInSelectMode(global),\n      withScheduledButton: (\n        messageListType === 'thread'\n        && (userFullInfo || chatFullInfo)?.hasScheduledMessages\n      ),\n      isInScheduledList,\n      botKeyboardMessageId,\n      botKeyboardPlaceholder: keyboardMessage?.keyboardPlaceholder,\n      isForwarding: chatId === tabState.forwardMessages.toChatId,\n      pollModal: tabState.pollModal,\n      stickersForEmoji: global.stickers.forEmoji.stickers,\n      customEmojiForEmoji: global.customEmojis.forEmoji.stickers,\n      chatFullInfo,\n      topInlineBotIds: global.topInlineBots?.userIds,\n      currentUserId,\n      currentUser,\n      contentToBeScheduled: tabState.contentToBeScheduled,\n      shouldSuggestStickers,\n      shouldSuggestCustomEmoji,\n      shouldUpdateStickerSetOrder,\n      recentEmojis: global.recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      inlineBots: tabState.inlineBots.byUsername,\n      isInlineBotLoading: tabState.inlineBots.isLoading,\n      botCommands: userFullInfo ? (userFullInfo.botInfo?.commands || false) : undefined,\n      botMenuButton: userFullInfo?.botInfo?.menuButton,\n      sendAsUser,\n      sendAsChat,\n      sendAsId,\n      editingDraft,\n      requestedDraft,\n      requestedDraftFiles,\n      attachBots: global.attachMenu.bots,\n      attachMenuPeerType: selectChatType(global, chatId),\n      theme: selectTheme(global),\n      fileSizeLimit: selectCurrentLimit(global, 'uploadMaxFileparts') * MAX_UPLOAD_FILEPART_SIZE,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      isCurrentUserPremium,\n      canSendVoiceByPrivacy,\n      attachmentSettings: global.attachmentSettings,\n      slowMode,\n      currentMessageList,\n      isReactionPickerOpen: selectIsReactionPickerOpen(global),\n      canBuyPremium: !isCurrentUserPremium && !selectIsPremiumPurchaseBlocked(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n      canSendOneTimeMedia: !isChatWithSelf && isChatWithUser && !isChatWithBot && !isInScheduledList,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      sentStoryReaction,\n      stealthMode: global.stories.stealthMode,\n      replyToTopic,\n      quickReplyMessages: global.quickReplies.messagesById,\n      quickReplies: global.quickReplies.byId,\n      canSendQuickReplies,\n      noWebPage,\n      webPagePreview: selectTabState(global).webPagePreview,\n      isContactRequirePremium: userFullInfo?.isContactRequirePremium,\n      effect,\n      effectReactions,\n      areEffectsSupported,\n      canPlayEffect,\n      shouldPlayEffect,\n      maxMessageLength,\n    };\n  },\n)(Composer));\n","import { useState } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiAttachment, ApiMessage } from '../../../../api/types';\n\nimport { canReplaceMessageMedia, getAttachmentMediaType } from '../../../../global/helpers';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport buildAttachment from '../helpers/buildAttachment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useAttachmentModal({\n  attachments,\n  fileSizeLimit,\n  setHtml,\n  setAttachments,\n  chatId,\n  canSendAudios,\n  canSendVideos,\n  canSendPhotos,\n  canSendDocuments,\n  insertNextText,\n  editedMessage,\n}: {\n  attachments: ApiAttachment[];\n  fileSizeLimit: number;\n  setHtml: (html: string) => void;\n  setAttachments: (attachments: ApiAttachment[]) => void;\n  chatId: string;\n  canSendAudios?: boolean;\n  canSendVideos?: boolean;\n  canSendPhotos?: boolean;\n  canSendDocuments?: boolean;\n  insertNextText: VoidFunction;\n  editedMessage: ApiMessage | undefined;\n}) {\n  const lang = useOldLang();\n  const { openLimitReachedModal, showAllowedMessageTypesNotification, showNotification } = getActions();\n  const [shouldForceAsFile, setShouldForceAsFile] = useState<boolean>(false);\n  const [shouldForceCompression, setShouldForceCompression] = useState<boolean>(false);\n  const [shouldSuggestCompression, setShouldSuggestCompression] = useState<boolean | undefined>(undefined);\n\n  const handleClearAttachments = useLastCallback(() => {\n    setAttachments(MEMO_EMPTY_ARRAY);\n    insertNextText();\n  });\n\n  const handleSetAttachments = useLastCallback(\n    (newValue: ApiAttachment[] | ((current: ApiAttachment[]) => ApiAttachment[])) => {\n      const newAttachments = typeof newValue === 'function' ? newValue(attachments) : newValue;\n      if (!newAttachments.length) {\n        handleClearAttachments();\n        return;\n      }\n\n      if (newAttachments.some((attachment) => {\n        const type = getAttachmentMediaType(attachment);\n\n        return (type === 'audio' && !canSendAudios && !canSendDocuments)\n          || (type === 'video' && !canSendVideos && !canSendDocuments)\n          || (type === 'photo' && !canSendPhotos && !canSendDocuments)\n          || (type === 'file' && !canSendDocuments);\n      })) {\n        showAllowedMessageTypesNotification({ chatId });\n      } else if (newAttachments.some(({ size }) => size > fileSizeLimit)) {\n        openLimitReachedModal({\n          limit: 'uploadMaxFileparts',\n        });\n      } else {\n        setAttachments(newAttachments);\n        const shouldForce = newAttachments.some((attachment) => {\n          const type = getAttachmentMediaType(attachment);\n\n          return (type === 'audio' && !canSendAudios)\n            || (type === 'video' && !canSendVideos)\n            || (type === 'photo' && !canSendPhotos);\n        });\n\n        setShouldForceAsFile(Boolean(shouldForce && canSendDocuments));\n        setShouldForceCompression(!canSendDocuments);\n      }\n    },\n  );\n\n  const handleAppendFiles = useLastCallback(async (files: File[], isSpoiler?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => (\n        buildAttachment(file.name, file, { shouldSendAsSpoiler: isSpoiler || undefined })\n      )));\n      handleSetAttachments([...attachments, ...newAttachments]);\n    }\n  });\n\n  const handleFileSelect = useLastCallback(async (files: File[], suggestCompression?: boolean) => {\n    if (editedMessage) {\n      const newAttachment = await buildAttachment(files[0].name, files[0]);\n      const canReplace = editedMessage && canReplaceMessageMedia(editedMessage, newAttachment);\n\n      if (editedMessage?.groupedId) {\n        if (canReplace) {\n          handleSetAttachments([newAttachment]);\n        } else {\n          showNotification({ message: lang('lng_edit_media_album_error') });\n        }\n      } else {\n        handleSetAttachments([newAttachment]);\n      }\n    } else {\n      const newAttachments = await Promise.all(files.map((file) => buildAttachment(file.name, file)));\n      handleSetAttachments(newAttachments);\n    }\n    setShouldSuggestCompression(suggestCompression);\n  });\n\n  return {\n    shouldSuggestCompression,\n    handleAppendFiles,\n    handleFileSelect,\n    onCaptionUpdate: setHtml,\n    handleClearAttachments,\n    handleSetAttachments,\n    shouldForceCompression,\n    shouldForceAsFile,\n  };\n}\n","import { useEffect, useRef, useState } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../../util/captureEscKeyListener';\nimport * as voiceRecording from '../../../../util/voiceRecording';\nimport { IS_SAFARI, IS_VOICE_RECORDING_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ntype ActiveVoiceRecording =\n  { stop: () => Promise<voiceRecording.Result>; pause: NoneToVoidFunction }\n  | undefined;\n\nconst useVoiceRecording = () => {\n  // eslint-disable-next-line no-null/no-null\n  const recordButtonRef = useRef<HTMLButtonElement>(null);\n  const [activeVoiceRecording, setActiveVoiceRecording] = useState<ActiveVoiceRecording>();\n  const startRecordTimeRef = useRef<number>();\n  const [currentRecordTime, setCurrentRecordTime] = useState<number | undefined>();\n  const [isViewOnceEnabled, setIsViewOnceEnabled] = useState(false);\n\n  useEffect(() => {\n    // Preloading worker fixes silent first record on iOS\n    if (IS_SAFARI && IS_VOICE_RECORDING_SUPPORTED) {\n      void voiceRecording.init();\n    }\n  }, []);\n\n  const startRecordingVoice = useLastCallback(async () => {\n    try {\n      const { stop, pause } = await voiceRecording.start((tickVolume: number) => {\n        if (recordButtonRef.current) {\n          if (startRecordTimeRef.current && Date.now() % 4 === 0) {\n            requestMutation(() => {\n              if (!recordButtonRef.current) return;\n              recordButtonRef.current.style.boxShadow = `0 0 0 ${(tickVolume || 0) * 50}px rgba(0,0,0,.15)`;\n            });\n          }\n          setCurrentRecordTime(Date.now());\n        }\n      });\n      startRecordTimeRef.current = Date.now();\n      setCurrentRecordTime(Date.now());\n\n      setActiveVoiceRecording({ stop, pause });\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n    }\n  });\n\n  const pauseRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current!.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.pause();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  const stopRecordingVoice = useLastCallback(() => {\n    if (!activeVoiceRecording) {\n      return undefined;\n    }\n\n    setActiveVoiceRecording(undefined);\n    startRecordTimeRef.current = undefined;\n    setCurrentRecordTime(undefined);\n\n    requestMutation(() => {\n      if (recordButtonRef.current) {\n        recordButtonRef.current.style.boxShadow = 'none';\n      }\n    });\n\n    try {\n      return activeVoiceRecording!.stop();\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error(err);\n      return undefined;\n    }\n  });\n\n  useEffect(() => {\n    return activeVoiceRecording ? captureEscKeyListener(stopRecordingVoice) : undefined;\n  }, [activeVoiceRecording, stopRecordingVoice]);\n\n  const toogleViewOnceEnabled = useLastCallback(() => {\n    setIsViewOnceEnabled(!isViewOnceEnabled);\n  });\n\n  return {\n    startRecordingVoice,\n    pauseRecordingVoice,\n    stopRecordingVoice,\n    activeVoiceRecording,\n    currentRecordTime,\n    recordButtonRef,\n    startRecordTimeRef,\n    isViewOnceEnabled,\n    setIsViewOnceEnabled,\n    toogleViewOnceEnabled,\n  };\n};\n\nexport default useVoiceRecording;\n","export default function deleteLastCharacterOutsideSelection(inputId: string) {\n  debugger;\n  const input = document.getElementById(inputId) as HTMLInputElement;\n  let element = input.lastChild!;\n\n  if (element.lastChild) {\n    // Selects the last and the deepest child of the element.\n    while (element.lastChild) {\n      element = element.lastChild;\n    }\n  }\n\n  // Gets length of the element's content.\n  const textLength = element.textContent!.length;\n  const range = document.createRange();\n  const selection = window.getSelection()!;\n\n  // Sets selection position to the end of the element.\n  range.setStart(element, textLength);\n  range.setEnd(element, textLength);\n  selection.removeAllRanges();\n  selection.addRange(range);\n  document.execCommand('delete', false);\n}\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDocument, ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getDocumentMediaHash,\n  getMediaFormat,\n  getMediaThumbUri,\n  getMediaTransferState,\n  isDocumentVideo,\n} from '../../global/helpers';\nimport { getDocumentExtension, getDocumentHasPreview } from './helpers/documentInfo';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport File from './File';\n\ntype OwnProps = {\n  document: ApiDocument;\n  observeIntersection?: ObserveFn;\n  smaller?: boolean;\n  isSelected?: boolean;\n  isSelectable?: boolean;\n  canAutoLoad?: boolean;\n  uploadProgress?: number;\n  withDate?: boolean;\n  datetime?: number;\n  className?: string;\n  sender?: string;\n  autoLoadFileMaxSizeMb?: number;\n  isDownloading?: boolean;\n  shouldWarnAboutSvg?: boolean;\n  onCancelUpload?: () => void;\n  onMediaClick?: () => void;\n} & ({\n  message: ApiMessage;\n  onDateClick: (arg: ApiMessage) => void;\n} | {\n  message?: ApiMessage;\n  onDateClick?: never;\n});\n\nconst BYTES_PER_MB = 1024 * 1024;\nconst SVG_EXTENSIONS = new Set(['svg', 'svgz']);\n\nconst Document = ({\n  document,\n  observeIntersection,\n  smaller,\n  canAutoLoad,\n  autoLoadFileMaxSizeMb,\n  uploadProgress,\n  withDate,\n  datetime,\n  className,\n  sender,\n  isSelected,\n  isSelectable,\n  shouldWarnAboutSvg,\n  isDownloading,\n  message,\n  onCancelUpload,\n  onMediaClick,\n  onDateClick,\n}: OwnProps) => {\n  const { cancelMediaDownload, downloadMedia, setSettingOption } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const { fileName, size, timestamp } = document;\n  const extension = getDocumentExtension(document) || '';\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const [wasIntersected, markIntersected] = useFlag();\n  useEffect(() => {\n    if (isIntersecting) {\n      markIntersected();\n    }\n  }, [isIntersecting, markIntersected]);\n\n  // Auto-loading does not use global download manager because requires additional click to save files locally\n  const [isLoadAllowed, setIsLoadAllowed] = useState(\n    canAutoLoad && (!autoLoadFileMaxSizeMb || size <= autoLoadFileMaxSizeMb * BYTES_PER_MB),\n  );\n\n  const shouldDownload = Boolean(isDownloading || (isLoadAllowed && wasIntersected));\n\n  const documentHash = getDocumentMediaHash(document, 'download');\n  const { loadProgress: downloadProgress, mediaData } = useMediaWithLoadProgress(\n    documentHash, !shouldDownload, getMediaFormat(document, 'download'), undefined, true,\n  );\n  const isLoaded = Boolean(mediaData);\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || downloadProgress,\n    shouldDownload && !isLoaded,\n    uploadProgress !== undefined,\n  );\n\n  const hasPreview = getDocumentHasPreview(document);\n  const thumbDataUri = hasPreview ? getMediaThumbUri(document) : undefined;\n  const localBlobUrl = hasPreview ? document.previewBlobUrl : undefined;\n  const previewData = useMedia(getDocumentMediaHash(document, 'pictogram'), !isIntersecting);\n\n  const withMediaViewer = onMediaClick && document.innerMediaType;\n\n  const handleDownload = useLastCallback(() => {\n    downloadMedia({ media: document, originMessage: message });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isUploading) {\n      if (onCancelUpload) {\n        onCancelUpload();\n      }\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: document });\n      return;\n    }\n\n    if (isTransferring) {\n      setIsLoadAllowed(false);\n      return;\n    }\n\n    if (withMediaViewer) {\n      onMediaClick!();\n      return;\n    }\n\n    if (SVG_EXTENSIONS.has(extension) && shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: !shouldNotWarnAboutSvg });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const handleDateClick = useLastCallback(() => {\n    onDateClick?.(message);\n  });\n\n  return (\n    <>\n      <File\n        ref={ref}\n        name={fileName}\n        extension={extension}\n        size={size}\n        timestamp={withDate ? datetime || timestamp : undefined}\n        thumbnailDataUri={thumbDataUri}\n        previewData={localBlobUrl || previewData}\n        smaller={smaller}\n        isTransferring={isTransferring}\n        isUploading={isUploading}\n        transferProgress={transferProgress}\n        className={className}\n        sender={sender}\n        isSelectable={isSelectable}\n        isSelected={isSelected}\n        actionIcon={withMediaViewer ? (isDocumentVideo(document) ? 'play' : 'eye') : 'download'}\n        onClick={handleClick}\n        onDateClick={onDateClick ? handleDateClick : undefined}\n      />\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(Document);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDateTime, formatPastTimeShort } from '../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getColorFromExtension, getFileSizeString } from './helpers/documentInfo';\nimport { getDocumentThumbnailDimensions } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport Link from '../ui/Link';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport Icon from './icons/Icon';\n\nimport './File.scss';\n\ntype OwnProps = {\n  ref?: React.RefObject<HTMLDivElement>;\n  name: string;\n  extension?: string;\n  size: number;\n  timestamp?: number;\n  sender?: string;\n  thumbnailDataUri?: string;\n  previewData?: string;\n  className?: string;\n  smaller?: boolean;\n  isTransferring?: boolean;\n  isUploading?: boolean;\n  isSelectable?: boolean;\n  isSelected?: boolean;\n  transferProgress?: number;\n  actionIcon?: IconName;\n  onClick?: () => void;\n  onDateClick?: (e: React.MouseEvent<HTMLAnchorElement>) => void;\n};\n\nconst File: FC<OwnProps> = ({\n  ref,\n  name,\n  size,\n  extension = '',\n  timestamp,\n  sender,\n  thumbnailDataUri,\n  previewData,\n  className,\n  smaller,\n  isTransferring,\n  isUploading,\n  isSelectable,\n  isSelected,\n  transferProgress,\n  actionIcon,\n  onClick,\n  onDateClick,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  let elementRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    elementRef = ref;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [withThumb] = useState(!previewData);\n  const noThumb = Boolean(previewData);\n  const thumbRef = useCanvasBlur(thumbnailDataUri, noThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED);\n  const thumbClassNames = useMediaTransitionDeprecated(!noThumb);\n\n  const {\n    shouldRender: shouldSpinnerRender,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(isTransferring, undefined, true);\n\n  const color = getColorFromExtension(extension);\n  const sizeString = getFileSizeString(size);\n  const subtitle = useMemo(() => {\n    if (!isTransferring || !transferProgress) return sizeString;\n    return `${getFileSizeString(size * transferProgress)} / ${sizeString}`;\n  }, [isTransferring, size, sizeString, transferProgress]);\n\n  const { width, height } = getDocumentThumbnailDimensions(smaller);\n\n  const fullClassName = buildClassName(\n    'File',\n    className,\n    smaller && 'smaller',\n    onClick && !isUploading && 'interactive',\n    isSelected && 'file-is-selected',\n  );\n\n  return (\n    <div ref={elementRef} className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n      {isSelectable && (\n        <div className=\"message-select-control\">\n          {isSelected && <Icon name=\"select\" />}\n        </div>\n      )}\n      <div className=\"file-icon-container\" onClick={isUploading ? undefined : onClick}>\n        {thumbnailDataUri || previewData ? (\n          <div className=\"file-preview media-inner\">\n            <img\n              src={previewData}\n              className=\"full-media\"\n              width={width}\n              height={height}\n              draggable={false}\n              alt=\"\"\n            />\n            {withThumb && (\n              <canvas\n                ref={thumbRef}\n                className={buildClassName('thumbnail', thumbClassNames)}\n              />\n            )}\n          </div>\n        ) : (\n          <div className={`file-icon ${color}`}>\n            {extension.length <= 4 && (\n              <span className=\"file-ext\" dir=\"auto\">{extension}</span>\n            )}\n          </div>\n        )}\n        {shouldSpinnerRender && (\n          <div className={buildClassName('file-progress', color, spinnerClassNames)}>\n            <ProgressSpinner\n              progress={transferProgress}\n              size={smaller ? 's' : 'm'}\n              onClick={isUploading ? onClick : undefined}\n            />\n          </div>\n        )}\n        {onClick && (\n          <Icon\n            name={actionIcon || 'download'}\n            className={buildClassName('action-icon', shouldSpinnerRender && 'hidden')}\n          />\n        )}\n      </div>\n      <div className=\"file-info\">\n        <div className=\"file-title\" dir=\"auto\" title={name}>{renderText(name)}</div>\n        <div className=\"file-subtitle\" dir=\"auto\">\n          <span>\n            {subtitle}\n          </span>\n          {sender && <span className=\"file-sender\">{renderText(sender)}</span>}\n          {!sender && Boolean(timestamp) && (\n            <>\n              <span className=\"bullet\" />\n              <Link onClick={onDateClick}>{formatMediaDateTime(lang, timestamp * 1000, true)}</Link>\n            </>\n          )}\n        </div>\n      </div>\n      {sender && Boolean(timestamp) && (\n        <Link onClick={onDateClick}>{formatPastTimeShort(lang, timestamp * 1000)}</Link>\n      )}\n    </div>\n  );\n};\n\nexport default memo(File);\n","import type { FC } from '../../lib/teact/teact';\r\nimport React, {\r\n  memo, useEffect, useRef, useState, useCallback,\r\n} from '../../lib/teact/teact';\r\n\r\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\r\nimport { useThrottleForHeavyAnimation } from '../../hooks/useHeavyAnimation';\r\nimport useLastCallback from '../../hooks/useLastCallback';\r\nimport useResizeObserver from '../../hooks/useResizeObserver';\r\nimport useDevicePixelRatio from '../../hooks/window/useDevicePixelRatio';\r\nimport { addActionHandler } from '../../global';\r\nimport { ActionReturnType } from '../../global/types/globalState';\r\n\r\nimport './GradientWallpaper.scss';\r\nimport buildClassName from '../../util/buildClassName';\r\n\r\nconst VERTEX_SHADER = `attribute vec4 a_position;\r\nvoid main() {\r\n  gl_Position = a_position;\r\n}`;\r\n\r\nconst FRAGMENT_SHADER = `precision highp float;\r\n\r\nuniform vec2 resolution;\r\n\r\nuniform vec3 color1;\r\nuniform vec3 color2;\r\nuniform vec3 color3;\r\nuniform vec3 color4;\r\n\r\nuniform vec2 color1Pos;\r\nuniform vec2 color2Pos;\r\nuniform vec2 color3Pos;\r\nuniform vec2 color4Pos;\r\n\r\nvoid main() {\r\n  vec2 position = gl_FragCoord.xy / resolution.xy;\r\n  position.y = 1.0 - position.y;\r\n\r\n  float dp1 = distance(position, color1Pos);\r\n  float dp2 = distance(position, color2Pos);\r\n  float dp3 = distance(position, color3Pos);\r\n  float dp4 = distance(position, color4Pos);\r\n  float minD = min(dp1, min(dp2, min(dp3, dp4)));\r\n  float p = 3.0;\r\n\r\n  dp1 = pow(1.0 - (dp1 - minD), p);\r\n  dp2 = pow(1.0 - (dp2 - minD), p);\r\n  dp3 = pow(1.0 - (dp3 - minD), p);\r\n  dp4 = pow(1.0 - (dp4 - minD), p);\r\n  float dpt = abs(dp1 + dp2 + dp3 + dp4);\r\n\r\n  gl_FragColor =\r\n    (vec4(color1 / 255.0, 1.0) * dp1 / dpt) +\r\n    (vec4(color2 / 255.0, 1.0) * dp2 / dpt) +\r\n    (vec4(color3 / 255.0, 1.0) * dp3 / dpt) +\r\n    (vec4(color4 / 255.0, 1.0) * dp4 / dpt);\r\n}`;\r\n\r\nconst KEY_POINTS: [number, number][] = [\r\n  [0.265, 0.582], //0\r\n  [0.176, 0.918], //1\r\n  [1 - 0.585, 1 - 0.164], //0\r\n  [0.644, 0.755], //1\r\n  [1 - 0.265, 1 - 0.582], //0\r\n  [1 - 0.176, 1 - 0.918], //1\r\n  [0.585, 0.164], //0\r\n  [1 - 0.644, 1 - 0.755] //1\r\n];\r\n\r\ntype Uniforms = {\r\n  resolution: WebGLUniformLocation;\r\n  color: WebGLUniformLocation[];\r\n  position: WebGLUniformLocation[];\r\n};\r\n\r\nfunction hexToVec3(\r\n  hex: string\r\n): readonly [r: number, g: number, b: number] {\r\n  if (hex.startsWith('#')) {\r\n    hex = hex.slice(1)\r\n  }\r\n\r\n  const r = parseInt(hex.slice(0, 2), 16)\r\n  const g = parseInt(hex.slice(2, 4), 16)\r\n  const b = parseInt(hex.slice(4, 6), 16)\r\n\r\n  return [r, g, b] as const\r\n}\r\n\r\nfunction createShader(gl: WebGLRenderingContext, type: number, source: string) {\r\n  const shader = gl.createShader(type);\r\n  if (!shader) return null;\r\n\r\n  gl.shaderSource(shader, source);\r\n  gl.compileShader(shader);\r\n  return shader;\r\n}\r\n\r\nfunction distance(p1: number[], p2: number[]) {\r\n  // Weird distance function\r\n  return Math.abs(p1[1] - p2[1]);\r\n}\r\n\r\ntype OwnProps = {\r\n  colors: string,\r\n  rotateOnSend?: boolean,\r\n  className?: string,\r\n  dark?: boolean,\r\n  opacity?: number,\r\n};\r\n\r\nfunction createSharedCanvas(): [HTMLCanvasElement, WebGLRenderingContext, Uniforms] | [null, null, null] {\r\n  const canvas = document.createElement('canvas');\r\n  const gl = canvas.getContext('webgl');\r\n  if (!gl) return [null, null, null];\r\n  const uniforms = prepareCanvas(gl);\r\n  if (!uniforms) return [null, null, null];\r\n  return [canvas, gl, uniforms];\r\n}\r\n\r\nfunction prepareCanvas(gl: WebGLRenderingContext): Uniforms | null {\r\n  const program = gl.createProgram();\r\n  const vertexShader = createShader(gl, gl.VERTEX_SHADER, VERTEX_SHADER);\r\n  const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, FRAGMENT_SHADER);\r\n  if (!program || !vertexShader || !fragmentShader) return null;\r\n\r\n  gl.attachShader(program, vertexShader);\r\n  gl.attachShader(program, fragmentShader);\r\n  gl.linkProgram(program);\r\n\r\n  gl.useProgram(program);\r\n  \r\n  const positionLocation = gl.getAttribLocation(program, 'a_position');\r\n  if (positionLocation === -1) return null;\r\n\r\n  const positionBuffer = gl.createBuffer();\r\n  gl.bindBuffer(gl.ARRAY_BUFFER, positionBuffer);\r\n  gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\r\n    -1, -1, 1, -1, -1, 1, -1, 1, 1, -1, 1, 1,\r\n  ]), gl.STATIC_DRAW);\r\n  \r\n  gl.enableVertexAttribArray(positionLocation);\r\n  gl.vertexAttribPointer(positionLocation, 2, gl.FLOAT, false, 0, 0);\r\n\r\n  return {\r\n    resolution: gl.getUniformLocation(program, 'resolution')!,\r\n    color: [\r\n      gl.getUniformLocation(program, 'color1')!,\r\n      gl.getUniformLocation(program, 'color2')!,\r\n      gl.getUniformLocation(program, 'color3')!,\r\n      gl.getUniformLocation(program, 'color4')!,\r\n    ],\r\n    position: [\r\n      gl.getUniformLocation(program, 'color1Pos')!,\r\n      gl.getUniformLocation(program, 'color2Pos')!,\r\n      gl.getUniformLocation(program, 'color3Pos')!,\r\n      gl.getUniformLocation(program, 'color4Pos')!,\r\n    ],\r\n  };\r\n}\r\n\r\nconst [sharedCanvas, sharedGl, sharedUniforms] = createSharedCanvas();\r\nlet rotateWallpapers: Function | null = null;\r\naddActionHandler('sendMessage', (): ActionReturnType => {\r\n  if (rotateWallpapers) {\r\n    rotateWallpapers();\r\n  }\r\n});\r\n\r\nconst GradientWallpaper: FC<OwnProps> = ({\r\n  colors,\r\n  rotateOnSend = false,\r\n  className,\r\n  dark = false,\r\n  opacity = 1,\r\n}) => {\r\n  const ref = useRef<HTMLDivElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const dpr = useDevicePixelRatio();\r\n  const [isVisible, setIsVisible] = useState(false);\r\n  \r\n  const uniformsRef = useRef<Uniforms | null>(null);\r\n\r\n  const useSharedCanvas = !rotateOnSend;\r\n  \r\n  const stateRef = useRef({\r\n    keyShift: 0,\r\n    targets: [[0, 0], [0, 0], [0, 0], [0, 0]] as [number, number][],\r\n    positions: [[0, 0], [0, 0], [0, 0], [0, 0]] as [number, number][],\r\n    speed: 0.1,\r\n    animating: false\r\n  });\r\n\r\n  const render = useCallback(() => {\r\n    const canvas = canvasRef.current;\r\n    if (!canvas) return;\r\n\r\n    let gl = useSharedCanvas ? sharedGl : canvas.getContext('webgl')!;\r\n    let uniforms = useSharedCanvas ? sharedUniforms : uniformsRef.current;\r\n    if (!uniforms) return;\r\n\r\n    if (useSharedCanvas) {\r\n      sharedCanvas!.width = canvas.width;\r\n      sharedCanvas!.height = canvas.height;\r\n    }\r\n\r\n    const { width, height } = canvas;\r\n\r\n    if (!gl) return;\r\n\r\n    gl.viewport(0, 0, width, height);\r\n\r\n    gl.uniform2f(uniforms.resolution, width, height);\r\n    for (let i = 0; i < 4; i++) {\r\n      gl.uniform3fv(uniforms.color[i], hexToVec3(colors.split(',')[i]));\r\n      gl.uniform2fv(uniforms.position[i], stateRef.current.positions[i]);\r\n    }\r\n\r\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\r\n\r\n    if (useSharedCanvas) {\r\n      const ctx = canvas.getContext('2d')!;\r\n      ctx.drawImage(sharedCanvas!, 0, 0);\r\n    }\r\n  }, [colors]);\r\n\r\n  function rotateTargets() {\r\n    for (let i = 0; i < 4; i++) {\r\n      stateRef.current.targets[i] = [...KEY_POINTS[(stateRef.current.keyShift + i * 2) % KEY_POINTS.length]];\r\n    }\r\n    stateRef.current.keyShift = (stateRef.current.keyShift + 1) % KEY_POINTS.length;\r\n  }\r\n\r\n  function updatePositions() {\r\n    for (let i = 0; i < 4; i++) {\r\n      stateRef.current.positions[i] = stateRef.current.targets[i];\r\n    }\r\n  }\r\n\r\n  function animate() {\r\n    stateRef.current.animating = true;\r\n    if (stateRef.current.positions.some((p, i) => distance(p, stateRef.current.targets[i]) > 0.01)) {\r\n      for (let i = 0; i < 4; i++) {\r\n        stateRef.current.positions[i][0] = stateRef.current.positions[i][0] * (1 - stateRef.current.speed) + stateRef.current.targets[i][0] * stateRef.current.speed;\r\n        stateRef.current.positions[i][1] = stateRef.current.positions[i][1] * (1 - stateRef.current.speed) + stateRef.current.targets[i][1] * stateRef.current.speed;\r\n      }\r\n      render();\r\n      requestAnimationFrame(animate)\r\n    } else {\r\n      stateRef.current.animating = false;\r\n    }\r\n  }\r\n\r\n  rotateTargets();\r\n  updatePositions();\r\n\r\n  if (rotateOnSend) {\r\n    const rotateWallpaper = () => {\r\n      rotateTargets();\r\n      if (!stateRef.current.animating) requestAnimationFrame(animate);\r\n    };\r\n    rotateWallpapers = rotateWallpaper;\r\n  }\r\n\r\n  useEffect(() => {\r\n    render();\r\n  }, [colors]);\r\n\r\n  if (!useSharedCanvas) {\r\n    useEffect(() => {\r\n      const gl = canvasRef.current!.getContext('webgl')!;\r\n      if (!gl) return;\r\n      uniformsRef.current = prepareCanvas(gl);\r\n      render();\r\n    }, []);\r\n  }\r\n\r\n  const updateCanvas = useLastCallback(render);\r\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\r\n  useEffect(() => {\r\n    updateCanvasAfterHeavyAnimation();\r\n  }, [updateCanvasAfterHeavyAnimation]);\r\n\r\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\r\n    requestMutation(() => {\r\n      const canvas = canvasRef.current;\r\n      if (!canvas) return;\r\n\r\n      canvas.width = parentWidth * dpr;\r\n      canvas.height = parentHeight * dpr;\r\n\r\n      canvas.style.width = `${parentWidth}px`;\r\n      canvas.style.height = `${parentHeight}px`;\r\n\r\n      render();\r\n      setIsVisible(true);\r\n    });\r\n  }, [dpr]);\r\n\r\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\r\n    const { width, height } = entry.contentRect;\r\n\r\n    updateCanvasSize(width, height);\r\n  }, [updateCanvasSize]);\r\n\r\n  useResizeObserver(ref, handleResize);\r\n\r\n  useEffect(() => {\r\n    const container = ref.current;\r\n    if (!container) return;\r\n\r\n    const { width, height } = container.getBoundingClientRect();\r\n\r\n    updateCanvasSize(width, height);\r\n  }, [updateCanvasSize]);\r\n\r\n  return (\r\n    <div\r\n      ref={ref}\r\n      className={buildClassName('GradientWallpaper', className, !isVisible && 'hidden', dark && 'dark')}\r\n      style={`--pattern-opacity: ${opacity}`}\r\n    >\r\n      <canvas\r\n        ref={canvasRef}\r\n        className=\"GradientWallpaper-canvas\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(GradientWallpaper);\r\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiThreadInfo, ApiTopic, ApiTypingStatus, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin, type StoryViewerOrigin, type ThreadId } from '../../types';\n\nimport {\n  getChatTypeString,\n  getGroupStatus,\n  getMainUsername,\n  isChatSuperGroup,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessages,\n  selectChatOnlineCount,\n  selectThreadInfo,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from './helpers/mediaDimensions';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TopicIcon from './TopicIcon';\nimport TypingStatus from './TypingStatus';\n\nconst TOPIC_ICON_SIZE = 2.5 * REM;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className?: string;\n  statusIcon?: IconName;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  status?: string;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  withChatType?: boolean;\n  noEmojiStatus?: boolean;\n  emojiStatusSize?: number;\n  noRtl?: boolean;\n  noAvatar?: boolean;\n  noStatusOrTyping?: boolean;\n  withStory?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  isSavedDialog?: boolean;\n  onClick?: VoidFunction;\n  onEmojiStatusClick?: NoneToVoidFunction;\n};\n\ntype StateProps =\n  {\n    chat?: ApiChat;\n    threadInfo?: ApiThreadInfo;\n    topic?: ApiTopic;\n    onlineCount?: number;\n    areMessagesLoaded: boolean;\n    messagesCount?: number;\n    self?: ApiUser;\n  };\n\nconst GroupChatInfo: FC<OwnProps & StateProps> = ({\n  typingStatus,\n  className,\n  statusIcon,\n  avatarSize = 'medium',\n  noAvatar,\n  status,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withFullInfo,\n  withUpdatingStatus,\n  withChatType,\n  threadInfo,\n  noRtl,\n  chat,\n  onlineCount,\n  areMessagesLoaded,\n  topic,\n  messagesCount,\n  noStatusOrTyping,\n  withStory,\n  storyViewerOrigin,\n  noEmojiStatus,\n  emojiStatusSize,\n  isSavedDialog,\n  self,\n  onClick,\n  onEmojiStatusClick,\n}) => {\n  const {\n    loadFullChat,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const isSuperGroup = chat && isChatSuperGroup(chat);\n  const isTopic = Boolean(chat?.isForum && threadInfo && topic);\n  const { id: chatId, isMin, isRestricted } = chat || {};\n\n  useEffect(() => {\n    if (chatId && !isMin) {\n      if (withFullInfo) loadFullChat({ chatId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: chatId, isPreload: true });\n    }\n  }, [chatId, isMin, withFullInfo, isSuperGroup, withMediaViewer]);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (chat && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: chat.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => chat && withUsername && getMainUsername(chat), [chat, withUsername]);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded && !isRestricted) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (!chat) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isTopic) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <Transition\n            name=\"fade\"\n            shouldRestoreHeight\n            activeKey={messagesCount !== undefined ? 1 : 2}\n            className=\"message-count-transition\"\n          >\n            {messagesCount !== undefined && lang('messages', messagesCount, 'i')}\n          </Transition>\n        </span>\n      );\n    }\n\n    if (withChatType) {\n      return (\n        <span className=\"status\" dir=\"auto\">{lang(getChatTypeString(chat))}</span>\n      );\n    }\n\n    const groupStatus = getGroupStatus(lang, chat);\n    const onlineStatus = onlineCount ? `, ${lang('OnlineCount', onlineCount, 'i')}` : undefined;\n\n    return (\n      <span className=\"status\">\n        {mainUsername && <span className=\"handle withStatus\">{mainUsername}</span>}\n        <span className=\"group-status\">{groupStatus}</span>\n        {onlineStatus && <span className=\"online-status\">{onlineStatus}</span>}\n      </span>\n    );\n  }\n\n  return (\n    <div\n      className={\n        buildClassName('ChatInfo', className)\n      }\n      dir={!noRtl && lang.isRtl ? 'rtl' : undefined}\n      onClick={onClick}\n    >\n      {!noAvatar && !isTopic && (\n        <>\n          {isSavedDialog && self && (\n            <Avatar\n              key=\"saved-messages\"\n              size={avatarSize}\n              peer={self}\n              isSavedMessages\n              className=\"saved-dialog-avatar\"\n            />\n          )}\n          <Avatar\n            key={chat.id}\n            className={buildClassName(isSavedDialog && 'overlay-avatar')}\n            size={avatarSize}\n            peer={chat}\n            withStory={withStory}\n            storyViewerOrigin={storyViewerOrigin}\n            storyViewerMode=\"single-peer\"\n            isSavedDialog={isSavedDialog}\n            onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n          />\n        </>\n      )}\n      {isTopic && (\n        <TopicIcon\n          topic={topic!}\n          className=\"topic-header-icon\"\n          size={TOPIC_ICON_SIZE}\n        />\n      )}\n      <div className=\"info\">\n        {topic\n          ? <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          : (\n            <FullNameTitle\n              peer={chat}\n              emojiStatusSize={emojiStatusSize}\n              withEmojiStatus={!noEmojiStatus}\n              isSavedDialog={isSavedDialog}\n              onEmojiStatusClick={onEmojiStatusClick}\n            />\n          )}\n        {!noStatusOrTyping && renderStatusOrTyping()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const threadInfo = threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const onlineCount = chat ? selectChatOnlineCount(global, chat) : undefined;\n    const areMessagesLoaded = Boolean(selectChatMessages(global, chatId));\n    const topic = threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const messagesCount = topic && selectThreadMessagesCount(global, chatId, threadId!);\n    const self = selectUser(global, global.currentUserId!);\n\n    return {\n      chat,\n      threadInfo,\n      onlineCount,\n      topic,\n      areMessagesLoaded,\n      messagesCount,\n      self,\n    };\n  },\n)(GroupChatInfo));\n","// extracted by mini-css-extract-plugin\nexport default {\"primaryLink\":\"xNjJHI7j\",\"input\":\"Ag6k_p7b\",\"moreMenu\":\"p7t3macG\",\"copy\":\"obuPXobw\",\"title\":\"vCMpiQTJ\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\n\nimport styles from './LinkField.module.scss';\n\ntype OwnProps = {\n  title?: string;\n  link: string;\n  isDisabled?: boolean;\n  className?: string;\n  withShare?: boolean;\n  onRevoke?: VoidFunction;\n};\n\nconst InviteLink: FC<OwnProps> = ({\n  title,\n  link,\n  isDisabled,\n  className,\n  withShare,\n  onRevoke,\n}) => {\n  const lang = useOldLang();\n  const { showNotification, openChatWithDraft } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const isOnlyCopy = !onRevoke;\n\n  const copyLink = useLastCallback(() => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: {\n        key: 'LinkCopied',\n      },\n    });\n  });\n\n  const handleCopyClick = useLastCallback(() => {\n    if (isDisabled) return;\n    copyLink();\n  });\n\n  const handleShare = useLastCallback(() => {\n    openChatWithDraft({ text: { text: link } });\n  });\n\n  const PrimaryLinkMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('AccDescrOpenMenu2')}\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, lang]);\n\n  return (\n    <div className={className}>\n      <p className={styles.title}>\n        {lang(title || 'InviteLink.InviteLink')}\n      </p>\n      <div className={styles.primaryLink}>\n        <input\n          className={buildClassName('form-control', styles.input)}\n          value={link}\n          readOnly\n          onClick={handleCopyClick}\n        />\n        {isOnlyCopy ? (\n          <Button\n            color=\"translucent\"\n            className={styles.copy}\n            size=\"smaller\"\n            round\n            disabled={isDisabled}\n            onClick={handleCopyClick}\n          >\n            <Icon name=\"copy\" />\n          </Button>\n        ) : (\n          <DropdownMenu\n            className={styles.moreMenu}\n            trigger={PrimaryLinkMenuButton}\n            positionX=\"right\"\n          >\n            <MenuItem icon=\"copy\" onClick={handleCopyClick} disabled={isDisabled}>{lang('Copy')}</MenuItem>\n            {onRevoke && (\n              <MenuItem icon=\"delete\" onClick={onRevoke} destructive>{lang('RevokeButton')}</MenuItem>\n            )}\n          </DropdownMenu>\n        )}\n      </div>\n      {withShare && (\n        <Button\n          size=\"smaller\"\n          disabled={isDisabled}\n          onClick={handleShare}\n        >\n          {lang('FolderLinkScreen.LinkActionShare')}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(InviteLink);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useRef } from '../../lib/teact/teact';\n\nimport type { ApiMessage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport {\n  getMessageHtmlId,\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageVideo,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\n\nimport MediaSpoiler from './MediaSpoiler';\n\nimport './Media.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  idPrefix?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onClick?: (messageId: number, chatId: string) => void;\n};\n\nconst Media: FC<OwnProps> = ({\n  message,\n  idPrefix = 'shared-media',\n  isProtected,\n  observeIntersection,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'pictogram'), !isIntersecting);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl);\n\n  const video = getMessageVideo(message);\n\n  const hasSpoiler = getMessageIsSpoiler(message);\n  const [isSpoilerShown, , hideSpoiler] = useFlag(hasSpoiler);\n\n  const handleClick = useLastCallback(() => {\n    hideSpoiler();\n    onClick!(message.id, message.chatId);\n  });\n\n  return (\n    <div\n      ref={ref}\n      id={`${idPrefix}${getMessageHtmlId(message.id)}`}\n      className=\"Media scroll-item\"\n      onClick={onClick ? handleClick : undefined}\n    >\n      <img\n        src={thumbDataUri}\n        className=\"media-miniature\"\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      <img\n        src={mediaBlobUrl}\n        className={buildClassName('full-media', 'media-miniature', transitionClassNames)}\n        alt=\"\"\n        draggable={!isProtected}\n        decoding=\"async\"\n        onContextMenu={isProtected ? stopEvent : undefined}\n      />\n      {hasSpoiler && (\n        <MediaSpoiler\n          thumbDataUri={mediaBlobUrl || thumbDataUri}\n          isVisible={isSpoilerShown}\n          className=\"media-spoiler\"\n        />\n      )}\n      {video && <span className=\"video-duration\">{video.isGif ? 'GIF' : formatMediaDuration(video.duration)}</span>}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n};\n\nexport default memo(Media);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport './NothingFound.scss';\n\ninterface OwnProps {\n  text?: string;\n  description?: string;\n}\n\nconst DEFAULT_TEXT = 'Nothing found.';\n\nconst NothingFound: FC<OwnProps> = ({ text = DEFAULT_TEXT, description }) => {\n  const lang = useOldLang();\n  const { transitionClassNames } = useShowTransitionDeprecated(true);\n\n  return (\n    <div className={buildClassName('NothingFound', transitionClassNames, description && 'with-description')}>\n      {text}\n      {description && <p className=\"description\">{renderText(lang(description), ['br'])}</p>}\n    </div>\n  );\n};\n\nexport default memo(NothingFound);\n","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiPeerColor } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getApiPeerColorClass, getPeerColorClass } from './helpers/peerColor';\n\nimport EmojiIconBackground from './embedded/EmojiIconBackground';\n\nimport styles from './PeerColorWrapper.module.scss';\n\ninterface OwnProps extends React.HTMLAttributes<HTMLDivElement> {\n  peer?: ApiPeer;\n  peerColor?: ApiPeerColor;\n  noUserColors?: boolean;\n  shoudReset?: boolean;\n  className?: string;\n  emojiIconClassName?: string;\n  children: React.ReactNode;\n}\n\nfunction PeerColorWrapper({\n  peer, peerColor, noUserColors, shoudReset, className, emojiIconClassName, children, ...otherProps\n}: OwnProps) {\n  const color = peerColor || peer?.color;\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        peer && getPeerColorClass(peer, noUserColors, shoudReset),\n        peerColor && getApiPeerColorClass(peerColor),\n        className,\n      )}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...otherProps}\n    >\n      {color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          className={emojiIconClassName}\n          emojiDocumentId={color.backgroundEmojiId}\n        />\n      )}\n      {children}\n    </div>\n  );\n}\n\nexport default memo(PeerColorWrapper);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nRjVJOQv\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChatMember, ApiTypingStatus, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport type { CustomPeer, StoryViewerOrigin } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getMainUsername, getUserStatus, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport { selectChatMessages, selectUser, selectUserStatus } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RippleEffect from '../ui/RippleEffect';\nimport Avatar from './Avatar';\nimport DotAnimation from './DotAnimation';\nimport FullNameTitle from './FullNameTitle';\nimport Icon from './icons/Icon';\nimport TypingStatus from './TypingStatus';\n\ntype OwnProps = {\n  userId?: string;\n  customPeer?: CustomPeer;\n  typingStatus?: ApiTypingStatus;\n  avatarSize?: 'tiny' | 'small' | 'medium' | 'large' | 'jumbo';\n  forceShowSelf?: boolean;\n  status?: string;\n  statusIcon?: IconName;\n  ripple?: boolean;\n  withDots?: boolean;\n  withMediaViewer?: boolean;\n  withUsername?: boolean;\n  withStory?: boolean;\n  withFullInfo?: boolean;\n  withUpdatingStatus?: boolean;\n  storyViewerOrigin?: StoryViewerOrigin;\n  noEmojiStatus?: boolean;\n  noFake?: boolean;\n  noVerified?: boolean;\n  emojiStatusSize?: number;\n  noStatusOrTyping?: boolean;\n  noRtl?: boolean;\n  adminMember?: ApiChatMember;\n  isSavedDialog?: boolean;\n  className?: string;\n  onEmojiStatusClick?: NoneToVoidFunction;\n  iconElement?: React.ReactNode;\n  rightElement?: React.ReactNode;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    self?: ApiUser;\n    isSavedMessages?: boolean;\n    areMessagesLoaded: boolean;\n    isSynced?: boolean;\n  };\n\nconst UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst PrivateChatInfo: FC<OwnProps & StateProps> = ({\n  customPeer,\n  typingStatus,\n  avatarSize = 'medium',\n  status,\n  statusIcon,\n  withDots,\n  withMediaViewer,\n  withUsername,\n  withStory,\n  withFullInfo,\n  withUpdatingStatus,\n  emojiStatusSize,\n  noStatusOrTyping,\n  noEmojiStatus,\n  noFake,\n  noVerified,\n  noRtl,\n  user,\n  userStatus,\n  self,\n  isSavedMessages,\n  isSavedDialog,\n  areMessagesLoaded,\n  adminMember,\n  ripple,\n  className,\n  storyViewerOrigin,\n  isSynced,\n  onEmojiStatusClick,\n  iconElement,\n  rightElement,\n}) => {\n  const {\n    loadFullUser,\n    openMediaViewer,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const { id: userId } = user || {};\n\n  useEffect(() => {\n    if (userId) {\n      if (withFullInfo && isSynced) loadFullUser({ userId });\n      if (withMediaViewer) loadMoreProfilePhotos({ peerId: userId, isPreload: true });\n    }\n  }, [userId, withFullInfo, withMediaViewer, isSynced]);\n\n  useIntervalForceUpdate(UPDATE_INTERVAL);\n\n  const handleAvatarViewerOpen = useLastCallback(\n    (e: React.MouseEvent<HTMLDivElement, MouseEvent>, hasMedia: boolean) => {\n      if (user && hasMedia) {\n        e.stopPropagation();\n        openMediaViewer({\n          isAvatarView: true,\n          chatId: user.id,\n          mediaIndex: 0,\n          origin: avatarSize === 'jumbo' ? MediaViewerOrigin.ProfileAvatar : MediaViewerOrigin.MiddleHeaderAvatar,\n        });\n      }\n    },\n  );\n\n  const mainUsername = useMemo(() => user && withUsername && getMainUsername(user), [user, withUsername]);\n\n  if (!user && !customPeer) {\n    return undefined;\n  }\n\n  function renderStatusOrTyping() {\n    if (status) {\n      return withDots ? (\n        <DotAnimation className=\"status\" content={status} />\n      ) : (\n        <span className=\"status\" dir=\"auto\">\n          {statusIcon && <Icon className=\"status-icon\" name={statusIcon} />}\n          {renderText(status)}\n        </span>\n      );\n    }\n\n    if (withUpdatingStatus && !areMessagesLoaded) {\n      return (\n        <DotAnimation className=\"status\" content={lang('Updating')} />\n      );\n    }\n\n    if (customPeer?.subtitleKey) {\n      return (\n        <span className=\"status\" dir=\"auto\">\n          <span className=\"user-status\" dir=\"auto\">{lang(customPeer.subtitleKey)}</span>\n        </span>\n      );\n    }\n\n    if (!user) {\n      return undefined;\n    }\n\n    if (typingStatus) {\n      return <TypingStatus typingStatus={typingStatus} />;\n    }\n\n    if (isSystemBot(user.id)) {\n      return undefined;\n    }\n\n    const translatedStatus = getUserStatus(lang, user, userStatus);\n    const mainUserNameClassName = buildClassName('handle', translatedStatus && 'withStatus');\n    return (\n      <span className={buildClassName('status', isUserOnline(user, userStatus, true) && 'online')}>\n        {mainUsername && <span className={mainUserNameClassName}>{mainUsername}</span>}\n        {translatedStatus && <span className=\"user-status\" dir=\"auto\">{translatedStatus}</span>}\n      </span>\n    );\n  }\n\n  const customTitle = adminMember\n    ? adminMember.customTitle || lang(adminMember.isOwner ? 'GroupInfo.LabelOwner' : 'GroupInfo.LabelAdmin')\n    : undefined;\n\n  function renderNameTitle() {\n    if (customTitle) {\n      return (\n        <div className=\"info-name-title\">\n          <FullNameTitle\n            peer={user!}\n            withEmojiStatus={!noEmojiStatus}\n            emojiStatusSize={emojiStatusSize}\n            isSavedMessages={isSavedMessages}\n            isSavedDialog={isSavedDialog}\n            onEmojiStatusClick={onEmojiStatusClick}\n          />\n          {customTitle && <span className=\"custom-title\">{customTitle}</span>}\n        </div>\n      );\n    }\n\n    return (\n      <FullNameTitle\n        peer={customPeer || user!}\n        noFake={noFake}\n        noVerified={noVerified}\n        withEmojiStatus={!noEmojiStatus}\n        emojiStatusSize={emojiStatusSize}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        onEmojiStatusClick={onEmojiStatusClick}\n        iconElement={iconElement}\n      />\n    );\n  }\n\n  return (\n    <div className={buildClassName('ChatInfo', className)} dir={!noRtl && lang.isRtl ? 'rtl' : undefined}>\n      {isSavedDialog && self && (\n        <Avatar\n          key=\"saved-messages\"\n          size={avatarSize}\n          peer={self}\n          isSavedMessages\n          className=\"saved-dialog-avatar\"\n        />\n      )}\n      <Avatar\n        key={user?.id}\n        size={avatarSize}\n        peer={customPeer || user}\n        className={buildClassName(isSavedDialog && 'overlay-avatar')}\n        isSavedMessages={isSavedMessages}\n        isSavedDialog={isSavedDialog}\n        withStory={withStory}\n        storyViewerOrigin={storyViewerOrigin}\n        storyViewerMode=\"single-peer\"\n        onClick={withMediaViewer ? handleAvatarViewerOpen : undefined}\n      />\n      <div className=\"info\">\n        {renderNameTitle()}\n        {(status || (!isSavedMessages && !noStatusOrTyping)) && renderStatusOrTyping()}\n      </div>\n      {ripple && <RippleEffect />}\n      {rightElement}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId, forceShowSelf }): StateProps => {\n    const { isSynced } = global;\n    const user = userId ? selectUser(global, userId) : undefined;\n    const userStatus = userId ? selectUserStatus(global, userId) : undefined;\n    const isSavedMessages = !forceShowSelf && user && user.isSelf;\n    const self = isSavedMessages ? user : selectUser(global, global.currentUserId!);\n    const areMessagesLoaded = Boolean(userId && selectChatMessages(global, userId));\n\n    return {\n      user,\n      userStatus,\n      isSavedMessages,\n      areMessagesLoaded,\n      self,\n      isSynced,\n    };\n  },\n)(PrivateChatInfo));\n","import type { FC, TeactNode } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiChat, ApiPhoto, ApiUser } from '../../api/types';\n\nimport {\n  getChatAvatarHash,\n  getChatTitle,\n  getPhotoMediaHash,\n  getProfilePhotoMediaHash,\n  getUserFullName,\n  getVideoProfilePhotoMediaHash,\n  isAnonymousForwardsChat,\n  isChatWithRepliesBot,\n  isDeletedUser,\n  isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { getFirstLetters } from '../../util/textFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../util/windowEnvironment';\nimport { getPeerColorClass } from './helpers/peerColor';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useFlag from '../../hooks/useFlag';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './ProfilePhoto.scss';\n\ntype OwnProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n  isSavedDialog?: boolean;\n  photo?: ApiPhoto;\n  canPlayVideo: boolean;\n  onClick: NoneToVoidFunction;\n};\n\nconst ProfilePhoto: FC<OwnProps> = ({\n  chat,\n  user,\n  photo,\n  isSavedMessages,\n  isSavedDialog,\n  canPlayVideo,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const isDeleted = user && isDeletedUser(user);\n  const isRepliesChat = chat && isChatWithRepliesBot(chat.id);\n  const isAnonymousForwards = chat && isAnonymousForwardsChat(chat.id);\n  const peer = (user || chat)!;\n  const canHaveMedia = peer && !isSavedMessages && !isDeleted && !isRepliesChat && !isAnonymousForwards;\n  const { isVideo } = photo || {};\n\n  const avatarHash = (!photo || photo.id === peer.avatarPhotoId) && getChatAvatarHash(peer, 'normal');\n\n  const previewHash = canHaveMedia && photo && !avatarHash && getPhotoMediaHash(photo, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash || avatarHash);\n\n  const photoHash = canHaveMedia && photo && !isVideo && getProfilePhotoMediaHash(photo);\n  const photoBlobUrl = useMedia(photoHash);\n\n  const videoHash = canHaveMedia && photo && isVideo && getVideoProfilePhotoMediaHash(photo);\n  const videoBlobUrl = useMedia(videoHash);\n\n  const fullMediaData = videoBlobUrl || photoBlobUrl;\n  const [isVideoReady, markVideoReady] = useFlag();\n  const isFullMediaReady = Boolean(fullMediaData && (!isVideo || isVideoReady));\n  const transitionClassNames = useMediaTransitionDeprecated(isFullMediaReady);\n  const isBlurredThumb = canHaveMedia && !isFullMediaReady && !previewBlobUrl && photo?.thumbnail?.dataUri;\n  const blurredThumbCanvasRef = useCanvasBlur(\n    photo?.thumbnail?.dataUri, !isBlurredThumb, isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n  const hasMedia = photo || previewBlobUrl || isBlurredThumb;\n\n  useEffect(() => {\n    if (videoRef.current && !canPlayVideo) {\n      videoRef.current.currentTime = 0;\n    }\n  }, [canPlayVideo]);\n\n  const specialIcon = useMemo(() => {\n    if (isSavedMessages) {\n      return isSavedDialog ? 'my-notes' : 'avatar-saved-messages';\n    }\n\n    if (isDeleted) {\n      return 'avatar-deleted-account';\n    }\n\n    if (isRepliesChat) {\n      return 'reply-filled';\n    }\n\n    if (isAnonymousForwards) {\n      return 'author-hidden';\n    }\n\n    return undefined;\n  }, [isAnonymousForwards, isDeleted, isSavedDialog, isRepliesChat, isSavedMessages]);\n\n  let content: TeactNode | undefined;\n\n  if (specialIcon) {\n    content = <Icon name={specialIcon} role=\"img\" />;\n  } else if (hasMedia) {\n    content = (\n      <>\n        {isBlurredThumb ? (\n          <canvas ref={blurredThumbCanvasRef} className=\"thumb\" />\n        ) : (\n          <img src={previewBlobUrl} draggable={false} className=\"thumb\" alt=\"\" />\n        )}\n        {photo && (\n          isVideo ? (\n            <OptimizedVideo\n              canPlay={canPlayVideo}\n              ref={videoRef}\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              muted\n              disablePictureInPicture\n              loop\n              playsInline\n              onReady={markVideoReady}\n            />\n          ) : (\n            <img\n              src={fullMediaData}\n              className={buildClassName('avatar-media', transitionClassNames)}\n              alt=\"\"\n            />\n          )\n        )}\n      </>\n    );\n  } else if (user) {\n    const userFullName = getUserFullName(user);\n    content = userFullName ? getFirstLetters(userFullName, 2) : undefined;\n  } else if (chat) {\n    const title = getChatTitle(lang, chat);\n    content = title && getFirstLetters(title, isUserId(chat.id) ? 2 : 1);\n  } else {\n    content = (\n      <div className=\"spinner-wrapper\">\n        <Spinner color=\"white\" />\n      </div>\n    );\n  }\n\n  const fullClassName = buildClassName(\n    'ProfilePhoto',\n    getPeerColorClass(peer),\n    isSavedMessages && 'saved-messages',\n    isAnonymousForwards && 'anonymous-forwards',\n    isDeleted && 'deleted-account',\n    isRepliesChat && 'replies-bot-account',\n    (!isSavedMessages && !hasMedia) && 'no-photo',\n  );\n\n  return (\n    <div className={fullClassName} onClick={hasMedia ? onClick : undefined}>\n      {typeof content === 'string' ? renderText(content, ['hq_emoji']) : content}\n    </div>\n  );\n};\n\nexport default memo(ProfilePhoto);\n","// extracted by mini-css-extract-plugin\nexport default {\"fallbackPhoto\":\"Wm9Ygb23\",\"fallbackPhotoContents\":\"nflKKT3R\",\"fallbackPhotoVisible\":\"tFkRrvxe\",\"fallbackPhotoAvatar\":\"R7w3H5eC\",\"photoWrapper\":\"GBGLnrA7\",\"photoDashes\":\"uyvKpR3B\",\"photoDash\":\"wB4yjvei\",\"photoDash_current\":\"aZmp9FLh\",\"photoDashCurrent\":\"aZmp9FLh\",\"navigation\":\"ZZRcBh8v\",\"navigation_prev\":\"RQITz4WQ\",\"navigationPrev\":\"RQITz4WQ\",\"navigation_next\":\"_0F1Txru\",\"navigationNext\":\"_0F1Txru\",\"info\":\"UcyW7tVh\",\"status\":\"cpyXyZDl\",\"user-status\":\"_HDVUj4P\",\"userStatus\":\"_HDVUj4P\",\"get-status\":\"Qga38M20\",\"getStatus\":\"Qga38M20\",\"topicContainer\":\"yzg267rr\",\"topicTitle\":\"umOuiu3K\",\"topicIcon\":\"ZCxp0_t4\",\"topicIconTitle\":\"lkfZNWOm\",\"topicMessagesCounter\":\"tLTzQ2ks\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiPeerPhotos, ApiSticker, ApiTopic, ApiUser, ApiUserStatus,\n} from '../../api/types';\nimport { MediaViewerOrigin } from '../../types';\n\nimport {\n  getUserStatus, isAnonymousForwardsChat, isChatChannel, isSystemBot, isUserOnline,\n} from '../../global/helpers';\nimport {\n  selectChat,\n  selectCurrentMessageList,\n  selectPeerPhotos,\n  selectTabState,\n  selectThreadMessagesCount,\n  selectTopic,\n  selectUser,\n  selectUserStatus,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents, SwipeDirection } from '../../util/captureEvents';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from './helpers/renderText';\n\nimport useIntervalForceUpdate from '../../hooks/schedulers/useIntervalForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport usePhotosPreload from './hooks/usePhotosPreload';\n\nimport Transition from '../ui/Transition';\nimport Avatar from './Avatar';\nimport FullNameTitle from './FullNameTitle';\nimport ProfilePhoto from './ProfilePhoto';\nimport TopicIcon from './TopicIcon';\n\nimport './ProfileInfo.scss';\nimport styles from './ProfileInfo.module.scss';\n\ntype OwnProps = {\n  peerId: string;\n  forceShowSelf?: boolean;\n  canPlayVideo: boolean;\n};\n\ntype StateProps =\n  {\n    user?: ApiUser;\n    userStatus?: ApiUserStatus;\n    chat?: ApiChat;\n    mediaIndex?: number;\n    avatarOwnerId?: string;\n    topic?: ApiTopic;\n    messagesCount?: number;\n    emojiStatusSticker?: ApiSticker;\n    profilePhotos?: ApiPeerPhotos;\n  };\n\nconst EMOJI_STATUS_SIZE = 24;\nconst EMOJI_TOPIC_SIZE = 120;\nconst LOAD_MORE_THRESHOLD = 3;\nconst MAX_PHOTO_DASH_COUNT = 30;\nconst STATUS_UPDATE_INTERVAL = 1000 * 60; // 1 min\n\nconst ProfileInfo: FC<OwnProps & StateProps> = ({\n  forceShowSelf,\n  canPlayVideo,\n  user,\n  userStatus,\n  chat,\n  mediaIndex,\n  avatarOwnerId,\n  topic,\n  messagesCount,\n  emojiStatusSticker,\n  profilePhotos,\n  peerId,\n}) => {\n  const {\n    openMediaViewer,\n    openPremiumModal,\n    openStickerSet,\n    openPrivacySettingsNoticeModal,\n    loadMoreProfilePhotos,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useIntervalForceUpdate(user ? STATUS_UPDATE_INTERVAL : undefined);\n\n  const photos = profilePhotos?.photos || MEMO_EMPTY_ARRAY;\n  const prevMediaIndex = usePreviousDeprecated(mediaIndex);\n  const prevAvatarOwnerId = usePreviousDeprecated(avatarOwnerId);\n  const [hasSlideAnimation, setHasSlideAnimation] = useState(true);\n  // slideOptimized doesn't work well when animation is dynamically disabled\n  const slideAnimation = hasSlideAnimation ? (lang.isRtl ? 'slideRtl' : 'slide') : 'none';\n\n  const [currentPhotoIndex, setCurrentPhotoIndex] = useState(0);\n  const isFirst = photos.length <= 1 || currentPhotoIndex === 0;\n  const isLast = photos.length <= 1 || currentPhotoIndex === photos.length - 1;\n\n  useEffect(() => {\n    if (photos.length - currentPhotoIndex <= LOAD_MORE_THRESHOLD) {\n      loadMoreProfilePhotos({ peerId });\n    }\n  }, [currentPhotoIndex, peerId, photos.length]);\n\n  // Set the current avatar photo to the last selected photo in Media Viewer after it is closed\n  useEffect(() => {\n    if (prevAvatarOwnerId && prevMediaIndex !== undefined && mediaIndex === undefined) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(prevMediaIndex);\n    }\n  }, [mediaIndex, prevMediaIndex, prevAvatarOwnerId]);\n\n  // Deleting the last profile photo may result in an error\n  useEffect(() => {\n    if (currentPhotoIndex > photos.length) {\n      setHasSlideAnimation(false);\n      setCurrentPhotoIndex(Math.max(0, photos.length - 1));\n    }\n  }, [currentPhotoIndex, photos.length]);\n\n  usePhotosPreload(photos, currentPhotoIndex);\n\n  const handleProfilePhotoClick = useLastCallback(() => {\n    openMediaViewer({\n      isAvatarView: true,\n      chatId: peerId,\n      mediaIndex: currentPhotoIndex,\n      origin: forceShowSelf ? MediaViewerOrigin.SettingsAvatar : MediaViewerOrigin.ProfileAvatar,\n    });\n  });\n\n  const handleStatusClick = useLastCallback(() => {\n    if (!peerId) {\n      openStickerSet({\n        stickerSetInfo: emojiStatusSticker!.stickerSetInfo,\n      });\n      return;\n    }\n\n    openPremiumModal({ fromUserId: peerId });\n  });\n\n  const selectPreviousMedia = useLastCallback(() => {\n    if (isFirst) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex - 1);\n  });\n\n  const selectNextMedia = useLastCallback(() => {\n    if (isLast) {\n      return;\n    }\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(currentPhotoIndex + 1);\n  });\n\n  const handleOpenGetReadDateModal = useLastCallback(() => {\n    openPrivacySettingsNoticeModal({ chatId: chat!.id, isReadDate: false });\n  });\n\n  function handleSelectFallbackPhoto() {\n    if (!isFirst) return;\n    setHasSlideAnimation(true);\n    setCurrentPhotoIndex(photos.length - 1);\n  }\n\n  // Swipe gestures\n  useEffect(() => {\n    const element = document.querySelector<HTMLDivElement>(`.${styles.photoWrapper}`);\n    if (!element) {\n      return undefined;\n    }\n\n    return captureEvents(element, {\n      selectorToPreventScroll: '.Profile, .settings-content',\n      onSwipe: IS_TOUCH_ENV ? (e, direction) => {\n        if (direction === SwipeDirection.Right) {\n          selectPreviousMedia();\n          return true;\n        } else if (direction === SwipeDirection.Left) {\n          selectNextMedia();\n          return true;\n        }\n\n        return false;\n      } : undefined,\n    });\n  }, [selectNextMedia, selectPreviousMedia]);\n\n  if (!user && !chat) {\n    return undefined;\n  }\n\n  function renderTopic() {\n    return (\n      <div className={styles.topicContainer}>\n        <TopicIcon\n          topic={topic!}\n          size={EMOJI_TOPIC_SIZE}\n          className={styles.topicIcon}\n          letterClassName={styles.topicIconTitle}\n          noLoopLimit\n        />\n        <h3 className={styles.topicTitle} dir={lang.isRtl ? 'rtl' : undefined}>{renderText(topic!.title)}</h3>\n        <p className={styles.topicMessagesCounter}>\n          {messagesCount ? lang('Chat.Title.Topic', messagesCount, 'i') : lang('lng_forum_no_messages')}\n        </p>\n      </div>\n    );\n  }\n\n  function renderPhotoTabs() {\n    const totalPhotosLength = Math.max(photos.length, profilePhotos?.count || 0);\n    if (!photos || totalPhotosLength <= 1) {\n      return undefined;\n    }\n\n    const enumerator = Array.from({ length: Math.min(totalPhotosLength, MAX_PHOTO_DASH_COUNT) });\n    const activeDashIndex = currentPhotoIndex >= MAX_PHOTO_DASH_COUNT ? MAX_PHOTO_DASH_COUNT - 1 : currentPhotoIndex;\n\n    return (\n      <div className={styles.photoDashes}>\n        {enumerator.map((_, i) => (\n          <span className={buildClassName(styles.photoDash, i === activeDashIndex && styles.photoDash_current)} />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPhoto(isActive?: boolean) {\n    const photo = photos.length > 0\n      ? photos[currentPhotoIndex]\n      : undefined;\n\n    return (\n      <ProfilePhoto\n        key={currentPhotoIndex}\n        user={user}\n        chat={chat}\n        photo={photo}\n        canPlayVideo={Boolean(isActive && canPlayVideo)}\n        onClick={handleProfilePhotoClick}\n      />\n    );\n  }\n\n  function renderStatus() {\n    const isAnonymousForwards = isAnonymousForwardsChat(peerId);\n    const isSystemBotChat = isSystemBot(peerId);\n    if (isAnonymousForwards || isSystemBotChat) return undefined;\n\n    if (user) {\n      return (\n        <div\n          className={buildClassName(\n            styles.status,\n            'status',\n            isUserOnline(user, userStatus) && 'online',\n          )}\n        >\n          <span className={styles.userStatus} dir=\"auto\">\n            {getUserStatus(lang, user, userStatus)}\n          </span>\n          {userStatus?.isReadDateRestrictedByMe && (\n            <span className={styles.getStatus} onClick={handleOpenGetReadDateModal}>\n              <span>{lang('StatusHiddenShow')}</span>\n            </span>\n          )}\n        </div>\n      );\n    }\n\n    return (\n      <span className={buildClassName(styles.status, 'status')} dir=\"auto\">{\n        isChatChannel(chat!)\n          ? lang('Subscribers', chat!.membersCount ?? 0, 'i')\n          : lang('Members', chat!.membersCount ?? 0, 'i')\n      }\n      </span>\n    );\n  }\n\n  if (topic) {\n    return renderTopic();\n  }\n\n  return (\n    <div\n      className={buildClassName('ProfileInfo')}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      <div className={styles.photoWrapper}>\n        {renderPhotoTabs()}\n        {!forceShowSelf && profilePhotos?.personalPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            isFirst && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents}>\n              {lang(profilePhotos.personalPhoto.isVideo ? 'UserInfo.CustomVideo' : 'UserInfo.CustomPhoto')}\n            </div>\n          </div>\n        )}\n        {forceShowSelf && profilePhotos?.fallbackPhoto && (\n          <div className={buildClassName(\n            styles.fallbackPhoto,\n            (isFirst || isLast) && styles.fallbackPhotoVisible,\n          )}\n          >\n            <div className={styles.fallbackPhotoContents} onClick={handleSelectFallbackPhoto}>\n              {!isLast && (\n                <Avatar\n                  photo={profilePhotos.fallbackPhoto}\n                  className={styles.fallbackPhotoAvatar}\n                  size=\"mini\"\n                />\n              )}\n              {lang(profilePhotos.fallbackPhoto.isVideo ? 'UserInfo.PublicVideo' : 'UserInfo.PublicPhoto')}\n            </div>\n          </div>\n        )}\n        <Transition activeKey={currentPhotoIndex} name={slideAnimation}>\n          {renderPhoto}\n        </Transition>\n\n        {!isFirst && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_prev)}\n            aria-label={lang('AccDescrPrevious')}\n            onClick={selectPreviousMedia}\n          />\n        )}\n        {!isLast && (\n          <button\n            type=\"button\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            className={buildClassName(styles.navigation, styles.navigation_next)}\n            aria-label={lang('Next')}\n            onClick={selectNextMedia}\n          />\n        )}\n      </div>\n\n      <div className={styles.info} dir={lang.isRtl ? 'rtl' : 'auto'}>\n        {(user || chat) && (\n          <FullNameTitle\n            peer={(user || chat)!}\n            withEmojiStatus\n            emojiStatusSize={EMOJI_STATUS_SIZE}\n            onEmojiStatusClick={handleStatusClick}\n            noLoopLimit\n            canCopyTitle\n          />\n        )}\n        {renderStatus()}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { peerId }): StateProps => {\n    const user = selectUser(global, peerId);\n    const userStatus = selectUserStatus(global, peerId);\n    const chat = selectChat(global, peerId);\n    const profilePhotos = selectPeerPhotos(global, peerId);\n    const { mediaIndex, chatId: avatarOwnerId } = selectTabState(global).mediaViewer;\n    const isForum = chat?.isForum;\n    const { threadId: currentTopicId } = selectCurrentMessageList(global) || {};\n    const topic = isForum && currentTopicId ? selectTopic(global, peerId, currentTopicId) : undefined;\n\n    const emojiStatus = (user || chat)?.emojiStatus;\n    const emojiStatusSticker = emojiStatus ? global.customEmojis.byId[emojiStatus.documentId] : undefined;\n\n    return {\n      user,\n      userStatus,\n      chat,\n      mediaIndex,\n      avatarOwnerId,\n      emojiStatusSticker,\n      profilePhotos,\n      ...(topic && {\n        topic,\n        messagesCount: selectThreadMessagesCount(global, peerId, currentTopicId!),\n      }),\n    };\n  },\n)(ProfileInfo));\n","import { useEffect } from '../../../lib/teact/teact';\n\nimport type { ApiPhoto } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getProfilePhotoMediaHash } from '../../../global/helpers';\nimport * as mediaLoader from '../../../util/mediaLoader';\n\nconst PHOTOS_TO_PRELOAD = 4;\n\nexport default function usePhotosPreload(\n  photos: ApiPhoto[],\n  currentIndex: number,\n) {\n  useEffect(() => {\n    photos.slice(currentIndex, currentIndex + PHOTOS_TO_PRELOAD).forEach((photo) => {\n      const mediaHash = getProfilePhotoMediaHash(photo);\n      const mediaData = mediaLoader.getFromMemory(mediaHash);\n      if (!mediaData) {\n        mediaLoader.fetch(mediaHash, ApiMediaFormat.BlobUrl);\n      }\n    });\n  }, [currentIndex, photos]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiMessage, ApiWebPage } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { TextPart } from '../../types';\n\nimport {\n  getFirstLinkInMessage, getMessageText,\n  getMessageWebPage,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatPastTimeShort } from '../../util/dates/dateFormat';\nimport trimText from '../../util/trimText';\nimport { renderMessageSummary } from './helpers/renderMessageText';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Link from '../ui/Link';\nimport Media from './Media';\nimport SafeLink from './SafeLink';\n\nimport './WebLink.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\n\ntype OwnProps = {\n  message: ApiMessage;\n  senderTitle?: string;\n  isProtected?: boolean;\n  observeIntersection?: ObserveFn;\n  onMessageClick: (message: ApiMessage) => void;\n};\n\ntype ApiWebPageWithFormatted =\n  ApiWebPage\n  & { formattedDescription?: TextPart[] };\n\nconst WebLink: FC<OwnProps> = ({\n  message, senderTitle, isProtected, observeIntersection, onMessageClick,\n}) => {\n  const lang = useOldLang();\n\n  let linkData: ApiWebPageWithFormatted | undefined = getMessageWebPage(message);\n\n  if (!linkData) {\n    const link = getFirstLinkInMessage(message);\n    if (link) {\n      const { url, domain } = link;\n\n      linkData = {\n        siteName: domain.replace(/^www./, ''),\n        url: url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `http://${url}`,\n        formattedDescription: getMessageText(message) !== url\n          ? renderMessageSummary(lang, message, undefined, undefined, MAX_TEXT_LENGTH)\n          : undefined,\n      } as ApiWebPageWithFormatted;\n    }\n  }\n\n  const handleMessageClick = useLastCallback(() => {\n    onMessageClick(message);\n  });\n\n  if (!linkData) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    formattedDescription,\n    photo,\n    video,\n  } = linkData;\n\n  const truncatedDescription = !senderTitle && description && trimText(description, MAX_TEXT_LENGTH);\n\n  const className = buildClassName(\n    'WebLink scroll-item',\n    (!photo && !video) && 'without-media',\n  );\n\n  const safeLinkContent = url.replace('mailto:', '') || displayUrl;\n\n  return (\n    <div\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {photo && (\n        <Media message={message} isProtected={isProtected} observeIntersection={observeIntersection} />\n      )}\n      <div className=\"content\">\n        <Link isRtl={lang.isRtl} className=\"site-title\" onClick={handleMessageClick}>\n          {renderText(title || siteName || displayUrl)}\n        </Link>\n        {(truncatedDescription || formattedDescription) && (\n          <Link isRtl={lang.isRtl} className=\"site-description\" onClick={handleMessageClick}>\n            {formattedDescription || (truncatedDescription && renderText(truncatedDescription))}\n          </Link>\n        )}\n        <SafeLink\n          url={url}\n          className=\"site-name\"\n          text={safeLinkContent}\n          isRtl={lang.isRtl}\n        />\n        {senderTitle && <div className=\"sender-name\">{renderText(senderTitle)}</div>}\n      </div>\n      {senderTitle && (\n        <div className=\"message-date\">\n          <Link\n            className=\"date\"\n            onClick={handleMessageClick}\n            isRtl={lang.isRtl}\n          >\n            {formatPastTimeShort(lang, message.date * 1000)}\n          </Link>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(WebLink);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { useMemo, useRef } from '../../../lib/teact/teact';\n\nimport type {\n  ApiChat,\n  ApiMessage, ApiPeer, ApiReplyInfo, MediaContainer,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatTranslatedMessages } from '../../../types';\nimport type { IconName } from '../../../types/icons';\n\nimport { CONTENT_NOT_SUPPORTED } from '../../../config';\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageRoundVideo,\n  getPeerTitle,\n  isActionMessage,\n  isChatChannel,\n  isChatGroup,\n  isMessageTranslatable,\n  isUserId,\n} from '../../../global/helpers';\nimport { getMediaContentTypeDescription } from '../../../global/helpers/messageSummary';\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport { getPictogramDimensions } from '../helpers/mediaDimensions';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useThumbnail from '../../../hooks/useThumbnail';\nimport useMessageTranslation from '../../middle/message/hooks/useMessageTranslation';\n\nimport ActionMessage from '../../middle/ActionMessage';\nimport RippleEffect from '../../ui/RippleEffect';\nimport Icon from '../icons/Icon';\nimport MediaSpoiler from '../MediaSpoiler';\nimport MessageSummary from '../MessageSummary';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  className?: string;\n  replyInfo?: ApiReplyInfo;\n  message?: ApiMessage;\n  sender?: ApiPeer;\n  senderChat?: ApiChat;\n  forwardSender?: ApiPeer;\n  title?: string;\n  customText?: string;\n  noUserColors?: boolean;\n  isProtected?: boolean;\n  isInComposer?: boolean;\n  chatTranslations?: ChatTranslatedMessages;\n  requestedChatTranslationLanguage?: string;\n  isOpen?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onClick: ((e: React.MouseEvent) => void);\n};\n\nconst NBSP = '\\u00A0';\nconst EMOJI_SIZE = 17;\n\nconst EmbeddedMessage: FC<OwnProps> = ({\n  className,\n  message,\n  replyInfo,\n  sender,\n  senderChat,\n  forwardSender,\n  title,\n  customText,\n  isProtected,\n  isInComposer,\n  noUserColors,\n  chatTranslations,\n  requestedChatTranslationLanguage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isIntersecting = useIsIntersecting(ref, observeIntersectionForLoading);\n\n  const containedMedia: MediaContainer | undefined = useMemo(() => {\n    const media = (replyInfo?.type === 'message' && replyInfo.replyMedia) || message?.content;\n    if (!media) {\n      return undefined;\n    }\n\n    return {\n      content: media,\n    };\n  }, [message, replyInfo]);\n\n  const gif = containedMedia?.content?.video?.isGif ? containedMedia.content.video : undefined;\n  const isVideoThumbnail = Boolean(gif && !gif.previewPhotoSizes?.length);\n\n  const mediaHash = containedMedia && getMessageMediaHash(containedMedia, isVideoThumbnail ? 'full' : 'pictogram');\n  const mediaBlobUrl = useMedia(mediaHash, !isIntersecting);\n  const mediaThumbnail = useThumbnail(containedMedia);\n\n  const isRoundVideo = Boolean(containedMedia && getMessageRoundVideo(containedMedia));\n  const isSpoiler = Boolean(containedMedia && getMessageIsSpoiler(containedMedia));\n  const isQuote = Boolean(replyInfo?.type === 'message' && replyInfo.isQuote);\n  const replyForwardInfo = replyInfo?.type === 'message' ? replyInfo.replyFrom : undefined;\n\n  const shouldTranslate = message && isMessageTranslatable(message);\n  const { translatedText } = useMessageTranslation(\n    chatTranslations, message?.chatId, shouldTranslate ? message?.id : undefined, requestedChatTranslationLanguage,\n  );\n\n  const lang = useOldLang();\n\n  const senderTitle = sender ? getPeerTitle(lang, sender)\n    : (replyForwardInfo?.hiddenUserName || message?.forwardInfo?.hiddenUserName);\n  const senderChatTitle = senderChat ? getPeerTitle(lang, senderChat) : undefined;\n  const forwardSenderTitle = forwardSender ? getPeerTitle(lang, forwardSender)\n    : message?.forwardInfo?.hiddenUserName;\n  const areSendersSame = sender && sender.id === forwardSender?.id;\n\n  const { handleClick, handleMouseDown } = useFastClick(onClick);\n\n  function renderTextContent() {\n    if (replyInfo?.type === 'message' && replyInfo.quoteText) {\n      return renderTextWithEntities({\n        text: replyInfo.quoteText.text,\n        entities: replyInfo.quoteText.entities,\n        noLineBreaks: isInComposer,\n        emojiSize: EMOJI_SIZE,\n      });\n    }\n\n    if (!message) {\n      return customText || renderMediaContentType(containedMedia) || NBSP;\n    }\n\n    if (isActionMessage(message)) {\n      return (\n        <ActionMessage\n          message={message}\n          isEmbedded\n          observeIntersectionForLoading={observeIntersectionForLoading}\n          observeIntersectionForPlaying={observeIntersectionForPlaying}\n        />\n      );\n    }\n\n    return (\n      <MessageSummary\n        message={message}\n        noEmoji={Boolean(mediaThumbnail)}\n        translatedText={translatedText}\n        observeIntersectionForLoading={observeIntersectionForLoading}\n        observeIntersectionForPlaying={observeIntersectionForPlaying}\n        emojiSize={EMOJI_SIZE}\n      />\n    );\n  }\n\n  function renderMediaContentType(media?: MediaContainer) {\n    if (!media || media.content.text) return NBSP;\n    const description = getMediaContentTypeDescription(lang, media.content, {});\n    if (!description || description === CONTENT_NOT_SUPPORTED) return NBSP;\n    return (\n      <span>\n        {renderText(description)}\n      </span>\n    );\n  }\n\n  function checkShouldRenderSenderTitle() {\n    if (!senderChat) return true;\n    if (isUserId(senderChat?.id)) return true;\n    if (senderChat.id === sender?.id) return false;\n    return true;\n  }\n  function renderSender() {\n    if (title) {\n      return renderText(title);\n    }\n\n    if (!senderTitle) {\n      return NBSP;\n    }\n\n    let icon: IconName | undefined;\n    if (senderChat) {\n      if (isChatChannel(senderChat)) {\n        icon = 'channel-filled';\n      }\n\n      if (isChatGroup(senderChat)) {\n        icon = 'group-filled';\n      }\n    }\n\n    const isReplyToQuote = isInComposer && Boolean(replyInfo && 'quoteText' in replyInfo && replyInfo?.quoteText);\n\n    return (\n      <>\n        {checkShouldRenderSenderTitle() && (\n          <span className=\"embedded-sender\">\n            {renderText(isReplyToQuote ? lang('ReplyToQuote', senderTitle) : senderTitle)}\n          </span>\n        )}\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {icon && senderChatTitle && (\n          <span className=\"embedded-sender-chat\">\n            {renderText(senderChatTitle)}\n          </span>\n        )}\n      </>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, noUserColors, true),\n        isQuote && 'is-quote',\n        mediaThumbnail && 'with-thumb',\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      <div className=\"hover-effect\" />\n      <RippleEffect />\n      {mediaThumbnail && renderPictogram(\n        mediaThumbnail, mediaBlobUrl, isVideoThumbnail, isRoundVideo, isProtected, isSpoiler,\n      )}\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        <p className={buildClassName('embedded-text-wrapper', isQuote && 'multiline')}>\n          {renderTextContent()}\n        </p>\n        <div className=\"message-title\">\n          {renderSender()}\n          {forwardSenderTitle && !areSendersSame && (\n            <>\n              <Icon name={forwardSender ? 'share-filled' : 'forward'} className=\"embedded-origin-icon\" />\n              {renderText(forwardSenderTitle)}\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nfunction renderPictogram(\n  thumbDataUri: string,\n  blobUrl?: string,\n  isFullVideo?: boolean,\n  isRoundVideo?: boolean,\n  isProtected?: boolean,\n  isSpoiler?: boolean,\n) {\n  const { width, height } = getPictogramDimensions();\n\n  const srcUrl = blobUrl || thumbDataUri;\n  const shouldRenderVideo = isFullVideo && blobUrl;\n\n  return (\n    <div className={buildClassName('embedded-thumb', isRoundVideo && 'round')}>\n      {!isSpoiler && !shouldRenderVideo && (\n        <img\n          src={srcUrl}\n          width={width}\n          height={height}\n          alt=\"\"\n          className=\"pictogram\"\n          draggable={false}\n        />\n      )}\n      {!isSpoiler && shouldRenderVideo && (\n        <video\n          src={blobUrl}\n          width={width}\n          height={height}\n          playsInline\n          disablePictureInPicture\n          className=\"pictogram\"\n        />\n      )}\n      <MediaSpoiler\n        thumbDataUri={shouldRenderVideo ? thumbDataUri : srcUrl}\n        isVisible={Boolean(isSpoiler)}\n        width={width}\n        height={height}\n      />\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport const ClosableEmbeddedMessage = freezeWhenClosed(EmbeddedMessage);\n\nexport default EmbeddedMessage;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"pTWe_CYU\"};","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { preloadImage } from '../../../util/files';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport { useThrottleForHeavyAnimation } from '../../../hooks/useHeavyAnimation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\nimport useCustomEmoji from '../hooks/useCustomEmoji';\n\nimport styles from './EmojiIconBackground.module.scss';\n\ntype IconPosition = {\n  inline: number;\n  block: number;\n  opacity: number;\n  scale: number;\n};\n\nconst ICON_POSITIONS: IconPosition[] = [\n  {\n    inline: 22, block: 38, opacity: 0.35, scale: 0.75,\n  },\n  {\n    inline: 32, block: 12, opacity: 0.3, scale: 1,\n  },\n  {\n    inline: 60, block: 22, opacity: 0.25, scale: 0.75,\n  },\n  {\n    inline: 75, block: 44, opacity: 0.25, scale: 1,\n  },\n  {\n    inline: 75, block: 2, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 95, block: 18, opacity: 0.2, scale: 1,\n  },\n  {\n    inline: 115, block: 38, opacity: 0.2, scale: 0.625,\n  },\n  {\n    inline: 125, block: 12, opacity: 0.1, scale: 0.75,\n  },\n];\n\nconst EMOJI_SIZE = REM;\nconst LOTTIE_TINT_OPACITY = 'ff';\nconst NON_LOTTIE_TINT_OPACITY = 'bb';\n\ntype OwnProps = {\n  emojiDocumentId: string;\n  className?: string;\n};\n\nconst EmojiIconBackground = ({\n  emojiDocumentId,\n  className,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [emojiImage, setEmojiImage] = useState<HTMLImageElement | undefined>();\n\n  const dpr = useDevicePixelRatio();\n\n  const lang = useOldLang();\n\n  const { customEmoji } = useCustomEmoji(emojiDocumentId);\n  const previewMediaHash = customEmoji ? getStickerMediaHash(customEmoji, 'preview') : undefined;\n  const previewUrl = useMedia(previewMediaHash);\n\n  const customColor = useDynamicColorListener(containerRef);\n\n  const preloadAfterHeavyAnimation = useThrottleForHeavyAnimation(() => {\n    if (!previewUrl) return;\n    preloadImage(previewUrl).then(setEmojiImage);\n  }, [previewUrl]);\n\n  useEffect(() => {\n    preloadAfterHeavyAnimation();\n  }, [preloadAfterHeavyAnimation]);\n\n  const updateCanvas = useLastCallback(() => {\n    const canvas = canvasRef.current;\n    if (!canvas || !emojiImage || !customColor) return;\n\n    const context = canvas.getContext('2d')!;\n    const { width, height } = canvas;\n\n    context.clearRect(0, 0, width, height);\n\n    ICON_POSITIONS.forEach(({\n      inline, block, opacity, scale,\n    }) => {\n      const x = (lang.isRtl ? inline : width / dpr - inline) * dpr;\n      const y = block * dpr;\n\n      const emojiSize = EMOJI_SIZE * dpr;\n\n      context.save();\n      context.globalAlpha = opacity;\n      context.translate(x, y);\n      context.scale(scale, scale);\n      context.drawImage(emojiImage, -emojiSize / 2, -emojiSize / 2, emojiSize, emojiSize);\n      context.restore();\n    });\n\n    const tintColor = `${customColor}${customEmoji!.isLottie ? LOTTIE_TINT_OPACITY : NON_LOTTIE_TINT_OPACITY}`;\n\n    context.save();\n    context.fillStyle = tintColor;\n    context.globalCompositeOperation = 'source-atop';\n    context.fillRect(0, 0, width, height);\n    context.restore();\n  });\n\n  const updateCanvasAfterHeavyAnimation = useThrottleForHeavyAnimation(updateCanvas, [updateCanvas]);\n\n  useEffect(() => {\n    updateCanvasAfterHeavyAnimation();\n  }, [emojiImage, lang.isRtl, customColor, updateCanvasAfterHeavyAnimation]);\n\n  const updateCanvasSize = useThrottleForHeavyAnimation((parentWidth: number, parentHeight: number) => {\n    requestMutation(() => {\n      const canvas = canvasRef.current;\n      if (!canvas) return;\n\n      canvas.width = parentWidth * dpr;\n      canvas.height = parentHeight * dpr;\n\n      canvas.style.width = `${parentWidth}px`;\n      canvas.style.height = `${parentHeight}px`;\n\n      updateCanvas();\n    });\n  }, [dpr]);\n\n  const handleResize = useThrottleForHeavyAnimation((entry: ResizeObserverEntry) => {\n    const { width, height } = entry.contentRect;\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  useResizeObserver(containerRef, handleResize);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const { width, height } = container.getBoundingClientRect();\n\n    updateCanvasSize(width, height);\n  }, [updateCanvasSize]);\n\n  return (\n    <div className={buildClassName(styles.root, className)} ref={containerRef}>\n      <canvas ref={canvasRef} />\n    </div>\n  );\n};\n\nexport default memo(EmojiIconBackground);\n","import type { ApiBoostsStatus } from '../../../api/types';\n\nexport function getBoostProgressInfo(boostInfo: ApiBoostsStatus, freezeOnLevelUp?: boolean) {\n  const {\n    level, boosts, currentLevelBoosts, nextLevelBoosts, hasMyBoost, prepaidGiveaways,\n  } = boostInfo;\n\n  const isJustUpgraded = freezeOnLevelUp && boosts === currentLevelBoosts && hasMyBoost;\n\n  const currentLevel = isJustUpgraded ? level - 1 : level;\n  const hasNextLevel = Boolean(nextLevelBoosts);\n\n  const levelProgress = (!nextLevelBoosts || isJustUpgraded) ? 1\n    : (boosts - currentLevelBoosts) / (nextLevelBoosts - currentLevelBoosts);\n  const remainingBoosts = nextLevelBoosts ? nextLevelBoosts - boosts : 0;\n\n  const isMaxLevel = nextLevelBoosts === undefined;\n\n  return {\n    currentLevel,\n    hasNextLevel,\n    boosts,\n    levelProgress,\n    remainingBoosts,\n    isMaxLevel,\n    prepaidGiveaways,\n  };\n}\n","import { TME_LINK_PREFIX } from '../../../config';\n\nexport default function formatUsername(username: string, asAbsoluteLink?: boolean) {\n  return asAbsoluteLink ? `${TME_LINK_PREFIX}${username}` : `@${username}`;\n}\n","import { getGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiSponsoredMessage } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\nimport type { TextPart } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport {\n  getMessageStatefulContent,\n  getMessageText,\n} from '../../../global/helpers';\nimport {\n  getMessageSummaryDescription,\n  getMessageSummaryEmoji,\n  getMessageSummaryText,\n  TRUNCATED_SUMMARY_LENGTH,\n} from '../../../global/helpers/messageSummary';\nimport { getMessageKey } from '../../../util/keys/messageKey';\nimport trimText from '../../../util/trimText';\nimport renderText from './renderText';\nimport { renderTextWithEntities } from './renderTextWithEntities';\n\nexport function renderMessageText({\n  message,\n  highlight,\n  emojiSize,\n  isSimple,\n  truncateLength,\n  isProtected,\n  forcePlayback,\n  shouldRenderAsHtml,\n  isForMediaViewer,\n} : {\n  message: ApiMessage | ApiSponsoredMessage;\n  highlight?: string;\n  emojiSize?: number;\n  isSimple?: boolean;\n  truncateLength?: number;\n  isProtected?: boolean;\n  forcePlayback?: boolean;\n  shouldRenderAsHtml?: boolean;\n  isForMediaViewer?: boolean;\n}) {\n  const { text, entities } = message.content.text || {};\n\n  if (!text) {\n    const contentNotSupportedText = getMessageText(message);\n    return contentNotSupportedText ? [trimText(contentNotSupportedText, truncateLength)] : undefined;\n  }\n\n  const messageKey = getMessageKey(message);\n\n  return renderTextWithEntities({\n    text: trimText(text, truncateLength),\n    entities,\n    highlight,\n    emojiSize,\n    shouldRenderAsHtml,\n    containerId: `${isForMediaViewer ? 'mv-' : ''}${messageKey}`,\n    isSimple,\n    isProtected,\n    forcePlayback,\n  });\n}\n\n// TODO Use Message Summary component instead\nexport function renderMessageSummary(\n  lang: OldLangFn,\n  message: ApiMessage,\n  noEmoji = false,\n  highlight?: string,\n  truncateLength = TRUNCATED_SUMMARY_LENGTH,\n): TextPart[] {\n  const { entities } = message.content.text || {};\n\n  const global = getGlobal();\n  const statefulContent = getMessageStatefulContent(global, message);\n\n  const hasSpoilers = entities?.some((e) => e.type === ApiMessageEntityTypes.Spoiler);\n  const hasCustomEmoji = entities?.some((e) => e.type === ApiMessageEntityTypes.CustomEmoji);\n  if (!hasSpoilers && !hasCustomEmoji) {\n    const text = trimText(getMessageSummaryText(lang, message, statefulContent, noEmoji), truncateLength);\n\n    if (highlight) {\n      return renderText(text, ['emoji', 'highlight'], { highlight });\n    } else {\n      return renderText(text);\n    }\n  }\n\n  const emoji = !noEmoji && getMessageSummaryEmoji(message);\n  const emojiWithSpace = emoji ? `${emoji} ` : '';\n\n  const text = renderMessageText({\n    message, highlight, isSimple: true, truncateLength,\n  });\n  const description = getMessageSummaryDescription(lang, message, statefulContent, text);\n\n  return [\n    ...renderText(emojiWithSpace),\n    ...(Array.isArray(description) ? description : [description]),\n  ].filter(Boolean);\n}\n","import type { ApiBusinessTimetableSegment } from '../../api/types';\n\nconst DAY_MINUTES = 1440;\nconst WEEK_MINUTES = 10080;\n\n/**\n * @returns Monday 00:00 of the current week for the local timezone\n */\nexport function getWeekStart(): number {\n  const now = new Date();\n  now.setHours(0, 0, 0, 0);\n  const day = now.getDay();\n  const diff = now.getDate() - day + (day === 0 ? -6 : 1);\n  return new Date(now.setDate(diff)).getTime();\n}\n\n/**\n * @returns UTC offset in seconds\n */\nexport function getUtcOffset() {\n  return new Date().getTimezoneOffset() * -60;\n}\n\nexport function shiftTimeRanges(ranges: ApiBusinessTimetableSegment[], shift: number): ApiBusinessTimetableSegment[] {\n  if (shift === 0) return ranges;\n\n  const shiftedRanges: ApiBusinessTimetableSegment[] = [];\n\n  for (const range of ranges) {\n    let start = (range.startMinute + shift) % WEEK_MINUTES;\n    let end = (range.endMinute + shift) % WEEK_MINUTES;\n\n    if (start < 0) start += WEEK_MINUTES;\n    if (end <= 0) end += WEEK_MINUTES;\n\n    if (start > end) {\n      shiftedRanges.push({ startMinute: start, endMinute: WEEK_MINUTES - 1 });\n      shiftedRanges.push({ startMinute: 0, endMinute: end });\n    } else {\n      shiftedRanges.push({ startMinute: start, endMinute: end });\n    }\n  }\n\n  shiftedRanges.sort((a, b) => a.startMinute - b.startMinute);\n\n  // Combine overlapping ranges\n  return shiftedRanges.reduce<ApiBusinessTimetableSegment[]>((acc, range) => {\n    const last = acc[acc.length - 1];\n    if (last && last.endMinute >= range.startMinute) {\n      last.endMinute = Math.max(last.endMinute, range.endMinute);\n    } else {\n      acc.push(range);\n    }\n    return acc;\n  }, []);\n}\n\nexport function splitDays(ranges: ApiBusinessTimetableSegment[]): Record<number, ApiBusinessTimetableSegment[]> {\n  const days: Record<number, ApiBusinessTimetableSegment[]> = {};\n\n  for (const range of ranges) {\n    const start = range.startMinute;\n    const end = range.endMinute;\n\n    const dayStart = Math.floor(start / DAY_MINUTES);\n    const dayEnd = Math.floor((end - 1) / DAY_MINUTES); // 00:00 is counted as same day\n\n    for (let day = dayStart; day <= dayEnd; day++) {\n      if (!days[day]) {\n        days[day] = [];\n      }\n\n      days[day].push({\n        startMinute: Math.max(0, start - day * DAY_MINUTES),\n        endMinute: Math.min(DAY_MINUTES, end - day * DAY_MINUTES),\n      });\n    }\n  }\n\n  return days;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ef_0p5Qm\",\"top\":\"nHSmCUNs\",\"icon\":\"rlM4Mbnn\",\"left\":\"JTZ8UnnP\",\"bottom\":\"lp9VIV1o\",\"status\":\"JVL7ZnnJ\",\"status-open\":\"segAfYXs\",\"statusOpen\":\"segAfYXs\",\"arrow\":\"dYxw2cFn\",\"offset-trigger\":\"gVwflFhz\",\"offsetTrigger\":\"gVwflFhz\",\"transition\":\"WKgL_XiP\",\"timetable\":\"MPBKHdZL\",\"schedule\":\"Rs0VPgpq\",\"weekday\":\"cmxPqAof\",\"current-day\":\"YZVvP_56\",\"currentDay\":\"YZVvP_56\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiBusinessWorkHours } from '../../../api/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatTime, formatWeekday } from '../../../util/dates/dateFormat';\nimport {\n  getUtcOffset, getWeekStart, shiftTimeRanges, splitDays,\n} from '../../../util/dates/workHours';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useSelectorSignal from '../../../hooks/data/useSelectorSignal';\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\nimport Icon from '../icons/Icon';\n\nimport styles from './BusinessHours.module.scss';\n\nconst DAYS = Array.from({ length: 7 }, (_, i) => i);\n\ntype OwnProps = {\n  businessHours: ApiBusinessWorkHours;\n};\n\nconst BusinessHours = ({\n  businessHours,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n  const [isExpanded, expand, collapse] = useFlag(false);\n  const [isMyTime, showInMyTime, showInLocalTime] = useFlag(false);\n  const lang = useOldLang();\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, 60 * 1000);\n\n  const timezoneSignal = useSelectorSignal((global) => global.timezones?.byId);\n  const timezones = useDerivedState(timezoneSignal, [timezoneSignal]);\n  const timezoneMinuteDifference = useMemo(() => {\n    if (!timezones) return 0;\n    const timezone = timezones[businessHours.timezoneId];\n    const myOffset = getUtcOffset();\n    return (myOffset - timezone.utcOffset) / 60;\n  }, [businessHours.timezoneId, timezones]);\n\n  const workHours = useMemo(() => {\n    const weekStart = getWeekStart();\n    const shiftedHours = shiftTimeRanges(businessHours.workHours, isMyTime ? timezoneMinuteDifference : 0);\n    const days = splitDays(shiftedHours);\n    const result: Record<number, string[]> = {};\n\n    DAYS.forEach((day) => {\n      const segments = days[day];\n      if (!segments) {\n        result[day] = [lang('BusinessHoursDayClosed')];\n        return;\n      }\n\n      result[day] = segments.map(({ startMinute, endMinute }) => {\n        if (endMinute - startMinute === 24 * 60) return lang('BusinessHoursDayFullOpened');\n        const start = formatTime(lang, weekStart + startMinute * 60 * 1000);\n        const end = formatTime(lang, weekStart + endMinute * 60 * 1000);\n        return `${start} – ${end}`;\n      });\n    });\n\n    return result;\n  }, [businessHours.workHours, isMyTime, lang, timezoneMinuteDifference]);\n\n  const isBusinessOpen = useMemo(() => {\n    const localTimeHours = shiftTimeRanges(businessHours.workHours, timezoneMinuteDifference);\n\n    const weekStart = getWeekStart();\n    const now = new Date().getTime();\n    const minutesSinceWeekStart = (now - weekStart) / 1000 / 60;\n\n    return localTimeHours.some(({ startMinute, endMinute }) => (\n      startMinute <= minutesSinceWeekStart && minutesSinceWeekStart <= endMinute\n    ));\n  }, [businessHours.workHours, timezoneMinuteDifference]);\n\n  const currentDay = useMemo(() => {\n    const now = new Date(Date.now() - (isMyTime ? 0 : timezoneMinuteDifference * 60 * 1000));\n    return (now.getDay() + 6) % 7;\n  }, [isMyTime, timezoneMinuteDifference]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpanded) {\n      collapse();\n    } else {\n      expand();\n    }\n  });\n\n  const handleTriggerOffset = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n\n    if (isMyTime) {\n      showInLocalTime();\n    } else {\n      showInMyTime();\n    }\n  });\n\n  useEffect(() => {\n    if (!isExpanded) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.timetable}`);\n    if (!slide) return;\n\n    const height = slide.offsetHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [isExpanded]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.timetable}`)!;\n\n    requestMeasure(() => {\n      const height = slide.offsetHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height}px`;\n      });\n    });\n  });\n\n  return (\n    <ListItem\n      icon=\"clock\"\n      iconClassName={styles.icon}\n      multiline\n      className={styles.root}\n      isStatic={isExpanded}\n      ripple\n      narrow\n      withColorTransition\n      onClick={handleClick}\n    >\n      <div className={styles.top}>\n        <div className={styles.left}>\n          <div>{lang('BusinessHoursProfile')}</div>\n          <div className={buildClassName(styles.status, isBusinessOpen && styles.statusOpen)}>\n            {isBusinessOpen ? lang('BusinessHoursProfileNowOpen') : lang('BusinessHoursProfileNowClosed')}\n          </div>\n        </div>\n        <Icon className={styles.arrow} name={isExpanded ? 'up' : 'down'} />\n      </div>\n      {isExpanded && (\n        <div className={styles.bottom}>\n          {Boolean(timezoneMinuteDifference) && (\n            <div\n              className={styles.offsetTrigger}\n              role=\"button\"\n              tabIndex={0}\n              onMouseDown={!IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n              onClick={IS_TOUCH_ENV ? handleTriggerOffset : undefined}\n            >\n              {lang(isMyTime ? 'BusinessHoursProfileSwitchMy' : 'BusinessHoursProfileSwitchLocal')}\n            </div>\n          )}\n          <Transition\n            className={styles.transition}\n            ref={transitionRef}\n            name=\"fade\"\n            activeKey={Number(isMyTime)}\n            onStart={handleAnimationStart}\n          >\n            <dl className={styles.timetable}>\n              {DAYS.map((day) => (\n                <>\n                  <dt className={buildClassName(styles.weekday, day === currentDay && styles.currentDay)}>\n                    {formatWeekday(lang, day === 6 ? 0 : day + 1)}\n                  </dt>\n                  <dd className={styles.schedule}>\n                    {workHours[day].map((segment) => (\n                      <div>{segment}</div>\n                    ))}\n                  </dd>\n                </>\n              ))}\n            </dl>\n          </Transition>\n        </div>\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(BusinessHours);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wCp6TBYF\",\"number\":\"lQeU96Fj\",\"float\":\"nKt3QDc_\",\"show-up\":\"ZaSLCV2k\",\"showUp\":\"ZaSLCV2k\",\"dissapear\":\"jA50ot3v\",\"shiftOrigin\":\"e1ezfWJb\",\"effect\":\"cFEXGUih\",\"giftIcon\":\"c4HDQNGJ\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport {\n  type ApiBirthday, ApiMediaFormat, type ApiStickerSet, type ApiUser,\n} from '../../../api/types';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsPremiumPurchaseBlocked } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateToString } from '../../../util/dates/dateFormat';\nimport { buildCollectionByKey } from '../../../util/iteratees';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { IS_OFFSET_PATH_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../helpers/renderText';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport StickerView from '../StickerView';\n\nimport styles from './UserBirthday.module.scss';\n\nconst NUMBER_EMOJI_SUFFIX = '\\uFE0F\\u20E3';\nconst NUMBER_STICKER_SIZE = 128;\nconst EFFECT_EMOJIS = ['🎉', '🎆', '🎈'];\nconst EFFECT_SIZE = 288;\nconst ANIMATION_DURATION = 3000;\n\ntype OwnProps = {\n  user: ApiUser;\n  birthday: ApiBirthday;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  isPremiumPurchaseBlocked?: boolean;\n  birthdayNumbers?: ApiStickerSet;\n  animatedEmojiEffects?: ApiStickerSet;\n};\n\nconst UserBirthday = ({\n  user,\n  birthday,\n  isPremiumPurchaseBlocked,\n  birthdayNumbers,\n  animatedEmojiEffects,\n  isInSettings,\n}: OwnProps & StateProps) => {\n  const { openGiftModal, requestConfetti } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const animationPlayedRef = useRef(false);\n  const [isPlayingAnimation, playAnimation, stopAnimation] = useFlag();\n\n  const lang = useOldLang();\n\n  const {\n    formattedDate,\n    isToday,\n    age,\n  } = useMemo(() => {\n    const today = new Date();\n    const date = new Date();\n    if (birthday.year) {\n      date.setFullYear(birthday.year);\n    }\n    date.setMonth(birthday.month - 1);\n    date.setDate(birthday.day);\n    date.setHours(0, 0, 0, 0);\n\n    const formatted = formatDateToString(date, lang.code, true, 'long');\n    const isBirthdayToday = date.getDate() === today.getDate() && date.getMonth() === today.getMonth();\n    return {\n      formattedDate: formatted,\n      isToday: isBirthdayToday,\n      age: birthday.year && getAge(date),\n    };\n  }, [birthday, lang]);\n\n  const numbersForAge = useMemo(() => {\n    if (!age || !isToday) return undefined;\n    const numbers = birthdayNumbers?.stickers?.filter(({ emoji }) => emoji?.endsWith(NUMBER_EMOJI_SUFFIX));\n    if (!numbers) return undefined;\n    const byEmoji = buildCollectionByKey(numbers, 'emoji');\n\n    const ageDigits = age.toString().split('');\n    return ageDigits.map((digit) => byEmoji[digit + NUMBER_EMOJI_SUFFIX]);\n  }, [age, birthdayNumbers?.stickers, isToday]);\n\n  const effectSticker = useMemo(() => {\n    if (!isToday) return undefined;\n    const randomEffect = EFFECT_EMOJIS[Math.floor(Math.random() * EFFECT_EMOJIS.length)];\n    return animatedEmojiEffects?.stickers?.find(({ emoji }) => emoji === randomEffect);\n  }, [animatedEmojiEffects?.stickers, isToday]);\n\n  // Preload stickers\n  useEffect(() => {\n    if (!isToday || !numbersForAge) return;\n\n    numbersForAge.forEach((sticker) => {\n      const hash = getStickerMediaHash(sticker, 'preview');\n      mediaLoader.fetch(hash, ApiMediaFormat.BlobUrl);\n    });\n\n    if (effectSticker) {\n      const effectHash = getStickerMediaHash(effectSticker, 'preview');\n      mediaLoader.fetch(effectHash, ApiMediaFormat.BlobUrl);\n    }\n  }, [effectSticker, isToday, numbersForAge]);\n\n  useTimeout(stopAnimation, isPlayingAnimation ? ANIMATION_DURATION : undefined);\n\n  useEffect(() => {\n    if (isPlayingAnimation) {\n      animationPlayedRef.current = true;\n\n      const column = document.getElementById(isInSettings ? 'LeftColumn' : 'RightColumn');\n      if (!column) return;\n\n      requestMeasure(() => {\n        const {\n          top, left, width, height,\n        } = column.getBoundingClientRect();\n\n        requestConfetti({\n          top,\n          left,\n          width,\n          height,\n          style: 'top-down',\n        });\n      });\n    }\n  }, [isInSettings, isPlayingAnimation]);\n\n  const valueKey = `ProfileBirthday${isToday ? 'Today' : ''}Value${age ? 'Year' : ''}`;\n\n  const canGiftPremium = isToday && !user.isPremium && !user.isSelf && !isPremiumPurchaseBlocked;\n\n  const handleOpenGiftModal = useLastCallback(() => {\n    openGiftModal({ forUserId: user.id });\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (!isToday) return;\n\n    if (canGiftPremium && animationPlayedRef.current) {\n      handleOpenGiftModal();\n      return;\n    }\n\n    playAnimation();\n  });\n\n  const isStatic = !isToday && !canGiftPremium;\n\n  return (\n    <div className={styles.root}>\n      <ListItem\n        icon=\"calendar\"\n        secondaryIcon={canGiftPremium ? 'gift' : undefined}\n        secondaryIconClassName={styles.giftIcon}\n        multiline\n        narrow\n        ref={ref}\n        ripple={!isStatic}\n        onClick={handleClick}\n        isStatic={isStatic}\n        onSecondaryIconClick={handleOpenGiftModal}\n      >\n        <div className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {renderText(lang(valueKey, [formattedDate, age], undefined, age))}\n        </div>\n        <span className=\"subtitle\">{lang(isToday ? 'ProfileBirthdayToday' : 'ProfileBirthday')}</span>\n      </ListItem>\n      {isPlayingAnimation && IS_OFFSET_PATH_SUPPORTED && numbersForAge?.map((sticker, index) => (\n        <div\n          className={buildClassName(styles.number, index > 0 && styles.shiftOrigin)}\n          style={`--digit-offset: ${index}`}\n        >\n          <StickerView\n            containerRef={ref}\n            sticker={sticker}\n            size={NUMBER_STICKER_SIZE}\n            forceAlways\n          />\n        </div>\n      ))}\n      {isPlayingAnimation && effectSticker && (\n        <div className={styles.effect}>\n          <StickerView\n            containerRef={ref}\n            sticker={effectSticker}\n            size={EFFECT_SIZE}\n            shouldLoop\n            forceAlways\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { birthdayNumbers, animatedEmojiEffects } = global;\n    return {\n      birthdayNumbers,\n      animatedEmojiEffects,\n      isPremiumPurchaseBlocked: selectIsPremiumPurchaseBlocked(global),\n    };\n  },\n)(UserBirthday));\n\n// https://stackoverflow.com/a/7091965\nfunction getAge(birthdate: Date) {\n  const today = new Date();\n  let age = today.getFullYear() - birthdate.getFullYear();\n  const m = today.getMonth() - birthdate.getMonth();\n  if (m < 0 || (m === 0 && today.getDate() < birthdate.getDate())) {\n    age--;\n  }\n\n  return age;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"businessLocation\":\"UZbkeFDB\",\"personalChannel\":\"HP5EJx7s\",\"personalChannelTitle\":\"cHyTGri2\",\"botVerificationSection\":\"RWFu5ENh\",\"sectionInfo\":\"IrqRJFxm\",\"botVerificationIcon\":\"b32hsSPS\",\"personalChannelSubscribers\":\"kYd2GrmU\",\"personalChannelItem\":\"qOJwhXMC\",\"openAppButton\":\"x925YeS3\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiBotVerification,\n  ApiChat,\n  ApiCountryCode,\n  ApiUser,\n  ApiUserFullInfo,\n  ApiUsername,\n} from '../../../api/types';\nimport type { BotAppPermissions } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { FRAGMENT_PHONE_CODE, FRAGMENT_PHONE_LENGTH } from '../../../config';\nimport {\n  buildStaticMapHash,\n  getChatLink,\n  getHasAdminRight,\n  isChatChannel,\n  isUserRightBanned,\n  selectIsChatMuted,\n} from '../../../global/helpers';\nimport {\n  selectBotAppPermissions,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectNotifyExceptions,\n  selectNotifySettings,\n  selectTopicLink,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport stopEvent from '../../../util/stopEvent';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { ChatAnimationTypes } from '../../left/main/hooks';\nimport formatUsername from '../helpers/formatUsername';\nimport renderText from '../helpers/renderText';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useDevicePixelRatio from '../../../hooks/window/useDevicePixelRatio';\n\nimport Chat from '../../left/main/Chat';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Skeleton from '../../ui/placeholder/Skeleton';\nimport Switcher from '../../ui/Switcher';\nimport CustomEmoji from '../CustomEmoji';\nimport SafeLink from '../SafeLink';\nimport BusinessHours from './BusinessHours';\nimport UserBirthday from './UserBirthday';\n\nimport styles from './ChatExtra.module.scss';\n\ntype OwnProps = {\n  chatOrUserId: string;\n  isSavedDialog?: boolean;\n  isInSettings?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  chat?: ApiChat;\n  userFullInfo?: ApiUserFullInfo;\n  canInviteUsers?: boolean;\n  isMuted?: boolean;\n  phoneCodeList: ApiCountryCode[];\n  topicId?: number;\n  description?: string;\n  chatInviteLink?: string;\n  topicLink?: string;\n  hasSavedMessages?: boolean;\n  personalChannel?: ApiChat;\n  hasMainMiniApp?: boolean;\n  isBotCanManageEmojiStatus?: boolean;\n  botAppPermissions?: BotAppPermissions;\n  botVerification?: ApiBotVerification;\n};\n\nconst DEFAULT_MAP_CONFIG = {\n  width: 64,\n  height: 64,\n  zoom: 15,\n};\n\nconst BOT_VERIFICATION_ICON_SIZE = 16;\n\nconst ChatExtra: FC<OwnProps & StateProps> = ({\n  chatOrUserId,\n  user,\n  chat,\n  userFullInfo,\n  isInSettings,\n  canInviteUsers,\n  isMuted,\n  phoneCodeList,\n  topicId,\n  description,\n  chatInviteLink,\n  topicLink,\n  hasSavedMessages,\n  personalChannel,\n  hasMainMiniApp,\n  isBotCanManageEmojiStatus,\n  botAppPermissions,\n  botVerification,\n}) => {\n  const {\n    showNotification,\n    updateChatMutedState,\n    updateTopicMutedState,\n    loadPeerStories,\n    openSavedDialog,\n    openMapModal,\n    requestCollectibleInfo,\n    requestMainWebView,\n    toggleUserEmojiStatusPermission,\n    toggleUserLocationPermission,\n  } = getActions();\n\n  const {\n    id: userId,\n    usernames,\n    phoneNumber,\n    isSelf,\n  } = user || {};\n  const { id: chatId, usernames: chatUsernames } = chat || {};\n  const peerId = userId || chatId;\n  const {\n    businessLocation,\n    businessWorkHours,\n    personalChannelMessageId,\n    birthday,\n  } = userFullInfo || {};\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffectWithPrevDeps(([prevPeerId]) => {\n    if (!peerId || prevPeerId === peerId) return;\n    if (user || (chat && isChatChannel(chat))) {\n      loadPeerStories({ peerId });\n    }\n  }, [peerId, chat, user]);\n\n  const { width, height, zoom } = DEFAULT_MAP_CONFIG;\n  const dpr = useDevicePixelRatio();\n  const locationMediaHash = businessLocation?.geo\n    && buildStaticMapHash(businessLocation.geo, width, height, zoom, dpr);\n  const locationBlobUrl = useMedia(locationMediaHash);\n\n  const locationRightComponent = useMemo(() => {\n    if (!businessLocation?.geo) return undefined;\n    if (locationBlobUrl) {\n      return <img src={locationBlobUrl} alt=\"\" className={styles.businessLocation} />;\n    }\n\n    return <Skeleton className={styles.businessLocation} />;\n  }, [businessLocation, locationBlobUrl]);\n\n  const isTopicInfo = Boolean(topicId && topicId !== MAIN_THREAD_ID);\n  const shouldRenderAllLinks = (chat && isChatChannel(chat)) || user?.isPremium;\n\n  const activeUsernames = useMemo(() => {\n    const result = usernames?.filter((u) => u.isActive);\n\n    return result?.length ? result : undefined;\n  }, [usernames]);\n\n  const activeChatUsernames = useMemo(() => {\n    const result = !user ? chatUsernames?.filter((u) => u.isActive) : undefined;\n\n    return result?.length ? result : undefined;\n  }, [chatUsernames, user]);\n\n  const link = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return isTopicInfo ? topicLink! : getChatLink(chat) || chatInviteLink;\n  }, [chat, isTopicInfo, topicLink, chatInviteLink]);\n\n  const handleClickLocation = useLastCallback(() => {\n    const { address, geo } = businessLocation!;\n    if (!geo) {\n      copyTextToClipboard(address);\n      showNotification({ message: oldLang('BusinessLocationCopied') });\n      return;\n    }\n\n    openMapModal({ geoPoint: geo, zoom });\n  });\n\n  const handleNotificationChange = useLastCallback(() => {\n    if (isTopicInfo) {\n      updateTopicMutedState({\n        chatId: chatId!,\n        topicId: topicId!,\n        isMuted: !isMuted,\n      });\n    } else {\n      updateChatMutedState({ chatId: chatId!, isMuted: !isMuted });\n    }\n  });\n\n  const manageEmojiStatusChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserEmojiStatusPermission({ botId: user.id, isEnabled: !isBotCanManageEmojiStatus });\n  });\n\n  const handleLocationPermissionChange = useLastCallback(() => {\n    if (!user) return;\n    toggleUserLocationPermission({ botId: user.id, isAccessGranted: !botAppPermissions?.geolocation });\n  });\n\n  const handleOpenSavedDialog = useLastCallback(() => {\n    openSavedDialog({ chatId: chatOrUserId });\n  });\n\n  function copy(text: string, entity: string) {\n    copyTextToClipboard(text);\n    showNotification({ message: `${entity} was copied` });\n  }\n\n  const formattedNumber = phoneNumber && formatPhoneNumberWithCode(phoneCodeList, phoneNumber);\n\n  const handlePhoneClick = useLastCallback(() => {\n    if (phoneNumber?.length === FRAGMENT_PHONE_LENGTH && phoneNumber.startsWith(FRAGMENT_PHONE_CODE)) {\n      requestCollectibleInfo({ collectible: phoneNumber, peerId: peerId!, type: 'phone' });\n      return;\n    }\n    copy(formattedNumber!, oldLang('Phone'));\n  });\n\n  const handleUsernameClick = useLastCallback((username: ApiUsername, isChat?: boolean) => {\n    if (!username.isEditable) {\n      requestCollectibleInfo({ collectible: username.username, peerId: peerId!, type: 'username' });\n      return;\n    }\n    copy(formatUsername(username.username, isChat), oldLang(isChat ? 'Link' : 'Username'));\n  });\n\n  const handleOpenApp = useLastCallback(() => {\n    if (!chat) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n      shouldMarkBotTrusted: true,\n    });\n  });\n\n  const appTermsInfo = lang('ProfileOpenAppAbout', {\n    terms: (\n      <SafeLink\n        text={lang('ProfileOpenAppTerms')}\n        url={lang('ProfileBotOpenAppInfoLink')}\n      />\n    ),\n  }, { withNodes: true });\n\n  if (!chat || chat.isRestricted || (isSelf && !isInSettings)) {\n    return undefined;\n  }\n\n  function renderUsernames(usernameList: ApiUsername[], isChat?: boolean) {\n    const [mainUsername, ...otherUsernames] = usernameList;\n\n    const usernameLinks = otherUsernames.length\n      ? (oldLang('UsernameAlso', '%USERNAMES%') as string)\n        .split('%')\n        .map((s) => {\n          return (s === 'USERNAMES' ? (\n            <>\n              {otherUsernames.map((username, idx) => {\n                return (\n                  <>\n                    {idx > 0 ? ', ' : ''}\n                    <a\n                      key={username.username}\n                      href={formatUsername(username.username, true)}\n                      onMouseDown={stopEvent}\n                      onClick={(e) => {\n                        stopEvent(e);\n                        handleUsernameClick(username, isChat);\n                      }}\n                      className=\"text-entity-link username-link\"\n                    >\n                      {formatUsername(username.username)}\n                    </a>\n                  </>\n                );\n              })}\n            </>\n          ) : s);\n        })\n      : undefined;\n\n    return (\n      <ListItem\n        icon={isChat ? 'link' : 'mention'}\n        multiline\n        narrow\n        ripple\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          handleUsernameClick(mainUsername, isChat);\n        }}\n      >\n        <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {formatUsername(mainUsername.username, isChat)}\n        </span>\n        <span className=\"subtitle\">\n          {usernameLinks && <span className=\"other-usernames\">{usernameLinks}</span>}\n          {oldLang(isChat ? 'Link' : 'Username')}\n        </span>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"ChatExtra\">\n      {personalChannel && (\n        <div className={styles.personalChannel}>\n          <h3 className={styles.personalChannelTitle}>{oldLang('ProfileChannel')}</h3>\n          <span className={styles.personalChannelSubscribers}>\n            {oldLang('Subscribers', personalChannel.membersCount, 'i')}\n          </span>\n          <Chat\n            chatId={personalChannel.id}\n            orderDiff={0}\n            animationType={ChatAnimationTypes.None}\n            isPreview\n            previewMessageId={personalChannelMessageId}\n            className={styles.personalChannelItem}\n          />\n        </div>\n      )}\n      {Boolean(formattedNumber?.length) && (\n        // eslint-disable-next-line react/jsx-no-bind\n        <ListItem icon=\"phone\" multiline narrow ripple onClick={handlePhoneClick}>\n          <span className=\"title\" dir={lang.isRtl ? 'rtl' : undefined}>{formattedNumber}</span>\n          <span className=\"subtitle\">{oldLang('Phone')}</span>\n        </ListItem>\n      )}\n      {activeUsernames && renderUsernames(activeUsernames)}\n      {description && Boolean(description.length) && (\n        <ListItem\n          icon=\"info\"\n          multiline\n          narrow\n          isStatic\n          allowSelection\n        >\n          <span className=\"title word-break allow-selection\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {\n              renderText(description, [\n                'br',\n                shouldRenderAllLinks ? 'links' : 'tg_links',\n                'emoji',\n              ])\n            }\n          </span>\n          <span className=\"subtitle\">{oldLang(userId ? 'UserBio' : 'Info')}</span>\n        </ListItem>\n      )}\n      {activeChatUsernames && !isTopicInfo && renderUsernames(activeChatUsernames, true)}\n      {((!activeChatUsernames && canInviteUsers) || isTopicInfo) && link && (\n        <ListItem\n          icon=\"link\"\n          multiline\n          narrow\n          ripple\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => copy(link, oldLang('SetUrlPlaceholder'))}\n        >\n          <div className=\"title\">{link}</div>\n          <span className=\"subtitle\">{oldLang('SetUrlPlaceholder')}</span>\n        </ListItem>\n      )}\n      {birthday && (\n        <UserBirthday key={peerId} birthday={birthday} user={user!} isInSettings={isInSettings} />\n      )}\n      { hasMainMiniApp && (\n        <ListItem\n          multiline\n          isStatic\n          narrow\n        >\n          <Button\n            className={styles.openAppButton}\n            size=\"smaller\"\n            onClick={handleOpenApp}\n          >\n            {oldLang('ProfileBotOpenApp')}\n          </Button>\n          <div className={styles.sectionInfo}>\n            {appTermsInfo}\n          </div>\n        </ListItem>\n      )}\n      {!isInSettings && (\n        <ListItem icon=\"unmute\" narrow ripple onClick={handleNotificationChange}>\n          <span>{oldLang('Notifications')}</span>\n          <Switcher\n            id=\"group-notifications\"\n            label={userId ? 'Toggle User Notifications' : 'Toggle Chat Notifications'}\n            checked={isMuted}\n            inactive\n          />\n        </ListItem>\n      )}\n      {businessWorkHours && (\n        <BusinessHours businessHours={businessWorkHours} />\n      )}\n      {businessLocation && (\n        <ListItem\n          icon=\"location\"\n          ripple\n          multiline\n          narrow\n          rightElement={locationRightComponent}\n          onClick={handleClickLocation}\n        >\n          <div className=\"title\">{businessLocation.address}</div>\n          <span className=\"subtitle\">{oldLang('BusinessProfileLocation')}</span>\n        </ListItem>\n      )}\n      {hasSavedMessages && !isInSettings && (\n        <ListItem icon=\"saved-messages\" narrow ripple onClick={handleOpenSavedDialog}>\n          <span>{oldLang('SavedMessagesTab')}</span>\n        </ListItem>\n      )}\n      {userFullInfo && 'isBotAccessEmojiGranted' in userFullInfo && (\n        <ListItem icon=\"user\" narrow ripple onClick={manageEmojiStatusChange}>\n          <span>{oldLang('BotProfilePermissionEmojiStatus')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionEmojiStatus')}\n            checked={isBotCanManageEmojiStatus}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botAppPermissions?.geolocation !== undefined && (\n        <ListItem icon=\"location\" narrow ripple onClick={handleLocationPermissionChange}>\n          <span>{oldLang('BotProfilePermissionLocation')}</span>\n          <Switcher\n            label={oldLang('BotProfilePermissionLocation')}\n            checked={botAppPermissions?.geolocation}\n            inactive\n          />\n        </ListItem>\n      )}\n      {botVerification && (\n        <div className={styles.botVerificationSection}>\n          <CustomEmoji\n            className={styles.botVerificationIcon}\n            documentId={botVerification.iconId}\n            size={BOT_VERIFICATION_ICON_SIZE}\n          />\n          {botVerification.description}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatOrUserId, isSavedDialog }): StateProps => {\n    const { countryList: { phoneCodes: phoneCodeList } } = global;\n\n    const chat = chatOrUserId ? selectChat(global, chatOrUserId) : undefined;\n    const user = chatOrUserId ? selectUser(global, chatOrUserId) : undefined;\n    const botAppPermissions = chatOrUserId ? selectBotAppPermissions(global, chatOrUserId) : undefined;\n    const isForum = chat?.isForum;\n    const isMuted = chat && selectIsChatMuted(chat, selectNotifySettings(global), selectNotifyExceptions(global));\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const topicId = isForum && threadId ? Number(threadId) : undefined;\n\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const userFullInfo = user && selectUserFullInfo(global, user.id);\n\n    const botVerification = userFullInfo?.botVerification || chatFullInfo?.botVerification;\n\n    const chatInviteLink = chatFullInfo?.inviteLink;\n    const description = userFullInfo?.bio || chatFullInfo?.about;\n\n    const canInviteUsers = chat && !user && (\n      (!isChatChannel(chat) && !isUserRightBanned(chat, 'inviteUsers'))\n      || getHasAdminRight(chat, 'inviteUsers')\n    );\n\n    const topicLink = topicId ? selectTopicLink(global, chatOrUserId, topicId) : undefined;\n\n    const hasSavedMessages = !isSavedDialog && global.chats.listIds.saved?.includes(chatOrUserId);\n\n    const personalChannel = userFullInfo?.personalChannelId\n      ? selectChat(global, userFullInfo.personalChannelId)\n      : undefined;\n\n    const hasMainMiniApp = user?.hasMainMiniApp;\n\n    return {\n      phoneCodeList,\n      chat,\n      user,\n      userFullInfo,\n      canInviteUsers,\n      botAppPermissions,\n      isMuted,\n      topicId,\n      chatInviteLink,\n      description,\n      topicLink,\n      hasSavedMessages,\n      personalChannel,\n      hasMainMiniApp,\n      isBotCanManageEmojiStatus: userFullInfo?.isBotCanManageEmojiStatus,\n      botVerification,\n    };\n  },\n)(ChatExtra));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ky16H_sV\",\"button-text\":\"W01t9CIf\",\"buttonText\":\"W01t9CIf\",\"sticker\":\"c8lE3XW5\",\"title\":\"wlwD1B1Q\",\"description\":\"V8OCFHmp\",\"is-ios\":\"IxW_z_r0\",\"isIos\":\"IxW_z_r0\",\"is-macos\":\"OFxKGCEJ\",\"isMacos\":\"OFxKGCEJ\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { getHasAdminRight } from '../../../global/helpers';\nimport { selectAnimatedEmoji, selectChat } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../common/AnimatedIconFromSticker';\nimport Button from '../../ui/Button';\n\nimport styles from './EmptyForum.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n};\n\ntype StateProps = {\n  animatedEmoji?: ApiSticker;\n  canManageTopics?: boolean;\n};\n\nconst ICON_SIZE = 7 * REM;\n\nconst EmptyForum: FC<OwnProps & StateProps> = ({\n  chatId, animatedEmoji, canManageTopics,\n}) => {\n  const { openCreateTopicPanel } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleCreateTopic = useCallback(() => {\n    openCreateTopicPanel({ chatId });\n  }, [chatId, openCreateTopicPanel]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.sticker}>\n        {animatedEmoji && <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} />}\n      </div>\n      <h3 className={styles.title} dir=\"auto\">{lang('ChatList.EmptyTopicsTitle')}</h3>\n      <p className={buildClassName(styles.description, styles.centered)} dir=\"auto\">\n        {lang('ChatList.EmptyTopicsDescription')}\n      </p>\n      {canManageTopics && (\n        <Button\n          ripple={!isMobile}\n          fluid\n          onClick={handleCreateTopic}\n          size=\"smaller\"\n          isRtl={lang.isRtl}\n        >\n          <div className={styles.buttonText}>\n            {lang('ChatList.EmptyTopicsCreate')}\n          </div>\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { chatId }): StateProps => {\n  const chat = selectChat(global, chatId);\n  const canManageTopics = chat && (chat.isCreator || getHasAdminRight(chat, 'manageTopics'));\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '🐣'),\n    canManageTopics,\n  };\n})(EmptyForum));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Fn34Vu_9\",\"closed-icon\":\"MB7Gomjn\",\"closedIcon\":\"MB7Gomjn\",\"topic-icon\":\"oXJl4tra\",\"topicIcon\":\"oXJl4tra\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiDraft, ApiMessage, ApiMessageOutgoingStatus,\n  ApiPeer, ApiTopic, ApiTypeStory, ApiTypingStatus,\n} from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ChatAnimationTypes } from './hooks';\n\nimport { getMessageAction, groupStatetefulContent } from '../../../global/helpers';\nimport { getMessageReplyInfo } from '../../../global/helpers/replies';\nimport {\n  selectCanAnimateInterface,\n  selectCanDeleteTopic,\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectDraft,\n  selectOutgoingStatus,\n  selectPeerStory,\n  selectSender,\n  selectThreadInfo,\n  selectThreadParam,\n  selectTopics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { createLocationHash } from '../../../util/routing';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useChatListEntry from './hooks/useChatListEntry';\nimport useTopicContextActions from './hooks/useTopicContextActions';\n\nimport Icon from '../../common/icons/Icon';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport TopicIcon from '../../common/TopicIcon';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport MuteChatModal from '../MuteChatModal.async';\nimport ChatBadge from './ChatBadge';\n\nimport styles from './Topic.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  topic: ApiTopic;\n  isSelected: boolean;\n  style: string;\n  observeIntersection?: ObserveFn;\n  orderDiff: number;\n  animationType: ChatAnimationTypes;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  canDelete?: boolean;\n  lastMessage?: ApiMessage;\n  lastMessageStory?: ApiTypeStory;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n  actionTargetMessage?: ApiMessage;\n  actionTargetUserIds?: string[];\n  lastMessageSender?: ApiPeer;\n  actionTargetChatId?: string;\n  typingStatus?: ApiTypingStatus;\n  draft?: ApiDraft;\n  canScrollDown?: boolean;\n  wasTopicOpened?: boolean;\n  withInterfaceAnimations?: boolean;\n  topics?: Record<number, ApiTopic>;\n};\n\nconst Topic: FC<OwnProps & StateProps> = ({\n  topic,\n  isSelected,\n  chatId,\n  chat,\n  style,\n  lastMessage,\n  lastMessageStory,\n  canScrollDown,\n  lastMessageOutgoingStatus,\n  observeIntersection,\n  canDelete,\n  actionTargetMessage,\n  actionTargetUserIds,\n  actionTargetChatId,\n  lastMessageSender,\n  animationType,\n  withInterfaceAnimations,\n  orderDiff,\n  typingStatus,\n  draft,\n  wasTopicOpened,\n  topics,\n}) => {\n  const {\n    openThread,\n    deleteTopic,\n    focusLastMessage,\n    setViewForumAsMessages,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag();\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [shouldRenderDeleteModal, markRenderDeleteModal, unmarkRenderDeleteModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const {\n    isPinned, isClosed,\n  } = topic;\n  const isMuted = topic.isMuted || (topic.isMuted === undefined && chat.isMuted);\n\n  const handleOpenDeleteModal = useLastCallback(() => {\n    markRenderDeleteModal();\n    openDeleteModal();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    deleteTopic({ chatId: chat.id, topicId: topic.id });\n  });\n\n  const handleMute = useLastCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  });\n\n  const { renderSubtitle, ref } = useChatListEntry({\n    chat,\n    chatId,\n    lastMessage,\n    draft,\n    actionTargetMessage,\n    actionTargetUserIds,\n    actionTargetChatId,\n    lastMessageSender,\n    lastMessageTopic: topic,\n    observeIntersection,\n    isTopic: true,\n    typingStatus,\n    topics,\n    statefulMediaContent: groupStatetefulContent({ story: lastMessageStory }),\n\n    animationType,\n    withInterfaceAnimations,\n    orderDiff,\n  });\n\n  const handleOpenTopic = useLastCallback(() => {\n    openThread({ chatId, threadId: topic.id, shouldReplaceHistory: true });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n\n    if (canScrollDown) {\n      focusLastMessage();\n    }\n  });\n\n  const contextActions = useTopicContextActions({\n    topic,\n    chat,\n    wasOpened: wasTopicOpened,\n    canDelete,\n    handleDelete: handleOpenDeleteModal,\n    handleMute,\n  });\n\n  return (\n    <ListItem\n      className={buildClassName(\n        styles.root,\n        'Chat',\n        isSelected && 'selected',\n        'chat-item-clickable',\n      )}\n      onClick={handleOpenTopic}\n      style={style}\n      href={IS_OPEN_IN_NEW_TAB_SUPPORTED ? `#${createLocationHash(chatId, 'thread', topic.id)}` : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      ref={ref}\n    >\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <div className={buildClassName('title')}>\n            <TopicIcon topic={topic} className={styles.topicIcon} observeIntersection={observeIntersection} />\n            <h3 dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</h3>\n          </div>\n          {topic.isMuted && <Icon name=\"muted\" />}\n          <div className=\"separator\" />\n          {isClosed && (\n            <Icon name=\"lock-badge\" className={styles.closedIcon} />\n          )}\n          {lastMessage && (\n            <LastMessageMeta\n              message={lastMessage}\n              outgoingStatus={lastMessageOutgoingStatus}\n            />\n          )}\n        </div>\n        <div className=\"subtitle\">\n          {renderSubtitle()}\n          <ChatBadge\n            chat={chat}\n            isPinned={isPinned}\n            isMuted={isMuted}\n            topic={topic}\n            wasTopicOpened={wasTopicOpened}\n            topics={topics}\n          />\n        </div>\n      </div>\n      {shouldRenderDeleteModal && (\n        <ConfirmDialog\n          isOpen={isDeleteModalOpen}\n          onClose={closeDeleteModal}\n          onCloseAnimationEnd={unmarkRenderDeleteModal}\n          confirmIsDestructive\n          confirmHandler={handleDelete}\n          text={lang('lng_forum_topic_delete_sure')}\n          confirmLabel={lang('Delete')}\n        />\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n          topicId={topic.id}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topic, isSelected }) => {\n    const chat = selectChat(global, chatId);\n\n    const lastMessage = selectChatMessage(global, chatId, topic.lastMessageId);\n    const { isOutgoing } = lastMessage || {};\n    const replyToMessageId = lastMessage && getMessageReplyInfo(lastMessage)?.replyToMsgId;\n    const lastMessageSender = lastMessage && selectSender(global, lastMessage);\n    const lastMessageAction = lastMessage ? getMessageAction(lastMessage) : undefined;\n    const actionTargetMessage = lastMessageAction && replyToMessageId\n      ? selectChatMessage(global, chatId, replyToMessageId)\n      : undefined;\n    const { targetUserIds: actionTargetUserIds, targetChatId: actionTargetChatId } = lastMessageAction || {};\n    const typingStatus = selectThreadParam(global, chatId, topic.id, 'typingStatus');\n    const draft = selectDraft(global, chatId, topic.id);\n    const threadInfo = selectThreadInfo(global, chatId, topic.id);\n    const wasTopicOpened = Boolean(threadInfo?.lastReadInboxMessageId);\n    const topics = selectTopics(global, chatId);\n\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n\n    const storyData = lastMessage?.content.storyData;\n    const lastMessageStory = storyData && selectPeerStory(global, storyData.peerId, storyData.id);\n\n    return {\n      chat,\n      lastMessage,\n      actionTargetUserIds,\n      actionTargetChatId,\n      actionTargetMessage,\n      lastMessageSender,\n      typingStatus,\n      canDelete: selectCanDeleteTopic(global, chatId, topic.id),\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      draft,\n      ...(isOutgoing && lastMessage && {\n        lastMessageOutgoingStatus: selectOutgoingStatus(global, lastMessage),\n      }),\n      canScrollDown: isSelected && chat?.id === currentChatId && currentThreadId === topic.id,\n      wasTopicOpened,\n      topics,\n      lastMessageStory,\n    };\n  },\n)(Topic));\n","import { useMemo } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChat, ApiTopic } from '../../../../api/types';\nimport type { MenuItemContextAction } from '../../../ui/ListItem';\n\nimport { getCanManageTopic, getHasAdminRight } from '../../../../global/helpers';\nimport { compact } from '../../../../util/iteratees';\nimport { IS_OPEN_IN_NEW_TAB_SUPPORTED } from '../../../../util/windowEnvironment';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nexport default function useTopicContextActions({\n  topic,\n  chat,\n  wasOpened,\n  canDelete,\n  handleDelete,\n  handleMute,\n}: {\n  topic: ApiTopic;\n  chat: ApiChat;\n  wasOpened?: boolean;\n  canDelete?: boolean;\n  handleDelete?: NoneToVoidFunction;\n  handleMute?: NoneToVoidFunction;\n}) {\n  const lang = useOldLang();\n\n  return useMemo(() => {\n    const {\n      isPinned, isMuted, isClosed, id: topicId,\n    } = topic;\n\n    const chatId = chat.id;\n\n    const {\n      editTopic,\n      toggleTopicPinned,\n      markTopicRead,\n      updateTopicMutedState,\n      openChatInNewTab,\n    } = getActions();\n\n    const canToggleClosed = getCanManageTopic(chat, topic);\n    const canTogglePinned = chat.isCreator || getHasAdminRight(chat, 'manageTopics');\n\n    const actionOpenInNewTab = IS_OPEN_IN_NEW_TAB_SUPPORTED && {\n      title: 'Open in new tab',\n      icon: 'open-in-new-tab',\n      handler: () => {\n        openChatInNewTab({ chatId: chat.id, threadId: topicId });\n      },\n    };\n\n    const actionUnreadMark = topic.unreadCount || !wasOpened\n      ? {\n        title: lang('MarkAsRead'),\n        icon: 'readchats',\n        handler: () => {\n          markTopicRead({ chatId, topicId });\n        },\n      }\n      : undefined;\n\n    const actionPin = canTogglePinned ? (isPinned\n      ? {\n        title: lang('UnpinFromTop'),\n        icon: 'unpin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: false }),\n      }\n      : {\n        title: lang('PinToTop'),\n        icon: 'pin',\n        handler: () => toggleTopicPinned({ chatId, topicId, isPinned: true }),\n      }) : undefined;\n\n    const actionMute = ((chat.isMuted && isMuted !== false) || isMuted === true)\n      ? {\n        title: lang('ChatList.Unmute'),\n        icon: 'unmute',\n        handler: () => updateTopicMutedState({ chatId, topicId, isMuted: false }),\n      }\n      : {\n        title: `${lang('ChatList.Mute')}...`,\n        icon: 'mute',\n        handler: handleMute,\n      };\n\n    const actionCloseTopic = canToggleClosed ? (isClosed\n      ? {\n        title: lang('lng_forum_topic_reopen'),\n        icon: 'reopen-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: false }),\n      }\n      : {\n        title: lang('lng_forum_topic_close'),\n        icon: 'close-topic',\n        handler: () => editTopic({ chatId, topicId, isClosed: true }),\n      }) : undefined;\n\n    const actionDelete = canDelete ? {\n      title: lang('lng_forum_topic_delete'),\n      icon: 'delete',\n      destructive: true,\n      handler: handleDelete,\n    } : undefined;\n\n    return compact([\n      actionOpenInNewTab,\n      actionPin,\n      actionUnreadMark,\n      actionMute,\n      actionCloseTopic,\n      actionDelete,\n    ]) as MenuItemContextAction[];\n  }, [topic, chat, wasOpened, lang, canDelete, handleDelete, handleMute]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TopicsInfo } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n  GENERAL_TOPIC_ID, TOPIC_HEIGHT_PX, TOPIC_LIST_SENSITIVE_AREA, TOPICS_SLICE,\n} from '../../../config';\nimport { requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getOrderedTopics } from '../../../global/helpers';\nimport {\n  selectCanAnimateInterface,\n  selectChat,\n  selectCurrentMessageList,\n  selectIsForumPanelOpen,\n  selectTabState,\n  selectTopicsInfo,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { captureEvents, SwipeDirection } from '../../../util/captureEvents';\nimport { waitForTransitionEnd } from '../../../util/cssAnimationEndListeners';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport { useIntersectionObserver, useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useOrderDiff from './hooks/useOrderDiff';\n\nimport GroupCallTopPane from '../../calls/group/GroupCallTopPane';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport HeaderActions from '../../middle/HeaderActions';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport EmptyForum from './EmptyForum';\nimport Topic from './Topic';\n\nimport styles from './ForumPanel.module.scss';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  isHidden?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n  onCloseAnimationEnd?: VoidFunction;\n  onOpenAnimationStart?: VoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topicsInfo?: TopicsInfo;\n  currentTopicId?: number;\n  withInterfaceAnimations?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst ForumPanel: FC<OwnProps & StateProps> = ({\n  chat,\n  currentTopicId,\n  isOpen,\n  isHidden,\n  topicsInfo,\n  onTopicSearch,\n  onCloseAnimationEnd,\n  onOpenAnimationStart,\n  withInterfaceAnimations,\n}) => {\n  const {\n    closeForumPanel, openChatWithInfo, loadTopics,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollTopHandlerRef = useRef<HTMLDivElement>(null);\n  const { isMobile } = useAppLayout();\n  const chatId = chat?.id;\n\n  useEffect(() => {\n    if (chatId && !topicsInfo) {\n      loadTopics({ chatId });\n    }\n  }, [topicsInfo, chatId]);\n\n  const [isScrolled, setIsScrolled] = useState(false);\n  const lang = useOldLang();\n\n  const handleClose = useLastCallback(() => {\n    closeForumPanel();\n  });\n\n  useEffect(() => {\n    if (!withInterfaceAnimations && !isOpen) {\n      onCloseAnimationEnd?.();\n    }\n  }, [withInterfaceAnimations, isOpen, onCloseAnimationEnd]);\n\n  const handleToggleChatInfo = useLastCallback(() => {\n    if (!chat) return;\n    openChatWithInfo({ id: chat.id, shouldReplaceHistory: true });\n  });\n\n  const { observe } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  useOnIntersect(scrollTopHandlerRef, observe, ({ isIntersecting }) => {\n    setIsScrolled(!isIntersecting);\n  });\n\n  const orderedIds = useMemo(() => {\n    return topicsInfo\n      ? getOrderedTopics(\n        Object.values(topicsInfo.topicsById),\n        topicsInfo.orderedPinnedTopicIds,\n      ).map(({ id }) => id)\n      : [];\n  }, [topicsInfo]);\n\n  const { orderDiffById, getAnimationType } = useOrderDiff(orderedIds, chat?.id);\n\n  const [viewportIds, getMore] = useInfiniteScroll(() => {\n    if (!chat) return;\n    loadTopics({ chatId: chat.id });\n  }, orderedIds, !topicsInfo?.totalCount || orderedIds.length >= topicsInfo.totalCount, TOPICS_SLICE);\n\n  const shouldRenderRef = useRef(false);\n  const isVisible = isOpen && !isHidden;\n  const prevIsVisible = usePreviousDeprecated(isVisible);\n\n  if (prevIsVisible !== isVisible) {\n    shouldRenderRef.current = false;\n  }\n\n  useHistoryBack({\n    isActive: isVisible,\n    onBack: handleClose,\n  });\n\n  useEffect(() => (isVisible ? captureEscKeyListener(handleClose) : undefined), [handleClose, isVisible]);\n\n  useEffect(() => {\n    if (prevIsVisible !== isVisible) {\n      // For performance reasons, we delay animation of the topic list panel to the next animation frame\n      requestNextMutation(() => {\n        if (!ref.current) return;\n\n        const endHeavyAnimation = beginHeavyAnimation();\n        waitForTransitionEnd(ref.current, endHeavyAnimation);\n\n        onOpenAnimationStart?.();\n\n        if (isVisible) {\n          shouldRenderRef.current = true;\n          ref.current!.style.transform = 'none';\n        } else {\n          shouldRenderRef.current = false;\n          ref.current!.style.transform = '';\n        }\n      });\n    }\n  }, [isVisible, onOpenAnimationStart, prevIsVisible]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      return undefined;\n    }\n\n    return captureEvents(ref.current!, {\n      selectorToPreventScroll: '.chat-list',\n      onSwipe: ((e, direction) => {\n        const closeDirection = lang.isRtl ? SwipeDirection.Left : SwipeDirection.Right;\n\n        if (direction === closeDirection) {\n          closeForumPanel();\n          return true;\n        }\n\n        return false;\n      }),\n    });\n  }, [closeForumPanel, lang.isRtl]);\n\n  function renderTopics() {\n    const viewportOffset = orderedIds!.indexOf(viewportIds![0]);\n\n    return viewportIds?.map((id, i) => (\n      <Topic\n        key={id}\n        chatId={chat!.id}\n        topic={topicsInfo!.topicsById[id]}\n        style={`top: ${(viewportOffset + i) * TOPIC_HEIGHT_PX}px;`}\n        isSelected={currentTopicId === id}\n        observeIntersection={observe}\n        animationType={getAnimationType(id)}\n        orderDiff={orderDiffById[id]}\n      />\n    ));\n  }\n\n  const isLoading = topicsInfo === undefined;\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n        isScrolled && styles.scrolled,\n        lang.isRtl && styles.rtl,\n        !withInterfaceAnimations && styles.noAnimation,\n      )}\n      onTransitionEnd={!isOpen ? onCloseAnimationEnd : undefined}\n    >\n      <div id=\"TopicListHeader\" className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n\n        {chat && (\n          <GroupChatInfo\n            noAvatar\n            className={styles.info}\n            chatId={chat.id}\n            onClick={handleToggleChatInfo}\n          />\n        )}\n\n        {chat\n          && (\n            <HeaderActions\n              chatId={chat.id}\n              threadId={MAIN_THREAD_ID}\n              messageListType=\"thread\"\n              canExpandActions={false}\n              isForForum\n              isMobile={isMobile}\n              onTopicSearch={onTopicSearch}\n            />\n          )}\n      </div>\n\n      {chat && <GroupCallTopPane chatId={chat.id} />}\n\n      <div className={styles.notch} />\n\n      <InfiniteScroll\n        className=\"chat-list custom-scroll\"\n        ref={containerRef}\n        items={viewportIds}\n        preloadBackwards={TOPICS_SLICE}\n        withAbsolutePositioning\n        maxHeight={(orderedIds?.length || 0) * TOPIC_HEIGHT_PX}\n        onLoadMore={getMore}\n        sensitiveArea={TOPIC_LIST_SENSITIVE_AREA}\n        beforeChildren={<div ref={scrollTopHandlerRef} className={styles.scrollTopHandler} />}\n      >\n        {Boolean(viewportIds?.length) && (\n          renderTopics()\n        )}\n        {isLoading && !viewportIds?.length && (\n          <Loading key=\"loading\" />\n        )}\n      </InfiniteScroll>\n      {!isLoading && viewportIds?.length === 1 && viewportIds[0] === GENERAL_TOPIC_ID && (\n        <EmptyForum chatId={chatId!} />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const chatId = selectTabState(global).forumPanelChatId;\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const {\n      chatId: currentChatId,\n      threadId: currentThreadId,\n    } = selectCurrentMessageList(global) || {};\n    const topicsInfo = chatId ? selectTopicsInfo(global, chatId) : undefined;\n\n    return {\n      chat,\n      currentTopicId: chatId === currentChatId ? Number(currentThreadId) : undefined,\n      withInterfaceAnimations: selectCanAnimateInterface(global),\n      topicsInfo,\n    };\n  },\n  (global) => selectIsForumPanelOpen(global),\n)(ForumPanel));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MlF2n1nb\",\"rtl\":\"Xs2y1fCE\",\"no-animation\":\"kmDMv6D8\",\"noAnimation\":\"kmDMv6D8\",\"notch\":\"hGeb3TQJ\",\"scrolled\":\"SZ24u3cn\",\"scroll-top-handler\":\"ERz3fcar\",\"scrollTopHandler\":\"ERz3fcar\",\"info\":\"Sf633zAP\"};","import { useRef } from '../../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../../hooks/useForceUpdate';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nexport default function useLeftHeaderButtonRtlForumTransition(shouldHideSearch?: boolean) {\n  const forceUpdate = useForceUpdate();\n  const shouldDisableDropdownMenuTransitionRef = useRef(shouldHideSearch);\n  const prevShouldHideSearch = usePreviousDeprecated(shouldHideSearch);\n\n  function handleDropdownMenuTransitionEnd() {\n    shouldDisableDropdownMenuTransitionRef.current = Boolean(shouldHideSearch);\n    forceUpdate();\n  }\n\n  if (shouldHideSearch === false && prevShouldHideSearch !== shouldHideSearch) {\n    shouldDisableDropdownMenuTransitionRef.current = false;\n  }\n\n  return { shouldDisableDropdownMenuTransitionRef, handleDropdownMenuTransitionEnd };\n}\n","import type { ApiChat, ApiMessage, ApiUser } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\n\nimport {\n  getChatTitle,\n  getPeerTitle,\n  isChatGroup,\n  isUserId,\n} from '../../../../global/helpers';\n\nexport function getSenderName(\n  lang: OldLangFn, message: ApiMessage, chatsById: Record<string, ApiChat>, usersById: Record<string, ApiUser>,\n) {\n  const { senderId } = message;\n  if (!senderId) {\n    return undefined;\n  }\n\n  const sender = isUserId(senderId) ? usersById[senderId] : chatsById[senderId];\n\n  let senderName = getPeerTitle(lang, sender);\n\n  const chat = chatsById[message.chatId];\n  if (chat) {\n    if ('isSelf' in sender && sender.isSelf) {\n      senderName = `${lang('FromYou')} → ${getChatTitle(lang, chat)}`;\n    } else if (isChatGroup(chat)) {\n      senderName += ` → ${getChatTitle(lang, chat)}`;\n    }\n  }\n\n  return senderName;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AN8wkEiR\",\"ghost\":\"ANWk2pWP\",\"scale\":\"kMHxyoSt\",\"elementContainer\":\"UDCMfXxs\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { SNAP_EFFECT_CONTAINER_ID, SNAP_EFFECT_ID, SVG_NAMESPACE } from '../../../config';\nimport { selectCanAnimateSnapEffect } from '../../../global/selectors';\nimport jsxToHtml from '../../../util/element/jsxToHtml';\nimport generateUniqueId from '../../../util/generateUniqueId';\n\nimport styles from './SnapEffectContainer.module.scss';\n\nconst VISIBLITY_MARGIN = 50;\nconst DURATION = 1000;\n\nconst SnapEffectContainer = () => {\n  return (\n    <div className={styles.root} id={SNAP_EFFECT_CONTAINER_ID} />\n  );\n};\n\nexport default memo(SnapEffectContainer);\n\nexport function animateSnap(element: HTMLElement) {\n  const global = getGlobal();\n  const canPlayEffect = selectCanAnimateSnapEffect(global);\n  if (!canPlayEffect) return false;\n  // Get element current fixed position on screen\n  const rect = element.getBoundingClientRect();\n  const x = rect.left + window.scrollX;\n  const y = rect.top + window.scrollY;\n  const width = rect.width;\n  const height = rect.height;\n\n  // Check for visibility\n  if (x + width + VISIBLITY_MARGIN < 0 || x - VISIBLITY_MARGIN > window.innerWidth\n    || y + height + VISIBLITY_MARGIN < 0 || y - VISIBLITY_MARGIN > window.innerHeight) {\n    return false;\n  }\n\n  const seed = Math.floor(Date.now() / 1000);\n  const filterId = `${SNAP_EFFECT_ID}-${generateUniqueId()}`;\n\n  const component = (\n    <svg\n      className={styles.ghost}\n      width={width}\n      height={height}\n      style={`left: ${x}px; top: ${y}px;`}\n      viewBox={`0 0 ${width} ${height}`}\n    >\n      <defs>\n        {createFilter(filterId, Math.min(width, height), seed)}\n      </defs>\n      <g filter={`url(#${filterId})`}>\n        <foreignObject className={styles.elementContainer} width={width} height={height} />\n      </g>\n    </svg>\n  );\n\n  const svg = jsxToHtml(component)[0] as HTMLElement;\n  const foreignObject = svg.querySelector('foreignObject')!;\n\n  const computedStyle = window.getComputedStyle(element);\n  const clone = element.cloneNode(true) as HTMLElement;\n  Array.from(computedStyle).forEach((key) => (\n    clone.style.setProperty(key, computedStyle.getPropertyValue(key), 'important')\n  ));\n\n  foreignObject.appendChild(clone);\n\n  const snapContainer = document.getElementById(SNAP_EFFECT_CONTAINER_ID)!;\n  snapContainer.appendChild(svg);\n\n  svg.addEventListener('animationend', () => {\n    snapContainer.removeChild(svg);\n  }, {\n    once: true,\n  });\n\n  return true;\n}\n\nfunction createFilter(id: string, smallestSide: number, baseSeed: number = 42) {\n  return (\n    <filter\n      xmlns={SVG_NAMESPACE}\n      id={id}\n      x=\"-150%\"\n      y=\"-150%\"\n      width=\"400%\"\n      height=\"400%\"\n      color-interpolation-filters=\"sRGB\"\n    >\n      <feTurbulence type=\"fractalNoise\" baseFrequency=\"0.5\" numOctaves=\"1\" result=\"dustNoise\" seed={baseSeed} />\n      <feComponentTransfer in=\"dustNoise\" result=\"dustNoiseMask\">\n        <feFuncA type=\"linear\" slope=\"5\" intercept=\"0\">\n          <animate attributeName=\"slope\" values=\"5; 2; 1; 0\" dur={`${DURATION}ms`} fill=\"freeze\" />\n        </feFuncA>\n      </feComponentTransfer>\n      <feComposite in=\"SourceGraphic\" in2=\"dustNoiseMask\" operator=\"in\" result=\"dustySource\" />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"0.015\"\n        numOctaves=\"1\"\n        result=\"displacementNoise1\"\n        seed={baseSeed + 1}\n      />\n      <feTurbulence\n        type=\"fractalNoise\"\n        baseFrequency=\"1\"\n        numOctaves=\"2\"\n        result=\"displacementNoise2\"\n        seed={baseSeed + 2}\n      />\n      <feMerge result=\"combinedNoise\">\n        <feMergeNode in=\"displacementNoise1\" />\n        <feMergeNode in=\"displacementNoise2\" />\n      </feMerge>\n      <feDisplacementMap in=\"dustySource\" in2=\"combinedNoise\" scale=\"0\" xChannelSelector=\"R\" yChannelSelector=\"G\">\n        <animate attributeName=\"scale\" values={`0; ${smallestSide * 3}`} dur={`${DURATION}ms`} fill=\"freeze\" />\n      </feDisplacementMap>\n    </filter>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './HeaderMenuContainer';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst HeaderMenuContainerAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const HeaderMenuContainer = useModuleLoader(Bundles.Extra, 'HeaderMenuContainer', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return HeaderMenuContainer ? <HeaderMenuContainer {...props} /> : undefined;\n};\n\nexport default HeaderMenuContainerAsync;\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { IAnchorPosition, MessageListType, ThreadId } from '../../types';\nimport { MAIN_THREAD_ID } from '../../api/types';\nimport { ManagementScreens } from '../../types';\n\nimport { requestMeasure, requestNextMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getHasAdminRight,\n  getIsSavedDialog,\n  isAnonymousForwardsChat,\n  isChatBasicGroup, isChatChannel, isChatSuperGroup, isUserId,\n} from '../../global/helpers';\nimport {\n  selectBot,\n  selectCanAnimateInterface,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectIsChatBotNotStarted,\n  selectIsChatWithSelf,\n  selectIsInSelectMode,\n  selectIsRightColumnShown,\n  selectIsUserBlocked,\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectTranslationLanguage,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { ARE_CALLS_SUPPORTED, IS_APP } from '../../util/windowEnvironment';\n\nimport { useHotkeys } from '../../hooks/useHotkeys';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport HeaderMenuContainer from './HeaderMenuContainer.async';\n\ninterface OwnProps {\n  chatId: string;\n  threadId: ThreadId;\n  messageListType: MessageListType;\n  canExpandActions: boolean;\n  isForForum?: boolean;\n  isMobile?: boolean;\n  onTopicSearch?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  noMenu?: boolean;\n  isChannel?: boolean;\n  isRightColumnShown?: boolean;\n  canStartBot?: boolean;\n  canRestartBot?: boolean;\n  canUnblock?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewMonetization?: boolean;\n  canViewBoosts?: boolean;\n  canShowBoostModal?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  shouldJoinToSend?: boolean;\n  shouldSendJoinRequest?: boolean;\n  noAnimation?: boolean;\n  canTranslate?: boolean;\n  isTranslating?: boolean;\n  translationLanguage: string;\n  language: string;\n  detectedChatLanguage?: string;\n  doNotTranslate: string[];\n}\n\n// Chrome breaks layout when focusing input during transition\nconst SEARCH_FOCUS_DELAY_MS = 320;\n\nconst HeaderActions: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  noMenu,\n  isMobile,\n  isChannel,\n  canStartBot,\n  canRestartBot,\n  canUnblock,\n  canSubscribe,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  canShowBoostModal,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  pendingJoinRequests,\n  isRightColumnShown,\n  isForForum,\n  canExpandActions,\n  shouldJoinToSend,\n  shouldSendJoinRequest,\n  noAnimation,\n  canTranslate,\n  isTranslating,\n  translationLanguage,\n  language,\n  detectedChatLanguage,\n  doNotTranslate,\n  onTopicSearch,\n}) => {\n  const {\n    joinChannel,\n    sendBotCommand,\n    openMiddleSearch,\n    restartBot,\n    requestMasterAndRequestCall,\n    requestNextManagementScreen,\n    showNotification,\n    openChat,\n    requestChatTranslation,\n    togglePeerTranslations,\n    openChatLanguageModal,\n    setSettingOption,\n    unblockUser,\n    setViewForumAsMessages,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const menuButtonRef = useRef<HTMLButtonElement>(null);\n  const lang = useOldLang();\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\n  const [menuAnchor, setMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleHeaderMenuOpen = useLastCallback(() => {\n    setIsMenuOpen(true);\n    const rect = menuButtonRef.current!.getBoundingClientRect();\n    setMenuAnchor({ x: rect.right, y: rect.bottom });\n  });\n\n  const handleHeaderMenuClose = useLastCallback(() => {\n    setIsMenuOpen(false);\n  });\n\n  const handleHeaderMenuHide = useLastCallback(() => {\n    setMenuAnchor(undefined);\n  });\n\n  const handleSubscribeClick = useLastCallback(() => {\n    joinChannel({ chatId });\n    if (shouldSendJoinRequest) {\n      showNotification({\n        message: isChannel ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n      });\n    }\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n  });\n\n  const handleTranslateClick = useLastCallback(() => {\n    if (isTranslating) {\n      requestChatTranslation({ chatId, toLanguageCode: undefined });\n      return;\n    }\n\n    requestChatTranslation({ chatId, toLanguageCode: translationLanguage });\n  });\n\n  const handleJoinRequestsClick = useLastCallback(() => {\n    requestNextManagementScreen({ screen: ManagementScreens.JoinRequests });\n  });\n\n  const handleSearchClick = useLastCallback(() => {\n    if (isForForum) {\n      onTopicSearch?.();\n      return;\n    }\n\n    openMiddleSearch();\n\n    if (isMobile) {\n      // iOS requires synchronous focus on user event.\n      setFocusInSearchInput();\n    } else if (noAnimation) {\n      // The second RAF is necessary because Teact must update the state and render the async component\n      requestMeasure(() => {\n        requestNextMutation(setFocusInSearchInput);\n      });\n    } else {\n      setTimeout(setFocusInSearchInput, SEARCH_FOCUS_DELAY_MS);\n    }\n  });\n\n  const handleAsMessagesClick = useLastCallback(() => {\n    openChat({ id: chatId });\n    setViewForumAsMessages({ chatId, isEnabled: true });\n  });\n\n  const handleRequestCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n  });\n\n  const handleHotkeySearchClick = useLastCallback((e: KeyboardEvent) => {\n    if (!canSearch || !IS_APP || e.shiftKey) {\n      return;\n    }\n\n    e.preventDefault();\n    handleSearchClick();\n  });\n\n  const getTextWithLanguage = useLastCallback((langKey: string, langCode: string) => {\n    const simplified = langCode.split('-')[0];\n    const translationKey = `TranslateLanguage${simplified.toUpperCase()}`;\n    const name = lang(translationKey);\n    if (name !== translationKey) {\n      return lang(langKey, name);\n    }\n\n    const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n    return lang(`${langKey}Other`, translatedName);\n  });\n\n  const buttonText = useMemo(() => {\n    if (isTranslating) return lang('ShowOriginalButton');\n\n    return getTextWithLanguage('TranslateToButton', translationLanguage);\n  }, [translationLanguage, getTextWithLanguage, isTranslating, lang]);\n\n  const doNotTranslateText = useMemo(() => {\n    if (!detectedChatLanguage) return undefined;\n\n    return getTextWithLanguage('DoNotTranslateLanguage', detectedChatLanguage);\n  }, [getTextWithLanguage, detectedChatLanguage]);\n\n  const handleHide = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: false });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n  });\n\n  const handleChangeLanguage = useLastCallback(() => {\n    openChatLanguageModal({ chatId });\n  });\n\n  const handleDoNotTranslate = useLastCallback(() => {\n    if (!detectedChatLanguage) return;\n\n    setSettingOption({\n      doNotTranslate: [...doNotTranslate, detectedChatLanguage],\n    });\n    requestChatTranslation({ chatId, toLanguageCode: undefined });\n\n    showNotification({ message: getTextWithLanguage('AddedToDoNotTranslate', detectedChatLanguage) });\n  });\n\n  useHotkeys(useMemo(() => ({\n    'Mod+F': handleHotkeySearchClick,\n  }), []));\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={isRightColumnShown}\n        color=\"translucent\"\n        size=\"smaller\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel={lang('TranslateMessage')}\n      >\n        <Icon name=\"language\" />\n      </Button>\n    );\n  }, [isRightColumnShown, lang]);\n\n  return (\n    <div className=\"HeaderActions\">\n      {!isForForum && canTranslate && (\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"language\" onClick={handleTranslateClick}>\n            {buttonText}\n          </MenuItem>\n          <MenuItem icon=\"replace\" onClick={handleChangeLanguage}>\n            {lang('Chat.Translate.Menu.To')}\n          </MenuItem>\n          <MenuSeparator />\n          {detectedChatLanguage\n            && <MenuItem icon=\"hand-stop\" onClick={handleDoNotTranslate}>{doNotTranslateText}</MenuItem>}\n          <MenuItem icon=\"close-circle\" onClick={handleHide}>{lang('Hide')}</MenuItem>\n        </DropdownMenu>\n      )}\n      {!isMobile && (\n        <>\n          {canExpandActions && !shouldSendJoinRequest && (canSubscribe || shouldJoinToSend) && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </Button>\n          )}\n          {canExpandActions && shouldSendJoinRequest && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleSubscribeClick}\n            >\n              {lang('ChannelJoinRequest')}\n            </Button>\n          )}\n          {canExpandActions && canStartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </Button>\n          )}\n          {canExpandActions && canRestartBot && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleRestartBot}\n            >\n              {lang('BotRestart')}\n            </Button>\n          )}\n          {canExpandActions && canUnblock && (\n            <Button\n              size=\"tiny\"\n              ripple\n              fluid\n              onClick={handleUnblock}\n            >\n              {lang('Unblock')}\n            </Button>\n          )}\n          {canSearch && (\n            <Button\n              round\n              ripple={isRightColumnShown}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleSearchClick}\n              ariaLabel={lang('Conversation.SearchPlaceholder')}\n            >\n              <Icon name=\"search\" />\n            </Button>\n          )}\n          {canCall && (\n            <Button\n              round\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleRequestCall}\n              ariaLabel=\"Call\"\n            >\n              <Icon name=\"phone\" />\n            </Button>\n          )}\n        </>\n      )}\n      {!isForForum && Boolean(pendingJoinRequests) && (\n        <Button\n          round\n          className=\"badge-button\"\n          ripple={isRightColumnShown}\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleJoinRequestsClick}\n          ariaLabel={isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n        >\n          <Icon name=\"user\" />\n          <div className=\"badge\">{pendingJoinRequests}</div>\n        </Button>\n      )}\n      <Button\n        ref={menuButtonRef}\n        className={isMenuOpen ? 'active' : ''}\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        disabled={noMenu}\n        ariaLabel=\"More actions\"\n        onClick={handleHeaderMenuOpen}\n      >\n        <Icon name=\"more\" />\n      </Button>\n      {menuAnchor && (\n        <HeaderMenuContainer\n          chatId={chatId}\n          threadId={threadId}\n          isOpen={isMenuOpen}\n          anchor={menuAnchor}\n          withExtraActions={isMobile || !canExpandActions}\n          isChannel={isChannel}\n          canStartBot={canStartBot}\n          canSubscribe={canSubscribe}\n          canSearch={canSearch}\n          canCall={canCall}\n          canMute={canMute}\n          canViewStatistics={canViewStatistics}\n          canViewBoosts={canViewBoosts}\n          canViewMonetization={canViewMonetization}\n          canShowBoostModal={canShowBoostModal}\n          canLeave={canLeave}\n          canEnterVoiceChat={canEnterVoiceChat}\n          canCreateVoiceChat={canCreateVoiceChat}\n          pendingJoinRequests={pendingJoinRequests}\n          onJoinRequestsClick={handleJoinRequestsClick}\n          withForumActions={isForForum}\n          onSubscribeChannel={handleSubscribeClick}\n          onSearchClick={handleSearchClick}\n          onAsMessagesClick={handleAsMessagesClick}\n          onClose={handleHeaderMenuClose}\n          onCloseAnimationEnd={handleHeaderMenuHide}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    chatId, threadId, messageListType, isMobile,\n  }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat && isChatChannel(chat));\n    const isSuperGroup = Boolean(chat && isChatSuperGroup(chat));\n    const language = selectLanguageCode(global);\n    const translationLanguage = selectTranslationLanguage(global);\n    const isPrivate = isUserId(chatId);\n    const { doNotTranslate } = global.settings.byKey;\n\n    if (!chat || chat.isRestricted || selectIsInSelectMode(global)) {\n      return {\n        noMenu: true,\n        language,\n        translationLanguage,\n        doNotTranslate,\n      };\n    }\n\n    const bot = selectBot(global, chatId);\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const fullInfo = chatFullInfo || userFullInfo;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const isMainThread = messageListType === 'thread' && threadId === MAIN_THREAD_ID;\n    const isDiscussionThread = messageListType === 'thread' && threadId !== MAIN_THREAD_ID;\n    const isRightColumnShown = selectIsRightColumnShown(global, isMobile);\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n\n    const isUserBlocked = isPrivate ? selectIsUserBlocked(global, chatId) : false;\n    const canRestartBot = Boolean(bot && isUserBlocked);\n    const canStartBot = !canRestartBot && Boolean(selectIsChatBotNotStarted(global, chatId));\n    const canUnblock = isUserBlocked && !bot;\n    const canSubscribe = Boolean(\n      (isMainThread || chat.isForum) && (isChannel || isSuperGroup) && chat.isNotJoined,\n    );\n    const canSearch = isMainThread || isDiscussionThread;\n    const canCall = ARE_CALLS_SUPPORTED && isUserId(chat.id) && !isChatWithSelf && !bot && !chat.isSupport\n      && !isAnonymousForwardsChat(chat.id);\n    const canMute = isMainThread && !isChatWithSelf && !canSubscribe;\n    const canLeave = isSavedDialog || (isMainThread && !canSubscribe);\n    const canEnterVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && chat.isCallActive;\n    const canCreateVoiceChat = ARE_CALLS_SUPPORTED && isMainThread && !chat.isCallActive\n      && (chat.adminRights?.manageCall || (chat.isCreator && isChatBasicGroup(chat)));\n    const canViewStatistics = isMainThread && chatFullInfo?.canViewStatistics;\n    const canViewMonetization = isMainThread && chatFullInfo?.canViewMonetization;\n    const canViewBoosts = isMainThread\n      && (isSuperGroup || isChannel) && (canViewStatistics || getHasAdminRight(chat, 'postStories'));\n    const canShowBoostModal = !canViewBoosts && (isSuperGroup || isChannel);\n    const pendingJoinRequests = isMainThread ? chatFullInfo?.requestsPending : undefined;\n    const shouldJoinToSend = Boolean(chat?.isNotJoined && chat.isJoinToSend);\n    const shouldSendJoinRequest = Boolean(chat?.isNotJoined && chat.isJoinRequest);\n    const noAnimation = !selectCanAnimateInterface(global);\n\n    const isTranslating = Boolean(selectRequestedChatTranslationLanguage(global, chatId));\n    const canTranslate = selectCanTranslateChat(global, chatId) && !fullInfo?.isTranslationDisabled;\n\n    return {\n      noMenu: false,\n      isChannel,\n      isRightColumnShown,\n      canStartBot,\n      canRestartBot,\n      canSubscribe,\n      canSearch,\n      canCall,\n      canMute,\n      canViewStatistics,\n      canViewMonetization,\n      canViewBoosts,\n      canShowBoostModal,\n      canLeave,\n      canEnterVoiceChat,\n      canCreateVoiceChat,\n      pendingJoinRequests,\n      shouldJoinToSend,\n      shouldSendJoinRequest,\n      noAnimation,\n      canTranslate,\n      isTranslating,\n      translationLanguage,\n      language,\n      doNotTranslate,\n      detectedChatLanguage: chat.detectedLanguage,\n      canUnblock,\n    };\n  },\n)(HeaderActions));\n\nfunction setFocusInSearchInput() {\n  const searchInput = document.querySelector<HTMLInputElement>('#MiddleSearch input');\n  searchInput?.focus();\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mklnEg0s\",\"compact\":\"VGmPJoga\",\"image\":\"tT8KQwg0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiDocument } from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getDocumentMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useMedia from '../../../hooks/useMedia';\n\nimport styles from './AttachBotIcon.module.scss';\n\ntype OwnProps = {\n  icon: ApiDocument;\n  theme: ISettings['theme'];\n};\n\nconst ADDITIONAL_STROKE_WIDTH = '0.5px';\nconst DARK_THEME_COLOR = 'rgb(170, 170, 170)';\nconst LIGHT_THEME_COLOR = 'rgb(112, 117, 121)';\nconst COLOR_REPLACE_PATTERN = /#fff/gi;\n\nconst AttachBotIcon: FC<OwnProps> = ({\n  icon, theme,\n}) => {\n  const { isTouchScreen } = useAppLayout();\n  const mediaData = useMedia(getDocumentMediaHash(icon, 'full'), false, ApiMediaFormat.Text);\n\n  const iconSvg = useMemo(() => {\n    if (!mediaData) return '';\n    const color = theme === 'dark' ? DARK_THEME_COLOR : LIGHT_THEME_COLOR;\n\n    const mediaDataWithReplacedColors = mediaData.replace(COLOR_REPLACE_PATTERN, color);\n    const doc = new DOMParser().parseFromString(mediaDataWithReplacedColors, 'image/svg+xml');\n    doc.querySelectorAll('path').forEach((path) => {\n      path.style.stroke = color;\n      path.style.strokeWidth = ADDITIONAL_STROKE_WIDTH;\n    });\n\n    return `data:image/svg+xml;utf8,${doc.documentElement.outerHTML}`;\n  }, [mediaData, theme]);\n\n  return (\n    <i className={buildClassName(styles.root, 'icon', !isTouchScreen && styles.compact)}>\n      <img\n        src={iconSvg}\n        alt=\"\"\n        className={buildClassName(styles.image, !isTouchScreen && styles.compact)}\n        draggable={false}\n      />\n    </i>\n  );\n};\n\nexport default memo(AttachBotIcon);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiAttachBot } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport AttachBotIcon from './AttachBotIcon';\n\ntype OwnProps = {\n  bot: ApiAttachBot;\n  theme: ISettings['theme'];\n  isInSideMenu?: true;\n  chatId?: string;\n  threadId?: ThreadId;\n  canShowNew?: boolean;\n  onMenuOpened: VoidFunction;\n  onMenuClosed: VoidFunction;\n};\n\nconst AttachBotItem: FC<OwnProps> = ({\n  bot,\n  theme,\n  chatId,\n  threadId,\n  isInSideMenu,\n  canShowNew,\n  onMenuOpened,\n  onMenuClosed,\n}) => {\n  const { callAttachBot, toggleAttachBot } = getActions();\n\n  const lang = useOldLang();\n\n  const icon = useMemo(() => {\n    return bot.icons.find(({ name }) => name === 'default_static')?.document;\n  }, [bot.icons]);\n\n  const [isMenuOpen, openMenu, closeMenu] = useFlag();\n  const [menuPosition, setMenuPosition] = useState<IAnchorPosition | undefined>(undefined);\n\n  const handleContextMenu = useLastCallback((e: React.UIEvent) => {\n    e.preventDefault();\n    const rect = e.currentTarget.getBoundingClientRect();\n    setMenuPosition({ x: rect.right, y: rect.bottom });\n    onMenuOpened();\n    openMenu();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isInSideMenu) {\n      callAttachBot({\n        bot,\n        isFromSideMenu: true,\n      });\n    } else {\n      callAttachBot({\n        bot,\n        chatId: chatId!,\n        threadId,\n      });\n    }\n  });\n\n  const handleCloseMenu = useLastCallback(() => {\n    closeMenu();\n    onMenuClosed();\n  });\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    setMenuPosition(undefined);\n  });\n\n  const handleRemoveBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot.id,\n      isEnabled: false,\n    });\n  });\n\n  return (\n    <MenuItem\n      key={bot.id}\n      customIcon={icon && <AttachBotIcon icon={icon} theme={theme} />}\n      icon={!icon ? 'bots' : undefined}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {bot.shortName}\n      {canShowNew && bot.isDisclaimerNeeded && <span className=\"menu-item-badge\">{lang('New')}</span>}\n      {menuPosition && (\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${menuPosition.x}px;top: ${menuPosition.y}px;`}\n          className=\"bot-attach-context-menu\"\n          autoClose\n          withPortal\n          onClose={handleCloseMenu}\n          onCloseAnimationEnd={handleCloseAnimationEnd}\n        >\n          <MenuItem icon=\"stop\" destructive onClick={handleRemoveBot}>{lang('WebApp.RemoveBot')}</MenuItem>\n        </Menu>\n      )}\n\n    </MenuItem>\n  );\n};\n\nexport default memo(AttachBotItem);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomEmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomEmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomEmojiTooltip = useModuleLoader(Bundles.Extra, 'CustomEmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomEmojiTooltip ? <CustomEmojiTooltip {...props} /> : undefined;\n};\n\nexport default CustomEmojiTooltipAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './CustomSendMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst CustomSendMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CustomSend = useModuleLoader(Bundles.Extra, 'CustomSendMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CustomSend ? <CustomSend {...props} /> : undefined;\n};\n\nexport default CustomSendMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DropTarget.scss';\n\nexport type OwnProps = {\n  isQuick?: boolean;\n  isGeneric?: boolean;\n  onFileSelect: (e: React.DragEvent<HTMLDivElement>) => void;\n};\n\nconst DropTarget: FC<OwnProps> = ({ isQuick, isGeneric, onFileSelect }) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { relatedTarget: toTarget } = e;\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  const className = buildClassName(\n    'DropTarget',\n    isHovered && 'hovered',\n  );\n\n  return (\n    <div\n      className={className}\n      ref={ref}\n      onDrop={onFileSelect}\n      onDragEnter={markHovered}\n      onDragLeave={handleDragLeave}\n      data-dropzone\n    >\n      <svg className=\"target-outline-container\">\n        <rect className=\"target-outline\" x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n      </svg>\n      <div className=\"target-content\">\n        <Icon name={isQuick ? 'photo' : 'document'} />\n        <div className=\"title\">Drop files here to send them</div>\n        {!isGeneric && <div className=\"description\">{isQuick ? 'in a quick way' : 'without compression'}</div>}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(DropTarget);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\n\nimport { canReplaceMessageMedia } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport buildAttachment from './helpers/buildAttachment';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Portal from '../../ui/Portal';\nimport DropTarget from './DropTarget';\n\nimport './DropArea.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  withQuick?: boolean;\n  onHide: NoneToVoidFunction;\n  onFileSelect: (files: File[], suggestCompression?: boolean) => void;\n  editingMessage?: ApiMessage | undefined;\n};\n\nexport enum DropAreaState {\n  None = 'none',\n  Document = 'document',\n  QuickFile = 'quick_file',\n}\n\nconst DROP_LEAVE_TIMEOUT_MS = 150;\n\nconst DropArea: FC<OwnProps> = ({\n  isOpen, withQuick, onHide, onFileSelect, editingMessage,\n}) => {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const hideTimeoutRef = useRef<number>(null);\n  const prevWithQuick = usePreviousDeprecated(withQuick);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onHide) : undefined), [isOpen, onHide]);\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n    let files: File[] = [];\n\n    if (dt.files && dt.files.length > 0 && (!dt.items || !dt.items.length)) {\n      files = files.concat(Array.from(dt.files));\n    } else if (dt.items && dt.items.length > 0) {\n      const folderFiles = await getFilesFromDataTransferItems(dt.items);\n      const newAttachment = folderFiles && await buildAttachment(folderFiles[0].name, folderFiles[0]);\n      const canReplace = editingMessage && newAttachment && canReplaceMessageMedia(editingMessage, newAttachment);\n\n      if (canReplace) {\n        showNotification({ message: lang(isInAlbum ? 'lng_edit_media_album_error' : 'lng_edit_media_invalid_file') });\n        return;\n      }\n      if (folderFiles?.length) {\n        files = files.concat(folderFiles);\n      }\n    }\n\n    onHide();\n    onFileSelect(files, withQuick ? false : undefined);\n  });\n\n  const handleQuickFilesDrop = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    const { dataTransfer: dt } = e;\n\n    if (dt.files && dt.files.length > 0) {\n      onHide();\n      onFileSelect(Array.from(dt.files), true);\n    }\n  });\n\n  const handleDragLeave = useLastCallback((e: React.DragEvent<HTMLDivElement>) => {\n    e.stopPropagation();\n\n    const { target: fromTarget, relatedTarget: toTarget } = e;\n\n    // Esc button pressed during drag event\n    if (\n      (fromTarget as HTMLDivElement).matches('.DropTarget, .DropArea') && (\n        !toTarget || !(toTarget as HTMLDivElement)!.matches('.DropTarget, .DropArea')\n      )\n    ) {\n      hideTimeoutRef.current = window.setTimeout(() => {\n        onHide();\n      }, DROP_LEAVE_TIMEOUT_MS);\n    }\n  });\n\n  const handleDragOver = () => {\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n    }\n  };\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const shouldRenderQuick = withQuick || prevWithQuick;\n\n  const className = buildClassName(\n    'DropArea',\n    transitionClassNames,\n  );\n\n  return (\n    <Portal containerSelector=\"#middle-column-portals\">\n      <div\n        className={className}\n        onDragLeave={handleDragLeave}\n        onDragOver={handleDragOver}\n        onDrop={onHide}\n        onClick={onHide}\n      >\n        <DropTarget onFileSelect={handleFilesDrop} isGeneric={!shouldRenderQuick} />\n        {shouldRenderQuick && <DropTarget onFileSelect={handleQuickFilesDrop} isQuick />}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(DropArea);\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './EmojiTooltip';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst EmojiTooltipAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const EmojiTooltip = useModuleLoader(Bundles.Extra, 'EmojiTooltip', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return EmojiTooltip ? <EmojiTooltip {...props} /> : undefined;\n};\n\nexport default EmojiTooltipAsync;\n","import { requestMeasure, requestMutation } from '../lib/fasterdom/fasterdom';\nimport safePlay from './safePlay';\n\ntype AbsoluteVideoOptions = {\n  position: { x: number; y: number };\n  noLoop?: boolean;\n  size: number;\n  style?: string;\n};\n\nexport default class AbsoluteVideo {\n  private video?: HTMLVideoElement;\n\n  private isPlaying = false;\n\n  constructor(\n    videoUrl: string,\n    private container: HTMLElement,\n    private options: AbsoluteVideoOptions,\n  ) {\n    this.video = document.createElement('video');\n    this.video.src = videoUrl;\n    this.video.disablePictureInPicture = true;\n    this.video.muted = true;\n    if (options.style) {\n      this.video.setAttribute('style', options.style);\n    }\n    this.video.style.position = 'absolute';\n    this.video.load();\n\n    if (!this.options.noLoop) {\n      this.video.loop = true;\n    }\n\n    requestMutation(() => {\n      this.container.appendChild(this.video!);\n\n      this.recalculatePositionAndSize();\n    });\n  }\n\n  public play() {\n    if (this.isPlaying || !this.video) return;\n    this.recalculatePositionAndSize();\n    if (this.video.paused) {\n      safePlay(this.video);\n    }\n    this.isPlaying = true;\n  }\n\n  public pause() {\n    if (!this.isPlaying || !this.video) return;\n    if (!this.video.paused) {\n      this.video.pause();\n    }\n    this.isPlaying = false;\n  }\n\n  public destroy() {\n    this.pause();\n    this.video?.remove();\n    this.video = undefined;\n  }\n\n  public updatePosition(position: AbsoluteVideoOptions['position']) {\n    this.options.position = position;\n    this.recalculatePositionAndSize();\n  }\n\n  private recalculatePositionAndSize() {\n    const { size, position: { x, y } } = this.options;\n    requestMeasure(() => {\n      if (!this.video) return;\n      const video = this.video;\n      const { width, height } = this.container.getBoundingClientRect();\n      requestMutation(() => {\n        video.style.left = `${Math.round(x * width)}px`;\n        video.style.top = `${Math.round(y * height)}px`;\n        video.style.width = `${size}px`;\n        video.style.height = `${size}px`;\n      });\n    });\n  }\n}\n","import {\n  useEffect, useLayoutEffect, useRef,\n} from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { requestMeasure } from '../../../../lib/fasterdom/fasterdom';\nimport { ensureRLottie } from '../../../../lib/rlottie/RLottie.async';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../../global/selectors';\nimport AbsoluteVideo from '../../../../util/AbsoluteVideo';\nimport {\n  addCustomEmojiInputRenderCallback,\n  getCustomEmojiMediaDataForInput,\n} from '../../../../util/emoji/customEmojiManager';\nimport { round } from '../../../../util/math';\nimport { hexToRgb } from '../../../../util/switchTheme';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useColorFilter from '../../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../../hooks/stickers/useDynamicColorListener';\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../../hooks/useThrottledCallback';\nimport useBackgroundMode from '../../../../hooks/window/useBackgroundMode';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nconst SIZE = 1.25 * REM;\nconst THROTTLE_MS = 300;\n\ntype CustomEmojiPlayer = {\n  play: () => void;\n  pause: () => void;\n  destroy: () => void;\n  updatePosition: (x: number, y: number) => void;\n};\n\nexport default function useInputCustomEmojis(\n  getHtml: Signal<string>,\n  inputRef: React.RefObject<HTMLDivElement>,\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>,\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>,\n  absoluteContainerRef: React.RefObject<HTMLElement>,\n  prefixId: string,\n  canPlayAnimatedEmojis: boolean,\n  isReady?: boolean,\n  isActive?: boolean,\n) {\n  const customColor = useDynamicColorListener(inputRef, !isReady);\n  const colorFilter = useColorFilter(customColor, true);\n  const dpr = useDevicePixelRatio();\n  const playersById = useRef<Map<string, CustomEmojiPlayer>>(new Map());\n\n  const clearPlayers = useLastCallback((ids: string[]) => {\n    ids.forEach((id) => {\n      const player = playersById.current.get(id);\n      if (player) {\n        player.destroy();\n        playersById.current.delete(id);\n      }\n    });\n  });\n\n  const synchronizeElements = useLastCallback(() => {\n    if (!isReady || !inputRef.current || !sharedCanvasRef.current || !sharedCanvasHqRef.current) return;\n\n    const global = getGlobal();\n    const playerIdsToClear = new Set(playersById.current.keys());\n    const customEmojis = Array.from(inputRef.current.querySelectorAll<HTMLElement>('.custom-emoji'));\n\n    customEmojis.forEach((element) => {\n      if (!element.dataset.uniqueId) {\n        return;\n      }\n      const playerId = `${prefixId}${element.dataset.uniqueId}${customColor || ''}`;\n      const documentId = element.dataset.documentId!;\n\n      playerIdsToClear.delete(playerId);\n\n      const mediaUrl = getCustomEmojiMediaDataForInput(documentId);\n      if (!mediaUrl) {\n        return;\n      }\n\n      const canvasBounds = sharedCanvasRef.current!.getBoundingClientRect();\n      const elementBounds = element.getBoundingClientRect();\n      const x = round((elementBounds.left - canvasBounds.left) / canvasBounds.width, 4);\n      const y = round((elementBounds.top - canvasBounds.top) / canvasBounds.height, 4);\n\n      if (playersById.current.has(playerId)) {\n        const player = playersById.current.get(playerId)!;\n        player.updatePosition(x, y);\n        return;\n      }\n\n      const customEmoji = global.customEmojis.byId[documentId];\n      if (!customEmoji) {\n        return;\n      }\n      const isHq = customEmoji?.stickerSetInfo && selectIsAlwaysHighPriorityEmoji(global, customEmoji.stickerSetInfo);\n      const renderId = [\n        prefixId, documentId, customColor, dpr,\n      ].filter(Boolean).join('_');\n\n      createPlayer({\n        customEmoji,\n        sharedCanvasRef,\n        sharedCanvasHqRef,\n        absoluteContainerRef,\n        renderId,\n        viewId: playerId,\n        mediaUrl,\n        isHq,\n        position: { x, y },\n        textColor: customColor,\n        colorFilter,\n      }).then((animation) => {\n        if (canPlayAnimatedEmojis) {\n          animation.play();\n        }\n\n        playersById.current.set(playerId, animation);\n      });\n    });\n\n    clearPlayers(Array.from(playerIdsToClear));\n  });\n\n  useEffect(() => {\n    return addCustomEmojiInputRenderCallback(synchronizeElements);\n  }, [synchronizeElements]);\n\n  useEffect(() => {\n    const activePlayersById = playersById.current;\n    // Always clear players on unmount\n    return () => {\n      clearPlayers(Array.from(activePlayersById.keys()));\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!getHtml() || !inputRef.current || !sharedCanvasRef.current || !isActive || !isReady) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      return;\n    }\n\n    // Wait one frame for DOM to update\n    requestMeasure(() => {\n      synchronizeElements();\n    });\n  }, [getHtml, synchronizeElements, inputRef, clearPlayers, sharedCanvasRef, isActive, isReady]);\n\n  useLayoutEffect(() => {\n    document.documentElement.style.setProperty('--input-custom-emoji-filter', colorFilter || 'none');\n  }, [colorFilter]);\n\n  useEffectWithPrevDeps(([prevCustomColor]) => {\n    if (prevCustomColor !== undefined && customColor !== prevCustomColor) {\n      synchronizeElements();\n    }\n  }, [customColor, synchronizeElements]);\n\n  const throttledSynchronizeElements = useThrottledCallback(\n    synchronizeElements,\n    [synchronizeElements],\n    THROTTLE_MS,\n    false,\n  );\n  useResizeObserver(sharedCanvasRef, throttledSynchronizeElements);\n  useEffectWithPrevDeps(([prevDpr]) => {\n    if (dpr !== prevDpr) {\n      clearPlayers(Array.from(playersById.current.keys()));\n      synchronizeElements();\n    }\n  }, [dpr, synchronizeElements]);\n\n  const freezeAnimation = useLastCallback(() => {\n    playersById.current.forEach((player) => {\n      player.pause();\n    });\n  });\n\n  const unfreezeAnimation = useLastCallback(() => {\n    if (!canPlayAnimatedEmojis) {\n      return;\n    }\n\n    playersById.current?.forEach((player) => {\n      player.play();\n    });\n  });\n\n  const unfreezeAnimationOnRaf = useLastCallback(() => {\n    requestMeasure(unfreezeAnimation);\n  });\n\n  // Pausing frame may not happen in background,\n  // so we need to make sure it happens right after focusing,\n  // then we can play again.\n  useBackgroundMode(freezeAnimation, unfreezeAnimationOnRaf);\n}\n\nasync function createPlayer({\n  customEmoji,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  absoluteContainerRef,\n  renderId,\n  viewId,\n  mediaUrl,\n  position,\n  isHq,\n  textColor,\n  colorFilter,\n}: {\n  customEmoji: ApiSticker;\n  sharedCanvasRef: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef: React.RefObject<HTMLCanvasElement>;\n  absoluteContainerRef: React.RefObject<HTMLElement>;\n  renderId: string;\n  viewId: string;\n  mediaUrl: string;\n  position: { x: number; y: number };\n  isHq?: boolean;\n  textColor?: string;\n  colorFilter?: string;\n}): Promise<CustomEmojiPlayer> {\n  if (customEmoji.isLottie) {\n    const color = customEmoji.shouldUseTextColor && textColor ? hexToRgb(textColor) : undefined;\n    const RLottie = await ensureRLottie();\n    const lottie = RLottie.init(\n      mediaUrl,\n      isHq ? sharedCanvasHqRef.current! : sharedCanvasRef.current!,\n      renderId,\n      {\n        size: SIZE,\n        coords: position,\n        isLowPriority: !isHq,\n      },\n      viewId,\n      color ? [color.r, color.g, color.b] : undefined,\n    );\n\n    return {\n      play: () => lottie.play(),\n      pause: () => lottie.pause(),\n      destroy: () => lottie.removeView(viewId),\n      updatePosition: (x: number, y: number) => {\n        return lottie.setSharedCanvasCoords(viewId, { x, y });\n      },\n    };\n  }\n\n  if (customEmoji.isVideo) {\n    const style = customEmoji.shouldUseTextColor && colorFilter ? `filter: ${colorFilter};` : undefined;\n    const absoluteVideo = new AbsoluteVideo(\n      mediaUrl,\n      absoluteContainerRef.current!,\n      { size: SIZE, position, style },\n    );\n    return {\n      play: () => absoluteVideo.play(),\n      pause: () => absoluteVideo.pause(),\n      destroy: () => absoluteVideo.destroy(),\n      updatePosition: (x: number, y: number) => absoluteVideo.updatePosition({ x, y }),\n    };\n  }\n\n  throw new Error('Unsupported custom emoji type');\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './TextFormatter';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst TextFormatterAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const TextFormatter = useModuleLoader(Bundles.Extra, 'TextFormatter', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return TextFormatter ? <TextFormatter {...props} /> : undefined;\n};\n\nexport default TextFormatterAsync;\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  getIsHeavyAnimating,\n  memo, useEffect, useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiInputMessageReplyInfo } from '../../../api/types';\nimport type { IAnchorPosition, ISettings, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectCanPlayAnimatedEmojis, selectDraft, selectIsInSelectMode } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureKeyboardListeners from '../../../util/captureKeyboardListeners';\nimport { getIsDirectTextInputDisabled } from '../../../util/directInputManager';\nimport parseEmojiOnlyString from '../../../util/emoji/parseEmojiOnlyString';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { debounce } from '../../../util/schedulers';\nimport {\n  IS_ANDROID, IS_EMOJI_SUPPORTED, IS_IOS, IS_TOUCH_ENV,\n} from '../../../util/windowEnvironment';\nimport renderText from '../../common/helpers/renderText';\nimport { isSelectionInsideInput } from './helpers/selection';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useInputCustomEmojis from './hooks/useInputCustomEmojis';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport TextTimer from '../../ui/TextTimer';\nimport TextFormatter from './TextFormatter.async';\n\nconst CONTEXT_MENU_CLOSE_DELAY_MS = 100;\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 350;\nconst TRANSITION_DURATION_FACTOR = 50;\n\nconst SCROLLER_CLASS = 'input-scroller';\nconst INPUT_WRAPPER_CLASS = 'message-input-wrapper';\n\ntype OwnProps = {\n  ref?: RefObject<HTMLDivElement>;\n  id: string;\n  chatId: string;\n  threadId: ThreadId;\n  isAttachmentModalInput?: boolean;\n  isStoryInput?: boolean;\n  customEmojiPrefix: string;\n  editableInputId?: string;\n  isReady: boolean;\n  isActive: boolean;\n  getHtml: Signal<string>;\n  placeholder: string;\n  timedPlaceholderLangKey?: string;\n  timedPlaceholderDate?: number;\n  forcedPlaceholder?: string;\n  noFocusInterception?: boolean;\n  canAutoFocus: boolean;\n  shouldSuppressFocus?: boolean;\n  shouldSuppressTextFormatter?: boolean;\n  canSendPlainText?: boolean;\n  onUpdate: (html: string) => void;\n  onSuppressedFocus?: () => void;\n  onSend: () => void;\n  onScroll?: (event: React.UIEvent<HTMLElement>) => void;\n  captionLimit?: number;\n  onFocus?: NoneToVoidFunction;\n  onBlur?: NoneToVoidFunction;\n  isNeedPremium?: boolean;\n};\n\ntype StateProps = {\n  replyInfo?: ApiInputMessageReplyInfo;\n  isSelectModeActive?: boolean;\n  messageSendKeyCombo?: ISettings['messageSendKeyCombo'];\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst MAX_ATTACHMENT_MODAL_INPUT_HEIGHT = 160;\nconst MAX_STORY_MODAL_INPUT_HEIGHT = 128;\nconst TAB_INDEX_PRIORITY_TIMEOUT = 2000;\n// Heuristics allowing the user to make a triple click\nconst SELECTION_RECALCULATE_DELAY_MS = 260;\nconst TEXT_FORMATTER_SAFE_AREA_PX = 140;\n// For some reason Safari inserts `<br>` after user removes text from input\nconst SAFARI_BR = '<br>';\nconst IGNORE_KEYS = [\n  'Esc', 'Escape', 'Enter', 'PageUp', 'PageDown', 'Meta', 'Alt', 'Ctrl', 'ArrowDown', 'ArrowUp', 'Control', 'Shift',\n];\n\nfunction clearSelection() {\n  const selection = window.getSelection();\n  if (!selection) {\n    return;\n  }\n\n  if (selection.removeAllRanges) {\n    selection.removeAllRanges();\n  } else if (selection.empty) {\n    selection.empty();\n  }\n}\n\nconst MessageInput: FC<OwnProps & StateProps> = ({\n  ref,\n  id,\n  chatId,\n  captionLimit,\n  isAttachmentModalInput,\n  isStoryInput,\n  customEmojiPrefix,\n  editableInputId,\n  isReady,\n  isActive,\n  getHtml,\n  placeholder,\n  timedPlaceholderLangKey,\n  timedPlaceholderDate,\n  forcedPlaceholder,\n  canSendPlainText,\n  canAutoFocus,\n  noFocusInterception,\n  shouldSuppressFocus,\n  shouldSuppressTextFormatter,\n  replyInfo,\n  isSelectModeActive,\n  canPlayAnimatedEmojis,\n  messageSendKeyCombo,\n  onUpdate,\n  onSuppressedFocus,\n  onSend,\n  onScroll,\n  onFocus,\n  onBlur,\n  isNeedPremium,\n}) => {\n  const {\n    editLastMessage,\n    replyToNextMessage,\n    showAllowedMessageTypesNotification,\n    openPremiumModal,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  let inputRef = useRef<HTMLDivElement>(null);\n  if (ref) {\n    inputRef = ref;\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const selectionTimeoutRef = useRef<number>(null);\n  // eslint-disable-next-line no-null/no-null\n  const cloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const scrollerCloneRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const absoluteContainerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n  const isContextMenuOpenRef = useRef(false);\n  const [isTextFormatterOpen, openTextFormatter, closeTextFormatter] = useFlag();\n  const [textFormatterAnchorPosition, setTextFormatterAnchorPosition] = useState<IAnchorPosition>();\n  const [selectedRange, setSelectedRange] = useState<Range>();\n  const [isTextFormatterDisabled, setIsTextFormatterDisabled] = useState<boolean>(false);\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const [shouldDisplayTimer, setShouldDisplayTimer] = useState(false);\n\n  useEffect(() => {\n    setShouldDisplayTimer(Boolean(timedPlaceholderLangKey && timedPlaceholderDate));\n  }, [timedPlaceholderDate, timedPlaceholderLangKey]);\n\n  const handleTimerEnd = useLastCallback(() => {\n    setShouldDisplayTimer(false);\n  });\n\n  useInputCustomEmojis(\n    getHtml,\n    inputRef,\n    sharedCanvasRef,\n    sharedCanvasHqRef,\n    absoluteContainerRef,\n    customEmojiPrefix,\n    canPlayAnimatedEmojis,\n    isReady,\n    isActive,\n  );\n\n  const maxInputHeight = isAttachmentModalInput\n    ? MAX_ATTACHMENT_MODAL_INPUT_HEIGHT\n    : isStoryInput ? MAX_STORY_MODAL_INPUT_HEIGHT : (isMobile ? 256 : 416);\n  const updateInputHeight = useLastCallback((willSend = false) => {\n    requestForcedReflow(() => {\n      const scroller = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!;\n      const currentHeight = Number(scroller.style.height.replace('px', ''));\n      const clone = scrollerCloneRef.current!;\n      const { scrollHeight } = clone;\n      const newHeight = Math.min(scrollHeight, maxInputHeight);\n\n      if (newHeight === currentHeight) {\n        return undefined;\n      }\n\n      const isOverflown = scrollHeight > maxInputHeight;\n\n      function exec() {\n        const transitionDuration = Math.round(\n          TRANSITION_DURATION_FACTOR * Math.log(Math.abs(newHeight - currentHeight)),\n        );\n        scroller.style.height = `${newHeight}px`;\n        scroller.style.transitionDuration = `${transitionDuration}ms`;\n        scroller.classList.toggle('overflown', isOverflown);\n      }\n\n      if (willSend) {\n        // Delay to next frame to sync with sending animation\n        requestMutation(exec);\n        return undefined;\n      } else {\n        return exec;\n      }\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!isAttachmentModalInput) return;\n    updateInputHeight(false);\n  }, [isAttachmentModalInput, updateInputHeight]);\n\n  const htmlRef = useRef(getHtml());\n  useLayoutEffect(() => {\n    const html = isActive ? getHtml() : '';\n\n    if (html !== inputRef.current!.innerHTML) {\n      inputRef.current!.innerHTML = html;\n    }\n\n    if (html !== cloneRef.current!.innerHTML) {\n      cloneRef.current!.innerHTML = html;\n    }\n\n    if (html !== htmlRef.current) {\n      htmlRef.current = html;\n\n      updateInputHeight(!html);\n    }\n  }, [getHtml, isActive, updateInputHeight]);\n\n  const chatIdRef = useRef(chatId);\n  chatIdRef.current = chatId;\n  const focusInput = useLastCallback(() => {\n    if (!inputRef.current || isNeedPremium) {\n      return;\n    }\n\n    if (getIsHeavyAnimating()) {\n      setTimeout(focusInput, FOCUS_DELAY_MS);\n      return;\n    }\n\n    focusEditableElement(inputRef.current!);\n  });\n\n  const handleCloseTextFormatter = useLastCallback(() => {\n    closeTextFormatter();\n    clearSelection();\n  });\n\n  function checkSelection() {\n    // Disable the formatter on iOS devices for now.\n    if (IS_IOS) {\n      return false;\n    }\n\n    const selection = window.getSelection();\n    if (!selection || !selection.rangeCount || isContextMenuOpenRef.current) {\n      closeTextFormatter();\n      if (IS_ANDROID) {\n        setIsTextFormatterDisabled(false);\n      }\n      return false;\n    }\n\n    const selectionRange = selection.getRangeAt(0);\n    const selectedText = selectionRange.toString().trim();\n    if (\n      shouldSuppressTextFormatter\n      || !isSelectionInsideInput(selectionRange, editableInputId || EDITABLE_INPUT_ID)\n      || !selectedText\n      || parseEmojiOnlyString(selectedText)\n      || !selectionRange.START_TO_END\n    ) {\n      closeTextFormatter();\n      return false;\n    }\n\n    return true;\n  }\n\n  function processSelection() {\n    if (!checkSelection()) {\n      return;\n    }\n\n    if (isTextFormatterDisabled) {\n      return;\n    }\n\n    const selectionRange = window.getSelection()!.getRangeAt(0);\n    const selectionRect = selectionRange.getBoundingClientRect();\n    const scrollerRect = inputRef.current!.closest<HTMLDivElement>(`.${SCROLLER_CLASS}`)!.getBoundingClientRect();\n\n    let x = (selectionRect.left + selectionRect.width / 2) - scrollerRect.left;\n\n    if (x < TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = TEXT_FORMATTER_SAFE_AREA_PX;\n    } else if (x > scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX) {\n      x = scrollerRect.width - TEXT_FORMATTER_SAFE_AREA_PX;\n    }\n\n    setTextFormatterAnchorPosition({\n      x,\n      y: selectionRect.top - scrollerRect.top,\n    });\n\n    setSelectedRange(selectionRange);\n    openTextFormatter();\n  }\n\n  function processSelectionWithTimeout() {\n    if (selectionTimeoutRef.current) {\n      window.clearTimeout(selectionTimeoutRef.current);\n    }\n    // Small delay to allow browser properly recalculate selection\n    selectionTimeoutRef.current = window.setTimeout(processSelection, SELECTION_RECALCULATE_DELAY_MS);\n  }\n\n  function handleMouseDown(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (e.button !== 2) {\n      const listenerEl = e.currentTarget.closest(`.${INPUT_WRAPPER_CLASS}`) || e.target;\n\n      listenerEl.addEventListener('mouseup', processSelectionWithTimeout, { once: true });\n      return;\n    }\n\n    if (isContextMenuOpenRef.current) {\n      return;\n    }\n\n    isContextMenuOpenRef.current = true;\n\n    function handleCloseContextMenu(e2: KeyboardEvent | MouseEvent) {\n      if (e2 instanceof KeyboardEvent && e2.key !== 'Esc' && e2.key !== 'Escape') {\n        return;\n      }\n\n      setTimeout(() => {\n        isContextMenuOpenRef.current = false;\n      }, CONTEXT_MENU_CLOSE_DELAY_MS);\n\n      window.removeEventListener('keydown', handleCloseContextMenu);\n      window.removeEventListener('mousedown', handleCloseContextMenu);\n    }\n\n    document.addEventListener('mousedown', handleCloseContextMenu);\n    document.addEventListener('keydown', handleCloseContextMenu);\n  }\n\n  function handleKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    // https://levelup.gitconnected.com/javascript-events-handlers-keyboard-and-load-events-1b3e46a6b0c3#1960\n    const { isComposing } = e;\n\n    const html = getHtml();\n    if (!isComposing && !html && (e.metaKey || e.ctrlKey)) {\n      const targetIndexDelta = e.key === 'ArrowDown' ? 1 : e.key === 'ArrowUp' ? -1 : undefined;\n      if (targetIndexDelta) {\n        e.preventDefault();\n\n        replyToNextMessage({ targetIndexDelta });\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && e.shiftKey) {\n      const selection = window.getSelection();\n      if (!selection || !selection.rangeCount) return;\n  \n      const range = selection.getRangeAt(0);\n      const blockquote = (range.startContainer instanceof HTMLElement ? range.startContainer : range.startContainer.parentElement)?.closest('blockquote');\n      \n      if (blockquote) {\n        // Count consecutive br elements at the end\n        let lastNode = blockquote.lastChild;\n        let brCount = 0;\n        while (lastNode && (\n          lastNode.nodeName === 'BR' || \n          (lastNode.nodeType === Node.TEXT_NODE && !lastNode.textContent?.trim())\n        )) {\n          if (lastNode.nodeName === 'BR' || lastNode.textContent === '\\n') brCount++;\n          lastNode = lastNode.previousSibling;\n        }\n  \n        e.preventDefault();\n        if (brCount >= 3) {\n          // Remove the last two <br> elements\n          for (let i = 0; i < 3; i++) {\n            blockquote.lastChild && blockquote.removeChild(blockquote.lastChild);\n          }\n  \n          // Insert new line break after blockquote\n          const br = document.createElement('br');\n          blockquote.parentNode?.insertBefore(br, blockquote.nextSibling);\n          \n          // Set cursor after the new line break\n          const newRange = document.createRange();\n          newRange.setStartAfter(br);\n          newRange.collapse(true);\n          selection.removeAllRanges();\n          selection.addRange(newRange);\n        } else {\n          document.execCommand('insertLineBreak');\n        }\n        handleChange({ currentTarget: inputRef.current! } as React.ChangeEvent<HTMLDivElement>);\n        return;\n      }\n    }\n\n    if (!isComposing && e.key === 'Enter' && !e.shiftKey) {\n      if (\n        !isMobileDevice\n        && (\n          (messageSendKeyCombo === 'enter' && !e.shiftKey)\n          || (messageSendKeyCombo === 'ctrl-enter' && (e.ctrlKey || e.metaKey))\n        )\n      ) {\n        e.preventDefault();\n\n        closeTextFormatter();\n        onSend();\n      }\n    } else if (!isComposing && e.key === 'ArrowUp' && !html && !e.metaKey && !e.ctrlKey && !e.altKey) {\n      e.preventDefault();\n      editLastMessage();\n    } else {\n      e.target.addEventListener('keyup', processSelectionWithTimeout, { once: true });\n    }\n  }\n\n  function handleChange(e: ChangeEvent<HTMLDivElement>) {\n    const { innerHTML, textContent } = e.currentTarget;\n\n    onUpdate(innerHTML === SAFARI_BR ? '' : innerHTML);\n\n    // Reset focus on the input to remove any active styling when input is cleared\n    if (\n      !IS_TOUCH_ENV\n      && (!textContent || !textContent.length)\n      // When emojis are not supported, innerHTML contains an emoji img tag that doesn't exist in the textContext\n      && !(!IS_EMOJI_SUPPORTED && innerHTML.includes('emoji-small'))\n      && !(innerHTML.includes('custom-emoji'))\n    ) {\n      const selection = window.getSelection()!;\n      if (selection) {\n        inputRef.current!.blur();\n        selection.removeAllRanges();\n        focusEditableElement(inputRef.current!, true);\n      }\n    }\n  }\n\n  function handleAndroidContextMenu(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (!checkSelection()) {\n      return;\n    }\n\n    setIsTextFormatterDisabled(!isTextFormatterDisabled);\n\n    if (!isTextFormatterDisabled) {\n      e.preventDefault();\n      e.stopPropagation();\n\n      processSelection();\n    } else {\n      closeTextFormatter();\n    }\n  }\n\n  function handleClick() {\n    if (isAttachmentModalInput || canSendPlainText || (isStoryInput && isNeedPremium)) return;\n    showAllowedMessageTypesNotification({ chatId });\n  }\n\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal());\n\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    if (canAutoFocus) {\n      focusInput();\n    }\n  }, [chatId, focusInput, replyInfo, canAutoFocus]);\n\n  useEffect(() => {\n    if (\n      !chatId\n      || editableInputId !== EDITABLE_INPUT_ID\n      || noFocusInterception\n      || isMobileDevice\n      || isSelectModeActive\n    ) {\n      return undefined;\n    }\n\n    const handleDocumentKeyDown = (e: KeyboardEvent) => {\n      if (getIsDirectTextInputDisabled()) {\n        return;\n      }\n\n      const { key } = e;\n      const target = e.target as HTMLElement | undefined;\n\n      if (!target || IGNORE_KEYS.includes(key)) {\n        return;\n      }\n\n      const input = inputRef.current!;\n      const isSelectionCollapsed = document.getSelection()?.isCollapsed;\n\n      if (\n        ((key.startsWith('Arrow') || (e.shiftKey && key === 'Shift')) && !isSelectionCollapsed)\n        || (e.code === 'KeyC' && (e.ctrlKey || e.metaKey) && target.tagName !== 'INPUT')\n      ) {\n        return;\n      }\n\n      if (\n        input\n        && target !== input\n        && target.tagName !== 'INPUT'\n        && target.tagName !== 'TEXTAREA'\n        && !target.isContentEditable\n      ) {\n        focusEditableElement(input, true, true);\n\n        const newEvent = new KeyboardEvent(e.type, e as any);\n        input.dispatchEvent(newEvent);\n      }\n    };\n\n    document.addEventListener('keydown', handleDocumentKeyDown, true);\n\n    return () => {\n      document.removeEventListener('keydown', handleDocumentKeyDown, true);\n    };\n  }, [chatId, editableInputId, isMobileDevice, isSelectModeActive, noFocusInterception]);\n\n  useEffect(() => {\n    const captureFirstTab = debounce((e: KeyboardEvent) => {\n      if (e.key === 'Tab' && !getIsDirectTextInputDisabled()) {\n        e.preventDefault();\n        requestMutation(focusInput);\n      }\n    }, TAB_INDEX_PRIORITY_TIMEOUT, true, false);\n\n    return captureKeyboardListeners({ onTab: captureFirstTab });\n  }, [focusInput]);\n\n  useEffect(() => {\n    const input = inputRef.current!;\n\n    function suppressFocus() {\n      input.blur();\n    }\n\n    if (shouldSuppressFocus) {\n      input.addEventListener('focus', suppressFocus);\n    }\n\n    return () => {\n      input.removeEventListener('focus', suppressFocus);\n    };\n  }, [shouldSuppressFocus]);\n\n  const isTouched = useDerivedState(() => Boolean(isActive && getHtml()), [isActive, getHtml]);\n\n  const className = buildClassName(\n    'form-control allow-selection',\n    isTouched && 'touched',\n    shouldSuppressFocus && 'focus-disabled',\n  );\n\n  const inputScrollerContentClass = buildClassName('input-scroller-content', isNeedPremium && 'is-need-premium');\n\n  return (\n    <div id={id} onClick={shouldSuppressFocus ? onSuppressedFocus : undefined} dir={lang.isRtl ? 'rtl' : undefined}>\n      <div\n        className={buildClassName('custom-scroll', SCROLLER_CLASS, isNeedPremium && 'is-need-premium')}\n        onScroll={onScroll}\n        onClick={!isAttachmentModalInput && !canSendPlainText ? handleClick : undefined}\n      >\n        <div className={inputScrollerContentClass}>\n          <div\n            ref={inputRef}\n            id={editableInputId || EDITABLE_INPUT_ID}\n            className={className}\n            contentEditable={isAttachmentModalInput || canSendPlainText}\n            role=\"textbox\"\n            dir=\"auto\"\n            tabIndex={0}\n            onClick={focusInput}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown}\n            onMouseDown={handleMouseDown}\n            onContextMenu={IS_ANDROID ? handleAndroidContextMenu : undefined}\n            onTouchCancel={IS_ANDROID ? processSelectionWithTimeout : undefined}\n            aria-label={placeholder}\n            onFocus={!isNeedPremium ? onFocus : undefined}\n            onBlur={!isNeedPremium ? onBlur : undefined}\n          />\n          {!forcedPlaceholder && (\n            <span\n              className={buildClassName(\n                'placeholder-text',\n                !isAttachmentModalInput && !canSendPlainText && 'with-icon',\n                isNeedPremium && 'is-need-premium',\n              )}\n              dir=\"auto\"\n            >\n              {!isAttachmentModalInput && !canSendPlainText\n                && <Icon name=\"lock-badge\" className=\"placeholder-icon\" />}\n              {shouldDisplayTimer ? (\n                <TextTimer langKey={timedPlaceholderLangKey!} endsAt={timedPlaceholderDate!} onEnd={handleTimerEnd} />\n              ) : placeholder}\n              {isStoryInput && isNeedPremium && (\n                <Button className=\"unlock-button\" size=\"tiny\" color=\"adaptive\" onClick={handleOpenPremiumModal}>\n                  {lang('StoryRepliesLockedButton')}\n                </Button>\n              )}\n            </span>\n          )}\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          <div ref={absoluteContainerRef} className=\"absolute-video-container\" />\n        </div>\n      </div>\n      <div\n        ref={scrollerCloneRef}\n        className={buildClassName('custom-scroll',\n          SCROLLER_CLASS,\n          'clone',\n          isNeedPremium && 'is-need-premium')}\n      >\n        <div className={inputScrollerContentClass}>\n          <div ref={cloneRef} className={buildClassName(className, 'clone')} dir=\"auto\" />\n        </div>\n      </div>\n      {captionLimit !== undefined && (\n        <div className=\"max-length-indicator\" dir=\"auto\">\n          {captionLimit}\n        </div>\n      )}\n      <TextFormatter\n        isOpen={isTextFormatterOpen}\n        anchorPosition={textFormatterAnchorPosition}\n        selectedRange={selectedRange}\n        setSelectedRange={setSelectedRange}\n        onClose={handleCloseTextFormatter}\n      />\n      {forcedPlaceholder && <span className=\"forced-placeholder\">{renderText(forcedPlaceholder!)}</span>}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }: OwnProps): StateProps => {\n    const { messageSendKeyCombo } = global.settings.byKey;\n\n    return {\n      messageSendKeyCombo,\n      replyInfo: chatId && threadId ? selectDraft(global, chatId, threadId)?.replyInfo : undefined,\n      isSelectModeActive: selectIsInSelectMode(global),\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(MessageInput));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './SymbolMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst SymbolMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const SymbolMenu = useModuleLoader(Bundles.Extra, 'SymbolMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return SymbolMenu ? <SymbolMenu {...props} /> : undefined;\n};\n\nexport default SymbolMenuAsync;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../../types';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_MODAL_CSS_SELECTOR } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ResponsiveHoverButton from '../../ui/ResponsiveHoverButton';\nimport Spinner from '../../ui/Spinner';\nimport SymbolMenu from './SymbolMenu.async';\n\nconst MOBILE_KEYBOARD_HIDE_DELAY_MS = 100;\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isMobile?: boolean;\n  isReady?: boolean;\n  isSymbolMenuOpen?: boolean;\n  canSendGifs?: boolean;\n  canSendStickers?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  forceDarkTheme?: boolean;\n  openSymbolMenu: VoidFunction;\n  closeSymbolMenu: VoidFunction;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  closeBotCommandMenu?: VoidFunction;\n  closeSendAsMenu?: VoidFunction;\n  isSymbolMenuForced?: boolean;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  className?: string;\n  inputCssSelector?: string;\n};\n\nconst SymbolMenuButton: FC<OwnProps> = ({\n  chatId,\n  threadId,\n  isMobile,\n  canSendGifs,\n  canSendStickers,\n  isMessageComposer,\n  isReady,\n  isSymbolMenuOpen,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  isSymbolMenuForced,\n  className,\n  forceDarkTheme,\n  inputCssSelector = EDITABLE_INPUT_CSS_SELECTOR,\n  openSymbolMenu,\n  closeSymbolMenu,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  closeBotCommandMenu,\n  closeSendAsMenu,\n}) => {\n  const {\n    setStickerSearchQuery,\n    setGifSearchQuery,\n    addRecentEmoji,\n    addRecentCustomEmoji,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const triggerRef = useRef<HTMLDivElement>(null);\n\n  const [isSymbolMenuLoaded, onSymbolMenuLoadingComplete] = useFlag();\n  const [contextMenuAnchor, setContextMenuAnchor] = useState<IAnchorPosition | undefined>(undefined);\n\n  const symbolMenuButtonClassName = buildClassName(\n    'mobile-symbol-menu-button',\n    !isReady && 'not-ready',\n    isSymbolMenuLoaded\n      ? (isSymbolMenuOpen && 'menu-opened')\n      : (isSymbolMenuOpen && 'is-loading'),\n  );\n\n  const handleActivateSymbolMenu = useLastCallback(() => {\n    closeBotCommandMenu?.();\n    closeSendAsMenu?.();\n    openSymbolMenu();\n    const triggerEl = triggerRef.current;\n    if (!triggerEl) return;\n    const { x, y } = triggerEl.getBoundingClientRect();\n    setContextMenuAnchor({ x, y });\n  });\n\n  const handleSearchOpen = useLastCallback((type: 'stickers' | 'gifs') => {\n    if (type === 'stickers') {\n      setStickerSearchQuery({ query: '' });\n      setGifSearchQuery({ query: undefined });\n    } else {\n      setGifSearchQuery({ query: '' });\n      setStickerSearchQuery({ query: undefined });\n    }\n  });\n\n  const handleSymbolMenuOpen = useLastCallback(() => {\n    const messageInput = document.querySelector<HTMLDivElement>(\n      isAttachmentModal ? EDITABLE_INPUT_MODAL_CSS_SELECTOR : inputCssSelector,\n    );\n\n    if (!isMobile || messageInput !== document.activeElement) {\n      openSymbolMenu();\n      return;\n    }\n\n    messageInput?.blur();\n    setTimeout(() => {\n      closeBotCommandMenu?.();\n      openSymbolMenu();\n    }, MOBILE_KEYBOARD_HIDE_DELAY_MS);\n  });\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getRootElement = useLastCallback(() => triggerRef.current?.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => document.querySelector('#portals .SymbolMenu .bubble'));\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n\n  return (\n    <>\n      {isMobile ? (\n        <Button\n          className={symbolMenuButtonClassName}\n          round\n          color=\"translucent\"\n          onClick={isSymbolMenuOpen ? closeSymbolMenu : handleSymbolMenuOpen}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <Icon name=\"smile\" />\n          <Icon name=\"keyboard\" />\n          {isSymbolMenuOpen && !isSymbolMenuLoaded && <Spinner color=\"gray\" />}\n        </Button>\n      ) : (\n        <ResponsiveHoverButton\n          className={buildClassName('symbol-menu-button', isSymbolMenuOpen && 'activated')}\n          round\n          color=\"translucent\"\n          onActivate={handleActivateSymbolMenu}\n          ariaLabel=\"Choose emoji, sticker or GIF\"\n        >\n          <div ref={triggerRef} className=\"symbol-menu-trigger\" />\n          <Icon name=\"smile\" />\n        </ResponsiveHoverButton>\n      )}\n\n      <SymbolMenu\n        chatId={chatId}\n        threadId={threadId}\n        isOpen={isSymbolMenuOpen || Boolean(isSymbolMenuForced)}\n        canSendGifs={canSendGifs}\n        canSendStickers={canSendStickers}\n        isMessageComposer={isMessageComposer}\n        idPrefix={idPrefix}\n        onLoad={onSymbolMenuLoadingComplete}\n        onClose={closeSymbolMenu}\n        onEmojiSelect={onEmojiSelect}\n        onStickerSelect={onStickerSelect}\n        onCustomEmojiSelect={onCustomEmojiSelect}\n        onGifSelect={onGifSelect}\n        onRemoveSymbol={onRemoveSymbol}\n        onSearchOpen={handleSearchOpen}\n        addRecentEmoji={addRecentEmoji}\n        addRecentCustomEmoji={addRecentCustomEmoji}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n        className={buildClassName(className, forceDarkTheme && 'component-theme-dark')}\n        anchor={isAttachmentModal ? contextMenuAnchor : undefined}\n        getTriggerElement={isAttachmentModal ? getTriggerElement : undefined}\n        getRootElement={isAttachmentModal ? getRootElement : undefined}\n        getMenuElement={isAttachmentModal ? getMenuElement : undefined}\n        getLayout={isAttachmentModal ? getLayout : undefined}\n      />\n    </>\n  );\n};\n\nexport default memo(SymbolMenuButton);\n","import type { ApiAttachment } from '../../../../api/types';\n\nimport {\n  GIF_MIME_TYPE,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../../config';\nimport { parseAudioMetadata } from '../../../../util/audio';\nimport {\n  createPosterForVideo,\n  preloadImage,\n  preloadVideo,\n} from '../../../../util/files';\nimport { scaleImage } from '../../../../util/imageResize';\n\nconst MAX_QUICK_IMG_SIZE = 1280; // px\nconst MAX_THUMB_IMG_SIZE = 40; // px\nconst MAX_ASPECT_RATIO = 20;\nconst FILE_EXT_REGEX = /\\.[^/.]+$/;\n\nexport default async function buildAttachment(\n  filename: string, blob: Blob, options?: Partial<ApiAttachment>,\n): Promise<ApiAttachment> {\n  const blobUrl = URL.createObjectURL(blob);\n  const { type: mimeType, size } = blob;\n  let quick;\n  let audio;\n  let previewBlobUrl;\n  let shouldSendAsFile;\n\n  if (SUPPORTED_PHOTO_CONTENT_TYPES.has(mimeType)) {\n    const img = await preloadImage(blobUrl);\n    const { width, height } = img;\n    shouldSendAsFile = !validateAspectRatio(width, height);\n\n    const shouldShrink = Math.max(width, height) > MAX_QUICK_IMG_SIZE;\n    const isGif = mimeType === GIF_MIME_TYPE;\n\n    if (!shouldSendAsFile) {\n      if (!options?.compressedBlobUrl && !isGif && (shouldShrink || mimeType !== 'image/jpeg')) {\n        const resizedUrl = await scaleImage(\n          blobUrl, shouldShrink ? MAX_QUICK_IMG_SIZE / Math.max(width, height) : 1, 'image/jpeg',\n        );\n        URL.revokeObjectURL(blobUrl);\n        return buildAttachment(filename, blob, {\n          compressedBlobUrl: resizedUrl,\n        });\n      }\n\n      if (mimeType === 'image/jpeg') {\n        filename = filename.replace(FILE_EXT_REGEX, '.jpg');\n      }\n\n      quick = { width, height };\n    }\n\n    const shouldShrinkPreview = Math.max(width, height) > MAX_THUMB_IMG_SIZE;\n    if (shouldShrinkPreview) {\n      previewBlobUrl = await scaleImage(\n        blobUrl, MAX_THUMB_IMG_SIZE / Math.max(width, height), 'image/jpeg',\n      );\n    } else {\n      previewBlobUrl = blobUrl;\n    }\n  } else if (SUPPORTED_VIDEO_CONTENT_TYPES.has(mimeType)) {\n    try {\n      const { videoWidth: width, videoHeight: height, duration } = await preloadVideo(blobUrl);\n      shouldSendAsFile = !validateAspectRatio(width, height);\n      if (!shouldSendAsFile) {\n        quick = { width: width!, height: height!, duration: duration! };\n      }\n    } catch (err) {\n      shouldSendAsFile = true;\n    }\n\n    previewBlobUrl = await createPosterForVideo(blobUrl);\n  } else if (SUPPORTED_AUDIO_CONTENT_TYPES.has(mimeType)) {\n    const {\n      duration, title, performer, coverUrl,\n    } = await parseAudioMetadata(blobUrl);\n    audio = {\n      duration: duration || 0,\n      title,\n      performer,\n    };\n    previewBlobUrl = coverUrl;\n  }\n\n  return {\n    blobUrl,\n    filename,\n    mimeType,\n    size,\n    quick,\n    audio,\n    previewBlobUrl,\n    shouldSendAsFile: shouldSendAsFile || undefined,\n    uniqueId: `${Date.now()}-${Math.random()}`,\n    ...options,\n  };\n}\n\nexport function prepareAttachmentsToSend(\n  attachments: ApiAttachment[], shouldSendCompressed?: boolean,\n): ApiAttachment[] {\n  return attachments.map((attach) => {\n    if (shouldSendCompressed) {\n      if (attach.compressedBlobUrl) {\n        return {\n          ...attach,\n          blobUrl: attach.compressedBlobUrl,\n        };\n      }\n      return attach;\n    }\n\n    return {\n      ...attach,\n      shouldSendAsFile: !(attach.voice || attach.audio) || undefined,\n      shouldSendAsSpoiler: undefined,\n    };\n  });\n}\n\nfunction validateAspectRatio(width: number, height: number) {\n  const maxAspectRatio = Math.max(width, height) / Math.min(width, height);\n  return maxAspectRatio <= MAX_ASPECT_RATIO;\n}\n","type AudioMetadata = {\n  title?: string;\n  performer?: string;\n  duration?: number;\n  coverUrl?: string;\n};\n\nexport async function parseAudioMetadata(url: string): Promise<AudioMetadata> {\n  const { fetchFromUrl, selectCover } = await import('../lib/music-metadata-browser');\n  const metadata = await fetchFromUrl(url);\n  const { common: { title, artist, picture }, format: { duration } } = metadata;\n\n  const cover = selectCover(picture);\n  const coverBlob = cover ? new Blob([cover.data], { type: cover.format }) : undefined;\n  const coverUrl = coverBlob ? URL.createObjectURL(coverBlob) : undefined;\n\n  return {\n    title,\n    performer: artist,\n    duration,\n    coverUrl,\n  };\n}\n","import { validateFiles } from '../../../../util/files';\n\nexport default async function getFilesFromDataTransferItems(dataTransferItems: DataTransferItemList) {\n  const files: File[] = [];\n\n  function traverseFileTreePromise(entry: FileSystemEntry | File, item: DataTransferItem) {\n    return new Promise((resolve) => {\n      if (entry instanceof File) {\n        files.push(entry);\n        resolve(entry);\n      } else if (entry.isFile) {\n        const itemFile = item.getAsFile();\n        (entry as FileSystemFileEntry).file((file) => {\n          files.push(file);\n          resolve(file);\n        }, () => {\n          // iOS Safari throws an error \"NotFoundError: Path does not exist\" for files from the clipboard\n          // https://stackoverflow.com/a/50059309\n          if (itemFile) {\n            files.push(itemFile);\n          }\n          resolve(itemFile);\n        });\n      } else if (entry.isDirectory) {\n        const dirReader = (entry as FileSystemDirectoryEntry).createReader();\n        dirReader.readEntries((entries) => {\n          const entriesPromises = [];\n          for (let i = 0; i < entries.length; i++) {\n            entriesPromises.push(traverseFileTreePromise(entries[i], item));\n          }\n          resolve(Promise.all(entriesPromises));\n        });\n      }\n    });\n  }\n\n  const entriesPromises = [];\n  for (let i = 0; i < dataTransferItems.length; i++) {\n    const item = dataTransferItems[i];\n    if (item.kind === 'file') {\n      const entry = item.webkitGetAsEntry() || item.getAsFile();\n      if (entry) {\n        entriesPromises.push(traverseFileTreePromise(entry, item));\n      }\n    }\n  }\n\n  await Promise.all(entriesPromises);\n\n  return validateFiles(files);\n}\n","const RE_BR = /(<br>|<br\\s?\\/>)/g;\nconst RE_SPACE = /(&nbsp;|\\u00A0)/g;\nconst RE_CLEAN_HTML = /(<div>|<\\/div>)/gi;\nconst RE_EXTRA_NEW_LINE = /\\n$/i;\n\nexport function prepareForRegExp(html: string) {\n  return html\n    .replace(RE_SPACE, ' ')\n    .replace(RE_BR, '\\n')\n    .replace(RE_CLEAN_HTML, '')\n    .replace(RE_EXTRA_NEW_LINE, '');\n}\n","import React, { type TeactNode } from '../../../../lib/teact/teact';\n\nimport type { ApiKeyboardButton } from '../../../../api/types';\nimport type { LangFn } from '../../../../util/localization';\n\nimport { STARS_ICON_PLACEHOLDER } from '../../../../config';\nimport { replaceWithTeact } from '../../../../util/replaceWithTeact';\nimport renderText from '../../../common/helpers/renderText';\n\nimport { type OldLangFn } from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nexport default function renderKeyboardButtonText(lang: OldLangFn | LangFn, button: ApiKeyboardButton): TeactNode {\n  if (button.type === 'receipt') {\n    return lang('PaymentReceipt');\n  }\n\n  if (button.type === 'buy') {\n    return replaceWithTeact(button.text, STARS_ICON_PLACEHOLDER, <Icon className=\"star-currency-icon\" name=\"star\" />);\n  }\n\n  return renderText(button.text);\n}\n","const MAX_NESTING_PARENTS = 5;\n\nexport function isSelectionInsideInput(selectionRange: Range, inputId: string) {\n  const { commonAncestorContainer } = selectionRange;\n  let parentNode: HTMLElement | null = commonAncestorContainer as HTMLElement;\n  let iterations = 1;\n  while (parentNode && parentNode.id !== inputId && iterations < MAX_NESTING_PARENTS) {\n    parentNode = parentNode.parentElement;\n    iterations++;\n  }\n\n  return Boolean(parentNode && parentNode.id === inputId);\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EMOJI_IMG_REGEX } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport twemojiRegex from '../../../../lib/twemojiRegex';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { getHtmlBeforeSelection } from '../../../../util/selection';\nimport { IS_EMOJI_SUPPORTED } from '../../../../util/windowEnvironment';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useDerivedState from '../../../../hooks/useDerivedState';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\nconst RE_ENDS_ON_EMOJI = new RegExp(`(${twemojiRegex.source})$`, 'g');\nconst RE_ENDS_ON_EMOJI_IMG = new RegExp(`${EMOJI_IMG_REGEX.source}$`, 'g');\n\nexport default function useCustomEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  customEmojis?: ApiSticker[],\n) {\n  const { loadCustomEmojiForEmoji, clearCustomEmojiForEmoji } = getActions();\n\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractLastEmojiThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !html || !getSelectionRange()?.collapsed) return undefined;\n\n    const hasEmoji = html.match(IS_EMOJI_SUPPORTED ? twemojiRegex : EMOJI_IMG_REGEX);\n    if (!hasEmoji) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return htmlBeforeSelection.match(IS_EMOJI_SUPPORTED ? RE_ENDS_ON_EMOJI : RE_ENDS_ON_EMOJI_IMG)?.[0];\n  }, [getHtml, getSelectionRange, inputRef, isEnabled], THROTTLE);\n\n  const getLastEmoji = useDerivedSignal(\n    extractLastEmojiThrottled, [extractLastEmojiThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const isActive = useDerivedState(() => Boolean(getLastEmoji()), [getLastEmoji]);\n  const hasCustomEmojis = Boolean(customEmojis?.length);\n\n  useEffect(() => {\n    if (!isEnabled || !isActive) return;\n\n    const lastEmoji = getLastEmoji();\n    if (lastEmoji) {\n      if (!hasCustomEmojis) {\n        loadCustomEmojiForEmoji({\n          emoji: IS_EMOJI_SUPPORTED ? lastEmoji : lastEmoji.match(/.+alt=\"(.+)\"/)?.[1]!,\n        });\n      }\n    } else {\n      clearCustomEmojiForEmoji();\n    }\n  }, [isEnabled, isActive, getLastEmoji, hasCustomEmojis, clearCustomEmojiForEmoji, loadCustomEmojiForEmoji]);\n\n  const insertCustomEmoji = useLastCallback((emoji: ApiSticker) => {\n    const lastEmoji = getLastEmoji();\n    if (!isEnabled || !lastEmoji) return;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const regexText = IS_EMOJI_SUPPORTED\n      ? lastEmoji\n      // Escape regexp special chars\n      : lastEmoji.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n    const regex = new RegExp(`(${regexText})\\\\1*$`, '');\n    const matched = htmlBeforeSelection.match(regex)![0];\n    const count = matched.length / lastEmoji.length;\n    const newHtml = htmlBeforeSelection.replace(regex, buildCustomEmojiHtml(emoji).repeat(count));\n    const htmlAfterSelection = inputEl.innerHTML.substring(htmlBeforeSelection.length);\n\n    setHtml(`${newHtml}${htmlAfterSelection}`);\n\n    requestNextMutation(() => {\n      focusEditableElement(inputEl, true, true);\n    });\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isCustomEmojiTooltipOpen: Boolean(isActive && hasCustomEmojis && !isManuallyClosed),\n    closeCustomEmojiTooltip: markManuallyClosed,\n    insertCustomEmoji,\n  };\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { EmojiData, EmojiModule, EmojiRawData } from '../../../../util/emoji/emoji';\nimport type { Signal } from '../../../../util/signals';\n\nimport { EDITABLE_INPUT_CSS_SELECTOR, EDITABLE_INPUT_ID } from '../../../../config';\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { selectCustomEmojiForEmojis } from '../../../../global/selectors';\nimport { uncompressEmoji } from '../../../../util/emoji/emoji';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport {\n  buildCollectionByKey, mapValues, pickTruthy, unique, uniqueByField,\n} from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport memoized from '../../../../util/memoized';\nimport renderText from '../../../common/helpers/renderText';\nimport { buildCustomEmojiHtml } from '../helpers/customEmoji';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\ninterface Library {\n  keywords: string[];\n  byKeyword: Record<string, Emoji[]>;\n  names: string[];\n  byName: Record<string, Emoji[]>;\n  maxKeyLength: number;\n}\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nlet RE_EMOJI_SEARCH: RegExp;\nlet RE_LOWERCASE_TEST: RegExp;\nconst EMOJIS_LIMIT = 36;\nconst FILTER_MIN_LENGTH = 2;\n\nconst THROTTLE = 300;\n\nconst prepareRecentEmojisMemo = memoized(prepareRecentEmojis);\nconst prepareLibraryMemo = memoized(prepareLibrary);\nconst searchInLibraryMemo = memoized(searchInLibrary);\n\ntry {\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\p{L}\\p{N}]*$/gui;\n  RE_LOWERCASE_TEST = /\\p{Ll}/u;\n} catch (e) {\n  // Support for older versions of firefox\n  RE_EMOJI_SEARCH = /(^|\\s):(?!\\s)[-+_:'\\s\\d\\wа-яёґєії]*$/gi;\n  RE_LOWERCASE_TEST = /[a-zяёґєії]/;\n}\n\nexport default function useEmojiTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  inputId = EDITABLE_INPUT_ID,\n  recentEmojiIds: string[],\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n) {\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const [byId, setById] = useState<Record<string, Emoji> | undefined>();\n  const [filteredEmojis, setFilteredEmojis] = useState<Emoji[]>(MEMO_EMPTY_ARRAY);\n  const [filteredCustomEmojis, setFilteredCustomEmojis] = useState<ApiSticker[]>(MEMO_EMPTY_ARRAY);\n\n  // Initialize data on first render\n  useEffect(() => {\n    if (!isEnabled) return;\n\n    function exec() {\n      setById(emojiData.emojis);\n    }\n\n    if (emojiData) {\n      exec();\n    } else {\n      ensureEmojiData().then(exec);\n    }\n  }, [isEnabled]);\n\n  const detectEmojiCodeThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    return isEnabled && html.includes(':') ? prepareForRegExp(html).match(RE_EMOJI_SEARCH)?.[0].trim() : undefined;\n  }, [getHtml, isEnabled], THROTTLE);\n\n  const getEmojiCode = useDerivedSignal(\n    detectEmojiCodeThrottled, [detectEmojiCodeThrottled, getHtml], true,\n  );\n\n  const updateFiltered = useLastCallback((emojis: Emoji[]) => {\n    setFilteredEmojis(emojis);\n\n    if (emojis === MEMO_EMPTY_ARRAY) {\n      setFilteredCustomEmojis(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const nativeEmojis = emojis.map((emoji) => emoji.native);\n    const customEmojis = uniqueByField(\n      selectCustomEmojiForEmojis(getGlobal(), nativeEmojis),\n      'id',\n    );\n    setFilteredCustomEmojis(customEmojis);\n  });\n\n  const insertEmoji = useLastCallback((emoji: string | ApiSticker, isForce = false) => {\n    const html = getHtml();\n    if (!html) return;\n\n    const atIndex = html.lastIndexOf(':', isForce ? html.lastIndexOf(':') - 1 : undefined);\n\n    if (atIndex !== -1) {\n      const emojiHtml = typeof emoji === 'string' ? renderText(emoji, ['emoji_html']) : buildCustomEmojiHtml(emoji);\n      setHtml(`${html.substring(0, atIndex)}${emojiHtml}`);\n\n      const messageInput = inputId === EDITABLE_INPUT_ID\n        ? document.querySelector<HTMLDivElement>(EDITABLE_INPUT_CSS_SELECTOR)!\n        : document.getElementById(inputId) as HTMLDivElement;\n\n      requestNextMutation(() => {\n        focusEditableElement(messageInput, true, true);\n      });\n    }\n\n    updateFiltered(MEMO_EMPTY_ARRAY);\n  });\n\n  useEffect(() => {\n    const emojiCode = getEmojiCode();\n    if (!emojiCode || !byId) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    const newShouldAutoInsert = emojiCode.length > 2 && emojiCode.endsWith(':');\n\n    const filter = emojiCode.substring(1, newShouldAutoInsert ? 1 + emojiCode.length - 2 : undefined);\n    let matched: Emoji[] = MEMO_EMPTY_ARRAY;\n\n    if (!filter) {\n      matched = prepareRecentEmojisMemo(byId, recentEmojiIds, EMOJIS_LIMIT);\n    } else if ((filter.length === 1 && RE_LOWERCASE_TEST.test(filter)) || filter.length >= FILTER_MIN_LENGTH) {\n      const library = prepareLibraryMemo(byId, baseEmojiKeywords, emojiKeywords);\n      matched = searchInLibraryMemo(library, filter.toLowerCase(), EMOJIS_LIMIT);\n    }\n\n    if (!matched.length) {\n      updateFiltered(MEMO_EMPTY_ARRAY);\n      return;\n    }\n\n    if (newShouldAutoInsert) {\n      insertEmoji(matched[0].native, true);\n    } else {\n      updateFiltered(matched);\n    }\n  }, [\n    baseEmojiKeywords, byId, getEmojiCode, emojiKeywords, insertEmoji, recentEmojiIds, updateFiltered,\n  ]);\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isEmojiTooltipOpen: Boolean(filteredEmojis.length || filteredCustomEmojis.length) && !isManuallyClosed,\n    closeEmojiTooltip: markManuallyClosed,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n  };\n}\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nfunction prepareRecentEmojis(byId: Record<string, Emoji>, recentEmojiIds: string[], limit: number) {\n  if (!byId || !recentEmojiIds.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return Object.values(pickTruthy(byId, recentEmojiIds)).slice(0, limit);\n}\n\nfunction prepareLibrary(\n  byId: Record<string, Emoji>,\n  baseEmojiKeywords?: Record<string, string[]>,\n  emojiKeywords?: Record<string, string[]>,\n): Library {\n  const emojis = Object.values(byId);\n\n  const byNative = buildCollectionByKey<Emoji>(emojis, 'native');\n  const baseEmojisByKeyword = baseEmojiKeywords\n    ? mapValues(baseEmojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n  const emojisByKeyword = emojiKeywords\n    ? mapValues(emojiKeywords, (natives) => {\n      return Object.values(pickTruthy(byNative, natives));\n    })\n    : {};\n\n  const byKeyword = { ...baseEmojisByKeyword, ...emojisByKeyword };\n  const keywords = ([] as string[]).concat(Object.keys(baseEmojisByKeyword), Object.keys(emojisByKeyword));\n\n  const byName = emojis.reduce((result, emoji) => {\n    emoji.names.forEach((name) => {\n      if (!result[name]) {\n        result[name] = [];\n      }\n\n      result[name].push(emoji);\n    });\n\n    return result;\n  }, {} as Record<string, Emoji[]>);\n\n  const names = Object.keys(byName);\n  const maxKeyLength = keywords.reduce((max, keyword) => Math.max(max, keyword.length), 0);\n\n  return {\n    byKeyword,\n    keywords,\n    byName,\n    names,\n    maxKeyLength,\n  };\n}\n\nfunction searchInLibrary(library: Library, filter: string, limit: number) {\n  const {\n    byKeyword, keywords, byName, names, maxKeyLength,\n  } = library;\n\n  let matched: Emoji[] = [];\n\n  if (filter.length > maxKeyLength) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  const matchedKeywords = keywords.filter((keyword) => keyword.startsWith(filter)).sort();\n  matched = matched.concat(Object.values(pickTruthy(byKeyword!, matchedKeywords)).flat());\n\n  // Also search by names, which is useful for non-English languages\n  const matchedNames = names.filter((name) => name.startsWith(filter));\n  matched = matched.concat(Object.values(pickTruthy(byName, matchedNames)).flat());\n\n  matched = unique(matched);\n\n  if (!matched.length) {\n    return MEMO_EMPTY_ARRAY;\n  }\n\n  return matched.slice(0, limit);\n}\n","import type { RefObject } from 'react';\nimport { useEffect, useState } from '../../../../lib/teact/teact';\nimport { getGlobal } from '../../../../global';\n\nimport type { ApiChatMember, ApiUser } from '../../../../api/types';\nimport type { Signal } from '../../../../util/signals';\nimport { ApiMessageEntityTypes } from '../../../../api/types';\n\nimport { requestNextMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { filterUsersByName, getMainUsername, getUserFirstOrLastName } from '../../../../global/helpers';\nimport focusEditableElement from '../../../../util/focusEditableElement';\nimport { pickTruthy, unique } from '../../../../util/iteratees';\nimport { getCaretPosition, getHtmlBeforeSelection, setCaretPosition } from '../../../../util/selection';\nimport { prepareForRegExp } from '../helpers/prepareForRegExp';\n\nimport { useThrottledResolver } from '../../../../hooks/useAsyncResolvers';\nimport useDerivedSignal from '../../../../hooks/useDerivedSignal';\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst THROTTLE = 300;\n\nlet RE_USERNAME_SEARCH: RegExp;\ntry {\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\p{L}\\p{M}\\p{N}]*$/gui;\n} catch (e) {\n  // Support for older versions of Firefox\n  RE_USERNAME_SEARCH = /(^|\\s)@[-_\\d\\wа-яёґєії]*$/gi;\n}\n\nexport default function useMentionTooltip(\n  isEnabled: boolean,\n  getHtml: Signal<string>,\n  setHtml: (html: string) => void,\n  getSelectionRange: Signal<Range | undefined>,\n  inputRef: RefObject<HTMLDivElement>,\n  groupChatMembers?: ApiChatMember[],\n  topInlineBotIds?: string[],\n  currentUserId?: string,\n) {\n  const [filteredUsers, setFilteredUsers] = useState<ApiUser[] | undefined>();\n  const [isManuallyClosed, markManuallyClosed, unmarkManuallyClosed] = useFlag(false);\n\n  const extractUsernameTagThrottled = useThrottledResolver(() => {\n    const html = getHtml();\n    if (!isEnabled || !getSelectionRange()?.collapsed || !html.includes('@')) return undefined;\n\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputRef.current!);\n\n    return prepareForRegExp(htmlBeforeSelection).match(RE_USERNAME_SEARCH)?.[0].trim();\n  }, [isEnabled, getHtml, getSelectionRange, inputRef], THROTTLE);\n\n  const getUsernameTag = useDerivedSignal(\n    extractUsernameTagThrottled, [extractUsernameTagThrottled, getHtml, getSelectionRange], true,\n  );\n\n  const getWithInlineBots = useDerivedSignal(() => {\n    return isEnabled && getHtml().startsWith('@');\n  }, [getHtml, isEnabled]);\n\n  useEffect(() => {\n    const usernameTag = getUsernameTag();\n\n    if (!usernameTag || !(groupChatMembers || topInlineBotIds)) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!usersById) {\n      setFilteredUsers(undefined);\n      return;\n    }\n\n    const memberIds = groupChatMembers?.reduce((acc: string[], member) => {\n      if (member.userId !== currentUserId) {\n        acc.push(member.userId);\n      }\n\n      return acc;\n    }, []);\n\n    const filter = usernameTag.substring(1);\n    const filteredIds = filterUsersByName(unique([\n      ...((getWithInlineBots() && topInlineBotIds) || []),\n      ...(memberIds || []),\n    ]), usersById, filter);\n\n    setFilteredUsers(Object.values(pickTruthy(usersById, filteredIds)));\n  }, [currentUserId, groupChatMembers, topInlineBotIds, getUsernameTag, getWithInlineBots]);\n\n  const insertMention = useLastCallback((user: ApiUser, forceFocus = false) => {\n    if (!user.usernames && !getUserFirstOrLastName(user)) {\n      return;\n    }\n\n    const mainUsername = getMainUsername(user);\n    const userFirstOrLastName = getUserFirstOrLastName(user) || '';\n    const htmlToInsert = mainUsername\n      ? `@${mainUsername}`\n      : `<a\n          class=\"text-entity-link\"\n          data-entity-type=\"${ApiMessageEntityTypes.MentionName}\"\n          data-user-id=\"${user.id}\"\n          contenteditable=\"false\"\n          dir=\"auto\"\n        >${userFirstOrLastName}</a>`;\n\n    const inputEl = inputRef.current!;\n    const htmlBeforeSelection = getHtmlBeforeSelection(inputEl);\n    const fixedHtmlBeforeSelection = cleanWebkitNewLines(htmlBeforeSelection);\n    const atIndex = fixedHtmlBeforeSelection.lastIndexOf('@');\n    const shiftCaretPosition = (mainUsername ? mainUsername.length + 1 : userFirstOrLastName.length)\n      - (fixedHtmlBeforeSelection.length - atIndex);\n\n    if (atIndex !== -1) {\n      const newHtml = `${fixedHtmlBeforeSelection.substr(0, atIndex)}${htmlToInsert}&nbsp;`;\n      const htmlAfterSelection = cleanWebkitNewLines(inputEl.innerHTML).substring(fixedHtmlBeforeSelection.length);\n      const caretPosition = getCaretPosition(inputEl);\n      setHtml(`${newHtml}${htmlAfterSelection}`);\n\n      requestNextMutation(() => {\n        const newCaretPosition = caretPosition + shiftCaretPosition + 1;\n        focusEditableElement(inputEl, forceFocus);\n        if (newCaretPosition >= 0) {\n          setCaretPosition(inputEl, newCaretPosition);\n        }\n      });\n    }\n\n    setFilteredUsers(undefined);\n  });\n\n  useEffect(unmarkManuallyClosed, [unmarkManuallyClosed, getHtml]);\n\n  return {\n    isMentionTooltipOpen: Boolean(filteredUsers?.length && !isManuallyClosed),\n    closeMentionTooltip: markManuallyClosed,\n    insertMention,\n    mentionFilteredUsers: filteredUsers,\n  };\n}\n\n// Webkit replaces the line break with the `<div><br /></div>` or `<div></div>` code.\n// It is necessary to clean the html to a single form before processing.\nfunction cleanWebkitNewLines(html: string) {\n  return html.replace(/<div>(<br>|<br\\s?\\/>)?<\\/div>/gi, '<br>');\n}\n","import {\n  type RefObject,\n  useCallback,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n  useState,\n  useUnmountCleanup,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\n\nimport { requestForcedReflow, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\n\nimport useTimeout from '../../../hooks/schedulers/useTimeout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useThrottledCallback from '../../../hooks/useThrottledCallback';\n\nexport interface PaneState {\n  element?: HTMLElement;\n  height: number;\n  isOpen?: boolean;\n}\n\n// Max slide transition duration\nconst CLOSE_DURATION = 450;\nconst RESIZE_THROTTLE = 100;\n\nexport default function useHeaderPane<RefType extends HTMLElement = HTMLDivElement>({\n  ref: providedRef,\n  isOpen,\n  isDisabled,\n  withResizeObserver,\n  onStateChange,\n} : {\n  ref?: RefObject<RefType | null>;\n  isOpen?: boolean;\n  isDisabled?: boolean;\n  withResizeObserver?: boolean;\n  onStateChange?: (state: PaneState) => void;\n}) {\n  const [shouldRender, setShouldRender] = useState(isOpen);\n  // eslint-disable-next-line no-null/no-null\n  const localRef = useRef<RefType>(null);\n  const ref = providedRef || localRef;\n\n  const lastHeightRef = useRef(0);\n\n  const reset = useLastCallback(() => {\n    setShouldRender(true);\n    onStateChange?.({\n      element: undefined,\n      height: 0,\n      isOpen: false,\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) {\n      reset();\n    }\n  }, [isDisabled]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldRender(true);\n    }\n  }, [isOpen]);\n\n  useUnmountCleanup(reset);\n\n  useTimeout(() => {\n    setShouldRender(false);\n  }, !isOpen ? CLOSE_DURATION : undefined);\n\n  // Should be `useCallback` to trigger effect on deps change\n  const handleUpdate = useCallback(() => {\n    const element = ref.current;\n    if (isDisabled || !element || !shouldRender) return;\n\n    if (!isOpen) {\n      onStateChange?.({\n        element,\n        height: 0,\n        isOpen: false,\n      });\n      return;\n    }\n\n    requestForcedReflow(() => {\n      const currentHeight = element.offsetHeight;\n      lastHeightRef.current = currentHeight;\n      return () => {\n        onStateChange?.({\n          element,\n          height: currentHeight,\n          isOpen,\n        });\n      };\n    });\n  }, [isOpen, shouldRender, isDisabled, ref, onStateChange]);\n\n  const handleResize = useThrottledCallback(() => {\n    const element = ref.current;\n    if (!element) return;\n\n    const newHeight = element.offsetHeight;\n    if (newHeight === lastHeightRef.current) {\n      return;\n    }\n\n    handleUpdate();\n  }, [handleUpdate, ref], RESIZE_THROTTLE, true);\n\n  useLayoutEffect(handleUpdate, [handleUpdate]);\n\n  useResizeObserver(ref, handleResize, !withResizeObserver || !shouldRender);\n\n  return {\n    shouldRender,\n    ref,\n  };\n}\n\nexport function applyAnimationState(list: PaneState[], noTransition = false) {\n  let cumulativeHeight = 0;\n  for (let i = 0; i < list.length; i++) {\n    const state = list[i];\n    const element = state.element;\n    if (!element) {\n      continue;\n    }\n\n    const shiftPx = `${cumulativeHeight}px`;\n\n    const apply = () => {\n      setExtraStyles(element, {\n        transform: `translateY(${state.isOpen ? shiftPx : `calc(${shiftPx} - 100%)`})`,\n        zIndex: String(-i),\n        transition: noTransition ? 'none' : '',\n      });\n    };\n\n    if (!element.dataset.isPanelOpen && state.isOpen && !noTransition) {\n      // Start animation right above its final position\n      setExtraStyles(element, {\n        transform: `translateY(calc(${shiftPx} - 100%))`,\n        zIndex: String(-i),\n        transition: 'none',\n      });\n      element.dataset.isPanelOpen = 'true';\n      requestNextMutation(apply);\n    } else {\n      apply();\n    }\n\n    cumulativeHeight += state.height;\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"EVLTkrt1\",\"preview\":\"V3HabdKr\",\"linkPreview\":\"ClGe8yij\",\"media\":\"WAItYc5d\",\"nonInteractive\":\"AQWPv0bP\",\"expired\":\"tprkr7qf\",\"expiredIcon\":\"nLA7VEhv\"};","import React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessageStoryData, ApiTypeStory } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaAreaOverlay from '../../story/mediaArea/MediaAreaOverlay';\n\nimport styles from './BaseStory.module.scss';\n\ninterface OwnProps {\n  story?: ApiTypeStory | ApiMessageStoryData;\n  isPreview?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n}\n\nfunction BaseStory({\n  story, isPreview, isProtected, isConnected,\n}: OwnProps) {\n  const { openStoryViewer, loadPeerStoriesByIds, showNotification } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n  const isExpired = story && 'isDeleted' in story;\n  const isLoaded = story && 'content' in story;\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbnail = isLoaded ? (video ? video.thumbnail?.dataUri : story.content.photo?.thumbnail?.dataUri) : undefined;\n  const mediaUrl = useCurrentOrPrev(imgBlobUrl, true);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(Boolean(mediaUrl));\n  const blurredBackgroundRef = useCanvasBlur(\n    thumbnail,\n    isExpired && !isPreview,\n    isMobile && !IS_CANVAS_FILTER_SUPPORTED,\n  );\n\n  const fullClassName = buildClassName(\n    styles.root,\n    'media-inner',\n    (!isConnected || isExpired) && styles.nonInteractive,\n    isExpired && styles.expired,\n    isPreview && styles.preview,\n  );\n\n  useEffect(() => {\n    if (story && !(isLoaded || isExpired)) {\n      loadPeerStoriesByIds({ peerId: story.peerId, storyIds: [story.id] });\n    }\n  }, [story, isExpired, isLoaded]);\n\n  const handleClick = useLastCallback(() => {\n    if (isExpired) {\n      showNotification({\n        message: lang('StoryNotFound'),\n      });\n      return;\n    }\n\n    openStoryViewer({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      isSinglePeer: true,\n      isSingleStory: true,\n    });\n  });\n\n  return (\n    <div\n      className={fullClassName}\n      onClick={isConnected ? handleClick : undefined}\n    >\n      {!isExpired && isPreview && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {shouldRender && (\n        <>\n          <img\n            src={mediaUrl}\n            alt=\"\"\n            className={buildClassName(styles.media, isPreview && styles.linkPreview, transitionClassNames)}\n            draggable={false}\n          />\n          {isLoaded && <MediaAreaOverlay story={story} className={transitionClassNames} />}\n        </>\n      )}\n      {isExpired && (\n        <span>\n          <Icon name=\"story-expired\" className={styles.expiredIcon} />\n          {lang('StoryExpiredSubtitle')}\n        </span>\n      )}\n      {Boolean(video?.duration) && (\n        <div className=\"message-media-duration\">\n          {formatMediaDuration(video!.duration)}\n        </div>\n      )}\n      {isProtected && <span className=\"protector\" />}\n    </div>\n  );\n}\n\nexport default memo(BaseStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"anchor\":\"IYu2f7FM\",\"mirrorAnchor\":\"GsTZawTE\",\"root\":\"McmbiWZE\",\"mirror\":\"wNvU2uqi\"};","import React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiAvailableEffect } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport { type ObserveFn, useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOverlayPosition from './hooks/useOverlayPosition';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport Portal from '../../ui/Portal';\n\nimport styles from './MessageEffect.module.scss';\n\ntype OwnProps = {\n  messageId?: number;\n  isMirrored?: boolean;\n  effect: ApiAvailableEffect;\n  shouldPlay?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  onStop?: VoidFunction;\n};\n\nconst EFFECT_SIZE = 256;\n\nconst MessageEffect = ({\n  messageId,\n  isMirrored,\n  effect,\n  shouldPlay,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  onStop,\n}: OwnProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const anchorRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const canLoad = useIsIntersecting(anchorRef, observeIntersectionForLoading);\n  const canPlay = useIsIntersecting(anchorRef, observeIntersectionForPlaying);\n\n  const [isPlaying, startPlaying, stopPlaying] = useFlag();\n  const [isPositionUpdateRequired, requirePositionUpdate, resetPositionUpdate] = useFlag();\n\n  const effectHash = getEffectHash(effect);\n  const effectBlob = useMedia(effectHash, !canLoad);\n\n  const handleEnded = useLastCallback(() => {\n    stopPlaying();\n    onStop?.();\n  });\n\n  const updatePosition = useOverlayPosition({\n    anchorRef,\n    overlayRef: ref,\n    isMirrored,\n    isDisabled: !isPlaying,\n    isForMessageEffect: true,\n    id: effect.id,\n  });\n\n  useEffect(() => {\n    if (isPositionUpdateRequired) updatePosition();\n    resetPositionUpdate();\n  }, [updatePosition, resetPositionUpdate, isPositionUpdateRequired]);\n\n  useEffect(() => {\n    if (canPlay && shouldPlay && effectBlob) {\n      startPlaying();\n      requirePositionUpdate();\n    }\n  }, [canPlay, effectBlob, shouldPlay, updatePosition]);\n\n  const effectClassName = buildClassName(\n    styles.root,\n    isMirrored && styles.mirror,\n  );\n\n  return (\n    <div className={buildClassName(styles.anchor, isMirrored && styles.mirrorAnchor)} ref={anchorRef}>\n      {isPlaying && (\n        <Portal>\n          <AnimatedSticker\n            ref={ref}\n            key={`effect-${messageId ?? effect.id}`}\n            className={effectClassName}\n            tgsUrl={effectBlob}\n            size={EFFECT_SIZE}\n            play\n            isLowPriority\n            noLoop\n            forceAlways\n            onEnded={handleEnded}\n          />\n        </Portal>\n      )}\n    </div>\n  );\n};\n\nfunction getEffectHash(effect: ApiAvailableEffect) {\n  if (effect.effectAnimationId) {\n    return `sticker${effect.effectAnimationId}`;\n  }\n\n  return `sticker${effect.effectStickerId}?size=f`;\n}\n\nexport default memo(MessageEffect);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\n\nimport type { ApiMediaExtendedPreview, ApiPhoto } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { ISettings } from '../../../types';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport { CUSTOM_APPENDIX_ATTRIBUTE, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getPhotoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport getCustomAppendixBg from './helpers/getCustomAppendixBg';\nimport { calculateMediaDimensions, MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useLayoutEffectWithPrevDeps from '../../../hooks/useLayoutEffectWithPrevDeps';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  photo: ApiPhoto | ApiMediaExtendedPreview;\n  isInWebPage?: boolean;\n  messageText?: string;\n  isOwn?: boolean;\n  observeIntersection?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  isInSelectMode?: boolean;\n  isSelected?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  size?: 'inline' | 'pictogram';\n  shouldAffectAppendix?: boolean;\n  dimensions?: IMediaDimensions & { isSmall?: boolean };\n  asForwarded?: boolean;\n  nonInteractive?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  theme: ISettings['theme'];\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Photo = <T,>({\n  id,\n  photo,\n  messageText,\n  isOwn,\n  observeIntersection,\n  noAvatars,\n  canAutoLoad,\n  isInSelectMode,\n  isSelected,\n  uploadProgress,\n  forcedWidth,\n  size = 'inline',\n  dimensions,\n  asForwarded,\n  nonInteractive,\n  shouldAffectAppendix,\n  isDownloading,\n  isProtected,\n  theme,\n  isInWebPage,\n  clickArg,\n  className,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isPaidPreview = photo.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? photo.blobUrl : undefined;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = isLoadAllowed && isIntersecting && !isPaidPreview;\n  const {\n    mediaData, loadProgress,\n  } = useMediaWithLoadProgress(!isPaidPreview ? getPhotoMediaHash(photo, size) : undefined, !shouldLoad);\n  const fullMediaData = localBlobUrl || mediaData;\n\n  const withBlurredBackground = Boolean(forcedWidth);\n  const [withThumb] = useState(!fullMediaData);\n  const noThumb = Boolean(fullMediaData);\n  const thumbRef = useBlurredMediaThumbRef(photo, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(photo, !withBlurredBackground);\n  const thumbDataUri = getMediaThumbUri(photo);\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || photo.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || photo.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, photo]);\n\n  const {\n    loadProgress: downloadProgress,\n  } = useMediaWithLoadProgress(\n    !isPaidPreview ? getPhotoMediaHash(photo, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(photo, 'download') : undefined,\n  );\n\n  const {\n    isUploading, isTransferring, transferProgress,\n  } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    shouldLoad && !fullMediaData,\n    uploadProgress !== undefined,\n  );\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    className: 'slow',\n    withShouldRender: true,\n  });\n  const {\n    ref: downloadButtonRef,\n    shouldRender: shouldRenderDownloadButton,\n  } = useShowTransition({\n    isOpen: !fullMediaData && !isLoadAllowed,\n    withShouldRender: true,\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  useLayoutEffectWithPrevDeps(([prevShouldAffectAppendix]) => {\n    if (!shouldAffectAppendix) {\n      if (prevShouldAffectAppendix) {\n        ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!.removeAttribute(CUSTOM_APPENDIX_ATTRIBUTE);\n      }\n      return;\n    }\n\n    const contentEl = ref.current!.closest<HTMLDivElement>(MESSAGE_CONTENT_SELECTOR)!;\n    if (fullMediaData) {\n      const messageId = Number(contentEl.closest<HTMLDivElement>('.Message')!.dataset.messageId);\n      getCustomAppendixBg(fullMediaData, Boolean(isOwn), messageId, isSelected, theme).then((appendixBg) => {\n        requestMutation(() => {\n          contentEl.style.setProperty('--appendix-bg', appendixBg);\n          contentEl.setAttribute(CUSTOM_APPENDIX_ATTRIBUTE, '');\n        });\n      });\n    } else {\n      contentEl.classList.add('has-appendix-thumb');\n    }\n  }, [shouldAffectAppendix, fullMediaData, isOwn, isInSelectMode, isSelected, theme]);\n\n  const { width, height, isSmall } = dimensions || calculateMediaDimensions({\n    media: photo,\n    isOwn,\n    asForwarded,\n    noAvatars,\n    isMobile,\n    messageText,\n    isInWebPage,\n  });\n\n  const componentClassName = buildClassName(\n    'media-inner',\n    !isUploading && !nonInteractive && 'interactive',\n    isSmall && 'small-image',\n    (width === height || size === 'pictogram') && 'square-image',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = size === 'inline' ? `height: ${height}px;${dimensionsStyle}` : undefined;\n\n  return (\n    <div\n      id={id}\n      ref={ref}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : handleClick}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {fullMediaData && (\n        <img\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          alt=\"\"\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n          draggable={!isProtected}\n        />\n      )}\n      {withThumb && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      {shouldRenderSpinner && !shouldRenderDownloadButton && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={transferProgress} onClick={isUploading ? handleClick : undefined} />\n        </div>\n      )}\n      {shouldRenderDownloadButton && <Icon ref={downloadButtonRef} name=\"download\" />}\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {isTransferring && (\n        <span className=\"message-transfer-progress\">{Math.round(transferProgress * 100)}%</span>\n      )}\n    </div>\n  );\n};\n\nexport default Photo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  useEffect, useLayoutEffect,\n  useRef, useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport {\n  getMediaFormat,\n  getMessageMediaThumbDataUri,\n  getVideoMediaHash,\n  hasMessageTtl,\n} from '../../../global/helpers';\nimport { stopCurrentAudio } from '../../../util/audioPlayer';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport safePlay from '../../../util/safePlay';\nimport { ROUND_VIDEO_DIMENSIONS_PX } from '../../common/helpers/mediaDimensions';\n\nimport { useThrottledSignal } from '../../../hooks/useAsyncResolvers';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport Button from '../../ui/Button';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './RoundVideo.scss';\n\ntype OwnProps = {\n  message: ApiMessage;\n  className?: string;\n  canAutoLoad?: boolean;\n  isDownloading?: boolean;\n  origin?: 'oneTimeModal';\n  observeIntersection?: ObserveFn;\n  onStop?: NoneToVoidFunction;\n  onReadMedia?: NoneToVoidFunction;\n  onHideTranscription?: (isHidden: boolean) => void;\n  isTranscriptionError?: boolean;\n  canTranscribe?: boolean;\n  isTranscribed?: boolean;\n  isTranscriptionHidden?: boolean;\n  isTranscribing?: boolean;\n};\n\nconst PROGRESS_CENTER = ROUND_VIDEO_DIMENSIONS_PX / 2;\nconst PROGRESS_MARGIN = 6;\nconst PROGRESS_CIRCUMFERENCE = (PROGRESS_CENTER - PROGRESS_MARGIN) * 2 * Math.PI;\nconst PROGRESS_THROTTLE = 16; // Min period needed for `playerEl.currentTime` to update\n\nlet stopPrevious: NoneToVoidFunction;\n\nconst RoundVideo: FC<OwnProps> = ({\n  message,\n  className,\n  canAutoLoad,\n  isDownloading,\n  origin,\n  observeIntersection,\n  onStop,\n  onReadMedia,\n  isTranscriptionError,\n  isTranscribed,\n  canTranscribe,\n  onHideTranscription,\n  isTranscriptionHidden,\n  isTranscribing,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const playerRef = useRef<HTMLVideoElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<SVGCircleElement>(null);\n\n  const { cancelMediaDownload, openOneTimeMediaModal, transcribeAudio } = getActions();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n\n  const video = message.content.video!;\n\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersecting);\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'inline'),\n    !shouldLoad,\n    getMediaFormat(video, 'inline'),\n  );\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    getVideoMediaHash(video, 'download'),\n    !isDownloading,\n    ApiMediaFormat.BlobUrl,\n  );\n\n  const [isPlayerReady, markPlayerReady] = useFlag();\n  const hasTtl = hasMessageTtl(message);\n  const isInOneTimeModal = origin === 'oneTimeModal';\n  const shouldRenderSpoiler = hasTtl && !isInOneTimeModal;\n  const hasThumb = Boolean(getMessageMediaThumbDataUri(message));\n  const noThumb = !hasThumb || isPlayerReady || shouldRenderSpoiler;\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const thumbDataUri = getMessageMediaThumbDataUri(message);\n  const isTransferring = (isLoadAllowed && !isPlayerReady) || isDownloading;\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n\n  const [isActivated, setIsActivated] = useState(false);\n\n  const [getProgress, setProgress] = useSignal(0);\n  const getThrottledProgress = useThrottledSignal(getProgress, PROGRESS_THROTTLE);\n\n  useEffect(() => {\n    if (!isActivated) {\n      return;\n    }\n\n    const playerEl = playerRef.current!;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  }, [setProgress, isActivated, getThrottledProgress]);\n\n  useLayoutEffect(() => {\n    if (!isActivated || !circleRef.current) {\n      return;\n    }\n\n    const strokeDashOffset = PROGRESS_CIRCUMFERENCE - getThrottledProgress() * PROGRESS_CIRCUMFERENCE;\n    circleRef.current.setAttribute('stroke-dashoffset', strokeDashOffset.toString());\n  }, [isActivated, getThrottledProgress]);\n\n  const shouldPlay = Boolean(mediaData && isIntersecting);\n\n  const stopPlaying = useLastCallback(() => {\n    if (!playerRef.current) {\n      return;\n    }\n\n    setIsActivated(false);\n    setProgress(0);\n    safePlay(playerRef.current);\n  });\n\n  const capturePlaying = useLastCallback(() => {\n    stopPrevious?.();\n    stopPrevious = stopPlaying;\n  });\n\n  const togglePlaying = useLastCallback(() => {\n    const playerEl = playerRef.current!;\n    if (isActivated) {\n      if (playerEl.paused) {\n        safePlay(playerEl);\n        stopCurrentAudio();\n      } else {\n        playerEl.pause();\n      }\n    } else {\n      capturePlaying();\n      // Pause is a workaround for iOS Safari – otherwise it stops video after several frames\n      playerEl.pause();\n      playerEl.currentTime = 0;\n      safePlay(playerEl);\n      stopCurrentAudio();\n      setIsActivated(true);\n    }\n  });\n\n  useEffect(() => {\n    if (!isInOneTimeModal) {\n      return;\n    }\n    togglePlaying();\n  }, [isInOneTimeModal]);\n\n  const handleClick = useLastCallback((event) => {\n    if (event.target.closest('.transcribe-button')) {\n      return;\n    }\n\n    if (!mediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n\n      return;\n    }\n\n    if (isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (hasTtl && !isInOneTimeModal) {\n      openOneTimeMediaModal({ message });\n      onReadMedia?.();\n      return;\n    }\n\n    togglePlaying();\n  });\n\n  const handleTimeUpdate = useLastCallback((e: React.UIEvent<HTMLVideoElement>) => {\n    const playerEl = e.currentTarget;\n    setProgress(playerEl.currentTime / playerEl.duration);\n  });\n\n  const handleTranscribe = useLastCallback(() => {\n    transcribeAudio({ chatId: message.chatId, messageId: message.id });\n  });\n\n  function renderPlayWrapper() {\n    return (\n      <div className=\"play-wrapper\">\n        <Button\n          color=\"dark\"\n          round\n          size=\"smaller\"\n          className=\"play\"\n          nonInteractive\n        >\n          <Icon name=\"play\" />\n        </Button>\n        <Icon name=\"view-once\" />\n      </div>\n    );\n  }\n\n  const handleButtonClick = useLastCallback(() => {\n    if ((isTranscribed || isTranscriptionError) && onHideTranscription) {\n      onHideTranscription(!isTranscriptionHidden);\n    } else if (!isTranscribing) {\n      handleTranscribe();\n    }\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName('RoundVideo', 'media-inner', isInOneTimeModal && 'non-interactive', className)}\n      onClick={handleClick}\n    >\n      {mediaData && (\n        <div className=\"video-wrapper\">\n          {shouldRenderSpoiler && (\n            <MediaSpoiler\n              isVisible\n              thumbDataUri={thumbDataUri}\n              width={ROUND_VIDEO_DIMENSIONS_PX}\n              height={ROUND_VIDEO_DIMENSIONS_PX}\n              className=\"media-spoiler\"\n            />\n          )}\n          <OptimizedVideo\n            canPlay={shouldPlay}\n            ref={playerRef}\n            src={mediaData}\n            className=\"full-media\"\n            width={ROUND_VIDEO_DIMENSIONS_PX}\n            height={ROUND_VIDEO_DIMENSIONS_PX}\n            autoPlay={!shouldRenderSpoiler}\n            disablePictureInPicture\n            muted={!isActivated}\n            loop={!isActivated}\n            playsInline\n            isPriority\n            onEnded={isActivated ? onStop ?? stopPlaying : undefined}\n            onTimeUpdate={isActivated ? handleTimeUpdate : undefined}\n            onReady={markPlayerReady}\n          />\n        </div>\n      )}\n      {!shouldRenderSpoiler && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n          style={`width: ${ROUND_VIDEO_DIMENSIONS_PX}px; height: ${ROUND_VIDEO_DIMENSIONS_PX}px`}\n        />\n      )}\n      <div className=\"progress\">\n        {isActivated && (\n          <svg width={ROUND_VIDEO_DIMENSIONS_PX} height={ROUND_VIDEO_DIMENSIONS_PX}>\n            <circle\n              ref={circleRef}\n              cx={PROGRESS_CENTER}\n              cy={PROGRESS_CENTER}\n              r={PROGRESS_CENTER - PROGRESS_MARGIN}\n              className=\"progress-circle\"\n              transform={`rotate(-90, ${PROGRESS_CENTER}, ${PROGRESS_CENTER})`}\n              stroke-dasharray={PROGRESS_CIRCUMFERENCE}\n              stroke-dashoffset={PROGRESS_CIRCUMFERENCE}\n            />\n          </svg>\n        )}\n      </div>\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner progress={isDownloading ? downloadProgress : loadProgress} />\n        </div>\n      )}\n      {shouldRenderSpoiler && !shouldRenderSpinner && renderPlayWrapper()}\n      {!mediaData && !isLoadAllowed && (\n        <Icon name=\"download\" />\n      )}\n      {!isInOneTimeModal && (\n        <div className=\"message-media-duration\">\n          {isActivated ? formatMediaDuration(playerRef.current!.currentTime) : formatMediaDuration(video.duration)}\n          {(!isActivated || playerRef.current!.paused) && <Icon name=\"muted\" />}\n        </div>\n      )}\n      {canTranscribe && (\n        <Button\n          onClick={handleButtonClick}\n          className=\"transcribe-button\"\n        >\n          {isTranscribed || isTranscriptionError ? <Icon name=\"down\" /> : <Icon name=\"transcribe\" />}\n          {isTranscribing && (\n            <svg viewBox=\"0 0 32 24\" className=\"loading-svg\">\n              <rect\n                className=\"loading-rect\"\n                fill=\"transparent\"\n                width=\"32\"\n                height=\"24\"\n                stroke-width=\"3\"\n                stroke-linejoin=\"round\"\n                rx=\"6\"\n                ry=\"6\"\n                stroke=\"white\"\n                stroke-dashoffset=\"1\"\n                stroke-dasharray=\"32,68\"\n              />\n            </svg>\n          )}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default RoundVideo;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type {\n  ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport MenuSeparator from '../../ui/MenuSeparator';\n\nimport './MessageContextMenu.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  anchor: IAnchorPosition;\n  message: ApiSponsoredMessage;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  onAboutAdsClick: NoneToVoidFunction;\n  onSponsoredHide: NoneToVoidFunction;\n  onSponsorInfo?: NoneToVoidFunction;\n  onSponsoredReport?: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenu: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onClose,\n  onCloseAnimationEnd,\n  onAboutAdsClick,\n  onSponsoredHide,\n  onSponsorInfo,\n  onSponsoredReport,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const getTriggerElement = useLastCallback(() => triggerRef.current);\n  const getLayout = useLastCallback(() => ({ withPortal: true }));\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getRootElement = useLastCallback(() => document.body);\n\n  const isSeparatorNeeded = message.sponsorInfo || !shouldSkipAbout || message.canReport;\n\n  return (\n    <Menu\n      ref={menuRef}\n      isOpen={isOpen}\n      anchor={anchor}\n      withPortal\n      className=\"with-menu-transitions\"\n      getLayout={getLayout}\n      getTriggerElement={getTriggerElement}\n      getMenuElement={getMenuElement}\n      getRootElement={getRootElement}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n    >\n      {message.sponsorInfo && onSponsorInfo && (\n        <MenuItem icon=\"channel\" onClick={onSponsorInfo}>{lang('SponsoredMessageSponsor')}</MenuItem>\n      )}\n      {!shouldSkipAbout && (\n        <MenuItem icon=\"info\" onClick={onAboutAdsClick}>\n          {lang(message.canReport ? 'AboutRevenueSharingAds' : 'SponsoredMessageInfo')}\n        </MenuItem>\n      )}\n      {message.canReport && onSponsoredReport && (\n        <MenuItem icon=\"hand-stop\" onClick={onSponsoredReport}>\n          {lang('ReportAd')}\n        </MenuItem>\n      )}\n      {isSeparatorNeeded && <MenuSeparator />}\n      <MenuItem icon=\"close-circle\" onClick={onSponsoredHide}>\n        {lang('HideAd')}\n      </MenuItem>\n    </Menu>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransition from '../../../hooks/useShowTransition';\n\nimport SponsoredMessageContextMenu from './SponsoredMessageContextMenu';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  message: ApiSponsoredMessage;\n  anchor: IAnchorPosition;\n  triggerRef: React.RefObject<HTMLElement>;\n  shouldSkipAbout?: boolean;\n  onItemClick?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd: NoneToVoidFunction;\n};\n\nconst SponsoredMessageContextMenuContainer: FC<OwnProps> = ({\n  isOpen,\n  message,\n  anchor,\n  triggerRef,\n  shouldSkipAbout,\n  onItemClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    openAboutAdsModal,\n    showDialog,\n    reportSponsoredMessage,\n    hideSponsoredMessages,\n  } = getActions();\n\n  const { ref } = useShowTransition({\n    isOpen,\n    onCloseAnimationEnd,\n  });\n\n  const handleItemClick = useLastCallback(() => {\n    onItemClick?.();\n    onClose();\n  });\n\n  const handleAboutAdsOpen = useLastCallback(() => {\n    openAboutAdsModal({ chatId: message.chatId });\n    handleItemClick();\n  });\n\n  const handleSponsoredHide = useLastCallback(() => {\n    hideSponsoredMessages();\n    handleItemClick();\n  });\n\n  const handleSponsorInfo = useLastCallback(() => {\n    showDialog({\n      data: {\n        message: [message.sponsorInfo, message.additionalInfo].join('\\n'),\n      },\n    });\n    handleItemClick();\n  });\n\n  const handleReportSponsoredMessage = useLastCallback(() => {\n    reportSponsoredMessage({ peerId: message.chatId, randomId: message.randomId });\n    handleItemClick();\n  });\n\n  if (!anchor) {\n    return undefined;\n  }\n\n  return (\n    <div ref={ref} className=\"ContextMenuContainer\">\n      <SponsoredMessageContextMenu\n        isOpen={isOpen}\n        anchor={anchor}\n        triggerRef={triggerRef}\n        message={message}\n        shouldSkipAbout={shouldSkipAbout}\n        onClose={onClose}\n        onCloseAnimationEnd={onClose}\n        onAboutAdsClick={handleAboutAdsOpen}\n        onSponsoredHide={handleSponsoredHide}\n        onSponsorInfo={handleSponsorInfo}\n        onSponsoredReport={handleReportSponsoredMessage}\n      />\n    </div>\n  );\n};\n\nexport default memo(SponsoredMessageContextMenuContainer);\n","import React, { useEffect, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaExtendedPreview, ApiVideo } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport type { IMediaDimensions } from './helpers/calculateAlbumLayout';\n\nimport {\n  getMediaFormat, getMediaThumbUri, getMediaTransferState, getVideoMediaHash,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { calculateExtendedPreviewDimensions, calculateVideoDimensions } from '../../common/helpers/mediaDimensions';\nimport { MIN_MEDIA_HEIGHT } from './helpers/mediaDimensions';\n\nimport useUnsupportedMedia from '../../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useFlag from '../../../hooks/useFlag';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransition from '../../../hooks/useMediaTransition';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransition from '../../../hooks/useShowTransition';\nimport useBlurredMediaThumbRef from './hooks/useBlurredMediaThumbRef';\n\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nexport type OwnProps<T> = {\n  id?: string;\n  video: ApiVideo | ApiMediaExtendedPreview;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  uploadProgress?: number;\n  forcedWidth?: number;\n  dimensions?: IMediaDimensions;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  className?: string;\n  clickArg?: T;\n  onClick?: (arg: T, e: React.MouseEvent<HTMLElement>) => void;\n  onCancelUpload?: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst Video = <T,>({\n  id,\n  video,\n  isOwn,\n  isInWebPage,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  uploadProgress,\n  forcedWidth,\n  dimensions,\n  asForwarded,\n  isDownloading,\n  isProtected,\n  className,\n  clickArg,\n  onClick,\n  onCancelUpload,\n}: OwnProps<T>) => {\n  const { cancelMediaDownload } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  const isPaidPreview = video.mediaType === 'extendedMediaPreview';\n\n  const localBlobUrl = !isPaidPreview ? video.blobUrl : undefined;\n\n  const [isSpoilerShown, showSpoiler, hideSpoiler] = useFlag(isPaidPreview || video.isSpoiler);\n\n  useEffect(() => {\n    if (isPaidPreview || video.isSpoiler) {\n      showSpoiler();\n    } else {\n      hideSpoiler();\n    }\n  }, [isPaidPreview, video]);\n\n  const isIntersectingForLoading = useIsIntersecting(ref, observeIntersectionForLoading);\n  const isIntersectingForPlaying = (\n    useIsIntersecting(ref, observeIntersectionForPlaying)\n    && isIntersectingForLoading\n  );\n  const wasIntersectedRef = useRef(isIntersectingForLoading);\n  if (isIntersectingForPlaying && !wasIntersectedRef.current) {\n    wasIntersectedRef.current = true;\n  }\n\n  const { isMobile } = useAppLayout();\n  const [isLoadAllowed, setIsLoadAllowed] = useState(canAutoLoad);\n  const shouldLoad = Boolean(isLoadAllowed && isIntersectingForLoading && !isPaidPreview);\n  const [isPlayAllowed, setIsPlayAllowed] = useState(Boolean(canAutoPlay && !isSpoilerShown));\n\n  const fullMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'inline') : undefined;\n  const [isFullMediaPreloaded] = useState(Boolean(fullMediaHash && mediaLoader.getFromMemory(fullMediaHash)));\n  const { mediaData, loadProgress } = useMediaWithLoadProgress(\n    fullMediaHash,\n    !shouldLoad,\n    !isPaidPreview ? getMediaFormat(video, 'inline') : undefined,\n  );\n  const fullMediaData = localBlobUrl || mediaData;\n  const [isPlayerReady, markPlayerReady] = useFlag();\n\n  const thumbDataUri = getMediaThumbUri(video);\n  const hasThumb = Boolean(thumbDataUri);\n  const withBlurredBackground = Boolean(forcedWidth);\n\n  const isInline = fullMediaData && wasIntersectedRef.current;\n\n  const isUnsupported = useUnsupportedMedia(videoRef, true, !isInline);\n\n  const previewMediaHash = !isPaidPreview ? getVideoMediaHash(video, 'preview') : undefined;\n  const [isPreviewPreloaded] = useState(Boolean(previewMediaHash && mediaLoader.getFromMemory(previewMediaHash)));\n  const canLoadPreview = isIntersectingForLoading;\n  const previewBlobUrl = useMedia(previewMediaHash, !canLoadPreview);\n  const shouldHidePreview = isPlayerReady && !isUnsupported;\n  const previewRef = useMediaTransition<HTMLImageElement>((hasThumb || previewBlobUrl) && !shouldHidePreview);\n\n  const noThumb = Boolean(!hasThumb || previewBlobUrl || isPlayerReady);\n  const thumbRef = useBlurredMediaThumbRef(video, noThumb);\n  useMediaTransition(!noThumb, { ref: thumbRef });\n  const blurredBackgroundRef = useBlurredMediaThumbRef(video, !withBlurredBackground);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    !isPaidPreview ? getVideoMediaHash(video, 'download') : undefined,\n    !isDownloading,\n    !isPaidPreview ? getMediaFormat(video, 'download') : undefined,\n  );\n\n  const { isUploading, isTransferring, transferProgress } = getMediaTransferState(\n    uploadProgress || (isDownloading ? downloadProgress : loadProgress),\n    (shouldLoad && !isPlayerReady && !isFullMediaPreloaded) || isDownloading,\n    uploadProgress !== undefined,\n  );\n\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const {\n    ref: spinnerRef,\n    shouldRender: shouldRenderSpinner,\n  } = useShowTransition({\n    isOpen: isTransferring && !isUnsupported,\n    noMountTransition: wasLoadDisabled,\n    withShouldRender: true,\n  });\n  const {\n    ref: playButtonRef,\n  } = useShowTransition({\n    isOpen: Boolean((isLoadAllowed || fullMediaData) && !isPlayAllowed && !shouldRenderSpinner),\n  });\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    setPlayProgress(Math.max(0, e.currentTarget.currentTime - 1));\n  });\n\n  const duration = (Number.isFinite(videoRef.current?.duration) && !isUnsupported\n    ? videoRef.current?.duration : video.duration) || 0;\n\n  const {\n    width, height,\n  } = dimensions || (\n    isPaidPreview\n      ? calculateExtendedPreviewDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n      : calculateVideoDimensions(video, Boolean(isOwn), asForwarded, isInWebPage, noAvatars, isMobile)\n  );\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>, isFromSpinner?: boolean) => {\n    if (isUploading) {\n      onCancelUpload?.(clickArg!);\n      return;\n    }\n\n    if (!isPaidPreview && isDownloading) {\n      cancelMediaDownload({ media: video });\n      return;\n    }\n\n    if (!fullMediaData) {\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n      return;\n    }\n\n    if (fullMediaData && !isPlayAllowed) {\n      setIsPlayAllowed(true);\n    }\n\n    if (isSpoilerShown) {\n      hideSpoiler();\n      return;\n    }\n\n    if (isFromSpinner && shouldLoad && !isPlayerReady && !isFullMediaPreloaded) {\n      setIsLoadAllowed(false);\n      e.stopPropagation();\n      return;\n    }\n\n    onClick?.(clickArg!, e);\n  });\n\n  const handleClickOnSpinner = useLastCallback(\n    (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n      handleClick(e, true);\n    },\n  );\n\n  const componentClassName = buildClassName(\n    'media-inner dark',\n    !isUploading && 'interactive',\n    height < MIN_MEDIA_HEIGHT && 'fix-min-height',\n    className,\n  );\n\n  const dimensionsStyle = dimensions ? ` width: ${width}px; left: ${dimensions.x}px; top: ${dimensions.y}px;` : '';\n  const style = `height: ${height}px;${dimensionsStyle}`;\n\n  return (\n    <div\n      ref={ref}\n      id={id}\n      className={componentClassName}\n      style={style}\n      onClick={isUploading ? undefined : (e) => handleClick(e)}\n    >\n      {withBlurredBackground && (\n        <canvas ref={blurredBackgroundRef} className=\"thumbnail blurred-bg\" />\n      )}\n      {isInline && (\n        <OptimizedVideo\n          ref={videoRef}\n          src={fullMediaData}\n          className={buildClassName('full-media', withBlurredBackground && 'with-blurred-bg')}\n          canPlay={isPlayAllowed && isIntersectingForPlaying && !isUnsupported}\n          muted\n          loop\n          playsInline\n          disablePictureInPicture\n          draggable={!isProtected}\n          onTimeUpdate={handleTimeUpdate}\n          onReady={markPlayerReady}\n          style={forcedWidth ? `width: ${forcedWidth}px` : undefined}\n        />\n      )}\n      <img\n        ref={previewRef}\n        src={previewBlobUrl}\n        className={buildClassName('thumbnail', withBlurredBackground && 'with-blurred-bg')}\n        alt=\"\"\n        style={forcedWidth ? `width: ${forcedWidth}px;` : undefined}\n        draggable={!isProtected}\n      />\n      {hasThumb && !isPreviewPreloaded && (\n        <canvas ref={thumbRef} className=\"thumbnail\" />\n      )}\n      {isProtected && <span className=\"protector\" />}\n      <Icon ref={playButtonRef} name=\"large-play\" />\n      <MediaSpoiler\n        isVisible={isSpoilerShown}\n        withAnimation\n        thumbDataUri={thumbDataUri}\n        width={width}\n        height={height}\n        className=\"media-spoiler\"\n      />\n      {shouldRenderSpinner && (\n        <div ref={spinnerRef} className=\"media-loading\">\n          <ProgressSpinner\n            progress={transferProgress}\n            onClick={handleClickOnSpinner}\n          />\n        </div>\n      )}\n      {!isLoadAllowed && !fullMediaData && (\n        <Icon name=\"download\" />\n      )}\n      {isTransferring && (!isUnsupported || isDownloading) ? (\n        <span className=\"message-transfer-progress\">\n          {(isUploading || isDownloading) ? `${Math.round(transferProgress * 100)}%` : '...'}\n        </span>\n      ) : (\n        <div className=\"message-media-duration\">\n          {!isPaidPreview && video.isGif ? 'GIF' : formatMediaDuration(Math.max(duration - playProgress, 0))}\n          {isUnsupported && <Icon name=\"message-failed\" className=\"playback-failed\" />}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Video;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiTypeStory } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\nimport { AudioOrigin, type ISettings } from '../../../types';\n\nimport { getMessageWebPage } from '../../../global/helpers';\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport trimText from '../../../util/trimText';\nimport { getGiftAttributes, getStickerFromGift } from '../../common/helpers/gifts';\nimport renderText from '../../common/helpers/renderText';\nimport { calculateMediaDimensions } from './helpers/mediaDimensions';\nimport { getWebpageButtonLangKey } from './helpers/webpageType';\n\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEnsureStory from '../../../hooks/useEnsureStory';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Audio from '../../common/Audio';\nimport Document from '../../common/Document';\nimport EmojiIconBackground from '../../common/embedded/EmojiIconBackground';\nimport PeerColorWrapper from '../../common/PeerColorWrapper';\nimport RadialPatternBackground from '../../common/profile/RadialPatternBackground';\nimport SafeLink from '../../common/SafeLink';\nimport StickerView from '../../common/StickerView';\nimport Button from '../../ui/Button';\nimport BaseStory from './BaseStory';\nimport Photo from './Photo';\nimport Video from './Video';\n\nimport './WebPage.scss';\n\nconst MAX_TEXT_LENGTH = 170; // symbols\nconst WEBPAGE_STORY_TYPE = 'telegram_story';\nconst WEBPAGE_GIFT_TYPE = 'telegram_nft';\nconst STICKER_SIZE = 80;\nconst EMOJI_SIZE = 38;\n\ntype OwnProps = {\n  message: ApiMessage;\n  observeIntersectionForLoading?: ObserveFn;\n  observeIntersectionForPlaying?: ObserveFn;\n  noAvatars?: boolean;\n  canAutoLoad?: boolean;\n  canAutoPlay?: boolean;\n  inPreview?: boolean;\n  asForwarded?: boolean;\n  isDownloading?: boolean;\n  isProtected?: boolean;\n  isConnected?: boolean;\n  backgroundEmojiId?: string;\n  theme: ISettings['theme'];\n  story?: ApiTypeStory;\n  shouldWarnAboutSvg?: boolean;\n  autoLoadFileMaxSizeMb?: number;\n  onAudioPlay?: NoneToVoidFunction;\n  onMediaClick?: NoneToVoidFunction;\n  onCancelMediaTransfer?: NoneToVoidFunction;\n  onContainerClick?: ((e: React.MouseEvent) => void);\n  isEditing?: boolean;\n};\ntype StateProps = {\n  canPlayAnimatedEmojis: boolean;\n};\nconst STAR_GIFT_STICKER_SIZE = 120;\n\nconst WebPage: FC<OwnProps & StateProps> = ({\n  message,\n  observeIntersectionForLoading,\n  observeIntersectionForPlaying,\n  noAvatars,\n  canAutoLoad,\n  canAutoPlay,\n  inPreview,\n  asForwarded,\n  isDownloading = false,\n  isProtected,\n  isConnected,\n  story,\n  theme,\n  backgroundEmojiId,\n  shouldWarnAboutSvg,\n  autoLoadFileMaxSizeMb,\n  onMediaClick,\n  onContainerClick,\n  onAudioPlay,\n  onCancelMediaTransfer,\n  isEditing,\n}) => {\n  const { openUrl, openTelegramLink } = getActions();\n  const webPage = getMessageWebPage(message);\n  const { isMobile } = useAppLayout();\n  // eslint-disable-next-line no-null/no-null\n  const stickersRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const giftStickersRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const handleMediaClick = useLastCallback(() => {\n    onMediaClick!();\n  });\n\n  const handleContainerClick = useLastCallback((e: React.MouseEvent) => {\n    onContainerClick?.(e);\n  });\n\n  const handleOpenTelegramLink = useLastCallback(() => {\n    if (!webPage) return;\n\n    openTelegramLink({\n      url: webPage.url,\n    });\n  });\n\n  const { story: storyData, stickers } = webPage || {};\n\n  useEnsureStory(storyData?.peerId, storyData?.id, story);\n\n  const hasCustomColor = stickers?.isWithTextColor || stickers?.documents?.[0]?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(stickersRef, !hasCustomColor);\n\n  if (!webPage) {\n    return undefined;\n  }\n\n  const {\n    siteName,\n    url,\n    displayUrl,\n    title,\n    description,\n    photo,\n    video,\n    audio,\n    type,\n    document,\n    mediaSize,\n  } = webPage;\n  const isStory = type === WEBPAGE_STORY_TYPE;\n  const isGift = type === WEBPAGE_GIFT_TYPE;\n  const isExpiredStory = story && 'isDeleted' in story;\n\n  const quickButtonLangKey = !inPreview && !isExpiredStory ? getWebpageButtonLangKey(type) : undefined;\n  const quickButtonTitle = quickButtonLangKey && lang(quickButtonLangKey);\n\n  const truncatedDescription = trimText(description, MAX_TEXT_LENGTH);\n  const isArticle = Boolean(truncatedDescription || title || siteName);\n  let isSquarePhoto = Boolean(stickers);\n  if (isArticle && webPage?.photo && !webPage.video && !webPage.document) {\n    const { width, height } = calculateMediaDimensions({\n      media: webPage.photo,\n      isOwn: message.isOutgoing,\n      isInWebPage: true,\n      asForwarded,\n      noAvatars,\n      isMobile,\n    });\n    isSquarePhoto = (width === height || mediaSize === 'small') && mediaSize !== 'large';\n  }\n  const isMediaInteractive = (photo || video) && onMediaClick && !isSquarePhoto;\n\n  const className = buildClassName(\n    'WebPage',\n    inPreview && 'in-preview',\n    !isEditing && inPreview && 'interactive',\n    isSquarePhoto && 'with-square-photo',\n    !photo && !video && !inPreview && 'without-media',\n    video && 'with-video',\n    !isArticle && 'no-article',\n    document && 'with-document',\n    quickButtonTitle && 'with-quick-button',\n    isGift && 'with-gift',\n  );\n\n  function renderQuickButton(caption: string) {\n    return (\n      <Button\n        className=\"WebPage--quick-button\"\n        size=\"tiny\"\n        color=\"translucent\"\n        isRectangular\n        noForcedUpperCase\n        onClick={handleOpenTelegramLink}\n      >\n        {caption}\n      </Button>\n    );\n  }\n\n  function renderStarGiftUnique() {\n    const gift = webPage?.gift;\n    if (!gift || gift.type !== 'starGiftUnique') return undefined;\n\n    const sticker = getStickerFromGift(gift)!;\n    const attributes = getGiftAttributes(gift);\n    const { backdrop, pattern, model } = attributes || {};\n\n    if (!backdrop || !pattern || !model) return undefined;\n\n    const backgroundColors = [backdrop.centerColor, backdrop.edgeColor];\n\n    return (\n      <div\n        className=\"web-page-gift web-page-centered web-page-unique\"\n        onClick={() => handleOpenTelegramLink()}\n      >\n        <div className=\"web-page-unique-background-wrapper\">\n          <RadialPatternBackground\n            className=\"web-page-unique-background\"\n            backgroundColors={backgroundColors}\n            patternColor={backdrop.patternColor}\n            patternIcon={pattern.sticker}\n          />\n        </div>\n        <div ref={giftStickersRef} key={sticker.id} className=\"WebPage--unique-sticker\">\n          <StickerView\n            containerRef={giftStickersRef}\n            sticker={sticker}\n            size={STAR_GIFT_STICKER_SIZE}\n            observeIntersectionForPlaying={observeIntersectionForPlaying}\n            observeIntersectionForLoading={observeIntersectionForLoading}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      className={className}\n      data-initial={(siteName || displayUrl)[0]}\n      dir={oldLang.isRtl ? 'rtl' : 'auto'}\n      onClick={handleContainerClick}\n    >\n      <div className={buildClassName(\n        'WebPage--content',\n        isStory && 'is-story',\n        isGift && 'is-gift',\n      )}\n      >\n        {backgroundEmojiId && (\n          <EmojiIconBackground\n            emojiDocumentId={backgroundEmojiId}\n            className=\"WebPage--background-icons\"\n          />\n        )}\n        {isStory && (\n          <BaseStory story={story} isProtected={isProtected} isConnected={isConnected} isPreview />\n        )}\n        {isGift && !inPreview && (\n          renderStarGiftUnique()\n        )}\n        {isArticle && (\n          <div\n            className={buildClassName('WebPage-text', !inPreview && 'WebPage-text_interactive')}\n            onClick={!inPreview ? () => openUrl({ url, shouldSkipModal: true }) : undefined}\n          >\n            <SafeLink className=\"site-name\" url={url} text={siteName || displayUrl} />\n            {(!inPreview || isGift) && title && (\n              <p className=\"site-title\">{renderText(title)}</p>\n            )}\n            {truncatedDescription && !isGift && (\n              <p className=\"site-description\">{renderText(truncatedDescription, ['emoji', 'br'])}</p>\n            )}\n          </div>\n        )}\n        {photo && !isGift && !video && !document && (\n          <Photo\n            photo={photo}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersection={observeIntersectionForLoading}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            size={isSquarePhoto ? 'pictogram' : 'inline'}\n            asForwarded={asForwarded}\n            nonInteractive={!isMediaInteractive}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            theme={theme}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && video && (\n          <Video\n            video={video}\n            isOwn={message.isOutgoing}\n            isInWebPage\n            observeIntersectionForLoading={observeIntersectionForLoading!}\n            noAvatars={noAvatars}\n            canAutoLoad={canAutoLoad}\n            canAutoPlay={canAutoPlay}\n            asForwarded={asForwarded}\n            isDownloading={isDownloading}\n            isProtected={isProtected}\n            onClick={isMediaInteractive ? handleMediaClick : undefined}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && audio && (\n          <Audio\n            theme={theme}\n            message={message}\n            origin={AudioOrigin.Inline}\n            noAvatars={noAvatars}\n            isDownloading={isDownloading}\n            onPlay={onAudioPlay}\n            onCancelUpload={onCancelMediaTransfer}\n          />\n        )}\n        {!inPreview && document && (\n          <Document\n            document={document}\n            message={message}\n            observeIntersection={observeIntersectionForLoading}\n            autoLoadFileMaxSizeMb={autoLoadFileMaxSizeMb}\n            onMediaClick={handleMediaClick}\n            onCancelUpload={onCancelMediaTransfer}\n            isDownloading={isDownloading}\n            shouldWarnAboutSvg={shouldWarnAboutSvg}\n          />\n        )}\n        {!inPreview && stickers && (\n          <div\n            ref={stickersRef}\n            className={buildClassName(\n              'media-inner', 'square-image', stickers.isEmoji && 'WebPage--emoji-grid', 'WebPage--stickers',\n            )}\n          >\n            {stickers.documents.map((sticker) => (\n              <div key={sticker.id} className=\"WebPage--sticker\">\n                <StickerView\n                  containerRef={stickersRef}\n                  sticker={sticker}\n                  shouldLoop\n                  size={stickers.isEmoji ? EMOJI_SIZE : STICKER_SIZE}\n                  customColor={customColor}\n                  observeIntersectionForPlaying={observeIntersectionForPlaying}\n                  observeIntersectionForLoading={observeIntersectionForLoading}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n        {inPreview && displayUrl && !isArticle && (\n          <div className=\"WebPage-text\">\n            <p className=\"site-name\">{displayUrl}</p>\n            <p className=\"site-description\">{oldLang('Chat.Empty.LinkPreview')}</p>\n          </div>\n        )}\n      </div>\n      {quickButtonTitle && renderQuickButton(quickButtonTitle)}\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(WebPage));\n","import type { RegularLangKey } from '../../../../types/language';\n\n// https://github.com/telegramdesktop/tdesktop/blob/3da787791f6d227f69b32bf4003bc6071d05e2ac/Telegram/SourceFiles/history/view/history_view_view_button.cpp#L51\nexport function getWebpageButtonLangKey(type?: string): RegularLangKey | undefined {\n  switch (type) {\n    case 'telegram_channel_request':\n    case 'telegram_megagroup_request':\n    case 'telegram_chat_request':\n      return 'ViewButtonRequestJoin';\n    case 'telegram_message':\n      return 'ViewButtonMessage';\n    case 'telegram_bot':\n      return 'ViewButtonBot';\n    case 'telegram_voicechat':\n      return 'ViewButtonVoiceChat';\n    case 'telegram_livestream':\n      return 'ViewButtonVoiceChatChannel';\n    case 'telegram_megagroup':\n    case 'telegram_chat':\n      return 'ViewButtonGroup';\n    case 'telegram_channel':\n      return 'ViewButtonChannel';\n    case 'telegram_user':\n      return 'ViewButtonUser';\n    case 'telegram_botapp':\n      return 'ViewButtonBotApp';\n    case 'telegram_chatlist':\n      return 'ViewChatList';\n    case 'telegram_story':\n      return 'ViewButtonStory';\n    case 'telegram_channel_boost':\n    case 'telegram_group_boost':\n      return 'ViewButtonBoost';\n    case 'telegram_stickerset':\n      return 'ViewButtonStickerset';\n    case 'telegram_nft':\n      return 'ViewButtonGiftUnique';\n    default:\n      return undefined;\n  }\n}\n","import type { ISettings } from '../../../../types';\n\nimport { MAX_WORKERS, requestMediaWorker } from '../../../../util/launchMediaWorkers';\n\nconst SELECTED_APPENDIX_COLORS = {\n  dark: {\n    outgoing: 'rgb(135,116,225)',\n    incoming: 'rgb(33,33,33)',\n  },\n  light: {\n    outgoing: 'rgb(238,255,222)',\n    incoming: 'rgb(255,255,255)',\n  },\n};\n\nexport default function getCustomAppendixBg(\n  src: string, isOwn: boolean, id: number, isSelected?: boolean, theme?: ISettings['theme'],\n) {\n  if (isSelected) {\n    return Promise.resolve(SELECTED_APPENDIX_COLORS[theme || 'light'][isOwn ? 'outgoing' : 'incoming']);\n  }\n\n  return requestMediaWorker({\n    name: 'offscreen-canvas:getAppendixColorFromImage',\n    args: [src, isOwn],\n  }, Math.round(id) % MAX_WORKERS);\n}\n","import type { ApiMediaExtendedPreview, ApiPhoto, ApiVideo } from '../../../../api/types';\n\nimport {\n  calculateExtendedPreviewDimensions,\n  calculateInlineImageDimensions,\n  calculateVideoDimensions,\n  REM,\n} from '../../../common/helpers/mediaDimensions';\n\nconst SMALL_IMAGE_THRESHOLD = 12;\nconst MIN_MESSAGE_LENGTH_FOR_BLUR = 40;\nexport const MIN_MEDIA_WIDTH_WITH_TEXT = 20 * REM;\nconst MIN_MEDIA_WIDTH = SMALL_IMAGE_THRESHOLD * REM;\nexport const MIN_MEDIA_HEIGHT = 5 * REM;\n\nexport function getMinMediaWidth(text?: string, hasCommentButton?: boolean) {\n  return (text?.length ?? 0) > MIN_MESSAGE_LENGTH_FOR_BLUR || hasCommentButton\n    ? MIN_MEDIA_WIDTH_WITH_TEXT\n    : MIN_MEDIA_WIDTH;\n}\n\nexport function calculateMediaDimensions({\n  media,\n  messageText,\n  isOwn,\n  isInWebPage,\n  asForwarded,\n  noAvatars,\n  isMobile,\n} : {\n  media: ApiPhoto | ApiVideo | ApiMediaExtendedPreview;\n  messageText?: string;\n  isOwn?: boolean;\n  isInWebPage?: boolean;\n  asForwarded?: boolean;\n  noAvatars?: boolean;\n  isMobile?: boolean;\n}) {\n  const isPhoto = media.mediaType === 'photo';\n  const isVideo = media.mediaType === 'video';\n  const isWebPagePhoto = isPhoto && isInWebPage;\n  const isWebPageVideo = isVideo && isInWebPage;\n  const { width, height } = isPhoto\n    ? calculateInlineImageDimensions(media, isOwn, asForwarded, isWebPagePhoto, noAvatars, isMobile)\n    : isVideo ? calculateVideoDimensions(media, isOwn, asForwarded, isWebPageVideo, noAvatars, isMobile)\n      : calculateExtendedPreviewDimensions(media, isOwn, asForwarded, isInWebPage, noAvatars, isMobile);\n\n  const minMediaWidth = getMinMediaWidth(messageText);\n\n  let stretchFactor = 1;\n  if (width < minMediaWidth && minMediaWidth - width < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = minMediaWidth / width;\n  }\n  if (height * stretchFactor < MIN_MEDIA_HEIGHT && MIN_MEDIA_HEIGHT - height * stretchFactor < SMALL_IMAGE_THRESHOLD) {\n    stretchFactor = MIN_MEDIA_HEIGHT / height;\n  }\n\n  const finalWidth = Math.round(width * stretchFactor);\n  const finalHeight = Math.round(height * stretchFactor);\n\n  return {\n    width: finalWidth,\n    height: finalHeight,\n    isSmall: finalWidth < minMediaWidth || finalHeight < MIN_MEDIA_HEIGHT,\n  };\n}\n","import { useLayoutEffect, useMemo, useRef } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport cycleRestrict from '../util/cycleRestrict';\nimport { preloadImage } from '../util/files';\nimport { MAX_WORKERS, requestMediaWorker } from '../util/launchMediaWorkers';\nimport useLastCallback from './useLastCallback';\n\nconst RADIUS_RATIO = 0.1; // Use 10% of the smallest dimension as the blur radius\n\nlet lastWorkerIndex = -1;\n\nexport default function useOffscreenCanvasBlur(\n  thumbData?: string, // data URI or blob URL\n  isDisabled = false,\n) {\n  // eslint-disable-next-line no-null/no-null\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const workerIndex = useMemo(() => cycleRestrict(MAX_WORKERS, ++lastWorkerIndex), []);\n  const offscreenRef = useRef<OffscreenCanvas>();\n\n  const blurThumb = useLastCallback(async (canvas: HTMLCanvasElement, uri: string) => {\n    const image = await preloadImage(uri);\n    if (!image) {\n      return;\n    }\n\n    requestMutation(() => {\n      canvas.width = image.width;\n      canvas.height = image.height;\n\n      offscreenRef.current = canvas.transferControlToOffscreen();\n\n      const radius = Math.ceil(Math.min(image.width, image.height) * RADIUS_RATIO);\n\n      requestMediaWorker({\n        name: 'offscreen-canvas:blurThumb',\n        args: [offscreenRef.current, uri, radius],\n        transferables: [offscreenRef.current],\n      }, workerIndex);\n    });\n  });\n\n  useLayoutEffect(() => {\n    if (!thumbData || isDisabled || offscreenRef.current) return;\n\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n\n    blurThumb(canvas, thumbData);\n  }, [blurThumb, isDisabled, thumbData]);\n\n  return canvasRef;\n}\n","import { getMediaThumbUri, type MediaWithThumbs } from '../../../../global/helpers';\n\nimport useOffscreenCanvasBlur from '../../../../hooks/useOffscreenCanvasBlur';\n\ntype CanvasBlurReturnType = ReturnType<typeof useOffscreenCanvasBlur>;\n\nexport default function useBlurredMediaThumbRef(\n  forcedUri: string | undefined, isDisabled: boolean,\n): CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(media: MediaWithThumbs, isDisabled?: boolean) : CanvasBlurReturnType;\nexport default function useBlurredMediaThumbRef(\n  media: MediaWithThumbs | string | undefined,\n  isDisabled?: boolean,\n) {\n  const dataUri = media ? typeof media === 'string' ? media : getMediaThumbUri(media) : undefined;\n\n  return useOffscreenCanvasBlur(dataUri, isDisabled);\n}\n","import { useEffect } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ChatTranslatedMessages } from '../../../../types';\n\nimport { throttle } from '../../../../util/schedulers';\n\nconst MESSAGE_LIMIT_PER_REQUEST = 20;\nconst THROTTLE_DELAY = 500;\nconst PENDING_TRANSLATIONS = new Map<string, Map<string, number[]>>();\n\nexport default function useMessageTranslation(\n  chatTranslations: ChatTranslatedMessages | undefined,\n  chatId?: string,\n  messageId?: number,\n  requestedLanguageCode?: string,\n) {\n  const messageTranslation = requestedLanguageCode && messageId\n    ? chatTranslations?.byLangCode[requestedLanguageCode]?.[messageId] : undefined;\n\n  const { isPending, text } = messageTranslation || {};\n\n  useEffect(() => {\n    if (!chatId || !messageId) return;\n\n    if (!text && isPending === undefined && requestedLanguageCode) {\n      addPendingTranslation(chatId, messageId, requestedLanguageCode);\n    }\n  }, [chatId, text, isPending, messageId, requestedLanguageCode]);\n\n  if (!chatId || !messageId) {\n    return {\n      isPending: false,\n      translatedText: undefined,\n    };\n  }\n\n  return {\n    isPending,\n    translatedText: text,\n  };\n}\n\nconst throttledProcessPending = throttle(processPending, THROTTLE_DELAY);\n\nfunction processPending() {\n  const { translateMessages } = getActions();\n  let hasUnprocessed = false;\n  PENDING_TRANSLATIONS.forEach((chats, toLanguageCode) => {\n    chats.forEach((messageIds, chatId) => {\n      const messageIdsToTranslate = messageIds.slice(0, MESSAGE_LIMIT_PER_REQUEST);\n\n      if (messageIdsToTranslate.length < messageIds.length) {\n        hasUnprocessed = true;\n      }\n\n      translateMessages({ chatId, messageIds: messageIdsToTranslate, toLanguageCode });\n\n      removePendingTranslations(chatId, messageIdsToTranslate, toLanguageCode);\n    });\n  });\n\n  if (hasUnprocessed) {\n    throttledProcessPending();\n  }\n}\n\nfunction addPendingTranslation(\n  chatId: string,\n  messageId: number,\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode) || new Map<string, number[]>();\n  const messageIds = languageTranslations.get(chatId) || [];\n\n  if (messageIds.includes(messageId)) {\n    throttledProcessPending();\n    return;\n  }\n\n  messageIds.push(messageId);\n  languageTranslations.set(chatId, messageIds);\n  PENDING_TRANSLATIONS.set(toLanguageCode, languageTranslations);\n\n  getActions().markMessagesTranslationPending({ chatId, messageIds, toLanguageCode });\n\n  throttledProcessPending();\n}\n\nfunction removePendingTranslations(\n  chatId: string,\n  messageIds: number[],\n  toLanguageCode: string,\n) {\n  const languageTranslations = PENDING_TRANSLATIONS.get(toLanguageCode);\n  if (!languageTranslations?.size) {\n    PENDING_TRANSLATIONS.delete(toLanguageCode);\n    return;\n  }\n\n  const oldMessageIds = languageTranslations.get(chatId);\n  if (!oldMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    return;\n  }\n\n  const newMessageIds = oldMessageIds.filter((id) => !messageIds.includes(id));\n\n  if (!newMessageIds?.length) {\n    languageTranslations.delete(chatId);\n    if (!languageTranslations.size) {\n      PENDING_TRANSLATIONS.delete(toLanguageCode);\n    }\n    return;\n  }\n\n  languageTranslations.set(chatId, newMessageIds);\n}\n","import { type RefObject } from 'react';\nimport { useEffect } from '../../../../lib/teact/teact';\n\nimport { requestMutation } from '../../../../lib/fasterdom/fasterdom';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nconst OFFSET_X = REM;\n\nexport default function useOverlayPosition({\n  anchorRef,\n  overlayRef,\n  isMirrored,\n  isForMessageEffect,\n  isDisabled,\n  id,\n} : {\n  anchorRef: RefObject<HTMLDivElement>;\n  overlayRef: RefObject<HTMLDivElement>;\n  isMirrored?: boolean;\n  isForMessageEffect?: boolean;\n  isDisabled?: boolean;\n  id?: string;\n}) {\n  const updatePosition = useLastCallback(() => {\n    const element = overlayRef.current;\n    const anchor = anchorRef.current;\n    if (!element || !anchor) {\n      return;\n    }\n\n    const anchorRect = anchor.getBoundingClientRect();\n    const elementRect = element.getBoundingClientRect();\n    const windowWidth = window.innerWidth;\n\n    requestMutation(() => {\n      const anchorCenterY = anchorRect.top + anchorRect.height / 2;\n      const anchorBottomY = anchorRect.bottom;\n      const y = isForMessageEffect ? anchorBottomY : anchorCenterY;\n      element.style.top = `${y - elementRect.height / 2}px`;\n\n      if (isMirrored) {\n        element.style.left = `${anchorRect.left - OFFSET_X}px`;\n      } else {\n        element.style.right = `${windowWidth - anchorRect.right - OFFSET_X}px`;\n      }\n    });\n  });\n\n  useEffect(() => {\n    if (isDisabled) return;\n    updatePosition();\n  }, [isDisabled, id]);\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const messagesContainer = anchorRef.current!.closest<HTMLDivElement>('.MessageList')!;\n    if (!messagesContainer) return undefined;\n\n    messagesContainer.addEventListener('scroll', updatePosition, { passive: true });\n\n    return () => {\n      messagesContainer.removeEventListener('scroll', updatePosition);\n    };\n  }, [isDisabled, anchorRef]);\n\n  return updatePosition;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"uGUjDZKl\",\"custom\":\"oc1hpMwv\",\"visible\":\"kqcWe4tf\",\"custom-animated\":\"sx6RTuAU\",\"customAnimated\":\"sx6RTuAU\",\"custom-fade-in\":\"_p445E1b\",\"customFadeIn\":\"_p445E1b\",\"chosen\":\"M62HGuIV\",\"static-icon\":\"MZ2tH980\",\"staticIcon\":\"MZ2tH980\",\"lock\":\"WMpEr5XQ\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../../lib/teact/teact';\n\nimport type { ApiReaction, ApiReactionCustomEmoji, ApiReactionPaid } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useContextMenuHandlers from '../../../../hooks/useContextMenuHandlers';\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport CustomEmoji from '../../../common/CustomEmoji';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiReactionCustomEmoji | ApiReactionPaid;\n  chosen?: boolean;\n  isReady?: boolean;\n  noAppearAnimation?: boolean;\n  style?: string;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n};\n\nconst ReactionSelectorCustomReaction: FC<OwnProps> = ({\n  reaction,\n  chosen,\n  isReady,\n  noAppearAnimation,\n  style,\n  isLocked,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const handleClick = useLastCallback(() => {\n    if (reaction.type === 'paid') {\n      onSendPaidReaction?.();\n      return;\n    }\n\n    onToggleReaction(reaction);\n  });\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onShowPaidReactionModal?.();\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onShowPaidReactionModal, handleContextMenuHide, isContextMenuOpen]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        styles.custom,\n        chosen && reaction.type !== 'paid' && styles.chosen,\n        !noAppearAnimation && isReady && styles.customAnimated,\n        noAppearAnimation && styles.visible,\n      )}\n      ref={ref}\n      style={style}\n      onClick={handleClick}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {reaction.type === 'paid' ? (\n        <AnimatedIcon\n          tgsUrl={LOCAL_TGS_URLS.StarReaction}\n          size={REACTION_SIZE}\n          noLoop={false}\n        />\n      ) : (\n        <CustomEmoji\n          documentId={reaction.documentId}\n          size={REACTION_SIZE}\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorCustomReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReaction } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './ReactionSelectorReaction.module.scss';\n\nconst REACTION_SIZE = 2 * REM;\n\ntype OwnProps = {\n  reaction: ApiAvailableReaction;\n  isReady?: boolean;\n  chosen?: boolean;\n  noAppearAnimation?: boolean;\n  isLocked?: boolean;\n  onToggleReaction: (reaction: ApiReaction) => void;\n};\n\nconst ReactionSelectorReaction: FC<OwnProps> = ({\n  reaction,\n  isReady,\n  noAppearAnimation,\n  chosen,\n  isLocked,\n  onToggleReaction,\n}) => {\n  const mediaAppearData = useMedia(`sticker${reaction.appearAnimation?.id}`, !isReady || noAppearAnimation);\n  const mediaData = useMedia(`document${reaction.selectAnimation?.id}`, !isReady || noAppearAnimation);\n  const staticIconData = useMedia(`document${reaction.staticIcon?.id}`, !noAppearAnimation);\n  const [isAnimationLoaded, markAnimationLoaded] = useFlag();\n\n  const [isFirstPlay, , unmarkIsFirstPlay] = useFlag(true);\n  const [isActivated, activate, deactivate] = useFlag();\n\n  function handleClick() {\n    onToggleReaction(reaction.reaction);\n  }\n\n  return (\n    <div\n      className={buildClassName(styles.root, chosen && styles.chosen)}\n      onClick={handleClick}\n      onMouseEnter={isReady && !isFirstPlay ? activate : undefined}\n    >\n      {noAppearAnimation && (\n        <img\n          className={styles.staticIcon}\n          src={staticIconData}\n          alt={reaction.reaction.emoticon}\n          draggable={false}\n        />\n      )}\n      {!isAnimationLoaded && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.appearAnimation?.id}\n          tgsUrl={mediaAppearData}\n          play={isFirstPlay}\n          noLoop\n          size={REACTION_SIZE}\n          onEnded={unmarkIsFirstPlay}\n          forceAlways\n        />\n      )}\n      {!isFirstPlay && !noAppearAnimation && (\n        <AnimatedSticker\n          key={reaction.selectAnimation?.id}\n          tgsUrl={mediaData}\n          play={isActivated}\n          noLoop\n          size={REACTION_SIZE}\n          onLoad={markAnimationLoaded}\n          onEnded={deactivate}\n          forceAlways\n        />\n      )}\n      {isLocked && (\n        <Icon className={styles.lock} name=\"lock-badge\" />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionSelectorReaction);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiChatReactions,\n  ApiReaction,\n  ApiReactionCount,\n  ApiReactionCustomEmoji,\n  ApiReactionPaid,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\n\nimport {\n  canSendReaction, getReactionKey, isSameReaction, sortReactions,\n} from '../../../../global/helpers';\nimport buildClassName, { createClassNameBuilder } from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Link from '../../../ui/Link';\nimport ReactionSelectorCustomReaction from './ReactionSelectorCustomReaction';\nimport ReactionSelectorReaction from './ReactionSelectorReaction';\n\nimport './ReactionSelector.scss';\n\ntype RenderableReactions = (ApiAvailableReaction | ApiReactionCustomEmoji | ApiReactionPaid)[];\n\ntype OwnProps = {\n  enabledReactions?: ApiChatReactions;\n  isPrivate?: boolean;\n  topReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  currentReactions?: ApiReactionCount[];\n  reactionsLimit?: number;\n  isReady?: boolean;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n  className?: string;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  isForEffects?: boolean;\n  isWithPaidReaction?: boolean;\n  onClose?: NoneToVoidFunction;\n  onToggleReaction: (reaction: ApiReaction) => void;\n  onSendPaidReaction?: NoneToVoidFunction;\n  onShowPaidReactionModal?: NoneToVoidFunction;\n  onShowMore: (position: IAnchorPosition) => void;\n};\n\nconst cn = createClassNameBuilder('ReactionSelector');\nconst REACTIONS_AMOUNT = 7;\nconst FADE_IN_DELAY = 20;\n\nconst ReactionSelector: FC<OwnProps> = ({\n  allAvailableReactions,\n  topReactions,\n  defaultTagReactions,\n  enabledReactions,\n  currentReactions,\n  reactionsLimit,\n  isPrivate,\n  isReady,\n  canPlayAnimatedEmojis,\n  className,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  isForEffects,\n  effectReactions,\n  isWithPaidReaction,\n  onClose,\n  onToggleReaction,\n  onSendPaidReaction,\n  onShowPaidReactionModal,\n  onShowMore,\n}) => {\n  const { openPremiumModal } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n\n  const areReactionsLocked = isInSavedMessages && !isCurrentUserPremium && !isInStoryViewer;\n\n  const shouldUseCurrentReactions = Boolean(reactionsLimit\n    && currentReactions && currentReactions.length >= reactionsLimit);\n\n  const availableReactions = useMemo(() => {\n    const reactions = (() => {\n      if (shouldUseCurrentReactions) return currentReactions?.map((reaction) => reaction.reaction);\n      if (isForEffects) return effectReactions;\n      if (isInSavedMessages) return defaultTagReactions;\n      if (enabledReactions?.type === 'some') return enabledReactions.allowed;\n      return allAvailableReactions?.map((reaction) => reaction.reaction);\n    })();\n\n    const filteredReactions: RenderableReactions = reactions?.map((reaction) => {\n      const isCustomReaction = reaction.type === 'custom';\n      const availableReaction = allAvailableReactions?.find((r) => isSameReaction(r.reaction, reaction));\n\n      if (isForEffects) return availableReaction;\n\n      if ((!isCustomReaction && !availableReaction) || availableReaction?.isInactive) return undefined;\n\n      if (!isPrivate && !shouldUseCurrentReactions\n         && (!enabledReactions || !canSendReaction(reaction, enabledReactions))) {\n        return undefined;\n      }\n\n      return isCustomReaction ? reaction : availableReaction;\n    }).filter(Boolean) || [];\n\n    const sortedReactions = sortReactions(filteredReactions, topReactions);\n    if (isWithPaidReaction) {\n      sortedReactions.unshift({ type: 'paid' });\n    }\n    return sortedReactions;\n  }, [\n    allAvailableReactions, currentReactions, defaultTagReactions, enabledReactions, isInSavedMessages, isPrivate,\n    topReactions, isForEffects, effectReactions, shouldUseCurrentReactions, isWithPaidReaction,\n  ]);\n\n  const reactionsToRender = useMemo(() => {\n    // Component can fit one more if we do not need show more button\n    return availableReactions.length === REACTIONS_AMOUNT + 1\n      ? availableReactions\n      : availableReactions.slice(0, REACTIONS_AMOUNT);\n  }, [availableReactions]);\n  const withMoreButton = reactionsToRender.length < availableReactions.length;\n\n  const userReactionIndexes = useMemo(() => {\n    const chosenReactions = currentReactions?.filter(({ chosenOrder }) => chosenOrder !== undefined) || [];\n    return new Set(chosenReactions.map(({ reaction }) => (\n      reactionsToRender.findIndex((r) => r && isSameReaction('reaction' in r ? r.reaction : r, reaction))\n    )));\n  }, [currentReactions, reactionsToRender]);\n\n  const handleShowMoreClick = useLastCallback(() => {\n    const bound = ref.current?.getBoundingClientRect() || { x: 0, y: 0 };\n    onShowMore({\n      x: bound.x,\n      y: bound.y,\n    });\n  });\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    onClose?.();\n    openPremiumModal({\n      initialSection: 'saved_tags',\n    });\n  });\n\n  const hintText = useMemo(() => {\n    if (isInSavedMessages) {\n      if (!isCurrentUserPremium) {\n        const text = lang('lng_subscribe_tag_about');\n        const parts = text.split('{link}');\n        return (\n          <span>\n            {parts[0]}\n            <Link isPrimary onClick={handleOpenPremiumModal}>\n              {lang('lng_subscribe_tag_link')}\n            </Link>\n            {parts[1]}\n          </span>\n        );\n      }\n\n      return lang('SavedTagReactionsHint2');\n    }\n\n    if (isInStoryViewer) {\n      return lang('StoryReactionsHint');\n    }\n\n    if (isForEffects) {\n      return lang('AddEffectMessageHint');\n    }\n\n    return undefined;\n  }, [isCurrentUserPremium, isInSavedMessages, isInStoryViewer, lang, isForEffects]);\n\n  if (!reactionsToRender.length) return undefined;\n\n  return (\n    <div className={buildClassName(cn('&'), className)} ref={ref}>\n      <div className={cn('bubble-small', lang.isRtl && 'isRtl')} />\n      <div className={cn('items-wrapper')}>\n        <div className={cn('bubble-big', lang.isRtl && 'isRtl')} />\n        <div className={cn('items')}>\n          {hintText && <div className={cn('hint')}>{hintText}</div>}\n          <div className={cn('reactions')} dir={lang.isRtl ? 'rtl' : undefined}>\n            {reactionsToRender.map((reaction, i) => (\n              'reaction' in reaction ? (\n                <ReactionSelectorReaction\n                  key={getReactionKey(reaction.reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                />\n              ) : (\n                <ReactionSelectorCustomReaction\n                  key={getReactionKey(reaction)}\n                  isReady={isReady}\n                  onToggleReaction={onToggleReaction}\n                  onSendPaidReaction={onSendPaidReaction}\n                  onShowPaidReactionModal={onShowPaidReactionModal}\n                  reaction={reaction}\n                  noAppearAnimation={!canPlayAnimatedEmojis}\n                  chosen={userReactionIndexes.has(i)}\n                  isLocked={areReactionsLocked}\n                  style={`--_animation-delay: ${(REACTIONS_AMOUNT - i) * FADE_IN_DELAY}ms`}\n                />\n              )\n            ))}\n            {withMoreButton && (\n              <Button\n                color=\"translucent\"\n                className={cn('show-more')}\n                onClick={handleShowMoreClick}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            )}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(ReactionSelector);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\n\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectCurrentChat, selectUser } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  contactName?: string;\n};\n\nconst DeleteMemberModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  userId,\n  contactName,\n  onClose,\n}) => {\n  const { deleteChatMember } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteChatMember = useCallback(() => {\n    deleteChatMember({ chatId: chat!.id, userId: userId! });\n    onClose();\n  }, [chat, deleteChatMember, onClose, userId]);\n\n  if (!chat || !userId) {\n    return undefined;\n  }\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('GroupRemoved.Remove')}\n      textParts={renderText(lang('PeerInfo.Confirm.RemovePeer', contactName))}\n      confirmLabel={lang('lng_box_remove')}\n      confirmHandler={handleDeleteChatMember}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const chat = selectCurrentChat(global);\n    const user = userId && selectUser(global, userId);\n    const contactName = user ? getUserFirstOrLastName(user) : undefined;\n\n    return {\n      chat,\n      contactName,\n    };\n  },\n)(DeleteMemberModal));\n","import { useEffect, useRef } from '../../../lib/teact/teact';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nexport default function useAsyncRendering<T extends any[]>(dependencies: T, delay?: number) {\n  const isDisabled = delay === undefined;\n  const shouldRenderRef = useRef(isDisabled);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isDisabled) {\n      return;\n    }\n\n    shouldRenderRef.current = false;\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n      timeoutRef.current = undefined;\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  useEffect(() => {\n    if (isDisabled || shouldRenderRef.current) {\n      return;\n    }\n\n    const exec = () => {\n      shouldRenderRef.current = true;\n      forceUpdate();\n    };\n\n    if (delay! > 0) {\n      timeoutRef.current = window.setTimeout(exec, delay);\n    } else {\n      exec();\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, dependencies);\n\n  return shouldRenderRef.current;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Gi8Nokbl\",\"header\":\"H01lE7mv\",\"title\":\"VQbs04hT\",\"caption\":\"X7bBlGdi\",\"table\":\"s5beXqqL\",\"tableCell\":\"gvrp3KoR\",\"tableHeading\":\"IHb3ZATQ\",\"tableValue\":\"zAPFdKbZ\",\"tableSecondaryValue\":\"_mYEmh_u\",\"value\":\"idLrmbhS\",\"negative\":\"SLfwGHQC\",\"decimalPart\":\"ZAfXkuWL\",\"decimalUsdPart\":\"HRXb_S2M\",\"toncoin\":\"it39BC_c\"};","import type { ReactNode } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type {\n  ApiBoostStatistics, ApiChannelMonetizationStatistics,\n  ApiChannelStatistics, ApiGroupStatistics, ApiPostStatistics, StatisticsOverviewItem,\n} from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatFullDate } from '../../../util/dates/dateFormat';\nimport { formatInteger, formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsOverview.module.scss';\n\ntype OverviewCell = {\n  name: string;\n  title: string;\n  isPercentage?: boolean;\n  withAbsoluteValue?: boolean;\n  isPlain?: boolean;\n  isApproximate?: boolean;\n};\n\nconst CHANNEL_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'followers', title: 'ChannelStats.Overview.Followers' },\n    { name: 'enabledNotifications', title: 'ChannelStats.Overview.EnabledNotifications', isPercentage: true },\n  ],\n  [\n    { name: 'viewsPerPost', title: 'ChannelStats.Overview.ViewsPerPost' },\n    { name: 'viewsPerStory', title: 'ChannelStats.Overview.ViewsPerStory' },\n  ],\n  [\n    { name: 'sharesPerPost', title: 'ChannelStats.Overview.SharesPerPost' },\n    { name: 'sharesPerStory', title: 'ChannelStats.Overview.SharesPerStory' },\n  ],\n  [\n    { name: 'reactionsPerPost', title: 'ChannelStats.Overview.ReactionsPerPost' },\n    { name: 'reactionsPerStory', title: 'ChannelStats.Overview.ReactionsPerStory' },\n  ],\n];\n\nconst GROUP_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'members', title: 'Stats.GroupMembers' },\n    { name: 'messages', title: 'Stats.GroupMessages' },\n  ],\n  [\n    { name: 'viewers', title: 'Stats.GroupViewers' },\n    { name: 'posters', title: 'Stats.GroupPosters' },\n  ],\n];\n\nconst MESSAGE_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Stats.Message.Views', isPlain: true },\n    { name: 'publicForwards', title: 'Stats.Message.PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    {\n      name: 'forwardsCount', title: 'Stats.Message.PrivateShares', isPlain: true, isApproximate: true,\n    },\n  ],\n];\n\nconst STORY_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'viewsCount', title: 'Channel.Stats.Overview.Views', isPlain: true },\n    { name: 'publicForwards', title: 'PublicShares', isPlain: true },\n  ],\n  [\n    { name: 'reactionsCount', title: 'Channel.Stats.Overview.Reactions', isPlain: true },\n    { name: 'forwardsCount', title: 'PrivateShares', isPlain: true },\n  ],\n];\n\nconst BOOST_OVERVIEW: OverviewCell[][] = [\n  [\n    { name: 'level', title: 'Stats.Boosts.Level', isPlain: true },\n    {\n      name: 'premiumSubscribers',\n      title: 'Stats.Boosts.PremiumSubscribers',\n      isPercentage: true,\n      isApproximate: true,\n      withAbsoluteValue: true,\n    },\n  ],\n  [\n    { name: 'boosts', title: 'Stats.Boosts.ExistingBoosts', isPlain: true },\n    { name: 'remainingBoosts', title: 'Stats.Boosts.BoostsToLevelUp', isPlain: true },\n  ],\n];\n\ntype StatisticsType = 'channel' | 'group' | 'message' | 'boost' | 'story' | 'monetization';\n\nexport type OwnProps = {\n  type: StatisticsType;\n  title?: string;\n  className?: string;\n  isToncoin?: boolean;\n  statistics:\n  ApiChannelStatistics |\n  ApiGroupStatistics |\n  ApiPostStatistics |\n  ApiBoostStatistics |\n  ApiChannelMonetizationStatistics;\n  subtitle?: ReactNode;\n};\n\nconst StatisticsOverview: FC<OwnProps> = ({\n  title,\n  type,\n  statistics,\n  isToncoin,\n  className,\n  subtitle,\n}) => {\n  const lang = useOldLang();\n\n  const renderOverviewItemValue = ({ change, percentage }: StatisticsOverviewItem) => {\n    if (!change) {\n      return undefined;\n    }\n\n    const isChangeNegative = Number(change) < 0;\n\n    return (\n      <span className={buildClassName(styles.value, isChangeNegative && styles.negative)}>\n        {isChangeNegative ? `-${formatIntegerCompact(Math.abs(change))}` : `+${formatIntegerCompact(change)}`}\n        {percentage && (\n          <>\n            {' '}\n            ({percentage}%)\n          </>\n        )}\n      </span>\n    );\n  };\n\n  const renderBalanceCell = (balance: number, usdRate: number, text: string) => {\n    const [integerTonPart, decimalTonPart] = balance.toFixed(4).split('.');\n    const [integerUsdPart, decimalUsdPart] = (balance * usdRate).toFixed(2).split('.');\n    return (\n      <div>\n        <Icon className={styles.toncoin} name=\"toncoin\" />\n        <b className={styles.tableValue}>\n          {integerTonPart}<span className={styles.decimalPart}>.{decimalTonPart}</span>\n        </b>\n        {' '}\n        <span className={styles.tableHeading}>\n          ≈ ${integerUsdPart}<span className={styles.decimalUsdPart}>.{decimalUsdPart}</span>\n        </span>\n        <h3 className={styles.tableHeading}>{lang(text)}</h3>\n      </div>\n    );\n  };\n\n  const { period } = (statistics as ApiGroupStatistics);\n  const { balances, usdRate } = (statistics as ApiChannelMonetizationStatistics);\n\n  const schema = getSchemaByType(type);\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      <div className={styles.header}>\n        {title && (\n          <div className={styles.title}>\n            {title}\n          </div>\n        )}\n\n        {period && (\n          <div className={styles.caption}>\n            {formatFullDate(lang, period.minDate * 1000)} — {formatFullDate(lang, period.maxDate * 1000)}\n          </div>\n        )}\n      </div>\n\n      <table className={styles.table}>\n        {isToncoin ? (\n          <tr>\n            <td className={styles.tableCell}>\n              {renderBalanceCell(balances?.availableBalance || 0, usdRate || 0, 'lng_channel_earn_available')}\n              {renderBalanceCell(balances?.currentBalance || 0, usdRate || 0, 'lng_channel_earn_reward')}\n              {renderBalanceCell(balances?.overallRevenue || 0, usdRate || 0, 'lng_channel_earn_total')}\n            </td>\n          </tr>\n        ) : schema.map((row) => (\n          <tr>\n            {row.map((cell: OverviewCell) => {\n              const field = (statistics as any)[cell.name];\n\n              if (cell.isPlain) {\n                return (\n                  <td className={styles.tableCell}>\n                    <b className={styles.tableValue}>\n                      {`${cell.isApproximate ? '≈' : ''}${formatInteger(field)}`}\n                    </b>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              if (cell.isPercentage) {\n                return (\n                  <td className={styles.tableCell}>\n                    {cell.withAbsoluteValue && (\n                      <span className={styles.tableValue}>\n                        {`${cell.isApproximate ? '≈' : ''}${formatInteger(field.part)}`}\n                      </span>\n                    )}\n                    <span className={cell.withAbsoluteValue ? styles.tableSecondaryValue : styles.tableValue}>\n                      {field.percentage}%\n                    </span>\n                    <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                  </td>\n                );\n              }\n\n              return (\n                <td className={styles.tableCell}>\n                  <b className={styles.tableValue}>\n                    {formatIntegerCompact(field.current)}\n                  </b>\n                  {' '}\n                  {renderOverviewItemValue(field)}\n                  <h3 className={styles.tableHeading}>{lang(cell.title)}</h3>\n                </td>\n              );\n            })}\n          </tr>\n        ))}\n      </table>\n\n      {subtitle}\n    </div>\n  );\n};\n\nfunction getSchemaByType(type: StatisticsType) {\n  switch (type) {\n    case 'group':\n      return GROUP_OVERVIEW;\n    case 'message':\n      return MESSAGE_OVERVIEW;\n    case 'boost':\n      return BOOST_OVERVIEW;\n    case 'story':\n      return STORY_OVERVIEW;\n    case 'channel':\n    default:\n      return CHANNEL_OVERVIEW;\n  }\n}\n\nexport default memo(StatisticsOverview);\n","import React, {\n  beginHeavyAnimation, memo, useEffect, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiUser } from '../../api/types';\nimport type { GlobalState } from '../../global/types';\n\nimport { ANIMATION_END_DELAY, PREVIEW_AVATAR_COUNT } from '../../config';\nimport { selectIsForumPanelOpen, selectPerformanceSettingsValue, selectTabState } from '../../global/selectors';\nimport { animateClosing, animateOpening, ANIMATION_DURATION } from './helpers/ribbonAnimation';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransition from '../../hooks/useShowTransition';\nimport useStoryPreloader from './hooks/useStoryPreloader';\n\nimport Avatar from '../common/Avatar';\n\nimport styles from './StoryToggler.module.scss';\n\ninterface OwnProps {\n  isArchived?: boolean;\n  canShow?: boolean;\n}\n\ninterface StateProps {\n  currentUserId: string;\n  orderedPeerIds: string[];\n  isShown: boolean;\n  isForumPanelOpen?: boolean;\n  withAnimation?: boolean;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n  peerStories: GlobalState['stories']['byPeerId'];\n}\n\nconst PRELOAD_PEERS = 5;\n\nfunction StoryToggler({\n  currentUserId,\n  orderedPeerIds,\n  usersById,\n  chatsById,\n  canShow,\n  isShown,\n  isForumPanelOpen,\n  isArchived,\n  withAnimation,\n  peerStories,\n}: OwnProps & StateProps) {\n  const { toggleStoryRibbon } = getActions();\n\n  const lang = useOldLang();\n\n  const peers = useMemo(() => {\n    if (orderedPeerIds.length === 1) {\n      return [usersById[orderedPeerIds[0]] || chatsById[orderedPeerIds[0]]];\n    }\n\n    return orderedPeerIds\n      .map((id) => usersById[id] || chatsById[id])\n      .filter((peer) => peer && peer.id !== currentUserId)\n      .slice(0, PREVIEW_AVATAR_COUNT)\n      .reverse();\n  }, [currentUserId, orderedPeerIds, usersById, chatsById]);\n\n  const closeFriends = useMemo(() => {\n    if (!peers?.length) return {};\n    return peers.reduce((acc, peer) => {\n      const stories = peerStories[peer.id];\n      if (!stories) return acc;\n\n      const isCloseFriend = stories.orderedIds.some((id) => {\n        const story = stories.byId[id];\n        if (!story || !('isForCloseFriends' in story)) return false;\n        const isRead = stories.lastReadId && story.id <= stories.lastReadId;\n        return story.isForCloseFriends && !isRead;\n      });\n\n      acc[peer.id] = isCloseFriend;\n      return acc;\n    }, {} as Record<string, boolean>);\n  }, [peerStories, peers]);\n\n  const preloadPeerIds = useMemo(() => {\n    return orderedPeerIds.slice(0, PRELOAD_PEERS);\n  }, [orderedPeerIds]);\n\n  useStoryPreloader(preloadPeerIds);\n\n  const isVisible = canShow && isShown;\n  // For some reason, setting 'slow' here also fixes scroll freezes on iOS when collapsing Story Ribbon\n  const { ref, shouldRender } = useShowTransition<HTMLButtonElement>({\n    isOpen: isVisible,\n    className: 'slow',\n    withShouldRender: true,\n  });\n\n  useEffect(() => {\n    if (!withAnimation || isForumPanelOpen) return;\n    if (isVisible) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(isArchived);\n    } else {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(isArchived);\n    }\n  }, [isArchived, isVisible, withAnimation, isForumPanelOpen]);\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  return (\n    <button\n      ref={ref}\n      type=\"button\"\n      id=\"StoryToggler\"\n      className={styles.root}\n      aria-label={lang('Chat.Context.Peer.OpenStory')}\n      onClick={() => toggleStoryRibbon({ isShown: true, isArchived })}\n      dir={lang.isRtl ? 'rtl' : undefined}\n    >\n      {peers.map((peer) => (\n        <Avatar\n          key={peer.id}\n          peer={peer}\n          size=\"tiny\"\n          className={styles.avatar}\n          withStorySolid\n          forceFriendStorySolid={closeFriends[peer.id]}\n        />\n      ))}\n    </button>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { isArchived }): StateProps => {\n  const { orderedPeerIds: { archived, active }, byPeerId } = global.stories;\n  const { storyViewer: { isRibbonShown, isArchivedRibbonShown } } = selectTabState(global);\n  const isForumPanelOpen = selectIsForumPanelOpen(global);\n  const withAnimation = selectPerformanceSettingsValue(global, 'storyRibbonAnimations');\n\n  return {\n    currentUserId: global.currentUserId!,\n    orderedPeerIds: isArchived ? archived : active,\n    isShown: isArchived ? !isArchivedRibbonShown : !isRibbonShown,\n    isForumPanelOpen,\n    withAnimation,\n    usersById: global.users.byId,\n    chatsById: global.chats.byId,\n    peerStories: byPeerId,\n  };\n})(StoryToggler));\n","import { ANIMATION_END_DELAY } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport ribbonStyles from '../StoryRibbon.module.scss';\nimport togglerStyles from '../StoryToggler.module.scss';\n\nexport const ANIMATION_DURATION = 250;\nconst RIBBON_OFFSET = 0.25 * REM;\nconst RIBBON_Z_INDEX = 11;\nconst STROKE_OFFSET = 0.1875 * REM;\nconst CANVAS_OFFSET = 0.125 * REM;\n\nconst callbacks: Set<NoneToVoidFunction> = new Set();\n\nexport function animateOpening(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container, toggler, leftMainHeader, ribbonPeers, toggleAvatars,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n\n  const { bottom: headerBottom, right: headerRight } = leftMainHeader.getBoundingClientRect();\n  const toTop = headerBottom + RIBBON_OFFSET;\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    let {\n      // eslint-disable-next-line prefer-const\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = toggleAvatar.getBoundingClientRect();\n\n    const {\n      left: toLeft,\n      width: toWidth,\n    } = peer.getBoundingClientRect();\n\n    if (toLeft > headerRight) {\n      return;\n    }\n\n    fromLeft -= STROKE_OFFSET;\n    fromWidth += 2 * STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft;\n    const fromTranslateY = fromTop - toTop;\n    const fromScale = fromWidth / toWidth;\n\n    fromTop -= STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft + 2 * STROKE_OFFSET;\n    const toTranslateY = toTop - fromTop + STROKE_OFFSET;\n    const toScale = toWidth / (fromWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      if (!toggleAvatar) return;\n      const ghost = createGhost(peer);\n\n      let ghost2: HTMLElement | undefined;\n\n      // If this is a toogle avatar we create a second ghost and do crossfade animation\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        // Else we animate only name\n        ghost.classList.add(togglerStyles.ghostAnimateName);\n      }\n\n      applyStyles(ghost, {\n        top: `${toTop}px`,\n        left: `${toLeft}px`,\n        zIndex: `${zIndex}`,\n        opacity: ghost2 ? '0' : '',\n        transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${fromTop}px`,\n          left: `${fromLeft}px`,\n          zIndex: `${zIndex}`,\n        });\n      }\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n      toggleAvatar.classList.add('animating');\n      peer.classList.add('animating');\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: '',\n          transform: '',\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2, {\n            opacity: '0',\n            transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n          });\n        } else {\n          ghost.classList.add(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            toggleAvatar?.classList.remove('animating');\n            peer.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nexport function animateClosing(isArchived?: boolean) {\n  cancelDelayedCallbacks();\n\n  const {\n    container,\n    toggler,\n    toggleAvatars,\n    ribbonPeers,\n    leftMainHeader,\n  } = getHTMLElements(isArchived);\n\n  if (!toggler || !toggleAvatars || !ribbonPeers || !container || !leftMainHeader) {\n    return;\n  }\n  const { right: headerRight } = leftMainHeader.getBoundingClientRect();\n\n  // Toggle avatars are in the reverse order\n  const lastToggleAvatar = toggleAvatars[0];\n  const firstToggleAvatar = toggleAvatars[toggleAvatars.length - 1];\n  const lastId = getPeerId(lastToggleAvatar);\n\n  Array.from(ribbonPeers).reverse().forEach((peer, index, { length }) => {\n    const id = getPeerId(peer);\n    if (!id) return;\n    const isLast = id === lastId;\n    let toggleAvatar = selectByPeerId(toggler, id);\n    let zIndex = RIBBON_Z_INDEX + index + 1;\n    if (!toggleAvatar) {\n      const isSelf = index === length - 1;\n\n      // Self story should appear from the first toggle avatar\n      toggleAvatar = isSelf ? firstToggleAvatar : lastToggleAvatar;\n      zIndex = RIBBON_Z_INDEX;\n    }\n\n    if (!toggleAvatar) return;\n\n    const {\n      top: fromTop,\n      left: fromLeft,\n      width: fromWidth,\n    } = peer.getBoundingClientRect();\n\n    let {\n      left: toLeft,\n      width: toWidth,\n      top: toTop,\n    } = toggleAvatar.getBoundingClientRect();\n\n    if (fromLeft > headerRight) {\n      return;\n    }\n\n    toLeft -= STROKE_OFFSET;\n    toWidth += 2 * STROKE_OFFSET;\n\n    const toTranslateX = toLeft - fromLeft;\n    const toTranslateY = toTop - fromTop - CANVAS_OFFSET;\n    const toScale = toWidth / fromWidth;\n\n    toTop -= STROKE_OFFSET;\n\n    const fromTranslateX = fromLeft - toLeft + 2 * STROKE_OFFSET;\n    const fromTranslateY = fromTop - toTop + STROKE_OFFSET;\n    const fromScale = fromWidth / (toWidth + 2 * STROKE_OFFSET);\n\n    requestMutation(() => {\n      const ghost = createGhost(peer);\n      let ghost2: HTMLElement | undefined;\n\n      if (zIndex > RIBBON_Z_INDEX) {\n        ghost2 = createGhost(toggleAvatar!);\n        if (isLast) {\n          ghost2.classList.add(togglerStyles.ghostLast);\n        }\n      } else {\n        ghost.classList.add(togglerStyles.ghostAnimateName, togglerStyles.ghostRevealName);\n      }\n\n      applyStyles(ghost, {\n        top: `${fromTop}px`,\n        left: `${fromLeft}px`,\n        width: `${fromWidth}px`,\n        zIndex: `${zIndex}`,\n      });\n\n      if (ghost2) {\n        applyStyles(ghost2, {\n          top: `${toTop}px`,\n          left: `${toLeft}px`,\n          zIndex: `${zIndex}`,\n          opacity: '0',\n          transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScale})`,\n        });\n      }\n\n      peer.classList.add('animating');\n      toggleAvatar!.classList.add('animating');\n\n      container.appendChild(ghost);\n      if (ghost2) {\n        container.appendChild(ghost2);\n      }\n\n      requestMutation(() => {\n        applyStyles(ghost, {\n          opacity: ghost2 ? '0' : '',\n          transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScale})`,\n        });\n\n        if (ghost2) {\n          applyStyles(ghost2!, {\n            opacity: '',\n            transform: '',\n          });\n        } else {\n          ghost.classList.remove(togglerStyles.ghostRevealName);\n        }\n\n        const cb = createDelayedCallback(() => {\n          requestMutation(() => {\n            if (container.contains(ghost)) {\n              container.removeChild(ghost);\n            }\n            if (ghost2 && container.contains(ghost2)) {\n              container.removeChild(ghost2);\n            }\n            peer.classList.remove('animating');\n            toggleAvatar!.classList.remove('animating');\n          });\n        }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n\n        callbacks.add(cb);\n      });\n    });\n  });\n}\n\nfunction getHTMLElements(isArchived?: boolean) {\n  let container = document.getElementById('LeftColumn');\n  if (container && isArchived) {\n    container = container.querySelector<HTMLElement>('.ArchivedChats');\n  }\n  if (!container) return {};\n  const toggler = container.querySelector<HTMLElement>('#StoryToggler');\n  const ribbon = container.querySelector<HTMLElement>('#StoryRibbon');\n  const leftMainHeader = container.querySelector<HTMLElement>('.left-header');\n  const ribbonPeers = ribbon?.querySelectorAll<HTMLElement>(`.${ribbonStyles.peer}`);\n  const toggleAvatars = toggler?.querySelectorAll<HTMLElement>('.Avatar');\n\n  return {\n    container,\n    toggler,\n    leftMainHeader,\n    ribbonPeers,\n    toggleAvatars,\n  };\n}\n\nfunction createGhost(sourceEl: HTMLElement) {\n  const ghost = sourceEl.cloneNode(true) as HTMLElement;\n  ghost.classList.add(togglerStyles.ghost);\n\n  // Avoid source animating class being copied to the ghost\n  ghost.classList.remove('animating');\n\n  ghost.draggable = false;\n  ghost.oncontextmenu = stopEvent;\n\n  const sourceCanvas = sourceEl.querySelector('canvas');\n  if (sourceCanvas) {\n    const canvas = ghost.querySelector('canvas');\n    canvas?.getContext('2d')?.drawImage(sourceCanvas, 0, 0);\n  }\n\n  return ghost;\n}\n\nfunction getPeerId(el: HTMLElement) {\n  return el?.getAttribute('data-peer-id');\n}\n\nfunction selectByPeerId(el: HTMLElement, id: string) {\n  return el?.querySelector<HTMLElement>(`[data-peer-id=\"${id}\"]`);\n}\n\nfunction createDelayedCallback(callback: NoneToVoidFunction, ms: number) {\n  const timeout = setTimeout(callback, ms);\n\n  return () => {\n    clearTimeout(timeout);\n    callback();\n  };\n}\n\nfunction cancelDelayedCallbacks() {\n  callbacks.forEach((cb) => cb());\n  callbacks.clear();\n}\n","export const PRIMARY_VIDEO_MIME = 'video/mp4; codecs=hvc1.1.6.L63.00';\nexport const SECONDARY_VIDEO_MIME = 'video/mp4; codecs=avc1.64001E';\n","import { useEffect } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport { selectPeerStories } from '../../../global/selectors';\nimport unloadVideo from '../../../util/browser/unloadVideo';\nimport { preloadImage } from '../../../util/files';\nimport * as mediaLoader from '../../../util/mediaLoader';\nimport { getProgressiveUrl } from '../../../util/mediaLoader';\nimport { makeProgressiveLoader } from '../../../util/progressiveLoader';\nimport { pause } from '../../../util/schedulers';\nimport { PRIMARY_VIDEO_MIME } from '../helpers/videoFormats';\n\nimport { checkIfStreamingSupported } from '../../../hooks/useStreaming';\n\nconst preloadedStories: Record<string, Set<number>> = {};\nconst PEER_STORIES_FOR_PRELOAD = 5;\nconst PROGRESSIVE_PRELOAD_DURATION = 1000;\nconst STREAM_PRELOAD_SIZE = 1024 * 1024 * 2; // 2 MB\n\nconst FIRST_PRELOAD_DELAY = 1000;\nconst canPreload = pause(FIRST_PRELOAD_DELAY);\n\ntype MediaHash = { hash: string; format: ApiMediaFormat; isStream?: boolean };\n\nfunction useStoryPreloader(peerIds: string[]): void;\nfunction useStoryPreloader(peerId?: string, aroundStoryId?: number): void;\nfunction useStoryPreloader(peerId?: string | string[], aroundStoryId?: number) {\n  useEffect(() => {\n    if (peerId === undefined) return;\n\n    const preloadHashes = async (mediaHashes: Array<MediaHash>) => {\n      await canPreload;\n      mediaHashes.forEach(({ hash, format, isStream }) => {\n        if (isStream) {\n          preloadStream(hash);\n          return;\n        }\n        mediaLoader.fetch(\n          hash,\n          format,\n        )\n          .then((result) => {\n            if (!result) return;\n\n            if (format === ApiMediaFormat.Progressive) {\n              preloadProgressive(result);\n            }\n            if (format === ApiMediaFormat.BlobUrl) {\n              preloadImage(result);\n            }\n          });\n      });\n    };\n\n    const peerIds = Array.isArray(peerId) ? peerId : [peerId];\n\n    peerIds.forEach((id) => {\n      const storyId = aroundStoryId || getGlobal().stories.byPeerId[id]?.orderedIds?.[0];\n      if (!storyId) return;\n      preloadHashes(getPreloadMediaHashes(id, storyId));\n    });\n  }, [aroundStoryId, peerId]);\n}\n\nfunction findIdsAroundCurrentId<T>(ids: T[], currentId: T, aroundAmount: number): T[] {\n  const currentIndex = ids.indexOf(currentId);\n  const start = Math.max(currentIndex - aroundAmount, 0);\n  const end = Math.min(currentIndex + aroundAmount, ids.length);\n  return ids.slice(start, end);\n}\n\nfunction getPreloadMediaHashes(peerId: string, storyId: number) {\n  const peerStories = selectPeerStories(getGlobal(), peerId);\n  if (!peerStories || !peerStories.orderedIds?.length) {\n    return [];\n  }\n\n  const preloadIds = findIdsAroundCurrentId(peerStories.orderedIds, storyId, PEER_STORIES_FOR_PRELOAD);\n\n  const mediaHashes: Array<MediaHash> = [];\n  preloadIds.forEach((currentStoryId) => {\n    if (preloadedStories[peerId]?.has(currentStoryId)) {\n      return;\n    }\n\n    const story = peerStories.byId[currentStoryId];\n    if (!story || !('content' in story)) {\n      return;\n    }\n\n    const isVideo = Boolean(story.content.video);\n\n    // Media\n    mediaHashes.push({\n      hash: getStoryMediaHash(story, 'full'),\n      format: isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl,\n      isStream: isVideo && checkIfStreamingSupported(PRIMARY_VIDEO_MIME),\n    });\n    // Thumbnail\n    mediaHashes.push({ hash: getStoryMediaHash(story), format: ApiMediaFormat.BlobUrl });\n    if (story.content.altVideos) {\n      mediaHashes.push({\n        hash: getStoryMediaHash(story, 'full', true)!,\n        format: ApiMediaFormat.Progressive,\n      });\n    }\n\n    preloadedStories[peerId] = (preloadedStories[peerId] || new Set()).add(currentStoryId);\n  });\n\n  return mediaHashes;\n}\n\nfunction preloadProgressive(url: string) {\n  const head = document.head;\n  const video = document.createElement('video');\n  video.preload = 'auto';\n  video.src = url;\n  video.muted = true;\n  video.autoplay = true;\n  video.disableRemotePlayback = true;\n  video.style.display = 'none';\n  head.appendChild(video);\n  video.load();\n  setTimeout(() => {\n    unloadVideo(video);\n    head.removeChild(video);\n  }, PROGRESSIVE_PRELOAD_DURATION);\n}\n\n// eslint-disable-next-line no-async-without-await/no-async-without-await\nasync function preloadStream(hash: string) {\n  const loader = makeProgressiveLoader(getProgressiveUrl(hash));\n  let cachedSize = 0;\n  for await (const chunk of loader) {\n    cachedSize += chunk.byteLength;\n    if (cachedSize >= STREAM_PRELOAD_SIZE) {\n      break;\n    }\n  }\n}\n\nexport default useStoryPreloader;\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"RXAMu4VD\",\"mediaArea\":\"pruw1nLm\",\"preview\":\"_5HkplWee\",\"shiny\":\"xFjJpeOA\",\"wave\":\"Ux0tlNbE\",\"light\":\"_7esBA3m\",\"dark\":\"eic2vQ8c\",\"reactionBackground\":\"c3ajA3hg\",\"flipped\":\"furSXGdL\",\"reaction\":\"Et3MvYmN\",\"withCount\":\"mFTLUHm2\",\"reactionCount\":\"Tr8mYyDk\",\"weather\":\"KBjMtRUS\",\"weatherInner\":\"IFChB3tD\",\"temperature\":\"_ke1UBIl\"};","import React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaAreaSuggestedReaction, ApiStory } from '../../../api/types';\n\nimport { getStoryKey, isSameReaction, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport ReactionAnimatedEmoji from '../../common/reactions/ReactionAnimatedEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  mediaArea: ApiMediaAreaSuggestedReaction;\n  index: number;\n  isPreview?: boolean;\n  className?: string;\n  style?: string;\n};\n\nconst REACTION_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 4;\n\nconst MediaAreaSuggestedReaction = ({\n  story,\n  mediaArea,\n  index,\n  className,\n  style,\n  isPreview,\n}: OwnProps) => {\n  const { sendStoryReaction } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(1.5 * REM);\n\n  const { peerId, id, views } = story;\n  const { reactions } = views || {};\n  const { reaction, isDark, isFlipped } = mediaArea;\n\n  const isChannel = !isUserId(peerId);\n  const containerId = `${getStoryKey(peerId, id)}-${index}-${isPreview ? 'preview' : 'viewer'}`;\n\n  const reactionCount = useMemo(() => (\n    reactions?.find((r) => isSameReaction(r.reaction, reaction))?.count\n  ), [reaction, reactions]);\n  const shouldDisplayCount = !isPreview && Boolean(reactionCount) && isChannel;\n\n  const updateCustomEmojiSize = useLastCallback(() => {\n    if (!ref.current) return;\n    const height = ref.current.clientHeight;\n    setCustomEmojiSize(Math.round(height * REACTION_SIZE_MULTIPLIER));\n  });\n\n  useEffectWithPrevDeps(([prevReactionCount]) => {\n    if (Boolean(reactionCount) !== Boolean(prevReactionCount)) {\n      updateCustomEmojiSize();\n    }\n  }, [reactionCount]);\n\n  useResizeObserver(ref, updateCustomEmojiSize);\n\n  const handleClick = useLastCallback(() => {\n    sendStoryReaction({\n      peerId,\n      storyId: id,\n      containerId,\n      reaction,\n    });\n  });\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(isDark ? styles.dark : styles.light, className)}\n      style={buildStyle(style, `--custom-emoji-size: ${customEmojiSize}px`)}\n      onClick={handleClick}\n    >\n      <div\n        className={buildClassName(styles.reactionBackground, isFlipped && styles.flipped)}\n      />\n      {Boolean(customEmojiSize) && (\n        <ReactionAnimatedEmoji\n          className={buildClassName(styles.reaction, shouldDisplayCount && styles.withCount)}\n          reaction={reaction}\n          containerId={containerId}\n          size={customEmojiSize}\n          effectSize={customEmojiSize * EFFECT_SIZE_MULTIPLIER}\n          shouldPause={isPreview}\n          shouldLoop={!isPreview}\n        />\n      )}\n      {shouldDisplayCount && (\n        <span className={styles.reactionCount}>{reactionCount}</span>\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaAreaSuggestedReaction);\n","import React, {\n  type FC, memo,\n  useLayoutEffect,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { setExtraStyles } from '../../../lib/teact/teact-dom';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiMediaAreaWeather, ApiSticker } from '../../../api/types';\n\nimport { requestForcedReflow, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectRestrictedEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { convertToRGBA, getTextColor } from '../../../util/colors';\nimport { formatTemperature } from '../../../util/formatTemperature';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  mediaArea: ApiMediaAreaWeather;\n  className?: string;\n  style?: string;\n  isPreview?: boolean;\n};\n\ntype StateProps = {\n  restrictedEmoji?: ApiSticker;\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.7;\nconst TEMPERATURE_SIZE = 32;\n\nconst MediaAreaWeather: FC<OwnProps & StateProps> = ({\n  mediaArea,\n  className,\n  style,\n  restrictedEmoji,\n  isPreview,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [customEmojiSize, setCustomEmojiSize] = useState(0);\n\n  const { temperatureC, color } = mediaArea;\n\n  const backgroundColor = convertToRGBA(color);\n  const textColor = getTextColor(color);\n\n  const updateCustomSize = useLastCallback((isImmediate?: boolean) => {\n    if (!ref.current) return undefined;\n    const el = ref.current;\n\n    const height = el.clientHeight;\n    const customEmojiHeight = Math.round(height * EMOJI_SIZE_MULTIPLIER);\n    setCustomEmojiSize(customEmojiHeight);\n    const applyFn = () => {\n      setExtraStyles(el, {\n        '--custom-emoji-size': `${customEmojiHeight}px`,\n        'font-size': `${height / TEMPERATURE_SIZE}rem`,\n      });\n    };\n\n    if (isImmediate) return applyFn;\n\n    requestMutation(applyFn);\n\n    return undefined;\n  });\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => updateCustomSize(true));\n  }, []);\n\n  useResizeObserver(ref, () => updateCustomSize());\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(styles.weather, className)}\n      style={buildStyle(\n        style,\n        `--custom-background-color: ${backgroundColor}`,\n        `color: ${textColor}`,\n      )}\n    >\n      <div className={styles.weatherInner}>\n        {restrictedEmoji && (\n          <CustomEmoji\n            key={restrictedEmoji.id}\n            documentId={restrictedEmoji.id}\n            size={customEmojiSize}\n            noPlay={isPreview}\n            withTranslucentThumb\n            forceAlways\n          />\n        )}\n        <p className={styles.temperature}>\n          {formatTemperature(temperatureC)}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, ownProps): StateProps => {\n  const { mediaArea } = ownProps;\n  const restrictedEmoji = selectRestrictedEmoji(global, mediaArea.emoji);\n  return { restrictedEmoji };\n})(MediaAreaWeather));\n","export const formatTemperature = (temperatureC: number) => {\n  const isFahrenheit = Boolean(navigator.language === 'en-US');\n  return isFahrenheit ? `${Math.round((temperatureC * 9) / 5 + 32)}°F` : `${Math.round(temperatureC)}°C`;\n};\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMediaArea, ApiStory } from '../../../api/types';\n\nimport { MOBILE_SCREEN_MAX_WIDTH } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nimport MediaAreaSuggestedReaction from './MediaAreaSuggestedReaction';\nimport MediaAreaWeather from './MediaAreaWeather';\n\nimport styles from './MediaArea.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  isActive?: boolean;\n  isStoryPlaying?: boolean;\n  className?: string;\n};\n\nconst STORY_ASPECT_RATIO = 9 / 16;\nconst PERCENTAGE_BASE = 100;\n\nconst NO_SHINY_TYPES = new Set<ApiMediaArea['type']>(['channelPost', 'uniqueGift']);\n\nconst MediaAreaOverlay = ({\n  story, isActive, className, isStoryPlaying,\n}: OwnProps) => {\n  const {\n    openMapModal, openUniqueGiftBySlug, focusMessage, closeStoryViewer, openUrl,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const [mediaWidth, setMediaWidth] = useState(0);\n\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current) return;\n    const element = ref.current;\n    setMediaWidth(element!.clientWidth!);\n\n    if (windowSize.width > MOBILE_SCREEN_MAX_WIDTH) {\n      requestMutation(() => {\n        element.style.removeProperty('--media-width');\n        element.style.removeProperty('--media-height');\n      });\n      return;\n    }\n\n    const screenAspectRatio = windowSize.width / windowSize.height;\n\n    const width = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight * STORY_ASPECT_RATIO : element.clientWidth;\n    const height = screenAspectRatio < STORY_ASPECT_RATIO\n      ? element.clientHeight : element.clientWidth / STORY_ASPECT_RATIO;\n\n    requestMutation(() => {\n      element.style.setProperty('--media-width', `${width}px`);\n      element.style.setProperty('--media-height', `${height}px`);\n    });\n  }, [isActive, windowSize]);\n\n  const handleMediaAreaClick = (mediaArea: ApiMediaArea) => {\n    switch (mediaArea.type) {\n      case 'geoPoint':\n      case 'venue': {\n        openMapModal({ geoPoint: mediaArea.geo });\n        break;\n      }\n      case 'channelPost': {\n        focusMessage({\n          chatId: mediaArea.channelId,\n          messageId: mediaArea.messageId,\n        });\n        closeStoryViewer();\n        break;\n      }\n      case 'url': {\n        openUrl({ url: mediaArea.url });\n        break;\n      }\n      case 'uniqueGift': {\n        openUniqueGiftBySlug({ slug: mediaArea.slug });\n        break;\n      }\n    }\n  };\n\n  const mediaAreas = story.mediaAreas;\n\n  return (\n    <div\n      className={buildClassName(styles.overlay, !isActive && styles.preview, className)}\n      ref={ref}\n    >\n      {mediaAreas?.map((mediaArea, i) => {\n        switch (mediaArea.type) {\n          case 'geoPoint':\n          case 'venue':\n          case 'channelPost':\n          case 'url':\n          case 'uniqueGift': {\n            const isShiny = isActive && !NO_SHINY_TYPES.has(mediaArea.type);\n            return (\n              <div\n                className={buildClassName(styles.mediaArea, isShiny && styles.shiny)}\n                style={prepareStyle(mediaArea)}\n                onClick={() => handleMediaAreaClick(mediaArea)}\n              />\n            );\n          }\n          case 'suggestedReaction':\n            return (\n              <MediaAreaSuggestedReaction\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                story={story}\n                mediaArea={mediaArea}\n                index={i}\n                isPreview={!isActive}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea)}\n              />\n            );\n          case 'weather': {\n            return (\n              <MediaAreaWeather\n                // eslint-disable-next-line react/no-array-index-key\n                key={`${mediaArea.type}-${i}`}\n                mediaArea={mediaArea}\n                className={styles.mediaArea}\n                style={prepareStyle(mediaArea, mediaWidth)}\n                isPreview={!isActive || isStoryPlaying}\n              />\n            );\n          }\n          default:\n            return undefined;\n        }\n      })}\n    </div>\n  );\n};\n\nfunction prepareStyle(mediaArea: ApiMediaArea, mediaWidth?: number) {\n  const {\n    x, y, width, height, rotation, radius,\n  } = mediaArea.coordinates;\n\n  let pixelRadius = '';\n\n  if (mediaWidth && radius && mediaWidth > 0) {\n    const pixelWidth = (mediaWidth * (width / PERCENTAGE_BASE));\n    const pixelHeight = (mediaWidth * (height / PERCENTAGE_BASE));\n    pixelRadius = `${Math.min(pixelWidth, pixelHeight) * (radius / PERCENTAGE_BASE)}px`;\n  }\n\n  return buildStyle(\n    `left: ${x}%`,\n    `top: ${y}%`,\n    `width: ${width}%`,\n    `height: ${height}%`,\n    `transform: rotate(${rotation}deg) translate(-50%, -50%)`,\n    pixelRadius && `border-radius: ${pixelRadius}`,\n  );\n}\n\nexport default memo(MediaAreaOverlay);\n","import type { GlobalState } from '../types';\n\nimport { getMainUsername, isChatBasicGroup } from '../helpers';\nimport { selectChat, selectChatFullInfo } from './chats';\nimport { selectUser } from './users';\n\nexport function selectChatGroupCall<T extends GlobalState>(global: T, chatId: string) {\n  const fullInfo = selectChatFullInfo(global, chatId);\n  if (!fullInfo || !fullInfo.groupCallId) return undefined;\n\n  return selectGroupCall(global, fullInfo.groupCallId);\n}\n\nexport function selectGroupCall<T extends GlobalState>(global: T, groupCallId: string) {\n  return global.groupCalls.byId[groupCallId];\n}\n\nexport function selectGroupCallParticipant<T extends GlobalState>(\n  global: T, groupCallId: string, participantId: string,\n) {\n  return selectGroupCall(global, groupCallId)?.participants[participantId];\n}\n\nexport function selectIsAdminInActiveGroupCall<T extends GlobalState>(global: T): boolean {\n  const chatId = selectActiveGroupCall(global)?.chatId;\n\n  if (!chatId) return false;\n\n  const chat = selectChat(global, chatId);\n  if (!chat) return false;\n\n  return (isChatBasicGroup(chat) && chat.isCreator) || Boolean(chat.adminRights?.manageCall);\n}\n\nexport function selectActiveGroupCall<T extends GlobalState>(global: T) {\n  const { groupCalls: { activeGroupCallId } } = global;\n  if (!activeGroupCallId) {\n    return undefined;\n  }\n\n  return selectGroupCall(global, activeGroupCallId);\n}\n\nexport function selectPhoneCallUser<T extends GlobalState>(global: T) {\n  const { phoneCall, currentUserId } = global;\n  if (!phoneCall || !phoneCall.participantId || !phoneCall.adminId) {\n    return undefined;\n  }\n\n  const id = phoneCall.adminId === currentUserId ? phoneCall.participantId : phoneCall.adminId;\n  return selectUser(global, id);\n}\n\nexport function selectCanInviteToActiveGroupCall<T extends GlobalState>(global: T) {\n  const groupCall = selectActiveGroupCall(global);\n\n  if (!groupCall || !groupCall.chatId) {\n    return false;\n  }\n\n  const chat = selectChat(global, groupCall.chatId);\n  if (!chat) {\n    return false;\n  }\n\n  const hasPublicUsername = Boolean(getMainUsername(chat));\n  if (hasPublicUsername) {\n    return true;\n  }\n\n  const inviteLink = selectChatFullInfo(global, chat.id)?.inviteLink;\n  return Boolean(inviteLink);\n}\n","import { useEffect, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { IS_MOBILE } from '../../util/windowEnvironment';\nimport useLastCallback from '../useLastCallback';\nimport useOldLang from '../useOldLang';\n\nconst NOTIFICATION_DURATION = 8000;\n\nexport default function useUnsupportedMedia(\n  ref: React.RefObject<HTMLVideoElement>, shouldDisableNotification?: boolean, isDisabled?: boolean,\n) {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n  const [isUnsupported, setIsUnsupported] = useState(false);\n\n  const handleUnsupported = useLastCallback(() => {\n    setIsUnsupported(true);\n    if (shouldDisableNotification) return;\n\n    showNotification({\n      message: IS_MOBILE ? lang('Video.Unsupported.Mobile') : lang('Video.Unsupported.Desktop'),\n      duration: NOTIFICATION_DURATION,\n    });\n  });\n\n  const onError = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n    const { error } = target;\n    if (!error) return;\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaError/code\n    if (error.code === 3 || error.code === 4) {\n      handleUnsupported();\n    }\n  });\n\n  const onCanPlay = useLastCallback((event: Event) => {\n    const target = event.currentTarget as HTMLVideoElement;\n\n    if (!target.videoHeight || !target.videoWidth) {\n      handleUnsupported();\n    }\n  });\n\n  useEffect(() => {\n    if (isDisabled) return undefined;\n\n    const { current } = ref;\n    if (!current) {\n      return undefined;\n    }\n\n    current.addEventListener('error', onError);\n    current.addEventListener('canplay', onCanPlay);\n\n    return () => {\n      current.removeEventListener('error', onError);\n      current.removeEventListener('canplay', onCanPlay);\n    };\n  }, [isDisabled, ref]);\n\n  return isUnsupported;\n}\n","import useForceUpdate from '../useForceUpdate';\nimport useInterval from './useInterval';\n\nexport default function useIntervalForceUpdate(interval?: number) {\n  const forceUpdate = useForceUpdate();\n\n  useInterval(forceUpdate, interval, true);\n}\n","import type { Scheduler } from '../util/schedulers';\nimport type { Signal } from '../util/signals';\n\nimport useDebouncedCallback from './useDebouncedCallback';\nimport useDerivedSignal from './useDerivedSignal';\nimport useThrottledCallback from './useThrottledCallback';\n\nexport function useThrottledResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  msOrSchedulerFn: number | Scheduler,\n  noFirst = false,\n) {\n  return useThrottledCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, msOrSchedulerFn, noFirst);\n}\n\nexport function useThrottledSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n): Signal<T> {\n  const throttledResolver = useThrottledResolver(() => getValue(), [getValue], ms, noFirst);\n\n  return useDerivedSignal(\n    throttledResolver, [throttledResolver, getValue], true,\n  );\n}\n\nexport function useDebouncedResolver<T>(\n  resolver: () => T,\n  deps: any[],\n  ms: number,\n  noFirst = false,\n  noLast = false,\n) {\n  return useDebouncedCallback((setValue: (newValue: T) => void) => {\n    setValue(resolver());\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n\nexport function useDebouncedSignal<T extends any>(\n  getValue: Signal<T>,\n  ms: number,\n  noFirst = false,\n  noLast = false,\n): Signal<T> {\n  const debouncedResolver = useDebouncedResolver(() => getValue(), [getValue], ms, noFirst, noLast);\n\n  return useDerivedSignal(\n    debouncedResolver, [debouncedResolver, getValue], true,\n  );\n}\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\nimport { getActions, getGlobal } from '../global';\n\nimport type { Track, TrackId } from '../util/audioPlayer';\nimport type { MediaSessionHandlers } from '../util/mediaSession';\n\nimport { PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION } from '../config';\nimport { selectTabState } from '../global/selectors';\nimport { register } from '../util/audioPlayer';\nimport {\n  registerMediaSession, setPlaybackState, setPositionState, updateMetadata,\n} from '../util/mediaSession';\nimport { isSafariPatchInProgress } from '../util/patchSafariProgressiveAudio';\nimport useEffectWithPrevDeps from './useEffectWithPrevDeps';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\ntype Handler = (e: Event) => void;\n\nconst DEFAULT_SKIP_TIME = 10;\n\nconst useAudioPlayer = (\n  trackId: TrackId | undefined,\n  originalDuration: number, // Sometimes incorrect for voice messages\n  trackType: Track['type'],\n  src?: string,\n  handlers?: Record<string, Handler>,\n  metadata?: MediaMetadata,\n  onInit?: (element: HTMLAudioElement) => void,\n  shouldPlay = false,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n  noPlaylist = false,\n  noProgressUpdates = false,\n  onPause?: NoneToVoidFunction,\n  noReset = false,\n  noHandleEvents = false,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const controllerRef = useRef<ReturnType<typeof register>>(null);\n\n  const [isPlaying, setIsPlaying] = useState(false);\n  let isPlayingSync = isPlaying;\n\n  const [playProgress, setPlayProgress] = useState<number>(0);\n\n  const handleTrackChange = useLastCallback(() => {\n    setIsPlaying(false);\n    if (onTrackChange) onTrackChange();\n  });\n\n  useSyncEffect(() => {\n    if (!trackId) {\n      return;\n    }\n    controllerRef.current = register(trackId, trackType, (eventName, e) => {\n      if (noHandleEvents) {\n        return;\n      }\n      switch (eventName) {\n        case 'onPlay': {\n          const {\n            setVolume, setPlaybackRate, toggleMuted, proxy,\n          } = controllerRef.current!;\n          setIsPlaying(true);\n          if (trackType !== 'oneTimeVoice') {\n            registerMediaSession(metadata, makeMediaHandlers(controllerRef));\n          }\n          setPlaybackState('playing');\n          const { audioPlayer } = selectTabState(getGlobal());\n          setVolume(audioPlayer.volume);\n          toggleMuted(Boolean(audioPlayer.isMuted));\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (trackType === 'voice' || duration > PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION) {\n            setPlaybackRate(audioPlayer.playbackRate);\n          }\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onRateChange': {\n          const { proxy } = controllerRef.current!;\n          setPositionState({\n            duration: proxy.duration || 0,\n            playbackRate: proxy.playbackRate,\n            position: proxy.currentTime,\n          });\n          break;\n        }\n        case 'onPause':\n          setIsPlaying(false);\n          setPlaybackState('paused');\n          onPause?.();\n          break;\n        case 'onTimeUpdate': {\n          const { proxy } = controllerRef.current!;\n          if (noReset && proxy.currentTime === 0) {\n            break;\n          }\n          const duration = proxy.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n          if (!noProgressUpdates) setPlayProgress(proxy.currentTime / duration);\n          break;\n        }\n        case 'onEnded': {\n          setPlaybackState('paused');\n          break;\n        }\n      }\n      handlers?.[eventName]?.(e);\n    }, onForcePlay, handleTrackChange);\n\n    const { proxy } = controllerRef.current!;\n\n    if (!isPlaying && !proxy.paused) {\n      setIsPlaying(true);\n      // `isPlayingSync` is only needed to help `setIsPlaying` because it is asynchronous\n      // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n      isPlayingSync = true;\n    }\n\n    if (onInit && !noHandleEvents) {\n      onInit(proxy);\n    }\n  }, [trackId]);\n\n  useEffect(() => {\n    if (isPlaying && metadata) updateMetadata(metadata);\n  }, [metadata, isPlaying]);\n\n  const {\n    play,\n    pause,\n    setCurrentTime,\n    proxy,\n    destroy,\n    setVolume,\n    stop,\n    isFirst,\n    isLast,\n    requestNextTrack,\n    requestPreviousTrack,\n    setPlaybackRate,\n    toggleMuted,\n  } = controllerRef.current ?? {};\n\n  const duration = useMemo(() => {\n    return proxy?.duration && Number.isFinite(proxy.duration) ? proxy.duration : originalDuration;\n  }, [proxy?.duration, originalDuration]);\n\n  // RAF progress\n  useEffect(() => {\n    if (!proxy) {\n      return;\n    }\n    if (noReset && proxy.currentTime === 0) {\n      return;\n    }\n    if (duration && !isSafariPatchInProgress(proxy) && !noProgressUpdates) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  }, [duration, playProgress, proxy, noProgressUpdates, noReset]);\n\n  // Cleanup\n  useEffect(() => () => {\n    destroy?.(noPlaylist);\n  }, [destroy, noPlaylist]);\n\n  // Autoplay once `src` is present\n  useEffectWithPrevDeps(([prevShouldPlay, prevSrc]) => {\n    if (prevShouldPlay === shouldPlay && src === prevSrc) {\n      return;\n    }\n\n    // When paused by another player\n    if (proxy?.src && proxy?.paused) {\n      return;\n    }\n\n    if (shouldPlay && src && !isPlaying) {\n      play?.(src);\n    }\n  }, [shouldPlay, src, isPlaying, play, proxy?.src, proxy?.paused, trackType]);\n\n  const playIfPresent = useLastCallback(() => {\n    if (src) {\n      play?.(src);\n    }\n  });\n\n  const playPause = useLastCallback(() => {\n    if (isPlaying) {\n      pause?.();\n    } else {\n      playIfPresent();\n    }\n  });\n\n  const setTime = useLastCallback((time: number) => {\n    setCurrentTime?.(time);\n    if (duration && proxy) {\n      setPlayProgress(proxy.currentTime / duration);\n    }\n  });\n\n  return {\n    isPlaying: isPlayingSync,\n    playProgress,\n    playPause,\n    pause,\n    play: playIfPresent,\n    stop,\n    setCurrentTime: setTime,\n    setVolume,\n    audioProxy: proxy,\n    duration,\n    requestNextTrack,\n    requestPreviousTrack,\n    isFirst,\n    isLast,\n    setPlaybackRate,\n    toggleMuted,\n  };\n};\n\nfunction makeMediaHandlers(controllerRef: React.RefObject<ReturnType<typeof register>>) {\n  let mediaHandlers: MediaSessionHandlers = {};\n  if (controllerRef && controllerRef.current) {\n    const {\n      play, pause, setCurrentTime, proxy, requestNextTrack, requestPreviousTrack, isFirst, isLast,\n    } = controllerRef.current;\n    mediaHandlers = {\n      play: () => {\n        play(proxy.src);\n      },\n      pause: () => {\n        pause();\n      },\n      stop: () => {\n        pause();\n        setCurrentTime(0);\n        getActions().closeAudioPlayer();\n      },\n      seekbackward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.max(proxy.currentTime - skipTime, 0));\n      },\n      seekforward: (event) => {\n        const skipTime = event.seekOffset || DEFAULT_SKIP_TIME;\n        setCurrentTime(Math.min(proxy.currentTime + skipTime, proxy.duration));\n      },\n      seekTo: (event) => {\n        if (event.seekTime) {\n          setCurrentTime(event.seekTime);\n        }\n      },\n    };\n\n    if (!isLast()) {\n      mediaHandlers.nexttrack = () => {\n        requestNextTrack();\n      };\n    }\n    if (!isFirst()) {\n      mediaHandlers.previoustrack = () => {\n        requestPreviousTrack();\n      };\n    }\n  }\n  return mediaHandlers;\n}\n\nexport default useAudioPlayer;\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport useLastCallback from './useLastCallback';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function useForumPanelRender(isForumPanelOpen = false) {\n  const shouldRenderForumPanelRef = useRef(isForumPanelOpen);\n  const isAnimationStartedRef = useRef(false);\n  const forceUpdate = useForceUpdate();\n\n  useSyncEffect(() => {\n    if (isForumPanelOpen) {\n      shouldRenderForumPanelRef.current = true;\n    }\n  }, [isForumPanelOpen]);\n\n  const handleForumPanelAnimationEnd = useLastCallback(() => {\n    shouldRenderForumPanelRef.current = false;\n    isAnimationStartedRef.current = false;\n    forceUpdate();\n  });\n\n  const handleForumPanelAnimationStart = useLastCallback(() => {\n    isAnimationStartedRef.current = true;\n    forceUpdate();\n  });\n\n  return {\n    shouldRenderForumPanel: shouldRenderForumPanelRef.current,\n    isAnimationStarted: isAnimationStartedRef.current,\n    handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart,\n  };\n}\n","import { useEffect, useSignal } from '../lib/teact/teact';\n\nexport default function useGetSelectionRange(inputSelector: string) {\n  const [getRange, setRange] = useSignal<Range | undefined>();\n\n  useEffect(() => {\n    function onSelectionChange() {\n      const selection = window.getSelection();\n      if (!selection?.rangeCount) return;\n\n      const range = selection.getRangeAt(0);\n      if (!range) {\n        return;\n      }\n\n      const inputEl = document.querySelector(inputSelector);\n      if (!inputEl) {\n        return;\n      }\n\n      const { commonAncestorContainer } = range;\n      const element = commonAncestorContainer instanceof Element\n        ? commonAncestorContainer\n        : commonAncestorContainer.parentElement!;\n      if (element.closest(inputSelector)) {\n        setRange(range);\n      }\n    }\n\n    document.addEventListener('selectionchange', onSelectionChange);\n\n    return () => document.removeEventListener('selectionchange', onSelectionChange);\n  }, [inputSelector, setRange]);\n\n  return getRange;\n}\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport useAppLayout from './useAppLayout';\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\nconst MODAL_HIDE_DELAY_MS = 300;\n\nexport default function useInputFocusOnOpen(\n  inputRef: RefObject<HTMLInputElement | HTMLTextAreaElement>,\n  isOpen?: boolean,\n  onClose?: NoneToVoidFunction,\n) {\n  const { isMobile } = useAppLayout();\n\n  useEffect(() => {\n    if (isOpen) {\n      if (!isMobile) {\n        setTimeout(() => {\n          requestMutation(() => {\n            if (inputRef.current?.isConnected) {\n              inputRef.current.focus();\n            }\n          });\n        }, FOCUS_DELAY_MS);\n      }\n    } else {\n      if (inputRef.current?.isConnected) {\n        inputRef.current.blur();\n      }\n\n      if (onClose) {\n        setTimeout(onClose, MODAL_HIDE_DELAY_MS);\n      }\n    }\n  }, [inputRef, isMobile, isOpen, onClose]);\n}\n","import { useCallback, useRef, useUnmountCleanup } from '../lib/teact/teact';\n\nconst DEFAULT_THRESHOLD = 250;\n\nfunction useLongPress({\n  onClick, onStart, onEnd, threshold = DEFAULT_THRESHOLD,\n}: {\n  onStart?: NoneToVoidFunction;\n  onClick?: (event: React.MouseEvent | React.TouchEvent) => void;\n  onEnd?: NoneToVoidFunction;\n  threshold?: number;\n}) {\n  const isLongPressActive = useRef(false);\n  const isPressed = useRef(false);\n  const timerId = useRef<number | undefined>(undefined);\n\n  const start = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    const canProcessEvent = ('button' in e && e.button === 0) || ('touches' in e && e.touches.length > 0);\n    if (isPressed.current || !canProcessEvent) {\n      return;\n    }\n\n    isPressed.current = true;\n    timerId.current = window.setTimeout(() => {\n      onStart?.();\n      isLongPressActive.current = true;\n    }, threshold);\n  }, [onStart, threshold]);\n\n  const cancel = useCallback((e: React.MouseEvent | React.TouchEvent) => {\n    if (!isPressed.current) return;\n\n    if (isLongPressActive.current) {\n      onEnd?.();\n    } else {\n      onClick?.(e);\n    }\n\n    isLongPressActive.current = false;\n    isPressed.current = false;\n    window.clearTimeout(timerId.current);\n  }, [onEnd, onClick]);\n\n  useUnmountCleanup(() => {\n    window.clearTimeout(timerId.current);\n  });\n\n  return {\n    onMouseDown: start,\n    onMouseUp: cancel,\n    onMouseLeave: cancel,\n    onTouchStart: start,\n    onTouchEnd: cancel,\n  };\n}\n\nexport default useLongPress;\n","import {\n  useEffect, useMemo, useRef, useState,\n} from '../lib/teact/teact';\n\nimport { ApiMediaFormat } from '../api/types';\n\nimport { selectIsSynced } from '../global/selectors';\nimport * as mediaLoader from '../util/mediaLoader';\nimport { throttle } from '../util/schedulers';\nimport { IS_PROGRESSIVE_SUPPORTED } from '../util/windowEnvironment';\nimport useSelector from './data/useSelector';\nimport useForceUpdate from './useForceUpdate';\nimport useUniqueId from './useUniqueId';\n\nconst STREAMING_PROGRESS = 0.75;\nconst STREAMING_TIMEOUT = 1500;\nconst PROGRESS_THROTTLE = 500;\n\nexport default function useMediaWithLoadProgress(\n  mediaHash: string | undefined,\n  noLoad = false,\n  mediaFormat = ApiMediaFormat.BlobUrl,\n  delay?: number | false,\n  isHtmlAllowed = false,\n) {\n  const mediaData = mediaHash ? mediaLoader.getFromMemory(mediaHash) : undefined;\n  const isStreaming = IS_PROGRESSIVE_SUPPORTED && mediaFormat === ApiMediaFormat.Progressive;\n  const forceUpdate = useForceUpdate();\n  const isSynced = useSelector(selectIsSynced);\n  const id = useUniqueId();\n  const [loadProgress, setLoadProgress] = useState(mediaData && !isStreaming ? 1 : 0);\n  const startedAtRef = useRef<number>();\n\n  const handleProgress = useMemo(() => {\n    return throttle((progress: number) => {\n      if (startedAtRef.current && (!delay || (Date.now() - startedAtRef.current > delay))) {\n        setLoadProgress(progress);\n      }\n    }, PROGRESS_THROTTLE, true);\n  }, [delay]);\n\n  useEffect(() => {\n    if (!noLoad && mediaHash) {\n      if (!mediaData) {\n        setLoadProgress(0);\n\n        if (startedAtRef.current) {\n          mediaLoader.cancelProgress(handleProgress);\n        }\n\n        startedAtRef.current = Date.now();\n\n        mediaLoader.fetch(mediaHash, mediaFormat, isHtmlAllowed, handleProgress, id).then(() => {\n          const spentTime = Date.now() - startedAtRef.current!;\n          startedAtRef.current = undefined;\n\n          if (!delay || spentTime >= delay) {\n            forceUpdate();\n          } else {\n            setTimeout(forceUpdate, delay - spentTime);\n          }\n        });\n      } else if (isStreaming) {\n        setTimeout(() => {\n          setLoadProgress(STREAMING_PROGRESS);\n        }, STREAMING_TIMEOUT);\n      }\n    }\n  }, [\n    noLoad, mediaHash, mediaData, mediaFormat, isStreaming, delay, handleProgress, isHtmlAllowed, id, isSynced,\n  ]);\n\n  useEffect(() => {\n    if (noLoad && startedAtRef.current) {\n      mediaLoader.cancelProgress(handleProgress);\n      setLoadProgress(0);\n      startedAtRef.current = undefined;\n    }\n  }, [handleProgress, noLoad]);\n\n  useEffect(() => {\n    return () => {\n      if (mediaHash) {\n        mediaLoader.removeCallback(mediaHash, id);\n      }\n    };\n  }, [id, mediaHash]);\n\n  return { mediaData, loadProgress };\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\nimport useLastCallback from './useLastCallback';\n\nconst MENU_CLOSE_TIMEOUT = 250;\nlet closeTimeout: number | undefined;\n\nexport default function useMouseInside(\n  isOpen: boolean, onClose: NoneToVoidFunction, menuCloseTimeout = MENU_CLOSE_TIMEOUT, isDisabled = false,\n) {\n  const isMouseInside = useRef(false);\n\n  const markMouseInside = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  useEffect(() => {\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    if (isOpen && !IS_TOUCH_ENV && !isDisabled) {\n      closeTimeout = window.setTimeout(() => {\n        if (!isMouseInside.current) {\n          onClose();\n        }\n      }, menuCloseTimeout * 2);\n    }\n  }, [isDisabled, isOpen, menuCloseTimeout, onClose]);\n\n  const handleMouseEnter = useLastCallback(() => {\n    isMouseInside.current = true;\n  });\n\n  const handleMouseLeave = useLastCallback(() => {\n    isMouseInside.current = false;\n\n    if (closeTimeout) {\n      clearTimeout(closeTimeout);\n      closeTimeout = undefined;\n    }\n\n    closeTimeout = window.setTimeout(() => {\n      if (!isMouseInside.current) {\n        onClose();\n      }\n    }, menuCloseTimeout);\n  });\n\n  return [handleMouseEnter, handleMouseLeave, markMouseInside];\n}\n","import { useRef } from '../lib/teact/teact';\n\nimport useForceUpdate from './useForceUpdate';\nimport usePreviousDeprecated from './usePreviousDeprecated';\nimport useSyncEffect from './useSyncEffect';\n\nexport default function usePrevDuringAnimation<T>(current: T, duration?: number): T {\n  const prev = usePreviousDeprecated(current, true);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n  // eslint-disable-next-line no-null/no-null\n  const isCurrentPresent = current !== undefined && current !== null;\n  // eslint-disable-next-line no-null/no-null\n  const isPrevPresent = prev !== undefined && prev !== null;\n\n  if (isCurrentPresent && timeoutRef.current) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useSyncEffect(() => {\n    // When `current` becomes empty\n    if (duration && !isCurrentPresent && isPrevPresent && !timeoutRef.current) {\n      timeoutRef.current = window.setTimeout(() => {\n        timeoutRef.current = undefined;\n        forceUpdate();\n      }, duration);\n    }\n  }, [duration, forceUpdate, isCurrentPresent, isPrevPresent]);\n\n  return (!timeoutRef.current || !duration || isCurrentPresent ? current : prev)!;\n}\n","import useDebouncedCallback from './useDebouncedCallback';\n\nexport default function useRunDebounced(ms: number, noFirst?: boolean, noLast?: boolean, deps: any = []) {\n  return useDebouncedCallback((cb: NoneToVoidFunction) => {\n    cb();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, deps, ms, noFirst, noLast);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React from '../../lib/teact/teact';\n\nimport type { OwnProps } from './CalendarModal';\n\nimport { Bundles } from '../../util/moduleLoader';\n\nimport useModuleLoader from '../../hooks/useModuleLoader';\n\nconst CalendarModalAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const CalendarModal = useModuleLoader(Bundles.Extra, 'CalendarModal', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return CalendarModal ? <CalendarModal {...props} /> : undefined;\n};\n\nexport default CalendarModalAsync;\n","import React, { useState } from '../lib/teact/teact';\n\nimport { SCHEDULED_WHEN_ONLINE } from '../config';\nimport { getDayStartAt } from '../util/dates/dateFormat';\nimport { getServerTimeOffset } from '../util/serverTime';\nimport useLastCallback from './useLastCallback';\nimport useOldLang from './useOldLang';\n\nimport CalendarModal from '../components/common/CalendarModal.async';\n\ntype OnScheduledCallback = (scheduledAt: number) => void;\n\nconst useSchedule = (\n  canScheduleUntilOnline?: boolean,\n  onCancel?: () => void,\n  openAt?: number,\n) => {\n  const lang = useOldLang();\n  const [onScheduled, setOnScheduled] = useState<OnScheduledCallback | undefined>();\n\n  const handleMessageSchedule = useLastCallback((date: Date, isWhenOnline = false) => {\n    // Scheduled time can not be less than 10 seconds in future\n    const scheduledAt = Math.round(Math.max(date.getTime(), Date.now() + 60 * 1000) / 1000)\n      + (isWhenOnline ? 0 : getServerTimeOffset());\n    onScheduled?.(scheduledAt);\n    setOnScheduled(undefined);\n  });\n\n  const handleMessageScheduleUntilOnline = useLastCallback(() => {\n    handleMessageSchedule(new Date(SCHEDULED_WHEN_ONLINE * 1000), true);\n  });\n\n  const handleCloseCalendar = useLastCallback(() => {\n    setOnScheduled(undefined);\n    onCancel?.();\n  });\n\n  const requestCalendar = useLastCallback((whenScheduled: OnScheduledCallback) => {\n    setOnScheduled(() => whenScheduled);\n  });\n\n  const scheduledDefaultDate = openAt ? new Date(openAt * 1000) : new Date();\n  scheduledDefaultDate.setSeconds(0);\n  scheduledDefaultDate.setMilliseconds(0);\n\n  const scheduledMaxDate = new Date();\n  scheduledMaxDate.setFullYear(scheduledMaxDate.getFullYear() + 1);\n\n  const calendar = (\n    <CalendarModal\n      isOpen={Boolean(onScheduled)}\n      withTimePicker\n      selectedAt={scheduledDefaultDate.getTime()}\n      maxAt={getDayStartAt(scheduledMaxDate)}\n      isFutureMode\n      secondButtonLabel={canScheduleUntilOnline ? lang('Schedule.SendWhenOnline') : undefined}\n      onClose={handleCloseCalendar}\n      onSubmit={handleMessageSchedule}\n      onSecondButtonClick={canScheduleUntilOnline ? handleMessageScheduleUntilOnline : undefined}\n    />\n  );\n\n  return [requestCalendar, calendar] as const;\n};\n\nexport default useSchedule;\n","import { useMemo } from '../lib/teact/teact';\nimport { getActions } from '../global';\n\nimport type { ApiSendMessageAction } from '../api/types';\nimport type { ThreadId } from '../types';\n\nimport { SEND_MESSAGE_ACTION_INTERVAL } from '../config';\nimport { throttle } from '../util/schedulers';\n\nconst useSendMessageAction = (chatId?: string, threadId?: ThreadId) => {\n  return useMemo(() => {\n    return throttle((action: ApiSendMessageAction) => {\n      if (!chatId || !threadId) return;\n      getActions().sendMessageAction({ chatId, threadId, action });\n    }, SEND_MESSAGE_ACTION_INTERVAL);\n  }, [chatId, threadId]);\n};\n\nexport default useSendMessageAction;\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport { requestMutation } from '../lib/fasterdom/fasterdom';\nimport { applyStyles } from '../util/animation';\nimport unloadVideo from '../util/browser/unloadVideo';\nimport { makeProgressiveLoader } from '../util/progressiveLoader';\nimport { IS_SAFARI } from '../util/windowEnvironment';\n\nconst VIDEO_REVEAL_DELAY = 100;\n\nexport function useStreaming(videoRef: RefObject<HTMLVideoElement>, url?: string, mimeType?: string) {\n  useEffect(() => {\n    if (!url || !videoRef.current) return undefined;\n    const MediaSourceClass = getMediaSource();\n    const video = videoRef.current;\n\n    if (!IS_SAFARI || !mimeType || !MediaSourceClass?.isTypeSupported(mimeType)) {\n      return undefined;\n    }\n    const mediaSource = new MediaSourceClass();\n\n    function revealVideo() {\n      requestMutation(() => {\n        video.style.display = 'block';\n        setTimeout(() => {\n          requestMutation(() => {\n            applyStyles(video, { opacity: '1' });\n          });\n        }, VIDEO_REVEAL_DELAY);\n      });\n    }\n\n    function onSourceOpen() {\n      if (!url || !mimeType) return;\n\n      const sourceBuffer = mediaSource.addSourceBuffer(mimeType);\n      const loader = makeProgressiveLoader(url);\n\n      function onUpdateEnded() {\n        loader.next()\n          .then(({\n            value,\n            done,\n          }) => {\n            if (mediaSource.readyState !== 'open') return;\n            if (done) {\n              endOfStream(mediaSource);\n              return;\n            }\n            appendBuffer(sourceBuffer, value);\n          });\n      }\n\n      sourceBuffer.addEventListener('updateend', onUpdateEnded);\n\n      loader.next()\n        .then(({\n          value,\n          done,\n        }) => {\n          if (done || mediaSource.readyState !== 'open') return;\n          revealVideo();\n          appendBuffer(sourceBuffer, value);\n        });\n    }\n\n    mediaSource.addEventListener('sourceopen', onSourceOpen, { once: true });\n\n    requestMutation(() => {\n      applyStyles(video, {\n        display: 'none',\n        opacity: '0',\n      });\n      video.src = URL.createObjectURL(mediaSource);\n    });\n\n    return () => {\n      requestMutation(() => {\n        const src = video.src;\n        unloadVideo(video);\n        mediaSource.removeEventListener('sourceopen', onSourceOpen);\n        if (mediaSource.readyState === 'open') {\n          endOfStream(mediaSource);\n        }\n        URL.revokeObjectURL(src);\n      });\n    };\n  }, [mimeType, url, videoRef]);\n\n  return checkIfStreamingSupported(mimeType);\n}\n\nexport function checkIfStreamingSupported(mimeType?: string) {\n  if (!IS_SAFARI || !mimeType) return false;\n  return Boolean(getMediaSource()?.isTypeSupported(mimeType));\n}\n\nfunction appendBuffer(sourceBuffer: SourceBuffer, buffer: ArrayBuffer) {\n  try {\n    sourceBuffer.appendBuffer(buffer);\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to append buffer', error);\n    }\n  }\n}\n\nfunction endOfStream(mediaSource: MediaSource) {\n  try {\n    mediaSource.endOfStream();\n  } catch (error) {\n    if (DEBUG) {\n      // eslint-disable-next-line no-console\n      console.warn('[Stream] failed to end stream', error);\n    }\n  }\n}\n\nfunction getMediaSource(): typeof MediaSource | undefined {\n  if ('ManagedMediaSource' in window) {\n    // @ts-ignore\n    return ManagedMediaSource;\n  }\n  if ('MediaSource' in window) {\n    return MediaSource;\n  }\n  return undefined;\n}\n","import { useEffect } from '../../lib/teact/teact';\n\nimport { onBeforeUnload } from '../../util/schedulers';\nimport useLastCallback from '../useLastCallback';\n\nexport default function useBeforeUnload(callback: AnyToVoidFunction) {\n  const lastCallback = useLastCallback(callback);\n\n  useEffect(() => onBeforeUnload(lastCallback), [lastCallback]);\n}\n","import { useEffect, useLayoutEffect, useState } from '../../lib/teact/teact';\n\nimport { ElectronEvent } from '../../types/electron';\n\nimport { IS_IOS } from '../../util/windowEnvironment';\n\ntype ElementType = HTMLElement;\ntype RefType = {\n  current: ElementType | null;\n};\n\ntype ReturnType = [boolean, () => void, () => void] | [false];\ntype CallbackType = (isPlayed: boolean) => void;\n\nconst prop = getBrowserFullscreenElementProp();\n\nexport default function useFullscreen(elRef: RefType, exitCallback?: CallbackType,\n  enterCallback?: CallbackType): ReturnType {\n  const [isFullscreen, setIsFullscreen] = useState(Boolean(prop && document[prop]));\n\n  const setFullscreen = () => {\n    if (!elRef.current || !(prop || IS_IOS) || isFullscreen) {\n      return;\n    }\n    safeRequestFullscreen(elRef.current);\n    setIsFullscreen(true);\n  };\n\n  const exitFullscreen = () => {\n    if (!elRef.current) {\n      return;\n    }\n    safeExitFullscreen();\n    setIsFullscreen(false);\n  };\n\n  useLayoutEffect(() => {\n    const element = elRef.current;\n    const listener = () => {\n      const isEnabled = Boolean(prop && document[prop]);\n      setIsFullscreen(isEnabled);\n      if (isEnabled) {\n        enterCallback?.(false);\n      } else {\n        exitCallback?.(false);\n      }\n      // In Firefox fullscreen video controls are not visible by default, so we force them manually\n      if (element instanceof HTMLVideoElement) element.controls = isEnabled;\n    };\n\n    const listenerEnter = () => {\n      setIsFullscreen(true);\n      if (enterCallback) enterCallback(true);\n    };\n\n    const listenerExit = () => {\n      setIsFullscreen(false);\n      if (exitCallback) exitCallback(false);\n    };\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    if (element) {\n      element.addEventListener('webkitbeginfullscreen', listenerEnter, false);\n      element.addEventListener('webkitendfullscreen', listenerExit, false);\n    }\n\n    return () => {\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n      if (element) {\n        element.removeEventListener('webkitbeginfullscreen', listenerEnter, false);\n        element.removeEventListener('webkitendfullscreen', listenerExit, false);\n      }\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  if (!prop && !IS_IOS) {\n    return [false];\n  }\n\n  return [isFullscreen, setFullscreen, exitFullscreen];\n}\n\nexport const useFullscreenStatus = () => {\n  const [isFullscreen, setIsFullscreen] = useState(false);\n\n  useEffect(() => {\n    const listener = () => {\n      setIsFullscreen(checkIfFullscreen());\n    };\n\n    const removeElectronListener = window.electron?.on(ElectronEvent.FULLSCREEN_CHANGE, setIsFullscreen);\n    window.electron?.isFullscreen().then(setIsFullscreen);\n\n    document.addEventListener('fullscreenchange', listener, false);\n    document.addEventListener('webkitfullscreenchange', listener, false);\n    document.addEventListener('mozfullscreenchange', listener, false);\n\n    return () => {\n      removeElectronListener?.();\n\n      document.removeEventListener('fullscreenchange', listener, false);\n      document.removeEventListener('webkitfullscreenchange', listener, false);\n      document.removeEventListener('mozfullscreenchange', listener, false);\n    };\n  }, []);\n\n  return isFullscreen;\n};\n\nfunction getBrowserFullscreenElementProp() {\n  if (typeof document.fullscreenElement !== 'undefined') {\n    return 'fullscreenElement';\n  } else if (typeof document.mozFullScreenElement !== 'undefined') {\n    return 'mozFullScreenElement';\n  } else if (typeof document.webkitFullscreenElement !== 'undefined') {\n    return 'webkitFullscreenElement';\n  }\n  return '';\n}\n\nexport function checkIfFullscreen() {\n  const fullscreenProp = getBrowserFullscreenElementProp();\n  return Boolean(fullscreenProp && document[fullscreenProp]);\n}\n\nexport function safeRequestFullscreen(element: ElementType) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen();\n  } else if (element.webkitEnterFullscreen) {\n    element.webkitEnterFullscreen();\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n  }\n}\n\nexport function safeExitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitCancelFullScreen) {\n    document.webkitCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  }\n}\n","export enum ElectronEvent {\n  FULLSCREEN_CHANGE = 'fullscreen-change',\n  UPDATE_ERROR = 'update-error',\n  UPDATE_AVAILABLE = 'update-available',\n  DEEPLINK = 'deeplink',\n}\n\nexport enum ElectronAction {\n  GET_IS_FULLSCREEN = 'get-is-fullscreen',\n  INSTALL_UPDATE = 'install-update',\n  HANDLE_DOUBLE_CLICK = 'handle-double-click',\n  OPEN_NEW_WINDOW = 'open-new-window',\n  SET_WINDOW_TITLE = 'set-window-title',\n  SET_TRAFFIC_LIGHT_POSITION = 'set-traffic-light-position',\n  SET_IS_AUTO_UPDATE_ENABLED = 'set-is-auto-update-enabled',\n  GET_IS_AUTO_UPDATE_ENABLED = 'get-is-auto-update-enabled',\n  SET_IS_TRAY_ICON_ENABLED = 'set-is-tray-icon-enabled',\n  GET_IS_TRAY_ICON_ENABLED = 'get-is-tray-icon-enabled',\n  RESTORE_LOCAL_STORAGE = 'restore-local-storage',\n}\n\nexport type TrafficLightPosition = 'standard' | 'lowered';\n\nexport interface ElectronApi {\n  isFullscreen: () => Promise<boolean>;\n  installUpdate: () => Promise<void>;\n  handleDoubleClick: () => Promise<void>;\n  openNewWindow: (url: string, title?: string) => Promise<void>;\n  setWindowTitle: (title?: string) => Promise<void>;\n  setTrafficLightPosition: (position: TrafficLightPosition) => Promise<void>;\n  setIsAutoUpdateEnabled: (value: boolean) => Promise<void>;\n  getIsAutoUpdateEnabled: () => Promise<boolean>;\n  setIsTrayIconEnabled: (value: boolean) => Promise<void>;\n  getIsTrayIconEnabled: () => Promise<boolean>;\n  restoreLocalStorage: () => Promise<void>;\n  on: (eventName: ElectronEvent, callback: any) => VoidFunction;\n}\n\ndeclare global {\n  interface Window {\n    electron?: ElectronApi;\n  }\n}\n","import generateUniqueId from './generateUniqueId';\nimport { throttleWithTickEnd } from './schedulers';\n\nexport interface CancellableCallback {\n  (\n    ...args: any[]\n  ): void;\n\n  isCanceled?: boolean;\n}\n\ntype InitPayload = {\n  type: 'init';\n  messageId?: string;\n  args: any;\n};\n\ntype CallMethodPayload = {\n  type: 'callMethod';\n  messageId?: string;\n  name: string;\n  args: any;\n  withCallback?: boolean;\n};\n\ntype CancelProgressPayload = {\n  type: 'cancelProgress';\n  messageId: string;\n};\n\nexport type OriginPayload =\n  InitPayload\n  | CallMethodPayload\n  | CancelProgressPayload;\n\nexport type OriginMessageData = {\n  channel?: string;\n  payloads: OriginPayload[];\n};\n\nexport interface OriginMessageEvent {\n  data: OriginMessageData;\n}\n\nexport type ApiUpdate =\n  { type: string }\n  & any;\n\nexport type WorkerPayload =\n  {\n    channel?: string;\n    type: 'update';\n    update: ApiUpdate;\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodResponse';\n    messageId: string;\n    response?: any;\n    error?: { message: string };\n  }\n  |\n  {\n    channel?: string;\n    type: 'methodCallback';\n    messageId: string;\n    callbackArgs: any[];\n  }\n  |\n  {\n    channel?: string;\n    type: 'unhandledError';\n    error?: { message: string };\n  };\n\nexport type WorkerMessageData = {\n  channel?: string;\n  payloads: WorkerPayload[];\n};\n\nexport interface WorkerMessageEvent {\n  data: WorkerMessageData;\n}\n\ninterface RequestState {\n  messageId: string;\n  resolve: Function;\n  reject: Function;\n  callback: AnyToVoidFunction;\n}\n\ntype InputRequestTypes = Record<string, AnyFunction>;\n\ntype Values<T> = T[keyof T];\nexport type RequestTypes<T extends InputRequestTypes> = Values<{\n  [Name in keyof (T)]: {\n    name: Name & string;\n    args: Parameters<T[Name]>;\n    transferables?: Transferable[];\n  }\n}>;\n\nclass ConnectorClass<T extends InputRequestTypes> {\n  private requestStates = new Map<string, RequestState>();\n\n  private requestStatesByCallback = new Map<AnyToVoidFunction, RequestState>();\n\n  private pendingPayloads: OriginPayload[] = [];\n\n  private pendingTransferables: Transferable[] = [];\n\n  constructor(\n    public target: Worker,\n    private onUpdate?: (update: ApiUpdate) => void,\n    private channel?: string,\n  ) {\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  public destroy() {\n  }\n\n  init(...args: any[]) {\n    this.postMessageOnTickEnd({\n      type: 'init',\n      args,\n    });\n  }\n\n  request(messageData: RequestTypes<T>) {\n    const { requestStates, requestStatesByCallback } = this;\n    const { transferables, ...restMessageData } = messageData;\n\n    const messageId = generateUniqueId();\n    const payload: CallMethodPayload = {\n      type: 'callMethod',\n      messageId,\n      ...restMessageData,\n    };\n\n    const requestState = { messageId } as RequestState;\n\n    // Re-wrap type because of `postMessage`\n    const promise: Promise<any> = new Promise((resolve, reject) => {\n      Object.assign(requestState, { resolve, reject });\n    });\n\n    if (typeof payload.args[payload.args.length - 1] === 'function') {\n      payload.withCallback = true;\n\n      const callback = payload.args.pop() as AnyToVoidFunction;\n      requestState.callback = callback;\n      requestStatesByCallback.set(callback, requestState);\n    }\n\n    requestStates.set(messageId, requestState);\n    promise\n      .catch(() => undefined)\n      .finally(() => {\n        requestStates.delete(messageId);\n\n        if (requestState.callback) {\n          requestStatesByCallback.delete(requestState.callback);\n        }\n      });\n\n    this.postMessageOnTickEnd(payload, transferables);\n\n    return promise;\n  }\n\n  cancelCallback(progressCallback: CancellableCallback) {\n    progressCallback.isCanceled = true;\n\n    const { messageId } = this.requestStatesByCallback.get(progressCallback) || {};\n    if (!messageId) {\n      return;\n    }\n\n    this.postMessageOnTickEnd({\n      type: 'cancelProgress',\n      messageId,\n    });\n  }\n\n  onMessage(data: WorkerMessageData) {\n    const { requestStates, channel } = this;\n    if (data.channel !== channel) {\n      return;\n    }\n\n    data.payloads.forEach((payload) => {\n      if (payload.type === 'update' && this.onUpdate) {\n        this.onUpdate(payload.update);\n      }\n      if (payload.type === 'methodResponse') {\n        const requestState = requestStates.get(payload.messageId);\n        if (requestState) {\n          if (payload.error) {\n            requestState.reject(payload.error);\n          } else {\n            requestState.resolve(payload.response);\n          }\n        }\n      } else if (payload.type === 'methodCallback') {\n        const requestState = requestStates.get(payload.messageId);\n        requestState?.callback?.(...payload.callbackArgs);\n      } else if (payload.type === 'unhandledError') {\n        throw new Error(payload.error?.message);\n      }\n    });\n  }\n\n  private postMessageOnTickEnd(payload: OriginPayload, transferables?: Transferable[]) {\n    this.pendingPayloads.push(payload);\n\n    if (transferables) {\n      this.pendingTransferables.push(...transferables);\n    }\n\n    this.postMessagesOnTickEnd();\n  }\n\n  private postMessagesOnTickEnd = throttleWithTickEnd(() => {\n    const { channel } = this;\n    const payloads = this.pendingPayloads;\n    const transferables = this.pendingTransferables;\n\n    this.pendingPayloads = [];\n    this.pendingTransferables = [];\n\n    this.target.postMessage({ channel, payloads }, transferables);\n  });\n}\n\nexport function createConnector<T extends InputRequestTypes>(\n  worker: Worker,\n  onUpdate?: (update: ApiUpdate) => void,\n  channel?: string,\n) {\n  const connector = new ConnectorClass<T>(worker, onUpdate, channel);\n\n  function handleMessage({ data }: WorkerMessageEvent) {\n    connector.onMessage(data);\n  }\n\n  worker.addEventListener('message', handleMessage);\n\n  connector.destroy = () => {\n    worker.removeEventListener('message', handleMessage);\n  };\n\n  return connector;\n}\n\nexport type Connector<T extends InputRequestTypes = InputRequestTypes> = ReturnType<typeof createConnector<T>>;\n","import { getActions, getGlobal } from '../global';\n\nimport type { ApiMessage } from '../api/types';\nimport type { MessageKey } from './keys/messageKey';\nimport { AudioOrigin, GlobalSearchContent } from '../types';\n\nimport { requestNextMutation } from '../lib/fasterdom/fasterdom';\nimport { selectCurrentMessageList, selectTabState } from '../global/selectors';\nimport { getMessageServerKey, parseMessageKey } from './keys/messageKey';\nimport { isSafariPatchInProgress, patchSafariProgressiveAudio } from './patchSafariProgressiveAudio';\nimport safePlay from './safePlay';\nimport { IS_SAFARI } from './windowEnvironment';\n\ntype Handler = (eventName: string, e: Event) => void;\nexport type TrackId = `${MessageKey}-${number}`;\n\nexport interface Track {\n  audio: HTMLAudioElement;\n  proxy: HTMLAudioElement;\n  type: 'voice' | 'audio' | 'oneTimeVoice';\n  handlers: Handler[];\n  onForcePlay?: NoneToVoidFunction;\n  onTrackChange?: NoneToVoidFunction;\n}\n\nconst tracks = new Map<TrackId, Track>();\n\nlet voiceQueue: TrackId[] = [];\nlet musicQueue: TrackId[] = [];\n\nlet currentTrackId: TrackId | undefined;\n\nfunction createAudio(\n  trackId: TrackId,\n  type: Track['type'],\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n): Track {\n  const audio = new Audio();\n\n  function handleEvent(eventName: string) {\n    return (e: Event) => {\n      if (!tracks.has(trackId)) {\n        return;\n      }\n\n      if (isSafariPatchInProgress(audio)) {\n        return;\n      }\n\n      tracks.get(trackId)!.handlers.forEach((handler) => {\n        handler(eventName, e);\n      });\n    };\n  }\n\n  audio.addEventListener('timeupdate', handleEvent('onTimeUpdate'));\n  audio.addEventListener('play', handleEvent('onPlay'));\n  audio.addEventListener('pause', handleEvent('onPause'));\n  audio.addEventListener('loadstart', handleEvent('onLoadStart'));\n  audio.addEventListener('loadeddata', handleEvent('onLoadedData'));\n  audio.addEventListener('playing', handleEvent('onPlaying'));\n  audio.addEventListener('ended', () => {\n    if (!tracks.has(trackId)) {\n      return;\n    }\n\n    if (isSafariPatchInProgress(audio)) {\n      return;\n    }\n\n    playNext(trackId);\n  });\n\n  return {\n    audio,\n    type,\n    proxy: new Proxy(audio, {\n      get: (target, key: keyof HTMLAudioElement) => target[key],\n    }),\n    handlers: [],\n    onForcePlay,\n    onTrackChange,\n  };\n}\n\nfunction playNext(trackId: TrackId, isReverseOrder?: boolean) {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n    currentTrack.audio.currentTime = 0;\n    if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n  }\n\n  const origin = selectTabState(getGlobal()).audioPlayer.origin || AudioOrigin.Inline;\n\n  const nextTrackId = findNextInQueue(trackId, origin, isReverseOrder);\n  if (!nextTrackId) {\n    return;\n  }\n\n  if (!tracks.has(nextTrackId)) {\n    // A bit hacky way to continue playlist when switching chat\n    getActions().openAudioPlayer(parseMessageKey(splitTrackId(nextTrackId).messageKey));\n\n    return;\n  }\n\n  const nextTrack = tracks.get(nextTrackId)!;\n\n  if (nextTrack.onForcePlay) {\n    nextTrack.onForcePlay();\n  }\n\n  currentTrackId = nextTrackId;\n\n  if (nextTrack.audio.src) {\n    safePlay(nextTrack.audio);\n  }\n}\n\nexport function stopCurrentAudio() {\n  const currentTrack = currentTrackId && tracks.get(currentTrackId);\n  if (currentTrack) {\n    currentTrack.audio.pause();\n  }\n}\n\nexport function register(\n  trackId: TrackId,\n  trackType: Track['type'],\n  handler: Handler,\n  onForcePlay?: NoneToVoidFunction,\n  onTrackChange?: NoneToVoidFunction,\n) {\n  if (!tracks.has(trackId)) {\n    const track = createAudio(trackId, trackType, onForcePlay, onTrackChange);\n    tracks.set(trackId, track);\n    addTrackToQueue(track, trackId);\n  }\n  const { audio, proxy, handlers } = tracks.get(trackId)!;\n\n  handlers.push(handler);\n\n  return {\n    play(src: string) {\n      if (!audio.paused) return;\n      const currentTrack = currentTrackId && tracks.get(currentTrackId);\n      if (currentTrack && currentTrackId !== trackId) {\n        currentTrack.audio.pause();\n        currentTrack.audio.currentTime = 0;\n        if (isSafariPatchInProgress(currentTrack.audio)) {\n          currentTrack.audio.dataset.preventPlayAfterPatch = 'true';\n        }\n        if (currentTrack.onTrackChange) currentTrack.onTrackChange();\n      }\n\n      currentTrackId = trackId;\n\n      if (!audio.src) {\n        audio.src = src;\n        audio.preload = 'auto';\n\n        if (src.includes('/progressive/') && IS_SAFARI) {\n          delete audio.dataset.preventPlayAfterPatch;\n          patchSafariProgressiveAudio(audio);\n        }\n      }\n\n      safePlay(audio);\n      cleanUpQueue(trackType, trackId);\n    },\n\n    pause() {\n      if (currentTrackId === trackId) {\n        audio.pause();\n      }\n    },\n\n    stop() {\n      if (currentTrackId === trackId) {\n        // Hack, reset `src` to remove default media session notification\n        const prevSrc = audio.src;\n        audio.pause();\n        // `onPause` not called otherwise, but required to sync UI\n        requestNextMutation(() => {\n          audio.src = '';\n          audio.src = prevSrc;\n        });\n      }\n    },\n\n    setCurrentTime(time: number) {\n      if (currentTrackId === trackId) {\n        if (audio.fastSeek) {\n          audio.fastSeek(time);\n        } else {\n          audio.currentTime = time;\n        }\n      }\n    },\n\n    setVolume(volume: number) {\n      if (currentTrackId === trackId) {\n        audio.volume = volume;\n        audio.muted = false;\n      }\n    },\n\n    setPlaybackRate(rate: number) {\n      if (currentTrackId === trackId) {\n        audio.playbackRate = rate;\n      }\n    },\n\n    toggleMuted(muted?: boolean) {\n      if (muted === undefined) {\n        audio.muted = !audio.muted;\n      } else {\n        audio.muted = muted;\n      }\n    },\n\n    proxy,\n\n    requestNextTrack() {\n      playNext(trackId);\n    },\n\n    isLast() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin);\n    },\n\n    isFirst() {\n      return !findNextInQueue(trackId, selectTabState(getGlobal()).audioPlayer.origin, true);\n    },\n\n    requestPreviousTrack() {\n      playNext(trackId, true);\n    },\n\n    destroy(shouldRemoveFromQueue = false) {\n      const track = tracks.get(trackId);\n      if (!track) {\n        return;\n      }\n\n      track.handlers = track.handlers.filter((h) => h !== handler);\n\n      if (!track.handlers.length) {\n        track.audio.pause();\n        tracks.delete(trackId);\n\n        if (shouldRemoveFromQueue) {\n          removeFromQueue(track, trackId);\n        }\n\n        if (trackId === currentTrackId) {\n          currentTrackId = undefined;\n        }\n      }\n    },\n  };\n}\n\nfunction getTrackQueue(track: Track) {\n  switch (track.type) {\n    case 'audio': return musicQueue;\n    case 'voice': return voiceQueue;\n    default: return undefined;\n  }\n}\n\nfunction addTrackToQueue(track: Track, trackId: TrackId) {\n  if (track.type === 'audio' && !musicQueue.includes(trackId)) {\n    musicQueue.push(trackId);\n    musicQueue.sort(trackIdComparator);\n  }\n\n  if (track.type === 'voice' && !voiceQueue.includes(trackId)) {\n    voiceQueue.push(trackId);\n    voiceQueue.sort(trackIdComparator);\n  }\n}\n\nfunction removeFromQueue(track: Track, trackId: TrackId) {\n  const trackIdFilter = (el: TrackId) => el !== trackId;\n  if (track.type === 'audio') {\n    musicQueue = musicQueue.filter(trackIdFilter);\n  }\n\n  if (track.type === 'voice') {\n    voiceQueue = voiceQueue.filter(trackIdFilter);\n  }\n}\n\nfunction cleanUpQueue(type: Track['type'], trackId: TrackId) {\n  if (selectTabState(getGlobal()).globalSearch.currentContent === GlobalSearchContent.Music) return;\n  const { chatId } = parseMessageKey(splitTrackId(trackId).messageKey);\n  const openedChatId = selectCurrentMessageList(getGlobal())?.chatId;\n  const queueFilter = (id: string) => (\n    id.startsWith(`msg${chatId}`) || (openedChatId && id.startsWith(`msg${openedChatId}`))\n  );\n\n  if (type === 'audio') {\n    musicQueue = musicQueue.filter(queueFilter);\n  }\n\n  if (type === 'voice') {\n    voiceQueue = voiceQueue.filter(queueFilter);\n  }\n}\n\nfunction findNextInQueue(currentId: TrackId, origin = AudioOrigin.Inline, isReverseOrder?: boolean) {\n  const track = tracks.get(currentId)!;\n  const queue = getTrackQueue(track);\n  if (!queue) return undefined;\n\n  if (origin === AudioOrigin.Search) {\n    const index = queue.indexOf(currentId);\n    if (index < 0) return undefined;\n    const direction = isReverseOrder ? -1 : 1;\n    return queue[index + direction];\n  }\n\n  const { chatId } = parseMessageKey(splitTrackId(currentId).messageKey);\n  const chatAudio = queue.filter((id) => id.startsWith(`msg${chatId}`));\n  const index = chatAudio.indexOf(currentId);\n  if (index < 0) return undefined;\n  let direction = origin === AudioOrigin.Inline ? -1 : 1;\n  if (isReverseOrder) direction *= -1;\n  return chatAudio[index + direction];\n}\n\nexport function makeTrackId(message: ApiMessage): TrackId | undefined {\n  const key = getMessageServerKey(message);\n  if (!key) {\n    return undefined;\n  }\n  return `${key}-${message.date}`;\n}\n\nfunction splitTrackId(trackId: TrackId) {\n  const messageKey = trackId.match(/^msg(-?\\d+)-(\\d+)/)![0] as MessageKey;\n  const date = Number(trackId.split('-').pop());\n  return {\n    messageKey,\n    date,\n  };\n}\n\n// Descending order by date\nfunction trackIdComparator(one?: TrackId, two?: TrackId) {\n  if (!one || !two) return 0;\n  const { date: dateOne, messageKey: keyOne } = splitTrackId(one);\n  const { date: dateTwo, messageKey: keyTwo } = splitTrackId(two);\n  const diff = dateTwo - dateOne;\n  return diff === 0 ? keyTwo.localeCompare(keyOne) : diff;\n}\n","export default function cycleRestrict(length: number, index: number) {\n  return index - Math.floor(index / length) * length;\n}\n","import { pause } from './schedulers';\n\ntype PendingDownload = {\n  url: string;\n  filename: string;\n};\n\n// Chrome prevents more than 10 downloads per second\nconst LIMIT_PER_BATCH = 10;\nconst BATCH_INTERVAL = 1000;\n\nlet pendingDownloads: PendingDownload[] = [];\nlet planned = false;\n\nexport default function download(url: string, filename: string) {\n  pendingDownloads.push({ url, filename });\n  if (!planned) {\n    planned = true;\n    setTimeout(async () => {\n      await processQueue();\n      planned = false;\n    }, BATCH_INTERVAL);\n  }\n}\n\nasync function processQueue() {\n  let count = 0;\n  for (const pendingDownload of pendingDownloads) {\n    downloadOne(pendingDownload);\n    count++;\n    if (count === LIMIT_PER_BATCH) {\n      await pause(BATCH_INTERVAL);\n      count = 0;\n    }\n  }\n  pendingDownloads = [];\n}\n\nfunction downloadOne({ url, filename }: PendingDownload) {\n  const link = document.createElement('a');\n  link.href = url;\n  link.target = '_blank';\n  link.rel = 'noopener noreferrer';\n  link.download = filename;\n  try {\n    link.click();\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(err); // Suppress redundant \"Blob loading failed\" error popup on IOS\n  }\n}\n","import { IS_TOUCH_ENV } from './windowEnvironment';\n\nexport default function focusEditableElement(element: HTMLElement, force?: boolean, forcePlaceCaretAtEnd?: boolean) {\n  if (!force && element === document.activeElement) {\n    return;\n  }\n\n  const selection = window.getSelection()!;\n  const range = document.createRange();\n  const lastChild = element.lastChild || element;\n\n  if (!IS_TOUCH_ENV && !forcePlaceCaretAtEnd && (!lastChild || !lastChild.nodeValue)) {\n    element.focus();\n    return;\n  }\n\n  range.selectNodeContents(forcePlaceCaretAtEnd ? element : lastChild);\n  // `false` means collapse to the end rather than the start\n  range.collapse(false);\n  selection.removeAllRanges();\n  selection.addRange(range);\n}\n","import { MESSAGE_CONTENT_CLASS_NAME } from '../config';\n\nconst ELEMENT_NODE = 1;\n\nexport default function getMessageIdsForSelectedText() {\n  const selection = window.getSelection();\n  let selectedFragments = selection?.rangeCount ? selection.getRangeAt(0).cloneContents() : undefined;\n\n  const shouldIncludeLastMessage = selection?.focusNode && selection.focusOffset > 0\n    && hasParentWithClassName(selection.focusNode, MESSAGE_CONTENT_CLASS_NAME);\n  if (!selectedFragments || selectedFragments.childElementCount === 0) {\n    return undefined;\n  }\n\n  const messageIds = Array.from(selectedFragments.children)\n    .reduce((result, node) => {\n      if (node.nodeType === ELEMENT_NODE && node.classList.contains('message-date-group')) {\n        return Array.from(node.querySelectorAll('.Message'))\n          .reduce((acc, messageEl) => acc.concat(Number((messageEl as HTMLElement).dataset.messageId)), result);\n      } else if (node.nodeType === ELEMENT_NODE && node.classList.contains('Message')) {\n        return result.concat(Number((node as HTMLElement).dataset.messageId));\n      }\n\n      return result;\n    }, [] as number[]);\n\n  // Cleanup a document fragment because it is playing media content in the background\n  while (selectedFragments.firstChild) {\n    selectedFragments.removeChild(selectedFragments.firstChild);\n  }\n  selectedFragments = undefined;\n\n  if (!shouldIncludeLastMessage) {\n    messageIds.pop();\n  }\n\n  return messageIds;\n}\n\nfunction hasParentWithClassName(element: Node, className: string): boolean {\n  if (element.nodeType === ELEMENT_NODE && (element as HTMLElement).classList.contains(className)) {\n    return true;\n  }\n\n  return element.parentNode ? hasParentWithClassName(element.parentNode, className) : false;\n}\n","import { getAverageColor, getColorLuma } from './colors';\n\nconst LUMA_THRESHOLD = 240;\n\nexport function scaleImage(image: string | Blob, ratio: number, outputType: string = 'image/png'): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, img.width * ratio, img.height * ratio, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nexport function resizeImage(\n  image: string | Blob, width: number, height: number, outputType: string = 'image/png',\n): Promise<string> {\n  const url = image instanceof Blob ? URL.createObjectURL(image) : image;\n  const img = new Image();\n  return new Promise((resolve) => {\n    img.onload = () => {\n      scale(img, width, height, outputType)\n        .then((blob) => {\n          if (!blob) throw new Error('Image resize failed!');\n          return URL.createObjectURL(blob);\n        })\n        .then(resolve)\n        .finally(() => {\n          if (image instanceof Blob) {\n            URL.revokeObjectURL(url); // Revoke blob url that we created\n          }\n        });\n    };\n    img.src = url;\n  });\n}\n\nasync function scale(\n  img: HTMLImageElement, width: number, height: number, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  // Safari does not have built-in resize method with quality control\n  if ('createImageBitmap' in window) {\n    try {\n      const bitmap = await window.createImageBitmap(img,\n        { resizeWidth: width, resizeHeight: height, resizeQuality: 'high' });\n      if (bitmap.height !== height || bitmap.width !== width) {\n        throw new Error('Image bitmap resize not supported!'); // FF93 added support for options, but not resize\n      }\n      const averageColor = await getAverageColor(img.src);\n      const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n      return await new Promise((res) => {\n        const canvas = document.createElement('canvas');\n        canvas.width = bitmap.width;\n        canvas.height = bitmap.height;\n        const ctx2D = canvas.getContext('2d')!;\n        ctx2D.fillStyle = fillColor;\n        ctx2D.fillRect(0, 0, canvas.width, canvas.height);\n        const ctx = canvas.getContext('bitmaprenderer');\n        if (ctx) {\n          ctx.transferFromImageBitmap(bitmap);\n        } else {\n          ctx2D.drawImage(bitmap, 0, 0);\n        }\n        canvas.toBlob(res, outputType);\n      });\n    } catch (e) {\n      // Fallback. Firefox below 93 does not recognize `createImageBitmap` with 2 parameters\n      return steppedScale(img, width, height, undefined, outputType);\n    }\n  } else {\n    return steppedScale(img, width, height, undefined, outputType);\n  }\n}\n\nasync function steppedScale(\n  img: HTMLImageElement, width: number, height: number, step: number = 0.5, outputType: string = 'image/png',\n): Promise<Blob | null> {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d')!;\n  const oc = document.createElement('canvas');\n  const octx = oc.getContext('2d')!;\n\n  canvas.width = width;\n  canvas.height = height;\n\n  if (img.width * step > width) { // For performance avoid unnecessary drawing\n    const mul = 1 / step;\n    let cur = {\n      width: Math.floor(img.width * step),\n      height: Math.floor(img.height * step),\n    };\n\n    oc.width = cur.width;\n    oc.height = cur.height;\n\n    octx.drawImage(img, 0, 0, cur.width, cur.height);\n\n    while (cur.width * step > width) {\n      cur = {\n        width: Math.floor(cur.width * step),\n        height: Math.floor(cur.height * step),\n      };\n      octx.drawImage(oc, 0, 0, cur.width * mul, cur.height * mul, 0, 0, cur.width, cur.height);\n    }\n\n    ctx.drawImage(oc, 0, 0, cur.width, cur.height, 0, 0, canvas.width, canvas.height);\n  } else {\n    ctx.drawImage(img, 0, 0, canvas.width, canvas.height);\n  }\n\n  const averageColor = await getAverageColor(img.src);\n  const fillColor = getColorLuma(averageColor) < LUMA_THRESHOLD ? '#fff' : '#000';\n  ctx.fillStyle = fillColor;\n  ctx.globalCompositeOperation = 'destination-over';\n  ctx.fillRect(0, 0, canvas.width, canvas.height);\n  return new Promise((resolve) => {\n    canvas.toBlob(resolve, outputType);\n  });\n}\n","import type { MediaWorkerApi } from '../lib/mediaWorker/index.worker';\nimport type { Connector } from './PostMessageConnector';\n\nimport { IS_TEST } from '../config';\n\nimport { createConnector } from './PostMessageConnector';\n\nexport const MAX_WORKERS = Math.min(navigator.hardwareConcurrency || 4, 4);\n\nlet instances: {\n  worker: Worker;\n  connector: Connector<MediaWorkerApi>;\n}[] | undefined;\n\nexport default function launchMediaWorkers() {\n  if (IS_TEST) return [];\n  if (!instances) {\n    instances = new Array(MAX_WORKERS).fill(undefined).map(\n      () => {\n        const worker = new Worker(new URL('../lib/mediaWorker/index.worker.ts', import.meta.url));\n        const connector = createConnector<MediaWorkerApi>(worker, undefined, 'media');\n        return { worker, connector };\n      },\n    );\n  }\n\n  return instances;\n}\n\nexport function requestMediaWorker(payload: Parameters<Connector<MediaWorkerApi>['request']>[0], index: number) {\n  return launchMediaWorkers()[index].connector.request(payload);\n}\n","import type { ApiGeoPoint } from '../api/types';\n\nconst PROVIDERS = {\n  google: 'https://maps.google.com/maps',\n  bing: 'https://bing.com/maps/default.aspx',\n  osm: 'https://www.openstreetmap.org',\n  apple: 'https://maps.apple.com',\n};\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L82\nconst VENUE_COLORS = new Map(Object.entries({\n  'building/medical': '#43b3f4',\n  'building/gym': '#43b3f4',\n  'education/cafeteria': '#f7943f',\n  'travel/bedandbreakfast': '#9987ff',\n  'travel/hotel': '#9987ff',\n  'travel/hostel': '#9987ff',\n  'travel/resort': '#9987ff',\n  'travel/hotel_bar': '#e56dd6',\n  arts_entertainment: '#e56dd6',\n  building: '#6e81b2',\n  education: '#a57348',\n  event: '#959595',\n  food: '#f7943f',\n  home: '#00aeef',\n  nightlife: '#e56dd6',\n  parks_outdoors: '#6cc039',\n  shops: '#ffb300',\n  travel: '#1c9fff',\n  work: '#ad7854',\n}));\n\nconst RANDOM_COLORS = [\n  '#e56cd5', '#f89440', '#9986ff', '#44b3f5', '#6dc139', '#ff5d5a', '#f87aad', '#6e82b3', '#f5ba21',\n];\n\nexport function prepareMapUrl(provider: keyof typeof PROVIDERS, point: Omit<ApiGeoPoint, 'accessHash'>, zoom = 15) {\n  const { lat, long } = point;\n  const providerUrl = PROVIDERS[provider];\n  switch (provider) {\n    case 'google':\n      return `${providerUrl}/place/${lat}+${long}/@${lat},${long},${zoom}z`;\n    case 'bing':\n      return `${providerUrl}?cp=${lat}~${long}&lvl=${zoom}&sp=point.${lat}_${long}`;\n    case 'apple':\n      return `${providerUrl}?q=${lat},${long}`;\n    case 'osm':\n    default:\n      return `${providerUrl}/?mlat=${lat}&mlon=${long}&zoom=${zoom}`;\n  }\n}\n\nexport function getMetersPerPixel(lat: number, zoom: number) {\n  // https://groups.google.com/g/google-maps-js-api-v3/c/hDRO4oHVSeM/m/osOYQYXg2oUJ\n  return (156543.03392 * Math.cos(lat * (Math.PI / 180))) / 2 ** zoom;\n}\n\nexport function getVenueIconUrl(type?: string) {\n  if (!type) return '';\n  return `https://ss3.4sqi.net/img/categories_v2/${type}_88.png`;\n}\n\n// https://github.com/TelegramMessenger/Telegram-iOS/blob/2a32c871882c4e1b1ccdecd34fccd301723b30d9/submodules/LocationResources/Sources/VenueIconResources.swift#L104\nexport function getVenueColor(type?: string) {\n  if (!type) return '#008df2';\n  return VENUE_COLORS.get(type)\n    || VENUE_COLORS.get(type.split('/')[0])\n    || RANDOM_COLORS[stringToNumber(type) % RANDOM_COLORS.length];\n}\n\nfunction stringToNumber(str: string) {\n  return str.split('').reduce((prevHash, currVal) => (\n    // eslint-disable-next-line no-bitwise\n    (((prevHash << 5) - prevHash) + currVal.charCodeAt(0)) | 0), 0);\n}\n","export type MediaSessionHandlers = {\n  play?: () => void;\n  pause?: () => void;\n  stop?: () => void;\n\n  previoustrack?: () => void;\n  nexttrack?: () => void;\n\n  togglemicrophone?: () => void;\n  togglecamera?: () => void;\n  hangup?: () => void;\n\n  seekbackward?: (details: MediaSessionActionDetails) => void;\n  seekforward?: (details: MediaSessionActionDetails) => void;\n  seekTo?: ((details: MediaSessionActionDetails) => void);\n};\n\ninterface MediaMetadataParameters {\n  title?: string;\n  artist?: string;\n  album?: string;\n  artwork?: MediaImage[];\n}\n\nconst DEFAULT_HANDLERS = {\n  play: undefined,\n  pause: undefined,\n  seekbackward: undefined,\n  seekforward: undefined,\n  previoustrack: undefined,\n  nexttrack: undefined,\n  stop: undefined,\n  seekTo: undefined,\n};\n\nexport function registerMediaSession(metadata?: MediaMetadata, handlers?: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    if (metadata) updateMetadata(metadata);\n    if (handlers) setMediaSessionHandlers(handlers);\n  } else {\n    // eslint-disable-next-line no-console\n    console.warn('MediaSession API not supported in this browser');\n  }\n}\n\nexport function updateMetadata(metadata?: MediaMetadata) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = metadata ?? null;\n  }\n}\n\nexport function setMediaSessionHandlers(handlers: MediaSessionHandlers) {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    Object.entries({ ...DEFAULT_HANDLERS, ...handlers }).forEach(([key, handler]) => {\n      try {\n        // @ts-ignore API not standardized yet\n        mediaSession.setActionHandler(key, handler);\n      } catch (err) {\n        // Handler not supported, ignoring\n      }\n    });\n  }\n}\n\nexport function clearMediaSession() {\n  const { mediaSession } = window.navigator;\n  if (mediaSession) {\n    // eslint-disable-next-line no-null/no-null\n    mediaSession.metadata = null;\n    setMediaSessionHandlers(DEFAULT_HANDLERS);\n    if (mediaSession.playbackState) mediaSession.playbackState = 'none';\n    mediaSession.setPositionState?.();\n  }\n}\n\nexport function setPlaybackState(state: 'none' | 'paused' | 'playing' = 'none') {\n  const { mediaSession } = window.navigator;\n  if (mediaSession && mediaSession.playbackState) {\n    mediaSession.playbackState = state;\n  }\n}\n\nexport function setPositionState(state?: MediaPositionState) {\n  if (!state || state.position === undefined || state.duration === undefined) return;\n  state.position = Math.min(state.position, state.duration);\n\n  const { mediaSession } = window.navigator;\n  mediaSession?.setPositionState?.(state);\n}\n\nexport function buildMediaMetadata({\n  title, artist, album, artwork,\n}: MediaMetadataParameters) {\n  if ('MediaMetadata' in window) {\n    return new window.MediaMetadata({\n      title,\n      artist,\n      album,\n      artwork,\n    });\n  }\n  return undefined;\n}\n","import { areSortedArraysEqual } from './iteratees';\n\nconst cache = new WeakMap<AnyFunction, {\n  lastArgs: any[];\n  lastResult: any;\n}>();\n\nexport default function memoized<T extends AnyFunction>(fn: T) {\n  return (...args: Parameters<T>): ReturnType<T> => {\n    const cached = cache.get(fn);\n    if (cached && areSortedArraysEqual(cached.lastArgs, args)) {\n      return cached.lastResult;\n    }\n\n    const result = fn(...args);\n    cache.set(fn, { lastArgs: args, lastResult: result });\n    return result;\n  };\n}\n","import type { ApiFormattedText, ApiMessageEntity } from '../api/types';\nimport { ApiMessageEntityTypes } from '../api/types';\n\nimport { RE_LINK_TEMPLATE } from '../config';\nimport { IS_EMOJI_SUPPORTED } from './windowEnvironment';\n\ntype Token = {\n  type: ApiMessageEntityTypes | 'text';\n  text?: string; /* Textual content (formatting tokens can contain non-empty text here) */\n  html?: boolean; /* Whether the token resulted from parsing HTML */\n  open?: boolean; /* Can this token open the formatting range? */\n  close?: boolean; /* Can this token close the formatting range? */\n  skip?: boolean; /* Whether this token should not be added to the resulting text */\n  offset?: number; /* Offset of the token in the text */\n  data?: Record<string, any>; /* Entity-related data */\n}\n\nexport const ENTITY_CLASS_BY_NODE_NAME: Record<string, ApiMessageEntityTypes> = {\n  B: ApiMessageEntityTypes.Bold,\n  STRONG: ApiMessageEntityTypes.Bold,\n  I: ApiMessageEntityTypes.Italic,\n  EM: ApiMessageEntityTypes.Italic,\n  INS: ApiMessageEntityTypes.Underline,\n  U: ApiMessageEntityTypes.Underline,\n  S: ApiMessageEntityTypes.Strike,\n  STRIKE: ApiMessageEntityTypes.Strike,\n  DEL: ApiMessageEntityTypes.Strike,\n  CODE: ApiMessageEntityTypes.Code,\n  PRE: ApiMessageEntityTypes.Pre,\n  BLOCKQUOTE: ApiMessageEntityTypes.Blockquote,\n};\n\nconst MARKDOWN_ENTITY_TYPES: Record<string, ApiMessageEntityTypes> = {\n  '*': ApiMessageEntityTypes.Bold,\n  '_': ApiMessageEntityTypes.Italic,\n  '~': ApiMessageEntityTypes.Strike,\n  '|': ApiMessageEntityTypes.Spoiler,\n  '`': ApiMessageEntityTypes.Code,\n  '```': ApiMessageEntityTypes.Pre,\n};\n\nconst PUNCTUATION_CODES = new Set([\n  0x005F, 0x203F, 0x2040, 0x2054, 0xFE33, 0xFE34, 0xFE4D, 0xFE4E, 0xFE4F, 0xFF3F,\n  0x002D, 0x058A, 0x05BE, 0x1400, 0x1806, 0x2E17, 0x2E1A, 0x2E3A, 0x2E3B, 0x2E40, 0x301C, 0x3030, 0x30A0,\n  0xFE31, 0xFE32, 0xFE58, 0xFE63, 0xFF0D, 0x10EAD,\n  0x0029, 0x005D, 0x007D, 0x0F3B, 0x0F3D, 0x169C, 0x2046, 0x207E, 0x208E, 0x2309, 0x230B, 0x232A, 0x2769,\n  0x276B, 0x276D, 0x276F, 0x2771, 0x2773, 0x2775, 0x27C6, 0x27E7, 0x27E9, 0x27EB, 0x27ED, 0x27EF, 0x2984,\n  0x2986, 0x2988, 0x298A, 0x298C, 0x298E, 0x2990, 0x2992, 0x2994, 0x2996, 0x2998, 0x29D9, 0x29DB, 0x29FD,\n  0x2E23, 0x2E25, 0x2E27, 0x2E29, 0x3009, 0x300B, 0x300D, 0x300F, 0x3011, 0x3015, 0x3017, 0x3019, 0x301B,\n  0x301E, 0x301F, 0xFD3E, 0xFE18, 0xFE36, 0xFE38, 0xFE3A, 0xFE3C, 0xFE3E, 0xFE40, 0xFE42, 0xFE44, 0xFE48,\n  0xFE5A, 0xFE5C, 0xFE5E, 0xFF09, 0xFF3D, 0xFF5D, 0xFF60, 0xFF63,\n  0x00BB, 0x2019, 0x201D, 0x203A, 0x2E03, 0x2E05, 0x2E0A, 0x2E0D, 0x2E1D, 0x2E21,\n  0x00AB, 0x2018, 0x201B, 0x201C, 0x201F, 0x2039, 0x2E02, 0x2E04, 0x2E09, 0x2E0C, 0x2E1C, 0x2E20,\n  0x0021, 0x0022, 0x0023, 0x0025, 0x0026, 0x0027, 0x002A, 0x002C, 0x002E, 0x002F, 0x003A, 0x003B, 0x003F,\n  0x0040, 0x005C, 0x00A1, 0x00A7, 0x00B6, 0x00B7, 0x00BF, 0x037E, 0x0387, 0x055A, 0x055B, 0x055C, 0x055D,\n  0x055E, 0x055F, 0x0589, 0x05C0, 0x05C3, 0x05C6, 0x05F3, 0x05F4, 0x0609, 0x060A, 0x060C, 0x060D, 0x061B,\n  0x061E, 0x061F, 0x06D4, 0x07F7, 0x07F8, 0x07F9, 0x085E, 0x0964, 0x0965, 0x0970, 0x09FD, 0x0A76, 0x0AF0,\n  0x0C77, 0x0C84, 0x0DF4, 0x0E4F, 0x0E5A, 0x0E5B, 0x0F14, 0x0F85, 0x0FD9, 0x0FDA, 0x10FB, 0x166E, 0x16EB,\n  0x16EC, 0x16ED, 0x1735, 0x1736, 0x17D4, 0x17D5, 0x17D6, 0x17D8, 0x17D9, 0x17DA, 0x1944, 0x1945, 0x1A1E,\n  0x1A1F, 0x1C7E, 0x1C7F, 0x1CD3, 0x2016, 0x2017, 0x2041, 0x2042, 0x2043, 0x2053, \n  0x0028, 0x005B, 0x007B, 0x0F3A, 0x0F3C, 0x169B, 0x201A, 0x201E, 0x2045, 0x207D, 0x208D, 0x2308, 0x230A,\n  0x2329, 0x2768, 0x276A, 0x276C, 0x276E, 0x2770, 0x2772, 0x2774, 0x27C5, 0x27E6, 0x27E8, 0x27EA, 0x27EC,\n  0x27EE, 0x2983, 0x2985, 0x2987, 0x2989, 0x298B, 0x298D, 0x298F, 0x2991, 0x2993, 0x2995, 0x2997, 0x29D8,\n  0x29DA, 0x29FC, 0x2E22, 0x2E24, 0x2E26, 0x2E28, 0x2E42, 0x3008, 0x300A, 0x300C, 0x300E, 0x3010, 0x3014,\n  0x3016, 0x3018, 0x301A, 0x301D, 0xFD3F, 0xFE17, 0xFE35, 0xFE37, 0xFE39, 0xFE3B, 0xFE3D, 0xFE3F, 0xFE41,\n  0xFE43, 0xFE47, 0xFE59, 0xFE5B, 0xFE5D, 0xFF08, 0xFF3B, 0xFF5B, 0xFF5F, 0xFF62\n]);\n\nconst RE_LINK = new RegExp(`^${RE_LINK_TEMPLATE}$`);\nconst RE_CUSTOM_EMOJI = /^customEmoji:(\\d+)$/;\n\nfunction isWhitespace(ch: string) {\n  if (!ch) return false;\n  const code = ch.charCodeAt(0);\n  return [0x0009, 0x000A, 0x000C, 0x000D, 0x0020, 0x1680, 0x202F, 0x205F, 0x3000].includes(code) ||\n  (code >= 0x2000 && code <= 0x200A);\n}\n\nfunction isPunctuation(ch: string) {\n  if (!ch) return false;\n  const code = ch.charCodeAt(0);\n  if (PUNCTUATION_CODES.has(code)) return true;\n  return (code >= 0x2010 && code <= 0x2015) || (code >= 0x066A && code <= 0x066D) ||\n    (code >= 0x0700 && code <= 0x070D) || (code >= 0x0830 && code <= 0x083E) ||\n    (code >= 0x0F04 && code <= 0x0F12) || (code >= 0x0FD0 && code <= 0x0FD4) ||\n    (code >= 0x104A && code <= 0x104F) || (code >= 0x1360 && code <= 0x1368) ||\n    (code >= 0x1800 && code <= 0x1805) || (code >= 0x1807 && code <= 0x180A) ||\n    (code >= 0x1AA0 && code <= 0x1AA6) || (code >= 0x1AA8 && code <= 0x1AAD) ||\n    (code >= 0x1B5A && code <= 0x1B60) || (code >= 0x1BFC && code <= 0x1BFF) ||\n    (code >= 0x1C3B && code <= 0x1C3F) || (code >= 0x1CC0 && code <= 0x1CC7) ||\n    (code >= 0x2020 && code <= 0x2021) || (code >= 0x2030 && code <= 0x2038) ||\n    (code >= 0x203B && code <= 0x203E) || (code >= 0x2047 && code <= 0x2051) ||\n    (code >= 0x2055 && code <= 0x205E) || (code >= 0x2CF9 && code <= 0x2CFF);\n}\n\nexport default function parseHtmlAsFormattedText(\n  html: string, withMarkdownLinks = false, skipMarkdown = false,\n): ApiFormattedText {\n  const fragment = document.createElement('div');\n  fragment.innerHTML = (skipMarkdown ? html : cleanupHtml(html)).trim().replace(/\\u200b+/g, '');\n  fixImageContent(fragment);\n\n  let tokens: Token[] = [];\n  function pushText(text: string, st: number, en: number) {\n    if (en <= st) {\n      return;\n    }\n    if (tokens[tokens.length - 1]?.type === 'text') {\n      tokens[tokens.length - 1].text += text.slice(st, en);\n    } else {\n      tokens.push({ type: 'text', text: text.slice(st, en) });\n    }\n  }\n  function tokenize(node: Node) {\n    if (node.nodeType === Node.COMMENT_NODE) {\n      return;\n    }\n    \n    if (node.nodeType === Node.ELEMENT_NODE) {\n      const element = node as HTMLElement;\n      const { token } = elementToToken(element);\n      if (token) {\n        tokens.push({\n          ...token,\n          html: true,\n          open: true,\n        });\n      }\n      for (const child of element.childNodes) {\n        tokenize(child);\n      }\n      if (token) {\n        tokens.push({\n          ...token,\n          html: true,\n          close: true,\n        });\n      }\n      return;\n    }\n\n    if (node.nodeType === Node.TEXT_NODE) {\n      const text = node.textContent || '';\n      let state = '';\n      let prev = '';\n      let st = 0;\n      let spaceBefore = false;\n      let punctBefore = false;\n      for (let i = 0; i <= text.length; i++) {\n        const ch = text[i];\n        if (state === '') {\n          if (['*', '_', '~', '|'].includes(ch)) {\n            pushText(text, st, i);\n            state = ch;\n            spaceBefore = isWhitespace(prev);\n            punctBefore = isPunctuation(prev);\n            st = i;\n          } else\n          if (ch === '`') {\n            pushText(text, st, i);\n            state = '`';\n            st = i;\n          }\n        } else\n        if (state === '`') {\n          if (i - st === 1 && state !== ch) {\n            tokens.push({ type: ApiMessageEntityTypes.Code, text: text.slice(st, i), open: true, close: true });\n            state = '';\n            st = i;\n          } else\n          if (i - st === 2 && state !== ch) {\n            pushText(text, st, i);\n            state = '';\n            st = i;\n          } else\n          if (i - st === 3 && state !== ch) {\n            tokens.push({ type: ApiMessageEntityTypes.Pre, text: text.slice(st, i), open: true, close: true });\n            state = '';\n            st = i;\n          }\n        } else\n        if (['*', '_', '~', '|'].includes(state)) {\n          if (i - st === 1 && state !== ch) {\n            pushText(text, st, i);\n            state = ['*', '_', '~', '|'].includes(ch) ? ch : '';\n            st = i;\n          } else\n          if (i - st === 2) {\n            const spaceAfter = isWhitespace(ch);\n            const punctAfter = isPunctuation(ch);\n            const open = !spaceAfter && (!punctAfter || (punctAfter && (spaceBefore || punctBefore)));\n            const close = !spaceBefore && (!punctBefore || (punctBefore && (spaceAfter || punctAfter)));\n            if (open || close) {\n              tokens.push({ type: MARKDOWN_ENTITY_TYPES[state], text: text.slice(st, i), open, close });\n            } else {\n              pushText(text, st, i);\n            }\n            state = ['*', '_', '~', '|'].includes(ch) ? ch : '';\n            st = i;\n          }\n        }\n        \n        if (withMarkdownLinks) {\n          if (ch === '[') {\n            pushText(text, st, i);\n            tokens.push({ type: ApiMessageEntityTypes.Url, text: '[', open: true, close: false });\n            st = i + 1;\n          } else\n          if (prev === ']' && ch === '(') {\n            pushText(text, st, i - 1);\n            tokens.push({ type: ApiMessageEntityTypes.Url, text: '](', open: false, close: false });\n            st = i + 1;\n          } else\n          if (ch === ')') {\n            pushText(text, st, i);\n            tokens.push({ type: ApiMessageEntityTypes.Url, text: ')', open: false, close: true });\n            st = i + 1;\n          }\n        }\n        prev = ch;\n      }\n      pushText(text, st, text.length);\n    }\n  }\n\n  tokenize(fragment);\n\n  const stack: number[] = [];\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    let closed = false;\n    if (token.close) { // Try to find matching tag\n      let mid = -1;\n      for (let j = stack.length - 1; j >= 0; j--) {\n        const prev = tokens[stack[j]];\n        if (token.type === ApiMessageEntityTypes.Url && !token.html) {\n          if (prev.type === token.type && !prev.open && !prev.close) {\n            mid = j;\n          } else\n          if (prev.type === token.type && prev.open && mid !== -1) {\n            let url = '';\n            for (let k = stack[mid] + 1; k < i; k++) {\n              url += url + (tokens[k].text || '');\n            }\n            \n            if (RE_CUSTOM_EMOJI.test(url) || RE_LINK.test(url)) {\n              if (RE_CUSTOM_EMOJI.test(url)) {\n                prev.type = ApiMessageEntityTypes.CustomEmoji;\n                prev.data = { documentId: url.slice(12) };\n              } else {\n                url = url.includes('://') ? url : url.includes('@') ? `mailto:${url}` : `https://${url}`;\n                prev.data = { url };\n              }\n\n              for (let k = stack[mid]; k < i; k++) {\n                tokens[k].skip = true;\n              }\n              for (let k = mid; k > j; k--) {\n                tokens[stack[k]].type = 'text';\n              }\n              stack.length = j;\n              token.open = false;\n              prev.close = false;\n              closed = true;\n              break;\n            }\n          }\n        } else {\n          if (prev.type === token.type && prev.html === token.html && prev.open) {\n            for (let k = stack.length - 1; k > j; k--) {\n              tokens[stack[k]].type = 'text';\n            }\n            stack.length = j;\n            token.open = false;\n            prev.close = false;\n            closed = true;\n            break;\n          }\n        }\n      }\n    }\n    if (!closed) {\n      if (token.open || token.type === ApiMessageEntityTypes.Url) {\n        stack.push(i);\n      } else {\n        token.type = 'text';\n      }\n    }\n  }\n  for (let i = 0; i < stack.length; i++) {\n    tokens[stack[i]].type = 'text';\n  }\n  \n  const text: string[] = [];\n  const entities = [];\n  const tstack: Token[] = [];\n  let length = 0;\n  let ptoken: Token | null = null;\n  for (let i = 0; i < tokens.length; i++) {\n    const token = tokens[i];\n    if (token.type === 'text') {\n      if (!token.skip) {\n        let t = token.text || '';\n        if (ptoken?.type === ApiMessageEntityTypes.Pre) {\n          const lang = t.match(/^(\\w+)\\n.+/)?.[1];\n          t = t.replace(/^\\w+\\n+/, '');\n          if (lang) {\n            ptoken.data = { language: lang };\n          }\n        }\n        if (ptoken?.type !== 'text') { // Trim leading newlines from the first text chunk\n          t = t.replace(/^\\n+/, '');\n        }\n        text.push(t);\n        length += t.length;\n        ptoken = token;\n      }\n    } else\n    if (token.open) {\n      let found = false;\n      for (const t of tstack) {\n        if (t.type === token.type || (token.type !== ApiMessageEntityTypes.Pre && t.type === ApiMessageEntityTypes.Pre)) {\n          found = true;\n          break;\n        }\n      }\n      token.skip = found;\n      token.offset = length;\n      tstack.push(token);\n      if (!token.skip) {\n        ptoken = token;\n      }\n    } else {\n      const prev = tstack.pop();\n      if (prev && !prev.skip) {\n        if (text.length > 0) { // Trim trailing newlines from the last text chunk\n          let lastLen = text[text.length - 1].length;\n          text[text.length - 1] = text[text.length - 1].replace(/\\n+$/, '');\n          length -= lastLen - text[text.length - 1].length;\n        }\n\n        entities.push({\n          type: prev.type,\n          offset: prev.offset,\n          length: length - (prev.offset || 0),\n          ...prev.data,\n        });\n      }\n    }\n  }\n\n  // console.log(`Parsed: ${text.join('')}`, entities);\n\n  return { text: text.join(''), entities: entities.length ? entities as ApiMessageEntity[] : undefined };\n}\n\nexport function fixImageContent(fragment: HTMLDivElement) {\n  fragment.querySelectorAll('img').forEach((node) => {\n    if (node.dataset.documentId) { // Custom Emoji\n      node.textContent = (node as HTMLImageElement).alt || '';\n    } else { // Regular emoji with image fallback\n      node.replaceWith(node.alt || '');\n    }\n  });\n}\n\nfunction cleanupHtml(html: string) {\n  let cleanHtml = html.slice(0);\n\n  // Strip redundant nbsp's\n  cleanHtml = cleanHtml.replace(/&nbsp;/g, ' ');\n\n  // Replace <div><br></div> with newline (new line in Safari)\n  cleanHtml = cleanHtml.replace(/<div><br([^>]*)?><\\/div>/g, '\\n');\n  // Replace <br> with newline\n  cleanHtml = cleanHtml.replace(/<br([^>]*)?>/g, '\\n');\n\n  // Strip redundant <div> tags\n  cleanHtml = cleanHtml.replace(/<\\/div>(\\s*)<div>/g, '\\n');\n  cleanHtml = cleanHtml.replace(/<div>/g, '\\n');\n  cleanHtml = cleanHtml.replace(/<\\/div>/g, '');\n\n  /* Markdown parsing moved to parseHtmlAsFormattedText \n\n  // Pre\n  parsedHtml = parsedHtml.replace(/^`{3}(.*?)[\\n\\r](.*?[\\n\\r]?)`{3}/gms, '<pre data-language=\"$1\">$2</pre>');\n  parsedHtml = parsedHtml.replace(/^`{3}[\\n\\r]?(.*?)[\\n\\r]?`{3}/gms, '<pre>$1</pre>');\n  parsedHtml = parsedHtml.replace(/[`]{3}([^`]+)[`]{3}/g, '<pre>$1</pre>');\n\n  // Code\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[`]{1}([^`\\n]+)[`]{1}(?![^<]*<\\/(code|pre)>)/g,\n    '<code>$2</code>',\n  );\n\n  // Custom Emoji markdown tag\n  if (!IS_EMOJI_SUPPORTED) {\n    // Prepare alt text for custom emoji\n    parsedHtml = parsedHtml.replace(/\\[<img[^>]+alt=\"([^\"]+)\"[^>]*>]/gm, '[$1]');\n  }\n  parsedHtml = parsedHtml.replace(\n    /(?!<(?:code|pre)[^<]*|<\\/)\\[([^\\]\\n]+)\\]\\(customEmoji:(\\d+)\\)(?![^<]*<\\/(?:code|pre)>)/g,\n    '<img alt=\"$1\" data-document-id=\"$2\">',\n  );\n\n  // Other simple markdown\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[*]{2}([^*\\n]+)[*]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<b>$2</b>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[_]{2}([^_\\n]+)[_]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<i>$2</i>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[~]{2}([^~\\n]+)[~]{2}(?![^<]*<\\/(code|pre)>)/g,\n    '<s>$2</s>',\n  );\n  parsedHtml = parsedHtml.replace(\n    /(?!<(code|pre)[^<]*|<\\/)[|]{2}([^|\\n]+)[|]{2}(?![^<]*<\\/(code|pre)>)/g,\n    `<span data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">$2</span>`,\n  );\n\n  */\n  return cleanHtml;\n}\n\nfunction elementToToken(element: HTMLElement): any {\n  const type = entityTypeFromNode(element);\n  if (!type) {\n    return { token: null };\n  }\n  if (type === ApiMessageEntityTypes.TextUrl) {\n    return { token: { type, data: { url: (element as HTMLAnchorElement).href } } };\n  }\n  if (type === ApiMessageEntityTypes.MentionName) {\n    return { token: { type, data: { userId: (element as HTMLAnchorElement).dataset.userId! } } };\n  }\n  if (type === ApiMessageEntityTypes.Pre) {\n    return { token: { type, data: { language: (element as HTMLPreElement).dataset.language } } };\n  }\n  if (type === ApiMessageEntityTypes.CustomEmoji) {\n    return { token: { type, data: { documentId: (element as HTMLImageElement).dataset.documentId! } } };\n  }\n  return { token: { type } };\n}\n\nfunction entityTypeFromNode(node: ChildNode): ApiMessageEntityTypes | undefined {\n  if (node instanceof HTMLElement && node.dataset.entityType) {\n    return node.dataset.entityType as ApiMessageEntityTypes;\n  }\n\n  if (ENTITY_CLASS_BY_NODE_NAME[node.nodeName]) {\n    return ENTITY_CLASS_BY_NODE_NAME[node.nodeName];\n  }\n\n  if (node.nodeName === 'A') {\n    const anchor = node as HTMLAnchorElement;\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.MentionName) {\n      return ApiMessageEntityTypes.MentionName;\n    }\n    if (anchor.dataset.entityType === ApiMessageEntityTypes.Url) {\n      return ApiMessageEntityTypes.Url;\n    }\n    if (anchor.href.startsWith('mailto:')) {\n      return ApiMessageEntityTypes.Email;\n    }\n    if (anchor.href.startsWith('tel:')) {\n      return ApiMessageEntityTypes.Phone;\n    }\n    if (anchor.href !== anchor.textContent) {\n      return ApiMessageEntityTypes.TextUrl;\n    }\n\n    return ApiMessageEntityTypes.Url;\n  }\n\n  if (node.nodeName === 'SPAN') {\n    return (node as HTMLElement).dataset.entityType as any;\n  }\n\n  if (node.nodeName === 'IMG') {\n    if ((node as HTMLImageElement).dataset.documentId) {\n      return ApiMessageEntityTypes.CustomEmoji;\n    }\n  }\n\n  return undefined;\n}\n","import { ApiMediaFormat } from '../api/types';\n\nimport { callApi } from '../api/gramjs';\n\nconst MB = 1024 * 1024;\nconst DEFAULT_PART_SIZE = 0.25 * MB;\nconst MAX_END_TO_CACHE = 5 * MB - 1; // We only cache the first 2 MB of each file\n\nconst bufferCache = new Map<string, ArrayBuffer>();\nconst sizeCache = new Map<string, number>();\nconst pendingRequests = new Map<string, Promise<{ arrayBuffer?: ArrayBuffer; fullSize?: number } | undefined>>();\n\nexport async function* makeProgressiveLoader(\n  url: string,\n  start = 0,\n  chunkSize = DEFAULT_PART_SIZE,\n): AsyncGenerator<ArrayBuffer, void, undefined> {\n  const match = url.match(/fileSize=(\\d+)/);\n  let fileSize;\n  if (match) {\n    fileSize = match && Number(match[1]);\n  } else {\n    fileSize = sizeCache.get(url);\n  }\n\n  while (true) {\n    if (fileSize && start >= fileSize) return;\n\n    let end = start + chunkSize - 1;\n    if (fileSize && end > fileSize) {\n      end = fileSize - 1;\n    }\n\n    // Check if we have the chunk in memory\n    const cacheKey = `${url}:${start}-${end}`;\n    let arrayBuffer = bufferCache.get(cacheKey);\n\n    if (!arrayBuffer) {\n      let request = pendingRequests.get(cacheKey);\n      if (!request) {\n        request = callApi('downloadMedia', {\n          mediaFormat: ApiMediaFormat.Progressive,\n          url,\n          start,\n          end,\n        });\n\n        pendingRequests.set(cacheKey, request);\n      }\n\n      const result = await request.finally(() => {\n        pendingRequests.delete(cacheKey);\n      });\n\n      if (!result?.arrayBuffer) return;\n\n      // If fileSize is not yet defined, retrieve it from the first chunk's response\n      if (result.fullSize && !fileSize) {\n        fileSize = result.fullSize;\n        sizeCache.set(url, result.fullSize);\n      }\n\n      // Store the chunk in memory\n      arrayBuffer = result.arrayBuffer;\n\n      // Cache the first 2 MB of each file\n      if (end <= MAX_END_TO_CACHE) {\n        bufferCache.set(cacheKey, result.arrayBuffer);\n      }\n    }\n\n    // Yield the chunk data\n    yield arrayBuffer;\n\n    start = end + 1;\n  }\n}\n","const extractorEl = document.createElement('div');\n\nexport function insertHtmlInSelection(html: string) {\n  const selection = window.getSelection();\n\n  if (selection?.getRangeAt && selection.rangeCount) {\n    const range = selection.getRangeAt(0);\n    range.deleteContents();\n\n    const fragment = range.createContextualFragment(html);\n    const lastInsertedNode = fragment.lastChild;\n    range.insertNode(fragment);\n    if (lastInsertedNode) {\n      range.setStartAfter(lastInsertedNode);\n      range.setEndAfter(lastInsertedNode);\n    } else {\n      range.collapse(false);\n    }\n    selection.removeAllRanges();\n    selection.addRange(range);\n  }\n}\n\nexport function getHtmlBeforeSelection(container?: HTMLElement, useCommonAncestor?: boolean) {\n  if (!container) {\n    return '';\n  }\n\n  const sel = window.getSelection();\n  if (!sel || !sel.rangeCount) {\n    return container.innerHTML;\n  }\n\n  const range = sel.getRangeAt(0).cloneRange();\n  if (!range.intersectsNode(container)) {\n    return container.innerHTML;\n  }\n\n  if (!useCommonAncestor && !container.contains(range.commonAncestorContainer)) {\n    return '';\n  }\n\n  range.collapse(true);\n  range.setStart(container, 0);\n\n  extractorEl.innerHTML = '';\n  extractorEl.appendChild(range.cloneContents());\n\n  return extractorEl.innerHTML;\n}\n\n// https://stackoverflow.com/a/3976125\nexport function getCaretPosition(element: HTMLElement) {\n  let caretPosition = 0;\n  const selection = window.getSelection();\n  if (!selection || selection.rangeCount === 0) {\n    return caretPosition;\n  }\n\n  const range = selection.getRangeAt(0);\n  const caretRange = range.cloneRange();\n  caretRange.selectNodeContents(element);\n  caretRange.setEnd(range.endContainer, range.endOffset);\n  caretPosition = caretRange.toString().length;\n\n  return caretPosition;\n}\n\n// https://stackoverflow.com/a/36953852\nexport function setCaretPosition(element: Node, position: number) {\n  for (const node of element.childNodes) {\n    if (node.nodeType === Node.TEXT_NODE) {\n      if ((node as Text).length >= position) {\n        const range = document.createRange();\n        const selection = window.getSelection()!;\n        range.setStart(node, position);\n        range.collapse(true);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        return -1;\n      } else {\n        position -= 'length' in node ? node.length as number : 0;\n      }\n    } else {\n      position = setCaretPosition(node, position);\n      if (position === -1) {\n        return -1;\n      }\n    }\n  }\n\n  return position;\n}\n\nexport function removeAllSelections() {\n  const selection = window.getSelection();\n  selection?.removeAllRanges();\n}\n","let fileSelector: HTMLInputElement;\n\nexport function openSystemFilesDialog(accept = '*', callback: (e: Event) => void, noMultiple = false) {\n  if (!fileSelector) {\n    fileSelector = document.createElement('input');\n    fileSelector.setAttribute('type', 'file');\n  }\n\n  fileSelector.setAttribute('accept', accept);\n\n  if (noMultiple) {\n    fileSelector.removeAttribute('multiple');\n  } else {\n    fileSelector.setAttribute('multiple', 'multiple');\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  fileSelector.onchange = null;\n  fileSelector.value = '';\n  fileSelector.onchange = callback;\n\n  fileSelector.click();\n}\n","import windowSize from '../windowSize';\n\nexport function isElementInViewport(el: HTMLElement) {\n  if (el.style.display === 'none') {\n    return false;\n  }\n\n  const rect = el.getBoundingClientRect();\n  const { height: windowHeight } = windowSize.get();\n\n  return (rect.top <= windowHeight) && ((rect.top + rect.height) >= 0);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"CdTfL4f7\",\"fadeIn\":\"MyeHARy0\",\"closing\":\"EZbKn_M3\",\"peer\":\"kW0xpExG\",\"name\":\"BDZrSTO_\",\"name_hasUnreadStory\":\"OoUm5AUZ\",\"nameHasUnreadStory\":\"OoUm5AUZ\",\"hidden\":\"lnVtxMZI\",\"contextMenu\":\"N1sagA0s\"};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"BDZrSTO_\",\"root\":\"QOz6fQFU\",\"avatar\":\"dXSy0i2c\",\"avatarHidden\":\"n0vJEdNW\",\"ghost\":\"E1IeDpeb\",\"ghostAnimateName\":\"HMp3KTKQ\",\"ghostRevealName\":\"unYkDic1\",\"ghostLast\":\"dZJGfaXC\"};"],"names":["memo","withGlobal","global","chatId","chat","selectChat","groupCall","selectChatGroupCall","isActive","selectTabState","isMasterTab","groupCalls","activeGroupCallId","undefined","id","Boolean","participantsCount","isLoaded","isCallNotEmpty","isCallActive","GroupCallTopPane","className","onPaneStateChange","requestMasterAndJoinGroupCall","subscribeToGroupCallUpdates","getActions","lang","useOldLang","handleJoinGroupCall","useCallback","participants","fetchedParticipants","useMemo","usersById","getGlobal","users","byId","chatsById","chats","Object","values","slice","map","filter","useEffect","subscribed","renderingParticipantCount","useCurrentOrPrev","renderingFetchedParticipants","isRendering","ref","shouldRender","useHeaderPane","isOpen","onStateChange","React","createElement","buildClassName","onClick","length","AvatarList","size","peers","Button","round","TINY_SCREEN_WIDTH_MQL","window","matchMedia","WITH_AVATAR_TINY_SCREEN_WIDTH_MQL","renderSeekline","playProgress","bufferedRanges","seekerRef","start","end","style","Audio","theme","message","senderTitle","uploadProgress","origin","date","noAvatars","isSelectable","isSelected","isDownloading","isTranscribing","isTranscriptionHidden","isTranscribed","isTranscriptionError","canDownload","canTranscribe","autoPlay","onHideTranscription","onPlay","onPause","onReadMedia","onCancelUpload","onDateClick","cancelMediaDownload","downloadMedia","transcribeAudio","openOneTimeMediaModal","content","audio","contentAudio","voice","video","isMediaUnread","getMessageWebPageAudio","media","mediaSource","isVoice","isSeeking","useRef","isRtl","isMobile","useAppLayout","isActivated","setIsActivated","useState","shouldLoad","coverHash","getMediaHash","coverBlobUrl","useMedia","ApiMediaFormat","BlobUrl","hasTtl","hasMessageTtl","isInOneTimeModal","AudioOrigin","OneTimeModal","trackType","mediaData","getMediaFormat","loadProgress","downloadProgress","useMediaWithLoadProgress","handleForcePlay","useLastCallback","handleTrackChange","isBuffered","bufferingHandlers","checkBuffering","useBuffering","noReset","isPlaying","playPause","setCurrentTime","duration","useAudioPlayer","makeTrackId","getMediaDuration","isMessageLocal","reversePlayProgress","isOwn","isOwnMessage","isReverse","waveformCanvasRef","withAvatar","canvasRef","data","spikes","peak","waveform","Array","Math","min","fill","MIN_SPIKES","MAX_SPIKES","matches","getSeeklineSpikeAmounts","durationFactor","spikesCount","fitCount","newData","springFactor","leftFiller","rightFiller","i","idx","floor","val","interpolateArray","encoded5bit","bitsCount","valuesCount","result","bitsData","l","byteIndex","bitShift","value","lastByteIndex","lastBitShift","lastValue","decodeWaveform","Uint8Array","useLayoutEffect","canvas","current","progress","fillStyle","progressFillStyle","width","height","ctx","getContext","scale","forEach","item","globalAlpha","spikeHeight","max","x","y","radius","SPIKE_WIDTH","beginPath","moveTo","arcTo","closePath","roundedRectangle","renderWaveform","useWaveformCanvas","withSeekline","isLoadingForPlaying","isUploading","isTransferring","transferProgress","getMediaTransferState","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderCross","handleButtonClick","setAudioPlayerOrigin","handleDownloadClick","originMessage","handleSeek","e","left","getBoundingClientRect","clientX","MouseEvent","targetTouches","stopPropagation","handleStartSeek","button","handleStopSeek","handleDateClick","handleTranscribe","messageId","renderFirstLine","title","fileName","captureEvents","onCapture","onRelease","onDrag","fullClassName","Inline","Search","SharedMedia","buttonClassNames","push","contentClassName","renderWithTitle","dir","renderText","Link","formatPastTimeShort","formatMediaDuration","performer","renderSecondLine","Icon","name","ripple","color","ariaLabel","backgroundImage","nonInteractive","AnimatedIcon","tgsUrl","LOCAL_TGS_URLS","Flame","noLoop","ProgressSpinner","transparent","withColor","noCross","rotationOffset","showProgress","showSeekline","getFileSizeString","Fragment","formatMediaDateTime","renderAudio","onClickTranscribe","draggable","viewBox","rx","ry","stroke","renderVoice","resetInput","applyIosAutoCapitalizationFix","inputEl","focus","IS_IOS","document","classList","add","body","appendChild","RE_COMMAND","GDOCS_ELEMENT_ID_REGEXP","GDOCS_STYLES","BOLD","ITALIC","UNDERLINE","STRIKETHROUGH","SUPERSCRIPT","SUBSCRIPT","ELEMENTS","ANCHOR","BLOCKQUOTE","headers","parseHtml","html","DOMParser","parseFromString","wrapNodeAnchor","node","href","anchor","cloneNode","wrapNodeInline","el","wrapNode","inner","newNode","fontWeight","fontStyle","textDecoration","verticalAlign","applyInlineStyles","dirty","createTextNode","textContent","styledNode","nodeName","childNodes","getCleanNode","newWrapper","createDocumentFragment","items","indexOf","applyBlockStyles","nodes","filterNode","nodeType","STYLE_TAG_REGEX","VALID_TARGET_IDS","Set","EDITABLE_INPUT_ID","EDITABLE_INPUT_MODAL_ID","EDITABLE_STORY_INPUT_ID","useClipboardPaste","insertTextAndUpdateCursor","setAttachments","setNextText","editedMessage","shouldStripCustomEmoji","onCustomEmojiStripped","showNotification","addEventListener","handlePaste","removeEventListener","async","clipboardData","input","target","closest","has","preventDefault","activeElement","pastedText","getData","pastedFormattedText","parseHtmlAsFormattedText","fragment","clipboardContent","match","filteredNodes","from","cleanNodes","getCleanDocument","replace","innerHTML","err","DEBUG","console","error","textContents","querySelectorAll","getElementsByTagName","HTMLElement","removeAttribute","tagName","replaceWith","dataset","entityType","getAttribute","ignoreOnPaste","remove","ENTITY_CLASS_BY_NODE_NAME","setAttribute","innerText","alt","ApiMessageEntityTypes","MentionName","CustomEmoji","trimEnd","preparePastedHtml","containsCustomEmoji","stripCustomEmoji","files","getFilesFromDataTransferItems","textToPaste","entities","text","isWordDocument","documentElement","hasText","shouldSetAttachments","newAttachments","Promise","all","file","buildAttachment","canReplace","canReplaceMessageMedia","isUploadingDocumentSticker","isUploadingFileSticker","isInAlbum","groupedId","attachments","concat","isFrozen","URL_ENTITIES","TextUrl","Url","INLINE_BOT_QUERY_REGEXP","HAS_NEW_LINE","MEMO_NO_RESULT","username","query","canShowHelp","usernameLowered","tempEl","buildQueryStateMemo","memoized","toLowerCase","STARTS_ENDS_ON_EMOJI_IMG_REGEX","RegExp","EMOJI_IMG_REGEX","source","POLYFILL_OPTIONS","encoderPath","URL","reuseWorker","BLOB_PARAMS","type","opusRecorderPromise","OpusRecorder","mediaRecorder","init","default","analyzerCallback","startMediaRecorder","startedAt","Date","now","pausedAt","chunks","ondataavailable","typedArray","releaseAnalyzer","recorder","cb","sourceNode","analyser","context","createAnalyser","fftSize","connect","dataLength","frequencyBinCount","dataArray","isDestroyed","tick","getByteFrequencyData","volume","reduce","acc","requestMeasure","subscribeToAnalyzer","stop","resolve","reject","onstop","blob","Blob","onerror","delayStop","setTimeout","pause","props","AttachmentModal","useModuleLoader","Bundles","Extra","AttachMenu","threadId","isButtonVisible","canAttachMedia","canAttachPolls","canSendPhotos","canSendVideos","canSendDocuments","canSendAudios","attachBots","peerType","isScheduled","shouldCollectDebugLogs","onFileSelect","onMenuOpen","onMenuClose","onPollCreate","canEditMedia","editingMessage","isAttachMenuOpen","openAttachMenu","closeAttachMenu","useFlag","handleMouseEnter","handleMouseLeave","markMouseInside","useMouseInside","canSendVideoAndPhoto","canSendVideoOrPhoto","isAttachmentBotMenuOpen","markAttachmentBotMenuOpen","unmarkAttachmentBotMenuOpen","isMenuOpen","isPhotoOrVideo","getMessagePhoto","getMessageWebPagePhoto","getMessageVideo","getMessageWebPageVideo","isFile","getMessageAudio","getMessageVoice","getMessageDocument","handleToggleAttachMenu","handleFileSelect","shouldSuggestCompression","validatedFiles","validateFiles","handleQuickSelect","openSystemFilesDialog","CONTENT_TYPES_WITH_PREVIEW","SUPPORTED_PHOTO_CONTENT_TYPES","SUPPORTED_VIDEO_CONTENT_TYPES","join","handleDocumentSelect","SUPPORTED_AUDIO_CONTENT_TYPES","handleSendLogs","File","getDebugLogs","DEBUG_LOG_FILENAME","bots","bot","isForAttachMenu","attachMenuPeerTypes","includes","ResponsiveHoverButton","onActivate","ariaControls","hasPopup","disabled","Menu","autoClose","positionX","positionY","onClose","onCloseAnimationEnd","onMouseEnter","IS_TOUCH_ENV","onMouseLeave","noCloseOnBackdrop","ariaLabelledBy","MenuItem","icon","AttachBotItem","onMenuOpened","onMenuClosed","BotCommandMenu","selectCurrentMessageList","selectChatMessage","BotKeyboardMenu","clickBotInlineButton","isKeyboardSingleUse","buttonTexts","texts","keyboardButtons","row","renderKeyboardButtonText","noCompact","j","BotMenuButton","isDisabled","textRef","textEl","scrollWidth","setProperty","composerEl","removeProperty","ChatCommandTooltip","shouldForceShowEditing","messageListType","forwardMessages","fromChatId","toChatId","messageIds","forwardMessageIds","noAuthors","noCaptions","isShareMessageModalShown","isModalShown","shouldPreventComposerAnimation","editingId","selectEditingScheduledId","selectEditingId","shouldAnimate","selectCanAnimateInterface","isForwarding","forwardedMessages","draft","selectDraft","replyInfo","replyToPeerId","senderChat","sender","selectEditingMessage","replyToMsgId","selectSender","selectForwardedSender","selectPeer","forwardInfo","isChatWithSelf","selectIsChatWithSelf","isChannelPost","hiddenUserName","quoteText","isSenderChannel","isChatChannel","forwardsHaveCaptions","some","forward","keys","isContextMenuDisabled","storyData","isReplyToDiscussion","forwardedMessagesCount","isCurrentUserPremium","selectIsCurrentUserPremium","isInChangingRecipientMode","currentUserId","ComposerEmbeddedMessage","onClear","resetDraftReplyInfo","updateDraftReplyInfo","setEditingId","focusMessage","changeRecipient","openChatOrTopicWithReplyInDraft","setForwardNoAuthors","setForwardNoCaptions","exitForwardMode","setShouldPreventComposerAnimation","oldLang","useLang","isReplyToTopicStart","action","isShowingReply","isReplyWithQuote","isShown","clearEmbedded","captureEscKeyListener","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","handleMessageClick","handleClearClick","buildAutoCloseMenuItemHandler","handleForwardToAnotherChatClick","handleShowMessageClick","focusMessageFromDraft","noForumTopicPanel","handleRemoveQuoteClick","handleChangeReplyRecipientClick","handleReplyInSenderChat","handleDoNotReplyClick","getTriggerElement","getRootElement","getMenuElement","querySelector","renderingSender","innerClassName","getPeerColorClass","leftIcon","customText","strippedMessage","strippedText","renderingLeftIcon","canReplyInSenderChat","onContextMenu","ClosableEmbeddedMessage","isInComposer","faded","customIcon","MenuSeparator","DropArea","InlineBotTooltip","MentionTooltip","PollModal","SendAsMenu","StickerTooltip","RE_LINK","RE_LINK_TEMPLATE","noWebPage","selectNoWebPage","attachmentSettings","selectTheme","webPagePreview","WebPagePreview","getHtml","isEditing","loadWebPagePreview","clearWebPagePreview","toggleMessageWebPage","updateAttachmentSettings","formattedTextWithLinkRef","isInvertedMedia","isSmallerMedia","webPageMediaSize","detectLinkDebounced","useDebouncedResolver","formattedText","linkEntity","find","entity","url","getLink","useDerivedSignal","link","useSyncEffect","useDerivedState","hasMediaSizeOptions","hasLargeMedia","renderingWebPage","handleClearWebpagePreview","handlePreviewClick","updateIsInvertedMedia","updateIsLargerMedia","photo","webPageWithoutPhoto","messageStub","webPage","WebPage","inPreview","onContainerClick","MainButtonState","storyId","chatBot","isSystemBot","selectBot","isChatWithBot","isChatWithUser","isUserId","userFullInfo","selectUserFullInfo","chatFullInfo","selectChatFullInfo","messageWithActualBotKeyboard","selectNewestMessageWithBotKeyboardButtons","language","shouldSuggestStickers","shouldSuggestCustomEmoji","shouldUpdateStickerSetOrder","settings","byKey","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","botKeyboardMessageId","keyboardMessage","currentUser","selectUser","defaultSendAsId","sendAsId","sendAsPeerIds","peer","adminRights","anonymous","sendAsUser","sendAsChat","requestedDraft","selectRequestedDraft","requestedDraftFiles","selectRequestedDraftFiles","tabState","isStoryViewerOpen","storyViewer","currentMessageList","isForCurrentMessageList","canSendVoiceByPrivacy","noVoiceMessages","slowMode","editingDraft","selectEditingScheduledDraft","selectEditingDraft","story","selectPeerStory","sentStoryReaction","sentReaction","replyToMessage","replyToTopic","isForum","isForumAsMessages","MAIN_THREAD_ID","selectTopicFromMessage","isInScheduledList","canSendQuickReplies","areEffectsSupported","SERVICE_NOTIFICATIONS_USER_ID","canPlayEffect","selectPerformanceSettingsValue","shouldPlayEffect","shouldPlayEffectInComposer","effectId","effect","availableEffectById","effectReactions","reactions","maxMessageLength","config","DEFAULT_MAX_MESSAGE_LENGTH","availableReactions","topReactions","isOnActiveTab","isBlurred","canScheduleUntilOnline","selectCanScheduleUntilOnline","isChannel","isRightColumnShown","selectIsRightColumnShown","isSelectModeActive","selectIsInSelectMode","withScheduledButton","hasScheduledMessages","botKeyboardPlaceholder","keyboardPlaceholder","pollModal","stickersForEmoji","stickers","forEmoji","customEmojiForEmoji","customEmojis","topInlineBotIds","topInlineBots","userIds","contentToBeScheduled","recentEmojis","keywords","inlineBots","byUsername","isInlineBotLoading","isLoading","botCommands","botInfo","commands","botMenuButton","menuButton","attachMenu","attachMenuPeerType","selectChatType","fileSizeLimit","selectCurrentLimit","MAX_UPLOAD_FILEPART_SIZE","captionLimit","isReactionPickerOpen","selectIsReactionPickerOpen","canBuyPremium","selectIsPremiumPurchaseBlocked","canPlayAnimatedEmojis","selectCanPlayAnimatedEmojis","canSendOneTimeMedia","stealthMode","stories","quickReplyMessages","quickReplies","messagesById","isContactRequirePremium","Composer","dropAreaState","isReady","onDropHide","onFocus","onBlur","inputPlaceholder","editableInputCssSelector","editableInputId","inputId","onForward","sendMessage","clearDraft","showDialog","openPollModal","closePollModal","loadScheduledHistory","openThread","addRecentEmoji","sendInlineBotResult","loadSendAs","resetOpenChatWithDraft","callAttachBot","addRecentCustomEmoji","showAllowedMessageTypesNotification","openStoryReactionPicker","closeReactionPicker","sendStoryReaction","editMessage","saveEffectInDraft","setReactionEffect","hideEffectInComposer","inputRef","storyReactionRef","setHtml","useSignal","isMounted","setIsMounted","getSelectionRange","useGetSelectionRange","lastMessageSendTimeSeconds","prevDropAreaState","usePreviousDeprecated","windowWidth","windowSize","get","isInMessageList","isInStoryViewer","canShowSendAs","isSymbolMenuForced","forceShowSymbolMenu","cancelForceShowSymbolMenu","sendMessageAction","useSendMessageAction","isInputHasFocus","markInputHasFocus","unmarkInputHasFocus","onAttachMenuOpen","onAttachMenuClose","canMediaBeReplaced","emojiSet","members","groupChatMembers","chatBotCommands","chatEmojiSetId","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","processMessageInputForCustomEmoji","customEmojiNotificationNumber","requestCalendar","calendar","useSchedule","useTimeout","isChannelWithProfiles","areProfilesShown","isChatSuperGroup","shouldAnimateSendAsButtonRef","prevChatId","prevSendAsPeerIds","hasAttachments","nextText","canSendStickers","canSendGifs","canAttachEmbedLinks","canSendVoices","canSendPlainText","getAllowedAttachmentOptions","isNeedPremium","isSendTextBlocked","hasWebPagePreview","isComposerBlocked","insertHtmlAndUpdateCursor","newHtml","inInputId","messageInput","getElementById","queryCommandSupported","execCommand","selection","getSelection","rangeCount","range","getRangeAt","isSelectionInsideInput","createContextualFragment","deleteContents","insertNode","dispatchEvent","Event","bubbles","insertFormattedTextAndUpdateCursor","getTextWithEntitiesAsHtml","insertCustomEmojiAndUpdateCursor","emoji","buildCustomEmojiHtml","insertNextText","shouldForceCompression","shouldForceAsFile","handleAppendFiles","onCaptionUpdate","handleClearAttachments","handleSetAttachments","openLimitReachedModal","setShouldForceAsFile","setShouldForceCompression","setShouldSuggestCompression","MEMO_EMPTY_ARRAY","newValue","attachment","getAttachmentMediaType","limit","shouldForce","isSpoiler","newAttachment","shouldSendAsSpoiler","suggestCompression","useAttachmentModal","isBotKeyboardOpen","openBotKeyboard","closeBotKeyboard","isBotCommandMenuOpen","openBotCommandMenu","closeBotCommandMenu","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","isSendAsMenuOpen","openSendAsMenu","closeSendAsMenu","isHoverDisabled","disableHover","enableHover","startRecordingVoice","stopRecordingVoice","pauseRecordingVoice","activeVoiceRecording","currentRecordTime","recordButtonRef","mainButtonRef","startRecordTimeRef","isViewOnceEnabled","setIsViewOnceEnabled","toogleViewOnceEnabled","useVoiceRecording","setActiveVoiceRecording","setCurrentRecordTime","IS_SAFARI","IS_VOICE_RECORDING_SUPPORTED","voiceRecording","tickVolume","requestMutation","boxShadow","shouldSendRecordingStatus","useInterval","SEND_MESSAGE_ACTION_INTERVAL","isEditingRef","useStateRef","isAdmin","isChatAdmin","isEmojiTooltipOpen","closeEmojiTooltip","filteredEmojis","filteredCustomEmojis","insertEmoji","useEmojiTooltip","isCustomEmojiTooltipOpen","closeCustomEmojiTooltip","insertCustomEmoji","useCustomEmojiTooltip","isStickerTooltipOpen","closeStickerTooltip","isEnabled","loadStickersForEmoji","clearStickersForEmoji","isManuallyClosed","markManuallyClosed","unmarkManuallyClosed","getSingleEmoji","IS_EMOJI_SUPPORTED","twemojiRegex","cleanHtml","prepareForRegExp","parseEmojiOnlyString","hasStickers","singleEmoji","useStickerTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","isInlineBotTooltipOpen","botId","inlineBotId","isGallery","isInlineBotTooltipGallery","switchPm","inlineBotSwitchPm","switchWebview","inlineBotSwitchWebview","results","inlineBotResults","closeTooltip","closeInlineBotTooltip","help","inlineBotHelp","loadMore","loadMoreForInlineBot","queryInlineBot","resetInlineBot","resetAllInlineBots","extractBotQueryThrottled","useThrottledResolver","startsWith","getPlainText","parseBotQuery","prevUsername","offset","useInlineBotTooltip","hasQuickReplies","isChatCommandTooltipOpen","close","closeChatCommandTooltip","filteredBotCommands","botTooltipCommands","filteredQuickReplies","quickReplyCommands","setFilteredBotCommands","setFilteredQuickReplies","detectCommandThrottled","trim","getCommand","command","substring","nextFilteredBotCommands","c","newFilteredQuickReplies","quickReply","shortcut","useChatCommandTooltip","useDraft","saveDraft","loadCustomEmojis","isTouchedRef","isLocalDraft","isLocal","updateDraft","prevState","shouldKeepReply","runDebouncedForSaveDraft","useRunDebounced","DRAFT_DEBOUNCE","useLayoutEffectWithPrevDeps","prevThreadId","prevDraft","isTouched","customEmojiIds","documentId","ids","chatIdRef","threadIdRef","scopedСhatId","scopedThreadId","useBackgroundMode","useBeforeUnload","resetComposer","shouldPreserveInput","handleEditComplete","handleEditCancel","useEditing","setEditingDraft","openDeleteMessageModal","setShouldForceShowEditing","replyingToId","useEffectWithPrevDeps","prevEditedMessage","prevReplyingToId","requestNextMutation","EDITABLE_INPUT_CSS_SELECTOR","focusEditableElement","shouldSetNoWebPage","edited","update","getShouldResetNoWebPageDebounced","restoreNewDraftAfterEditing","hasMessageMedia","messageList","isSchedule","handleBlur","resetComposerRef","stopRecordingVoiceRef","showCustomEmojiPremiumNotification","notificationNumber","payload","shouldReplaceHistory","actionText","initialSection","Number","mainButtonState","Edit","Schedule","Send","Record","Forward","canShowCustomSendMenu","isCustomSendMenuOpen","storyReactionPickerAnchor","handleStoryPickerContextMenu","handleBeforeContextMenu","handleBeforeStoryPickerContextMenu","handleStoryPickerContextMenuHide","peerId","position","handleEmbeddedClear","validateTextLength","isAttachmentModal","maxLength","extraLength","textParams","toString","hasErrorKey","checkSlowMode","nowSeconds","getServerTime","secondsSinceLastMessage","nextSendDateNotReached","nextSendDate","seconds","secondsRemaining","isSlowMode","blur","sendAttachments","attachmentsToSend","sendCompressed","shouldCompress","sendGrouped","shouldSendGrouped","isSilent","scheduledAt","prepareAttachmentsToSend","shouldGroupMessages","isLocalOnly","handleSendAttachmentsFromModal","handleSendAttachments","handleSend","currentAttachments","record","ttlSeconds","ONE_TIME_MEDIA_TTL_SECONDS","webPageUrl","handleClickBotMenu","parsedLink","tryParseDeepLink","appName","processDeepLink","handleActivateBotCommandMenu","handleMessageSchedule","args","queryId","restArgs","prevContentToBeScheduled","handleCustomEmojiSelect","emojiSetId","stickerSetInfo","isFree","handleCustomEmojiSelectAttachmentModal","handleGifSelect","gif","isScheduleRequested","handleStickerSelect","sticker","canUpdateStickerSetsOrder","isPreloadedGlobally","handleInlineBotSelect","inlineResult","handleBotCommandSelect","handlePollSend","poll","sendSilent","additionalArgs","handleSendAsMenuOpen","insertTextAndUpdateCursorAttachmentModal","removeSymbol","selectionRange","element","lastChild","textLength","createRange","setStart","setEnd","removeAllRanges","addRange","deleteLastCharacterOutsideSelection","removeSymbolAttachmentModal","handleAllScheduledClick","withBotMenuButton","isBotMenuButtonOpen","timedPlaceholderLangKey","timedPlaceholderDate","activeUntil","isComposerHasFocus","isReactionSelectorOpen","placeholderForForumAsMessages","shouldRenderReactionSelector","reactionSelectorTransitonClassNames","areVoiceMessagesNotAllowed","mainButtonHandler","scheduledDefaultDate","setSeconds","setMilliseconds","scheduledMaxDate","setFullYear","getFullYear","sendButtonAriaLabel","handleToggleReaction","reaction","emoticon","customEmojiMessage","isReaction","handleToggleEffectReaction","handleReactionPickerOpen","sendAsMessage","handleLikeStory","containerId","getStoryKey","handleSendScheduled","handleSendSilent","handleSendWhenOnline","SCHEDULED_WHEN_ONLINE","handleSendScheduledAttachments","handleSendSilentAttachments","handleRemoveEffect","handleStopEffect","onSend","withBotCommands","effectEmoji","DropAreaState","None","withQuick","QuickFile","onHide","ReactionSelector","allAvailableReactions","onToggleReaction","isPrivate","isInSavedMessages","onShowMore","isForMessage","shouldSchedule","forceDarkTheme","onSendSilent","onSendScheduled","onFileAppend","onAttachmentsUpdate","onCustomEmojiSelect","onRemoveSymbol","onEmojiSelect","onSendWhenOnline","isQuiz","shouldBeAnonymous","selectedSendAsId","filteredUsers","onInsertUserName","withUsername","self","filterUnits","dy","in","stdDeviation","d","isSavedMessages","onSelectResult","Avatar","SymbolMenuButton","isMessageComposer","onGifSelect","onStickerSelect","inputCssSelector","idPrefix","MessageInput","customEmojiPrefix","isStoryInput","placeholder","forcedPlaceholder","canAutoFocus","noFocusInterception","shouldSuppressFocus","shouldSuppressTextFormatter","onUpdate","onSuppressedFocus","Spinner","formatVoiceRecordDuration","CustomEmojiTooltip","key","EmojiTooltip","emojis","onMouseDown","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","allowDisabledClick","noFastClick","MessageEffect","shouldPlay","onStop","CustomSendMenu","canSchedule","onSendSchedule","onRemoveEffect","withEffects","hasCurrentEffect","SVG_EXTENSIONS","Document","observeIntersection","smaller","canAutoLoad","autoLoadFileMaxSizeMb","withDate","datetime","shouldWarnAboutSvg","onMediaClick","setSettingOption","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","timestamp","extension","getDocumentExtension","isIntersecting","useIsIntersecting","wasIntersected","markIntersected","isLoadAllowed","setIsLoadAllowed","shouldDownload","documentHash","getDocumentMediaHash","hasPreview","getDocumentHasPreview","thumbDataUri","getMediaThumbUri","localBlobUrl","previewBlobUrl","previewData","withMediaViewer","innerMediaType","handleDownload","handleClick","handleSvgConfirm","thumbnailDataUri","actionIcon","isDocumentVideo","ConfirmDialog","confirmHandler","Checkbox","checked","label","onCheck","elementRef","withThumb","noThumb","thumbRef","useCanvasBlur","IS_CANVAS_FILTER_SUPPORTED","thumbClassNames","useMediaTransitionDeprecated","shouldSpinnerRender","getColorFromExtension","sizeString","subtitle","getDocumentThumbnailDimensions","src","KEY_POINTS","createShader","gl","shader","shaderSource","compileShader","prepareCanvas","program","createProgram","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","linkProgram","useProgram","positionLocation","getAttribLocation","positionBuffer","createBuffer","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","enableVertexAttribArray","vertexAttribPointer","FLOAT","resolution","getUniformLocation","sharedCanvas","sharedGl","sharedUniforms","uniforms","createSharedCanvas","rotateWallpapers","addActionHandler","GradientWallpaper","colors","rotateOnSend","dark","opacity","dpr","useDevicePixelRatio","isVisible","setIsVisible","uniformsRef","useSharedCanvas","stateRef","keyShift","targets","positions","speed","animating","render","viewport","uniform2f","uniform3fv","hex","split","parseInt","uniform2fv","drawArrays","TRIANGLES","drawImage","rotateTargets","animate","p","distance","p1","p2","abs","requestAnimationFrame","updatePositions","rotateWallpaper","updateCanvas","updateCanvasAfterHeavyAnimation","useThrottleForHeavyAnimation","updateCanvasSize","parentWidth","parentHeight","handleResize","entry","contentRect","useResizeObserver","container","TOPIC_ICON_SIZE","REM","threadInfo","selectThreadInfo","onlineCount","selectChatOnlineCount","areMessagesLoaded","selectChatMessages","topic","selectTopic","messagesCount","selectThreadMessagesCount","GroupChatInfo","typingStatus","statusIcon","avatarSize","noAvatar","status","withDots","withFullInfo","withUpdatingStatus","withChatType","noRtl","noStatusOrTyping","withStory","storyViewerOrigin","noEmojiStatus","emojiStatusSize","isSavedDialog","onEmojiStatusClick","loadFullChat","openMediaViewer","loadMoreProfilePhotos","isSuperGroup","isTopic","isMin","isRestricted","isPreload","handleAvatarViewerOpen","hasMedia","isAvatarView","mediaIndex","MediaViewerOrigin","ProfileAvatar","MiddleHeaderAvatar","mainUsername","getMainUsername","storyViewerMode","TopicIcon","FullNameTitle","withEmojiStatus","DotAnimation","TypingStatus","Transition","shouldRestoreHeight","activeKey","getChatTypeString","groupStatus","getGroupStatus","onlineStatus","renderStatusOrTyping","InviteLink","withShare","onRevoke","openChatWithDraft","isOnlyCopy","copyLink","copyTextToClipboard","handleCopyClick","handleShare","PrimaryLinkMenuButton","onTrigger","readOnly","DropdownMenu","trigger","destructive","Media","isProtected","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","hasSpoiler","getMessageIsSpoiler","isSpoilerShown","hideSpoiler","getMessageHtmlId","decoding","stopEvent","MediaSpoiler","isGif","NothingFound","description","peerColor","noUserColors","shoudReset","emojiIconClassName","children","otherProps","_extends","getApiPeerColorClass","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","userId","forceShowSelf","isSynced","user","userStatus","selectUserStatus","isSelf","PrivateChatInfo","customPeer","noFake","noVerified","adminMember","iconElement","rightElement","loadFullUser","useIntervalForceUpdate","customTitle","isOwner","subtitleKey","translatedStatus","getUserStatus","mainUserNameClassName","isUserOnline","RippleEffect","ProfilePhoto","canPlayVideo","videoRef","isDeleted","isDeletedUser","isRepliesChat","isChatWithRepliesBot","isAnonymousForwards","isAnonymousForwardsChat","canHaveMedia","isVideo","avatarHash","avatarPhotoId","getChatAvatarHash","previewHash","getPhotoMediaHash","photoHash","getProfilePhotoMediaHash","photoBlobUrl","videoHash","getVideoProfilePhotoMediaHash","fullMediaData","isVideoReady","markVideoReady","isFullMediaReady","isBlurredThumb","thumbnail","dataUri","blurredThumbCanvasRef","currentTime","specialIcon","role","OptimizedVideo","canPlay","muted","disablePictureInPicture","loop","playsInline","onReady","userFullName","getUserFullName","getFirstLetters","getChatTitle","profilePhotos","selectPeerPhotos","avatarOwnerId","mediaViewer","currentTopicId","emojiStatus","emojiStatusSticker","ProfileInfo","openPremiumModal","openStickerSet","openPrivacySettingsNoticeModal","photos","prevMediaIndex","prevAvatarOwnerId","hasSlideAnimation","setHasSlideAnimation","slideAnimation","currentPhotoIndex","setCurrentPhotoIndex","isFirst","isLast","currentIndex","mediaHash","mediaLoader","usePhotosPreload","handleProfilePhotoClick","SettingsAvatar","handleStatusClick","fromUserId","selectPreviousMedia","selectNextMedia","handleOpenGetReadDateModal","isReadDate","styles","selectorToPreventScroll","onSwipe","direction","SwipeDirection","Right","Left","letterClassName","noLoopLimit","totalPhotosLength","count","enumerator","activeDashIndex","MAX_PHOTO_DASH_COUNT","_","renderPhotoTabs","personalPhoto","fallbackPhoto","renderPhoto","canCopyTitle","isSystemBotChat","isReadDateRestrictedByMe","membersCount","renderStatus","WebLink","onMessageClick","linkData","getMessageWebPage","getFirstLinkInMessage","domain","siteName","formattedDescription","getMessageText","renderMessageSummary","displayUrl","truncatedDescription","trimText","safeLinkContent","SafeLink","NBSP","EmbeddedMessage","forwardSender","chatTranslations","requestedChatTranslationLanguage","observeIntersectionForLoading","observeIntersectionForPlaying","containedMedia","replyMedia","isVideoThumbnail","previewPhotoSizes","mediaThumbnail","useThumbnail","isRoundVideo","getMessageRoundVideo","isQuote","replyForwardInfo","replyFrom","shouldTranslate","isMessageTranslatable","translatedText","useMessageTranslation","getPeerTitle","senderChatTitle","forwardSenderTitle","areSendersSame","handleMouseDown","useFastClick","blobUrl","isFullVideo","getPictogramDimensions","srcUrl","shouldRenderVideo","renderPictogram","renderTextWithEntities","noLineBreaks","emojiSize","isActionMessage","ActionMessage","isEmbedded","MessageSummary","noEmoji","getMediaContentTypeDescription","CONTENT_NOT_SUPPORTED","renderMediaContentType","isChatGroup","isReplyToQuote","renderSender","freezeWhenClosed","ICON_POSITIONS","inline","block","EMOJI_SIZE","containerRef","emojiImage","setEmojiImage","customEmoji","useCustomEmoji","previewMediaHash","getStickerMediaHash","previewUrl","customColor","useDynamicColorListener","preloadAfterHeavyAnimation","preloadImage","then","clearRect","save","translate","restore","tintColor","isLottie","globalCompositeOperation","fillRect","getBoostProgressInfo","boostInfo","freezeOnLevelUp","level","boosts","currentLevelBoosts","nextLevelBoosts","hasMyBoost","prepaidGiveaways","isJustUpgraded","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","formatUsername","asAbsoluteLink","TME_LINK_PREFIX","renderMessageText","highlight","isSimple","truncateLength","forcePlayback","shouldRenderAsHtml","isForMediaViewer","contentNotSupportedText","messageKey","getMessageKey","TRUNCATED_SUMMARY_LENGTH","statefulContent","getMessageStatefulContent","hasSpoilers","Spoiler","hasCustomEmoji","getMessageSummaryText","getMessageSummaryEmoji","emojiWithSpace","getMessageSummaryDescription","isArray","DAY_MINUTES","WEEK_MINUTES","getWeekStart","setHours","day","getDay","diff","getDate","setDate","getTime","shiftTimeRanges","ranges","shift","shiftedRanges","startMinute","endMinute","sort","a","b","last","DAYS","BusinessHours","businessHours","transitionRef","isExpanded","expand","collapse","isMyTime","showInMyTime","showInLocalTime","forceUpdate","useForceUpdate","timezoneSignal","useSelectorSignal","timezones","timezoneMinuteDifference","timezone","timezoneId","getTimezoneOffset","utcOffset","workHours","weekStart","days","dayStart","dayEnd","splitDays","segments","formatTime","isBusinessOpen","localTimeHours","minutesSinceWeekStart","currentDay","handleTriggerOffset","slide","ACTIVE_SLIDE_CLASS_NAME","offsetHeight","handleAnimationStart","TO_SLIDE_CLASS_NAME","ListItem","iconClassName","multiline","isStatic","narrow","withColorTransition","tabIndex","onStart","formatWeekday","segment","EFFECT_EMOJIS","birthdayNumbers","animatedEmojiEffects","isPremiumPurchaseBlocked","UserBirthday","birthday","isInSettings","openGiftModal","requestConfetti","animationPlayedRef","isPlayingAnimation","playAnimation","stopAnimation","formattedDate","isToday","age","today","year","setMonth","month","formatDateToString","code","getMonth","getAge","numbersForAge","numbers","endsWith","byEmoji","buildCollectionByKey","digit","effectSticker","randomEffect","random","hash","effectHash","column","top","valueKey","canGiftPremium","isPremium","handleOpenGiftModal","forUserId","secondaryIcon","secondaryIconClassName","onSecondaryIconClick","IS_OFFSET_PATH_SUPPORTED","index","StickerView","forceAlways","shouldLoop","birthdate","m","DEFAULT_MAP_CONFIG","zoom","chatOrUserId","countryList","phoneCodes","phoneCodeList","botAppPermissions","selectBotAppPermissions","isMuted","selectIsChatMuted","selectNotifySettings","selectNotifyExceptions","topicId","botVerification","chatInviteLink","inviteLink","bio","about","canInviteUsers","isUserRightBanned","getHasAdminRight","topicLink","selectTopicLink","hasSavedMessages","listIds","saved","personalChannel","personalChannelId","hasMainMiniApp","isBotCanManageEmojiStatus","ChatExtra","updateChatMutedState","updateTopicMutedState","loadPeerStories","openSavedDialog","openMapModal","requestCollectibleInfo","requestMainWebView","toggleUserEmojiStatusPermission","toggleUserLocationPermission","usernames","phoneNumber","chatUsernames","businessLocation","businessWorkHours","personalChannelMessageId","prevPeerId","locationMediaHash","geo","buildStaticMapHash","locationBlobUrl","locationRightComponent","Skeleton","isTopicInfo","shouldRenderAllLinks","activeUsernames","u","activeChatUsernames","getChatLink","handleClickLocation","address","geoPoint","handleNotificationChange","manageEmojiStatusChange","handleLocationPermissionChange","isAccessGranted","geolocation","handleOpenSavedDialog","copy","formattedNumber","formatPhoneNumberWithCode","handlePhoneClick","FRAGMENT_PHONE_LENGTH","FRAGMENT_PHONE_CODE","collectible","handleUsernameClick","isChat","isEditable","handleOpenApp","extractCurrentThemeParams","shouldMarkBotTrusted","appTermsInfo","terms","withNodes","Chat","orderDiff","animationType","ChatAnimationTypes","isPreview","previewMessageId","renderUsernames","allowSelection","Switcher","inactive","iconId","usernameList","otherUsernames","usernameLinks","s","ICON_SIZE","canManageTopics","isCreator","animatedEmoji","selectAnimatedEmoji","EmptyForum","openCreateTopicPanel","handleCreateTopic","root","AnimatedIconFromSticker","centered","fluid","buttonText","lastMessage","lastMessageId","isOutgoing","replyToMessageId","getMessageReplyInfo","lastMessageSender","lastMessageAction","getMessageAction","actionTargetMessage","targetUserIds","actionTargetUserIds","targetChatId","actionTargetChatId","selectThreadParam","wasTopicOpened","lastReadInboxMessageId","topics","selectTopics","currentChatId","currentThreadId","lastMessageStory","canDelete","selectCanDeleteTopic","withInterfaceAnimations","lastMessageOutgoingStatus","selectOutgoingStatus","canScrollDown","Topic","deleteTopic","focusLastMessage","setViewForumAsMessages","isDeleteModalOpen","openDeleteModal","closeDeleteModal","isMuteModalOpen","openMuteModal","closeMuteModal","shouldRenderDeleteModal","markRenderDeleteModal","unmarkRenderDeleteModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","isPinned","isClosed","handleOpenDeleteModal","handleDelete","handleMute","renderSubtitle","useChatListEntry","lastMessageTopic","statefulMediaContent","groupStatetefulContent","handleOpenTopic","contextActions","wasOpened","editTopic","toggleTopicPinned","markTopicRead","openChatInNewTab","canToggleClosed","getCanManageTopic","canTogglePinned","actionOpenInNewTab","IS_OPEN_IN_NEW_TAB_SUPPORTED","handler","actionUnreadMark","unreadCount","actionPin","actionMute","actionCloseTopic","actionDelete","compact","useTopicContextActions","createLocationHash","withPortalForMenu","LastMessageMeta","outgoingStatus","ChatBadge","confirmIsDestructive","confirmLabel","MuteChatModal","forumPanelChatId","topicsInfo","selectTopicsInfo","selectIsForumPanelOpen","ForumPanel","isHidden","onTopicSearch","onOpenAnimationStart","closeForumPanel","openChatWithInfo","loadTopics","scrollTopHandlerRef","isScrolled","setIsScrolled","handleClose","handleToggleChatInfo","observe","useIntersectionObserver","rootRef","throttleMs","useOnIntersect","orderedIds","getOrderedTopics","topicsById","orderedPinnedTopicIds","orderDiffById","getAnimationType","useOrderDiff","viewportIds","getMore","useInfiniteScroll","totalCount","TOPICS_SLICE","shouldRenderRef","prevIsVisible","useHistoryBack","onBack","endHeavyAnimation","beginHeavyAnimation","waitForTransitionEnd","transform","onTransitionEnd","HeaderActions","canExpandActions","isForForum","InfiniteScroll","preloadBackwards","withAbsolutePositioning","maxHeight","TOPIC_HEIGHT_PX","onLoadMore","sensitiveArea","TOPIC_LIST_SENSITIVE_AREA","beforeChildren","viewportOffset","renderTopics","Loading","GENERAL_TOPIC_ID","useLeftHeaderButtonRtlForumTransition","shouldHideSearch","shouldDisableDropdownMenuTransitionRef","prevShouldHideSearch","handleDropdownMenuTransitionEnd","getSenderName","senderId","senderName","VISIBLITY_MARGIN","DURATION","SnapEffectContainer","SNAP_EFFECT_CONTAINER_ID","animateSnap","selectCanAnimateSnapEffect","rect","scrollX","scrollY","innerWidth","innerHeight","seed","filterId","SNAP_EFFECT_ID","generateUniqueId","component","ghost","smallestSide","baseSeed","xmlns","SVG_NAMESPACE","baseFrequency","numOctaves","slope","intercept","attributeName","dur","in2","operator","xChannelSelector","yChannelSelector","createFilter","elementContainer","svg","jsxToHtml","foreignObject","computedStyle","getComputedStyle","clone","getPropertyValue","snapContainer","removeChild","once","HeaderMenuContainer","selectLanguageCode","translationLanguage","selectTranslationLanguage","doNotTranslate","noMenu","fullInfo","isMainThread","isDiscussionThread","getIsSavedDialog","isUserBlocked","selectIsUserBlocked","canRestartBot","canStartBot","selectIsChatBotNotStarted","canUnblock","canSubscribe","isNotJoined","canSearch","canCall","ARE_CALLS_SUPPORTED","isSupport","canMute","canLeave","canEnterVoiceChat","canCreateVoiceChat","manageCall","isChatBasicGroup","canViewStatistics","canViewMonetization","canViewBoosts","canShowBoostModal","pendingJoinRequests","requestsPending","shouldJoinToSend","isJoinToSend","shouldSendJoinRequest","isJoinRequest","noAnimation","isTranslating","selectRequestedChatTranslationLanguage","canTranslate","selectCanTranslateChat","isTranslationDisabled","detectedChatLanguage","detectedLanguage","joinChannel","sendBotCommand","openMiddleSearch","restartBot","requestMasterAndRequestCall","requestNextManagementScreen","openChat","requestChatTranslation","togglePeerTranslations","openChatLanguageModal","unblockUser","menuButtonRef","setIsMenuOpen","menuAnchor","setMenuAnchor","handleHeaderMenuOpen","right","bottom","handleHeaderMenuClose","handleHeaderMenuHide","handleSubscribeClick","handleStartBot","handleRestartBot","handleUnblock","handleTranslateClick","toLanguageCode","handleJoinRequestsClick","screen","ManagementScreens","JoinRequests","handleSearchClick","setFocusInSearchInput","handleAsMessagesClick","handleRequestCall","handleHotkeySearchClick","IS_APP","shiftKey","getTextWithLanguage","langKey","langCode","translationKey","toUpperCase","translatedName","Intl","DisplayNames","of","doNotTranslateText","handleHide","handleChangeLanguage","handleDoNotTranslate","useHotkeys","MoreMenuButton","withExtraActions","onJoinRequestsClick","withForumActions","onSubscribeChannel","onSearchClick","onAsMessagesClick","searchInput","COLOR_REPLACE_PATTERN","AttachBotIcon","isTouchScreen","Text","iconSvg","mediaDataWithReplacedColors","doc","path","strokeWidth","outerHTML","isInSideMenu","canShowNew","toggleAttachBot","icons","openMenu","closeMenu","menuPosition","setMenuPosition","currentTarget","isFromSideMenu","handleCloseMenu","handleCloseAnimationEnd","handleRemoveBot","shortName","isDisclaimerNeeded","withPortal","CustomSend","DropTarget","isQuick","isGeneric","svgRef","isHovered","markHovered","unmarkHovered","handleDragLeave","relatedTarget","toTarget","baseVal","useEffectOnce","onDrop","onDragEnter","onDragLeave","hideTimeoutRef","prevWithQuick","handleFilesDrop","dataTransfer","dt","folderFiles","handleQuickFilesDrop","fromTarget","shouldRenderQuick","Portal","containerSelector","onDragOver","handleDragOver","clearTimeout","AbsoluteVideo","constructor","videoUrl","options","_defineProperty","this","load","recalculatePositionAndSize","play","paused","safePlay","destroy","updatePosition","SIZE","TextFormatter","SCROLLER_CLASS","TEXT_FORMATTER_SAFE_AREA_PX","IGNORE_KEYS","messageSendKeyCombo","isAttachmentModalInput","onScroll","editLastMessage","replyToNextMessage","selectionTimeoutRef","cloneRef","scrollerCloneRef","sharedCanvasRef","sharedCanvasHqRef","absoluteContainerRef","isContextMenuOpenRef","isTextFormatterOpen","openTextFormatter","closeTextFormatter","textFormatterAnchorPosition","setTextFormatterAnchorPosition","selectedRange","setSelectedRange","isTextFormatterDisabled","setIsTextFormatterDisabled","isMobileDevice","IS_ANDROID","shouldDisplayTimer","setShouldDisplayTimer","handleTimerEnd","prefixId","colorFilter","useColorFilter","playersById","Map","clearPlayers","player","delete","synchronizeElements","playerIdsToClear","uniqueId","playerId","mediaUrl","getCustomEmojiMediaDataForInput","canvasBounds","elementBounds","isHq","selectIsAlwaysHighPriorityEmoji","renderId","viewId","textColor","shouldUseTextColor","hexToRgb","lottie","ensureRLottie","coords","isLowPriority","r","g","removeView","setSharedCanvasCoords","absoluteVideo","Error","createPlayer","animation","set","addCustomEmojiInputRenderCallback","activePlayersById","prevCustomColor","throttledSynchronizeElements","useThrottledCallback","prevDpr","freezeAnimation","unfreezeAnimation","unfreezeAnimationOnRaf","useInputCustomEmojis","maxInputHeight","updateInputHeight","willSend","requestForcedReflow","scroller","currentHeight","scrollHeight","newHeight","isOverflown","exec","transitionDuration","log","toggle","htmlRef","focusInput","getIsHeavyAnimating","handleCloseTextFormatter","empty","clearSelection","checkSelection","selectedText","START_TO_END","processSelection","selectionRect","scrollerRect","processSelectionWithTimeout","handleChange","handleOpenPremiumModal","handleDocumentKeyDown","getIsDirectTextInputDisabled","isSelectionCollapsed","isCollapsed","ctrlKey","metaKey","isContentEditable","newEvent","KeyboardEvent","captureFirstTab","debounce","captureKeyboardListeners","onTab","suppressFocus","inputScrollerContentClass","contentEditable","onChange","onKeyDown","isComposing","targetIndexDelta","blockquote","startContainer","parentElement","lastNode","brCount","Node","TEXT_NODE","previousSibling","br","parentNode","insertBefore","nextSibling","newRange","setStartAfter","altKey","handleCloseContextMenu","e2","onTouchCancel","TextTimer","endsAt","onEnd","anchorPosition","SymbolMenu","setStickerSearchQuery","setGifSearchQuery","triggerRef","isSymbolMenuLoaded","onSymbolMenuLoadingComplete","setContextMenuAnchor","symbolMenuButtonClassName","handleActivateSymbolMenu","triggerEl","handleSearchOpen","handleSymbolMenuOpen","EDITABLE_INPUT_MODAL_CSS_SELECTOR","getLayout","onLoad","onSearchOpen","MAX_QUICK_IMG_SIZE","MAX_THUMB_IMG_SIZE","MAX_ASPECT_RATIO","FILE_EXT_REGEX","filename","createObjectURL","mimeType","quick","shouldSendAsFile","img","validateAspectRatio","shouldShrink","GIF_MIME_TYPE","compressedBlobUrl","resizedUrl","scaleImage","revokeObjectURL","videoWidth","videoHeight","preloadVideo","createPosterForVideo","coverUrl","fetchFromUrl","selectCover","metadata","common","artist","picture","format","cover","coverBlob","parseAudioMetadata","shouldSendCompressed","attach","dataTransferItems","traverseFileTreePromise","itemFile","getAsFile","isDirectory","createReader","readEntries","entries","entriesPromises","kind","webkitGetAsEntry","RE_BR","RE_SPACE","RE_CLEAN_HTML","RE_EXTRA_NEW_LINE","replaceWithTeact","STARS_ICON_PLACEHOLDER","MAX_NESTING_PARENTS","commonAncestorContainer","iterations","THROTTLE","RE_ENDS_ON_EMOJI","RE_ENDS_ON_EMOJI_IMG","loadCustomEmojiForEmoji","clearCustomEmojiForEmoji","extractLastEmojiThrottled","collapsed","htmlBeforeSelection","getHtmlBeforeSelection","getLastEmoji","hasCustomEmojis","lastEmoji","regexText","regex","repeat","htmlAfterSelection","emojiDataPromise","emojiRawData","emojiData","RE_EMOJI_SEARCH","RE_LOWERCASE_TEST","EMOJIS_LIMIT","FILTER_MIN_LENGTH","prepareRecentEmojisMemo","recentEmojiIds","pickTruthy","prepareLibraryMemo","byNative","baseEmojisByKeyword","mapValues","natives","emojisByKeyword","byKeyword","byName","names","maxKeyLength","keyword","searchInLibraryMemo","library","matched","matchedKeywords","flat","matchedNames","unique","setById","setFilteredEmojis","setFilteredCustomEmojis","uncompressEmoji","ensureEmojiData","detectEmojiCodeThrottled","getEmojiCode","updateFiltered","nativeEmojis","native","uniqueByField","selectCustomEmojiForEmojis","isForce","atIndex","lastIndexOf","emojiHtml","emojiCode","newShouldAutoInsert","test","RE_USERNAME_SEARCH","setFilteredUsers","extractUsernameTagThrottled","getUsernameTag","getWithInlineBots","usernameTag","memberIds","member","filteredIds","filterUsersByName","forceFocus","getUserFirstOrLastName","userFirstOrLastName","htmlToInsert","fixedHtmlBeforeSelection","cleanWebkitNewLines","shiftCaretPosition","substr","caretPosition","getCaretPosition","newCaretPosition","setCaretPosition","CLOSE_DURATION","RESIZE_THROTTLE","providedRef","withResizeObserver","setShouldRender","localRef","lastHeightRef","reset","useUnmountCleanup","handleUpdate","applyAnimationState","list","noTransition","cumulativeHeight","state","shiftPx","apply","setExtraStyles","zIndex","String","transition","isPanelOpen","isConnected","openStoryViewer","loadPeerStoriesByIds","isExpired","imageHash","getStoryMediaHash","imgBlobUrl","blurredBackgroundRef","storyIds","isSinglePeer","isSingleStory","MediaAreaOverlay","isMirrored","anchorRef","canLoad","startPlaying","stopPlaying","isPositionUpdateRequired","requirePositionUpdate","resetPositionUpdate","effectAnimationId","effectStickerId","getEffectHash","effectBlob","handleEnded","useOverlayPosition","overlayRef","isForMessageEffect","effectClassName","AnimatedSticker","onEnded","Photo","messageText","isInSelectMode","forcedWidth","dimensions","asForwarded","shouldAffectAppendix","isInWebPage","clickArg","isPaidPreview","mediaType","withBlurredBackground","useBlurredMediaThumbRef","useMediaTransition","showSpoiler","wasLoadDisabled","spinnerRef","useShowTransition","noMountTransition","withShouldRender","downloadButtonRef","shouldRenderDownloadButton","isAllowed","prevShouldAffectAppendix","MESSAGE_CONTENT_SELECTOR","CUSTOM_APPENDIX_ATTRIBUTE","contentEl","getCustomAppendixBg","appendixBg","isSmall","calculateMediaDimensions","componentClassName","MIN_MEDIA_HEIGHT","dimensionsStyle","withAnimation","PROGRESS_CENTER","ROUND_VIDEO_DIMENSIONS_PX","PROGRESS_CIRCUMFERENCE","PI","stopPrevious","RoundVideo","playerRef","circleRef","getVideoMediaHash","isPlayerReady","markPlayerReady","shouldRenderSpoiler","getProgress","setProgress","getThrottledProgress","useThrottledSignal","playerEl","strokeDashOffset","capturePlaying","togglePlaying","stopCurrentAudio","event","handleTimeUpdate","isPriority","onTimeUpdate","cx","cy","SponsoredMessageContextMenu","shouldSkipAbout","onAboutAdsClick","onSponsoredHide","onSponsorInfo","onSponsoredReport","menuRef","isSeparatorNeeded","sponsorInfo","canReport","SponsoredMessageContextMenuContainer","onItemClick","openAboutAdsModal","reportSponsoredMessage","hideSponsoredMessages","handleItemClick","handleAboutAdsOpen","handleSponsoredHide","handleSponsorInfo","additionalInfo","handleReportSponsoredMessage","randomId","Video","canAutoPlay","isIntersectingForLoading","isIntersectingForPlaying","wasIntersectedRef","isPlayAllowed","setIsPlayAllowed","fullMediaHash","isFullMediaPreloaded","hasThumb","isInline","isUnsupported","useUnsupportedMedia","isPreviewPreloaded","canLoadPreview","shouldHidePreview","previewRef","playButtonRef","setPlayProgress","isFinite","calculateExtendedPreviewDimensions","calculateVideoDimensions","isFromSpinner","handleClickOnSpinner","onAudioPlay","onCancelMediaTransfer","openUrl","openTelegramLink","stickersRef","giftStickersRef","handleMediaClick","handleContainerClick","handleOpenTelegramLink","useEnsureStory","hasCustomColor","isWithTextColor","documents","mediaSize","isStory","isGift","quickButtonLangKey","getWebpageButtonLangKey","quickButtonTitle","isArticle","isSquarePhoto","isMediaInteractive","PeerColorWrapper","BaseStory","gift","getStickerFromGift","attributes","getGiftAttributes","backdrop","pattern","model","backgroundColors","centerColor","edgeColor","RadialPatternBackground","patternColor","patternIcon","renderStarGiftUnique","shouldSkipModal","isEmoji","caption","isRectangular","noForcedUpperCase","SELECTED_APPENDIX_COLORS","outgoing","incoming","light","requestMediaWorker","MAX_WORKERS","SMALL_IMAGE_THRESHOLD","MIN_MESSAGE_LENGTH_FOR_BLUR","MIN_MEDIA_WIDTH_WITH_TEXT","MIN_MEDIA_WIDTH","getMinMediaWidth","hasCommentButton","isPhoto","isWebPagePhoto","isWebPageVideo","calculateInlineImageDimensions","minMediaWidth","stretchFactor","finalWidth","finalHeight","RADIUS_RATIO","lastWorkerIndex","thumbData","workerIndex","cycleRestrict","offscreenRef","blurThumb","uri","image","transferControlToOffscreen","ceil","transferables","useOffscreenCanvasBlur","PENDING_TRANSLATIONS","requestedLanguageCode","messageTranslation","byLangCode","isPending","languageTranslations","markMessagesTranslationPending","throttledProcessPending","addPendingTranslation","throttle","translateMessages","hasUnprocessed","messageIdsToTranslate","oldMessageIds","newMessageIds","removePendingTranslations","OFFSET_X","anchorRect","elementRect","anchorCenterY","anchorBottomY","messagesContainer","passive","REACTION_SIZE","ReactionSelectorCustomReaction","chosen","noAppearAnimation","isLocked","onSendPaidReaction","onShowPaidReactionModal","StarReaction","ReactionSelectorReaction","mediaAppearData","appearAnimation","selectAnimation","staticIconData","staticIcon","isAnimationLoaded","markAnimationLoaded","isFirstPlay","unmarkIsFirstPlay","activate","deactivate","cn","createClassNameBuilder","defaultTagReactions","enabledReactions","currentReactions","reactionsLimit","isForEffects","isWithPaidReaction","areReactionsLocked","shouldUseCurrentReactions","allowed","filteredReactions","isCustomReaction","availableReaction","isInactive","canSendReaction","sortedReactions","sortReactions","unshift","reactionsToRender","REACTIONS_AMOUNT","withMoreButton","userReactionIndexes","chosenReactions","chosenOrder","findIndex","handleShowMoreClick","bound","hintText","parts","isPrimary","selectCurrentChat","contactName","DeleteMemberModal","deleteChatMember","handleDeleteChatMember","textParts","useAsyncRendering","dependencies","delay","timeoutRef","CHANNEL_OVERVIEW","isPercentage","GROUP_OVERVIEW","MESSAGE_OVERVIEW","isPlain","isApproximate","STORY_OVERVIEW","BOOST_OVERVIEW","withAbsoluteValue","StatisticsOverview","statistics","isToncoin","renderBalanceCell","balance","usdRate","integerTonPart","decimalTonPart","toFixed","integerUsdPart","decimalUsdPart","period","balances","schema","getSchemaByType","formatFullDate","minDate","maxDate","availableBalance","currentBalance","overallRevenue","cell","field","formatInteger","part","percentage","formatIntegerCompact","renderOverviewItemValue","change","isChangeNegative","isArchived","orderedPeerIds","archived","active","byPeerId","isRibbonShown","isArchivedRibbonShown","isForumPanelOpen","peerStories","canShow","toggleStoryRibbon","PREVIEW_AVATAR_COUNT","reverse","closeFriends","isCloseFriend","isRead","lastReadId","isForCloseFriends","preloadPeerIds","useStoryPreloader","ANIMATION_DURATION","ANIMATION_END_DELAY","animateClosing","animateOpening","avatar","withStorySolid","forceFriendStorySolid","RIBBON_OFFSET","RIBBON_Z_INDEX","STROKE_OFFSET","CANVAS_OFFSET","callbacks","cancelDelayedCallbacks","toggler","leftMainHeader","ribbonPeers","toggleAvatars","getHTMLElements","headerBottom","headerRight","toTop","lastToggleAvatar","firstToggleAvatar","lastId","getPeerId","toggleAvatar","selectByPeerId","fromTop","fromLeft","fromWidth","toLeft","toWidth","fromTranslateX","fromTranslateY","fromScale","toTranslateX","toTranslateY","toScale","createGhost","ghost2","togglerStyles","ghostLast","ghostAnimateName","applyStyles","ghostRevealName","createDelayedCallback","contains","ribbon","ribbonStyles","sourceEl","oncontextmenu","sourceCanvas","callback","ms","timeout","clear","PRIMARY_VIDEO_MIME","SECONDARY_VIDEO_MIME","preloadedStories","canPreload","aroundStoryId","mediaHashes","isStream","loader","makeProgressiveLoader","getProgressiveUrl","cachedSize","chunk","byteLength","preloadStream","Progressive","head","preload","autoplay","disableRemotePlayback","display","unloadVideo","preloadProgressive","preloadHashes","selectPeerStories","preloadIds","currentId","aroundAmount","PEER_STORIES_FOR_PRELOAD","findIdsAroundCurrentId","currentStoryId","checkIfStreamingSupported","altVideos","getPreloadMediaHashes","MediaAreaSuggestedReaction","mediaArea","customEmojiSize","setCustomEmojiSize","views","isDark","isFlipped","reactionCount","shouldDisplayCount","updateCustomEmojiSize","clientHeight","prevReactionCount","buildStyle","effectSize","shouldPause","ownProps","restrictedEmoji","selectRestrictedEmoji","MediaAreaWeather","temperatureC","backgroundColor","convertToRGBA","getTextColor","updateCustomSize","isImmediate","customEmojiHeight","applyFn","noPlay","withTranslucentThumb","navigator","formatTemperature","STORY_ASPECT_RATIO","NO_SHINY_TYPES","prepareStyle","mediaWidth","rotation","coordinates","pixelRadius","pixelWidth","pixelHeight","isStoryPlaying","openUniqueGiftBySlug","closeStoryViewer","setMediaWidth","useWindowSize","clientWidth","MOBILE_SCREEN_MAX_WIDTH","screenAspectRatio","mediaAreas","isShiny","channelId","slug","handleMediaAreaClick","groupCallId","selectGroupCall","selectGroupCallParticipant","participantId","selectIsAdminInActiveGroupCall","selectActiveGroupCall","selectPhoneCallUser","phoneCall","adminId","selectCanInviteToActiveGroupCall","NOTIFICATION_DURATION","shouldDisableNotification","setIsUnsupported","handleUnsupported","IS_MOBILE","onError","onCanPlay","interval","resolver","deps","msOrSchedulerFn","noFirst","setValue","getValue","throttledResolver","noLast","useDebouncedCallback","useDebouncedSignal","debouncedResolver","trackId","originalDuration","handlers","onInit","onForcePlay","onTrackChange","noPlaylist","noProgressUpdates","noHandleEvents","controllerRef","setIsPlaying","isPlayingSync","register","eventName","setVolume","setPlaybackRate","toggleMuted","proxy","registerMediaSession","mediaHandlers","requestNextTrack","requestPreviousTrack","closeAudioPlayer","seekbackward","skipTime","seekOffset","seekforward","seekTo","seekTime","nexttrack","previoustrack","makeMediaHandlers","setPlaybackState","audioPlayer","PLAYBACK_RATE_FOR_AUDIO_MIN_DURATION","playbackRate","setPositionState","updateMetadata","isSafariPatchInProgress","prevShouldPlay","prevSrc","playIfPresent","setTime","time","audioProxy","useForumPanelRender","shouldRenderForumPanelRef","isAnimationStartedRef","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","shouldRenderForumPanel","isAnimationStarted","inputSelector","getRange","setRange","onSelectionChange","Element","FOCUS_DELAY_MS","MODAL_HIDE_DELAY_MS","useInputFocusOnOpen","threshold","isLongPressActive","isPressed","timerId","canProcessEvent","touches","cancel","onMouseUp","onTouchStart","onTouchEnd","STREAMING_PROGRESS","STREAMING_TIMEOUT","PROGRESS_THROTTLE","noLoad","mediaFormat","isHtmlAllowed","isStreaming","IS_PROGRESSIVE_SUPPORTED","useSelector","selectIsSynced","useUniqueId","setLoadProgress","startedAtRef","handleProgress","spentTime","MENU_CLOSE_TIMEOUT","closeTimeout","menuCloseTimeout","isMouseInside","usePrevDuringAnimation","prev","isCurrentPresent","isPrevPresent","CalendarModal","onCancel","openAt","onScheduled","setOnScheduled","isWhenOnline","getServerTimeOffset","handleMessageScheduleUntilOnline","handleCloseCalendar","whenScheduled","withTimePicker","selectedAt","maxAt","getDayStartAt","isFutureMode","secondButtonLabel","onSubmit","onSecondButtonClick","VIDEO_REVEAL_DELAY","useStreaming","MediaSourceClass","getMediaSource","isTypeSupported","onSourceOpen","sourceBuffer","addSourceBuffer","next","done","readyState","endOfStream","appendBuffer","buffer","warn","ManagedMediaSource","MediaSource","lastCallback","onBeforeUnload","prop","getBrowserFullscreenElementProp","useFullscreen","elRef","exitCallback","enterCallback","isFullscreen","setIsFullscreen","listener","HTMLVideoElement","controls","listenerEnter","listenerExit","setFullscreen","requestFullscreen","webkitRequestFullscreen","webkitEnterFullscreen","mozRequestFullScreen","exitFullscreen","mozCancelFullScreen","webkitCancelFullScreen","webkitExitFullscreen","useFullscreenStatus","checkIfFullscreen","removeElectronListener","electron","on","ElectronEvent","FULLSCREEN_CHANGE","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","fullscreenProp","ConnectorClass","channel","throttleWithTickEnd","payloads","pendingPayloads","pendingTransferables","postMessage","postMessageOnTickEnd","request","messageData","requestStates","requestStatesByCallback","restMessageData","requestState","promise","assign","withCallback","pop","catch","finally","cancelCallback","progressCallback","isCanceled","onMessage","response","callbackArgs","postMessagesOnTickEnd","createConnector","worker","connector","handleMessage","tracks","currentTrackId","voiceQueue","musicQueue","playNext","isReverseOrder","currentTrack","nextTrackId","findNextInQueue","openAudioPlayer","parseMessageKey","splitTrackId","nextTrack","track","handleEvent","Proxy","createAudio","trackIdComparator","addTrackToQueue","preventPlayAfterPatch","patchSafariProgressiveAudio","globalSearch","currentContent","GlobalSearchContent","Music","openedChatId","queueFilter","cleanUpQueue","fastSeek","rate","shouldRemoveFromQueue","h","trackIdFilter","removeFromQueue","queue","getTrackQueue","chatAudio","getMessageServerKey","one","two","dateOne","keyOne","dateTwo","keyTwo","localeCompare","LIMIT_PER_BATCH","BATCH_INTERVAL","pendingDownloads","planned","download","pendingDownload","downloadOne","processQueue","rel","click","force","forcePlaceCaretAtEnd","nodeValue","selectNodeContents","ELEMENT_NODE","getMessageIdsForSelectedText","selectedFragments","cloneContents","shouldIncludeLastMessage","focusNode","focusOffset","hasParentWithClassName","MESSAGE_CONTENT_CLASS_NAME","childElementCount","messageEl","firstChild","LUMA_THRESHOLD","ratio","outputType","Image","onload","resizeImage","steppedScale","bitmap","createImageBitmap","resizeWidth","resizeHeight","resizeQuality","averageColor","getAverageColor","fillColor","getColorLuma","res","ctx2D","transferFromImageBitmap","toBlob","step","oc","octx","mul","cur","hardwareConcurrency","instances","launchMediaWorkers","IS_TEST","Worker","PROVIDERS","google","bing","osm","apple","VENUE_COLORS","arts_entertainment","building","education","food","home","nightlife","parks_outdoors","shops","travel","work","RANDOM_COLORS","prepareMapUrl","provider","point","lat","long","providerUrl","getMetersPerPixel","cos","getVenueIconUrl","getVenueColor","str","prevHash","currVal","charCodeAt","DEFAULT_HANDLERS","mediaSession","setMediaSessionHandlers","setActionHandler","clearMediaSession","playbackState","buildMediaMetadata","album","artwork","MediaMetadata","cache","WeakMap","fn","cached","areSortedArraysEqual","lastArgs","lastResult","B","Bold","STRONG","I","Italic","EM","INS","Underline","U","S","Strike","STRIKE","DEL","CODE","Code","PRE","Pre","Blockquote","MARKDOWN_ENTITY_TYPES","PUNCTUATION_CODES","RE_CUSTOM_EMOJI","isWhitespace","ch","isPunctuation","withMarkdownLinks","skipMarkdown","cleanupHtml","fixImageContent","tokens","pushText","st","en","tokenize","COMMENT_NODE","spaceBefore","punctBefore","open","spaceAfter","punctAfter","token","Email","Phone","entityTypeFromNode","elementToToken","child","stack","closed","mid","k","skip","tstack","ptoken","t","found","lastLen","DEFAULT_PART_SIZE","MAX_END_TO_CACHE","bufferCache","sizeCache","pendingRequests","chunkSize","fileSize","cacheKey","arrayBuffer","callApi","fullSize","extractorEl","useCommonAncestor","sel","cloneRange","intersectsNode","caretRange","endContainer","endOffset","removeAllSelections","fileSelector","accept","noMultiple","onchange","isElementInViewport","windowHeight"],"sourceRoot":""}